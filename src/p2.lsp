;(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
;(* (PROD 1 (* (PROD 1 (())) (()) 1) 1 ) (()) 1)
;(* (PROD 2 (* (PROD 2 (())) (()) 2) 2 ) (()) 2)
(* (PROD nil (* (PROD nil (())) (()) nil) nil ) (()) nil)
(* (PROD t (* (PROD t (())) (()) t) t ) (()) t)
(* (PROD (cons t t) (* (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(* (PROD 2 (* (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(* (PROD nil (* (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(* (PROD t (* (PROD t ((()))) ((())) t) t ) ((())) t)
(* (PROD (cons t t) (* (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(* (PROD 2 (* (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(* (PROD nil (* (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(* (PROD t (* (PROD t (((())))) (((()))) t) t ) (((()))) t)
(* (PROD (cons t t) (* (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 'A) 'A 1) 1 ) 'A 1)
(* (PROD 2 (* (PROD 2 'A) 'A 2) 2 ) 'A 2)
(* (PROD nil (* (PROD nil 'A) 'A nil) nil ) 'A nil)
(* (PROD t (* (PROD t 'A) 'A t) t ) 'A t)
(* (PROD (cons t t) (* (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 'B) 'B 1) 1 ) 'B 1)
(* (PROD 2 (* (PROD 2 'B) 'B 2) 2 ) 'B 2)
(* (PROD nil (* (PROD nil 'B) 'B nil) nil ) 'B nil)
(* (PROD t (* (PROD t 'B) 'B t) t ) 'B t)
(* (PROD (cons t t) (* (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 'C) 'C 1) 1 ) 'C 1)
(* (PROD 2 (* (PROD 2 'C) 'C 2) 2 ) 'C 2)
(* (PROD nil (* (PROD nil 'C) 'C nil) nil ) 'C nil)
(* (PROD t (* (PROD t 'C) 'C t) t ) 'C t)
(* (PROD (cons t t) (* (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 '1) '1 1) 1 ) '1 1)
(* (PROD 2 (* (PROD 2 '1) '1 2) 2 ) '1 2)
(* (PROD nil (* (PROD nil '1) '1 nil) nil ) '1 nil)
(* (PROD t (* (PROD t '1) '1 t) t ) '1 t)
(* (PROD (cons t t) (* (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 '2) '2 1) 1 ) '2 1)
(* (PROD 2 (* (PROD 2 '2) '2 2) 2 ) '2 2)
(* (PROD nil (* (PROD nil '2) '2 nil) nil ) '2 nil)
(* (PROD t (* (PROD t '2) '2 t) t ) '2 t)
(* (PROD (cons t t) (* (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 '3) '3 1) 1 ) '3 1)
(* (PROD 2 (* (PROD 2 '3) '3 2) 2 ) '3 2)
(* (PROD nil (* (PROD nil '3) '3 nil) nil ) '3 nil)
(* (PROD t (* (PROD t '3) '3 t) t ) '3 t)
(* (PROD (cons t t) (* (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 '()) '() 1) 1 ) '() 1)
(* (PROD 2 (* (PROD 2 '()) '() 2) 2 ) '() 2)
(* (PROD nil (* (PROD nil '()) '() nil) nil ) '() nil)
(* (PROD t (* (PROD t '()) '() t) t ) '() t)
(* (PROD (cons t t) (* (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(* (PROD 2 (* (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(* (PROD nil (* (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(* (PROD t (* (PROD t '(())) '(()) t) t ) '(()) t)
(* (PROD (cons t t) (* (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(* (PROD 2 (* (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(* (PROD nil (* (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(* (PROD t (* (PROD t '((()))) '((())) t) t ) '((())) t)
(* (PROD (cons t t) (* (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(* (PROD 2 (* (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(* (PROD nil (* (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(* (PROD t (* (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(* (PROD (cons t t) (* (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(* (PROD 2 (* (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(* (PROD nil (* (PROD nil ,A) ,A nil) nil ) ,A nil)
(* (PROD t (* (PROD t ,A) ,A t) t ) ,A t)
(* (PROD (cons t t) (* (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(* (PROD 2 (* (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(* (PROD nil (* (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(* (PROD t (* (PROD t ,1) ,1 t) t ) ,1 t)
(* (PROD (cons t t) (* (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(* (PROD 2 (* (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(* (PROD nil (* (PROD nil ,()) ,() nil) nil ) ,() nil)
(* (PROD t (* (PROD t ,()) ,() t) t ) ,() t)
(* (PROD (cons t t) (* (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(* (PROD 2 (* (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(* (PROD nil (* (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(* (PROD t (* (PROD t ,(())) ,(()) t) t ) ,(()) t)
(* (PROD (cons t t) (* (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(* (PROD 2 (* (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(* (PROD nil (* (PROD nil `'A) `'A nil) nil ) `'A nil)
(* (PROD t (* (PROD t `'A) `'A t) t ) `'A t)
(* (PROD (cons t t) (* (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(* (PROD 2 (* (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(* (PROD nil (* (PROD nil `'B) `'B nil) nil ) `'B nil)
(* (PROD t (* (PROD t `'B) `'B t) t ) `'B t)
(* (PROD (cons t t) (* (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(* (PROD 2 (* (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(* (PROD nil (* (PROD nil `'C) `'C nil) nil ) `'C nil)
(* (PROD t (* (PROD t `'C) `'C t) t ) `'C t)
(* (PROD (cons t t) (* (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(* (PROD 2 (* (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(* (PROD nil (* (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(* (PROD t (* (PROD t `'1) `'1 t) t ) `'1 t)
(* (PROD (cons t t) (* (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(* (PROD 2 (* (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(* (PROD nil (* (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(* (PROD t (* (PROD t `'2) `'2 t) t ) `'2 t)
(* (PROD (cons t t) (* (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(* (PROD 2 (* (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(* (PROD nil (* (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(* (PROD t (* (PROD t `'3) `'3 t) t ) `'3 t)
(* (PROD (cons t t) (* (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(* (PROD 2 (* (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(* (PROD nil (* (PROD nil `'()) `'() nil) nil ) `'() nil)
(* (PROD t (* (PROD t `'()) `'() t) t ) `'() t)
(* (PROD (cons t t) (* (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(* (PROD 2 (* (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(* (PROD nil (* (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(* (PROD t (* (PROD t `'(())) `'(()) t) t ) `'(()) t)
(* (PROD (cons t t) (* (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(* (PROD 2 (* (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(* (PROD nil (* (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(* (PROD t (* (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(* (PROD (cons t t) (* (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(* (PROD 1 (* (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(* (PROD 2 (* (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(* (PROD nil (* (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(* (PROD t (* (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(* (PROD (cons t t) (* (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(* (PROD (cons nil t) (* (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(* (PROD (cons nil nil) (* (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(* (PROD (cons 0 0) (* (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(* (PROD (cons 1 1) (* (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(* (PROD (list 1 2 3) (* (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(* (PROD (list (cons 1 1 ) ) (* (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 T) T 1) 1 ) T 1)
(+ (PROD 2 (+ (PROD 2 T) T 2) 2 ) T 2)
(+ (PROD nil (+ (PROD nil T) T nil) nil ) T nil)
(+ (PROD t (+ (PROD t T) T t) t ) T t)
(+ (PROD (cons t t) (+ (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(+ (PROD 2 (+ (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(+ (PROD nil (+ (PROD nil NIL) NIL nil) nil ) NIL nil)
(+ (PROD t (+ (PROD t NIL) NIL t) t ) NIL t)
(+ (PROD (cons t t) (+ (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 A) A 1) 1 ) A 1)
(+ (PROD 2 (+ (PROD 2 A) A 2) 2 ) A 2)
(+ (PROD nil (+ (PROD nil A) A nil) nil ) A nil)
(+ (PROD t (+ (PROD t A) A t) t ) A t)
(+ (PROD (cons t t) (+ (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 B) B 1) 1 ) B 1)
(+ (PROD 2 (+ (PROD 2 B) B 2) 2 ) B 2)
(+ (PROD nil (+ (PROD nil B) B nil) nil ) B nil)
(+ (PROD t (+ (PROD t B) B t) t ) B t)
(+ (PROD (cons t t) (+ (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 C) C 1) 1 ) C 1)
(+ (PROD 2 (+ (PROD 2 C) C 2) 2 ) C 2)
(+ (PROD nil (+ (PROD nil C) C nil) nil ) C nil)
(+ (PROD t (+ (PROD t C) C t) t ) C t)
(+ (PROD (cons t t) (+ (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 1) 1 1) 1 ) 1 1)
(+ (PROD 2 (+ (PROD 2 1) 1 2) 2 ) 1 2)
(+ (PROD nil (+ (PROD nil 1) 1 nil) nil ) 1 nil)
(+ (PROD t (+ (PROD t 1) 1 t) t ) 1 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 2) 2 1) 1 ) 2 1)
(+ (PROD 2 (+ (PROD 2 2) 2 2) 2 ) 2 2)
(+ (PROD nil (+ (PROD nil 2) 2 nil) nil ) 2 nil)
(+ (PROD t (+ (PROD t 2) 2 t) t ) 2 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 3) 3 1) 1 ) 3 1)
(+ (PROD 2 (+ (PROD 2 3) 3 2) 2 ) 3 2)
(+ (PROD nil (+ (PROD nil 3) 3 nil) nil ) 3 nil)
(+ (PROD t (+ (PROD t 3) 3 t) t ) 3 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 ()) () 1) 1 ) () 1)
(+ (PROD 2 (+ (PROD 2 ()) () 2) 2 ) () 2)
(+ (PROD nil (+ (PROD nil ()) () nil) nil ) () nil)
(+ (PROD t (+ (PROD t ()) () t) t ) () t)
(+ (PROD (cons t t) (+ (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 (())) (()) 1) 1 ) (()) 1)
(+ (PROD 2 (+ (PROD 2 (())) (()) 2) 2 ) (()) 2)
(+ (PROD nil (+ (PROD nil (())) (()) nil) nil ) (()) nil)
(+ (PROD t (+ (PROD t (())) (()) t) t ) (()) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(+ (PROD 2 (+ (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(+ (PROD nil (+ (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(+ (PROD t (+ (PROD t ((()))) ((())) t) t ) ((())) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(+ (PROD 2 (+ (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(+ (PROD nil (+ (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(+ (PROD t (+ (PROD t (((())))) (((()))) t) t ) (((()))) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 'A) 'A 1) 1 ) 'A 1)
(+ (PROD 2 (+ (PROD 2 'A) 'A 2) 2 ) 'A 2)
(+ (PROD nil (+ (PROD nil 'A) 'A nil) nil ) 'A nil)
(+ (PROD t (+ (PROD t 'A) 'A t) t ) 'A t)
(+ (PROD (cons t t) (+ (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 'B) 'B 1) 1 ) 'B 1)
(+ (PROD 2 (+ (PROD 2 'B) 'B 2) 2 ) 'B 2)
(+ (PROD nil (+ (PROD nil 'B) 'B nil) nil ) 'B nil)
(+ (PROD t (+ (PROD t 'B) 'B t) t ) 'B t)
(+ (PROD (cons t t) (+ (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 'C) 'C 1) 1 ) 'C 1)
(+ (PROD 2 (+ (PROD 2 'C) 'C 2) 2 ) 'C 2)
(+ (PROD nil (+ (PROD nil 'C) 'C nil) nil ) 'C nil)
(+ (PROD t (+ (PROD t 'C) 'C t) t ) 'C t)
(+ (PROD (cons t t) (+ (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 '1) '1 1) 1 ) '1 1)
(+ (PROD 2 (+ (PROD 2 '1) '1 2) 2 ) '1 2)
(+ (PROD nil (+ (PROD nil '1) '1 nil) nil ) '1 nil)
(+ (PROD t (+ (PROD t '1) '1 t) t ) '1 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 '2) '2 1) 1 ) '2 1)
(+ (PROD 2 (+ (PROD 2 '2) '2 2) 2 ) '2 2)
(+ (PROD nil (+ (PROD nil '2) '2 nil) nil ) '2 nil)
(+ (PROD t (+ (PROD t '2) '2 t) t ) '2 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 '3) '3 1) 1 ) '3 1)
(+ (PROD 2 (+ (PROD 2 '3) '3 2) 2 ) '3 2)
(+ (PROD nil (+ (PROD nil '3) '3 nil) nil ) '3 nil)
(+ (PROD t (+ (PROD t '3) '3 t) t ) '3 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 '()) '() 1) 1 ) '() 1)
(+ (PROD 2 (+ (PROD 2 '()) '() 2) 2 ) '() 2)
(+ (PROD nil (+ (PROD nil '()) '() nil) nil ) '() nil)
(+ (PROD t (+ (PROD t '()) '() t) t ) '() t)
(+ (PROD (cons t t) (+ (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(+ (PROD 2 (+ (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(+ (PROD nil (+ (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(+ (PROD t (+ (PROD t '(())) '(()) t) t ) '(()) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(+ (PROD 2 (+ (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(+ (PROD nil (+ (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(+ (PROD t (+ (PROD t '((()))) '((())) t) t ) '((())) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(+ (PROD 2 (+ (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(+ (PROD nil (+ (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(+ (PROD t (+ (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(+ (PROD 2 (+ (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(+ (PROD nil (+ (PROD nil ,A) ,A nil) nil ) ,A nil)
(+ (PROD t (+ (PROD t ,A) ,A t) t ) ,A t)
(+ (PROD (cons t t) (+ (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(+ (PROD 2 (+ (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(+ (PROD nil (+ (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(+ (PROD t (+ (PROD t ,1) ,1 t) t ) ,1 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(+ (PROD 2 (+ (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(+ (PROD nil (+ (PROD nil ,()) ,() nil) nil ) ,() nil)
(+ (PROD t (+ (PROD t ,()) ,() t) t ) ,() t)
(+ (PROD (cons t t) (+ (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(+ (PROD 2 (+ (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(+ (PROD nil (+ (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(+ (PROD t (+ (PROD t ,(())) ,(()) t) t ) ,(()) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(+ (PROD 2 (+ (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(+ (PROD nil (+ (PROD nil `'A) `'A nil) nil ) `'A nil)
(+ (PROD t (+ (PROD t `'A) `'A t) t ) `'A t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(+ (PROD 2 (+ (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(+ (PROD nil (+ (PROD nil `'B) `'B nil) nil ) `'B nil)
(+ (PROD t (+ (PROD t `'B) `'B t) t ) `'B t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(+ (PROD 2 (+ (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(+ (PROD nil (+ (PROD nil `'C) `'C nil) nil ) `'C nil)
(+ (PROD t (+ (PROD t `'C) `'C t) t ) `'C t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(+ (PROD 2 (+ (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(+ (PROD nil (+ (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(+ (PROD t (+ (PROD t `'1) `'1 t) t ) `'1 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(+ (PROD 2 (+ (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(+ (PROD nil (+ (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(+ (PROD t (+ (PROD t `'2) `'2 t) t ) `'2 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(+ (PROD 2 (+ (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(+ (PROD nil (+ (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(+ (PROD t (+ (PROD t `'3) `'3 t) t ) `'3 t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(+ (PROD 2 (+ (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(+ (PROD nil (+ (PROD nil `'()) `'() nil) nil ) `'() nil)
(+ (PROD t (+ (PROD t `'()) `'() t) t ) `'() t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(+ (PROD 2 (+ (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(+ (PROD nil (+ (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(+ (PROD t (+ (PROD t `'(())) `'(()) t) t ) `'(()) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(+ (PROD 2 (+ (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(+ (PROD nil (+ (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(+ (PROD t (+ (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(+ (PROD 1 (+ (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(+ (PROD 2 (+ (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(+ (PROD nil (+ (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(+ (PROD t (+ (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(+ (PROD (cons t t) (+ (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(+ (PROD (cons nil t) (+ (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(+ (PROD (cons nil nil) (+ (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(+ (PROD (cons 0 0) (+ (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(+ (PROD (cons 1 1) (+ (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(+ (PROD (list 1 2 3) (+ (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(+ (PROD (list (cons 1 1 ) ) (+ (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 T) T 1) 1 ) T 1)
(< (PROD 2 (< (PROD 2 T) T 2) 2 ) T 2)
(< (PROD nil (< (PROD nil T) T nil) nil ) T nil)
(< (PROD t (< (PROD t T) T t) t ) T t)
(< (PROD (cons t t) (< (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(< (PROD 2 (< (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(< (PROD nil (< (PROD nil NIL) NIL nil) nil ) NIL nil)
(< (PROD t (< (PROD t NIL) NIL t) t ) NIL t)
(< (PROD (cons t t) (< (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 A) A 1) 1 ) A 1)
(< (PROD 2 (< (PROD 2 A) A 2) 2 ) A 2)
(< (PROD nil (< (PROD nil A) A nil) nil ) A nil)
(< (PROD t (< (PROD t A) A t) t ) A t)
(< (PROD (cons t t) (< (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 B) B 1) 1 ) B 1)
(< (PROD 2 (< (PROD 2 B) B 2) 2 ) B 2)
(< (PROD nil (< (PROD nil B) B nil) nil ) B nil)
(< (PROD t (< (PROD t B) B t) t ) B t)
(< (PROD (cons t t) (< (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 C) C 1) 1 ) C 1)
(< (PROD 2 (< (PROD 2 C) C 2) 2 ) C 2)
(< (PROD nil (< (PROD nil C) C nil) nil ) C nil)
(< (PROD t (< (PROD t C) C t) t ) C t)
(< (PROD (cons t t) (< (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 1) 1 1) 1 ) 1 1)
(< (PROD 2 (< (PROD 2 1) 1 2) 2 ) 1 2)
(< (PROD nil (< (PROD nil 1) 1 nil) nil ) 1 nil)
(< (PROD t (< (PROD t 1) 1 t) t ) 1 t)
(< (PROD (cons t t) (< (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 2) 2 1) 1 ) 2 1)
(< (PROD 2 (< (PROD 2 2) 2 2) 2 ) 2 2)
(< (PROD nil (< (PROD nil 2) 2 nil) nil ) 2 nil)
(< (PROD t (< (PROD t 2) 2 t) t ) 2 t)
(< (PROD (cons t t) (< (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 3) 3 1) 1 ) 3 1)
(< (PROD 2 (< (PROD 2 3) 3 2) 2 ) 3 2)
(< (PROD nil (< (PROD nil 3) 3 nil) nil ) 3 nil)
(< (PROD t (< (PROD t 3) 3 t) t ) 3 t)
(< (PROD (cons t t) (< (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 ()) () 1) 1 ) () 1)
(< (PROD 2 (< (PROD 2 ()) () 2) 2 ) () 2)
(< (PROD nil (< (PROD nil ()) () nil) nil ) () nil)
(< (PROD t (< (PROD t ()) () t) t ) () t)
(< (PROD (cons t t) (< (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 (())) (()) 1) 1 ) (()) 1)
(< (PROD 2 (< (PROD 2 (())) (()) 2) 2 ) (()) 2)
(< (PROD nil (< (PROD nil (())) (()) nil) nil ) (()) nil)
(< (PROD t (< (PROD t (())) (()) t) t ) (()) t)
(< (PROD (cons t t) (< (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(< (PROD 2 (< (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(< (PROD nil (< (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(< (PROD t (< (PROD t ((()))) ((())) t) t ) ((())) t)
(< (PROD (cons t t) (< (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(< (PROD 2 (< (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(< (PROD nil (< (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(< (PROD t (< (PROD t (((())))) (((()))) t) t ) (((()))) t)
(< (PROD (cons t t) (< (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 'A) 'A 1) 1 ) 'A 1)
(< (PROD 2 (< (PROD 2 'A) 'A 2) 2 ) 'A 2)
(< (PROD nil (< (PROD nil 'A) 'A nil) nil ) 'A nil)
(< (PROD t (< (PROD t 'A) 'A t) t ) 'A t)
(< (PROD (cons t t) (< (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 'B) 'B 1) 1 ) 'B 1)
(< (PROD 2 (< (PROD 2 'B) 'B 2) 2 ) 'B 2)
(< (PROD nil (< (PROD nil 'B) 'B nil) nil ) 'B nil)
(< (PROD t (< (PROD t 'B) 'B t) t ) 'B t)
(< (PROD (cons t t) (< (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 'C) 'C 1) 1 ) 'C 1)
(< (PROD 2 (< (PROD 2 'C) 'C 2) 2 ) 'C 2)
(< (PROD nil (< (PROD nil 'C) 'C nil) nil ) 'C nil)
(< (PROD t (< (PROD t 'C) 'C t) t ) 'C t)
(< (PROD (cons t t) (< (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 '1) '1 1) 1 ) '1 1)
(< (PROD 2 (< (PROD 2 '1) '1 2) 2 ) '1 2)
(< (PROD nil (< (PROD nil '1) '1 nil) nil ) '1 nil)
(< (PROD t (< (PROD t '1) '1 t) t ) '1 t)
(< (PROD (cons t t) (< (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 '2) '2 1) 1 ) '2 1)
(< (PROD 2 (< (PROD 2 '2) '2 2) 2 ) '2 2)
(< (PROD nil (< (PROD nil '2) '2 nil) nil ) '2 nil)
(< (PROD t (< (PROD t '2) '2 t) t ) '2 t)
(< (PROD (cons t t) (< (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 '3) '3 1) 1 ) '3 1)
(< (PROD 2 (< (PROD 2 '3) '3 2) 2 ) '3 2)
(< (PROD nil (< (PROD nil '3) '3 nil) nil ) '3 nil)
(< (PROD t (< (PROD t '3) '3 t) t ) '3 t)
(< (PROD (cons t t) (< (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 '()) '() 1) 1 ) '() 1)
(< (PROD 2 (< (PROD 2 '()) '() 2) 2 ) '() 2)
(< (PROD nil (< (PROD nil '()) '() nil) nil ) '() nil)
(< (PROD t (< (PROD t '()) '() t) t ) '() t)
(< (PROD (cons t t) (< (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(< (PROD 2 (< (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(< (PROD nil (< (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(< (PROD t (< (PROD t '(())) '(()) t) t ) '(()) t)
(< (PROD (cons t t) (< (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(< (PROD 2 (< (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(< (PROD nil (< (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(< (PROD t (< (PROD t '((()))) '((())) t) t ) '((())) t)
(< (PROD (cons t t) (< (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(< (PROD 2 (< (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(< (PROD nil (< (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(< (PROD t (< (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(< (PROD (cons t t) (< (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(< (PROD 2 (< (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(< (PROD nil (< (PROD nil ,A) ,A nil) nil ) ,A nil)
(< (PROD t (< (PROD t ,A) ,A t) t ) ,A t)
(< (PROD (cons t t) (< (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(< (PROD 2 (< (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(< (PROD nil (< (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(< (PROD t (< (PROD t ,1) ,1 t) t ) ,1 t)
(< (PROD (cons t t) (< (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(< (PROD 2 (< (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(< (PROD nil (< (PROD nil ,()) ,() nil) nil ) ,() nil)
(< (PROD t (< (PROD t ,()) ,() t) t ) ,() t)
(< (PROD (cons t t) (< (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(< (PROD 2 (< (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(< (PROD nil (< (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(< (PROD t (< (PROD t ,(())) ,(()) t) t ) ,(()) t)
(< (PROD (cons t t) (< (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(< (PROD 2 (< (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(< (PROD nil (< (PROD nil `'A) `'A nil) nil ) `'A nil)
(< (PROD t (< (PROD t `'A) `'A t) t ) `'A t)
(< (PROD (cons t t) (< (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(< (PROD 2 (< (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(< (PROD nil (< (PROD nil `'B) `'B nil) nil ) `'B nil)
(< (PROD t (< (PROD t `'B) `'B t) t ) `'B t)
(< (PROD (cons t t) (< (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(< (PROD 2 (< (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(< (PROD nil (< (PROD nil `'C) `'C nil) nil ) `'C nil)
(< (PROD t (< (PROD t `'C) `'C t) t ) `'C t)
(< (PROD (cons t t) (< (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(< (PROD 2 (< (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(< (PROD nil (< (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(< (PROD t (< (PROD t `'1) `'1 t) t ) `'1 t)
(< (PROD (cons t t) (< (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(< (PROD 2 (< (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(< (PROD nil (< (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(< (PROD t (< (PROD t `'2) `'2 t) t ) `'2 t)
(< (PROD (cons t t) (< (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(< (PROD 2 (< (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(< (PROD nil (< (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(< (PROD t (< (PROD t `'3) `'3 t) t ) `'3 t)
(< (PROD (cons t t) (< (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(< (PROD 2 (< (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(< (PROD nil (< (PROD nil `'()) `'() nil) nil ) `'() nil)
(< (PROD t (< (PROD t `'()) `'() t) t ) `'() t)
(< (PROD (cons t t) (< (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(< (PROD 2 (< (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(< (PROD nil (< (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(< (PROD t (< (PROD t `'(())) `'(()) t) t ) `'(()) t)
(< (PROD (cons t t) (< (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(< (PROD 2 (< (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(< (PROD nil (< (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(< (PROD t (< (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(< (PROD (cons t t) (< (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(< (PROD 1 (< (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(< (PROD 2 (< (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(< (PROD nil (< (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(< (PROD t (< (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(< (PROD (cons t t) (< (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(< (PROD (cons nil t) (< (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(< (PROD (cons nil nil) (< (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(< (PROD (cons 0 0) (< (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(< (PROD (cons 1 1) (< (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(< (PROD (list 1 2 3) (< (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(< (PROD (list (cons 1 1 ) ) (< (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 T) T 1) 1 ) T 1)
(<= (PROD 2 (<= (PROD 2 T) T 2) 2 ) T 2)
(<= (PROD nil (<= (PROD nil T) T nil) nil ) T nil)
(<= (PROD t (<= (PROD t T) T t) t ) T t)
(<= (PROD (cons t t) (<= (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(<= (PROD 2 (<= (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(<= (PROD nil (<= (PROD nil NIL) NIL nil) nil ) NIL nil)
(<= (PROD t (<= (PROD t NIL) NIL t) t ) NIL t)
(<= (PROD (cons t t) (<= (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 A) A 1) 1 ) A 1)
(<= (PROD 2 (<= (PROD 2 A) A 2) 2 ) A 2)
(<= (PROD nil (<= (PROD nil A) A nil) nil ) A nil)
(<= (PROD t (<= (PROD t A) A t) t ) A t)
(<= (PROD (cons t t) (<= (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 B) B 1) 1 ) B 1)
(<= (PROD 2 (<= (PROD 2 B) B 2) 2 ) B 2)
(<= (PROD nil (<= (PROD nil B) B nil) nil ) B nil)
(<= (PROD t (<= (PROD t B) B t) t ) B t)
(<= (PROD (cons t t) (<= (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 C) C 1) 1 ) C 1)
(<= (PROD 2 (<= (PROD 2 C) C 2) 2 ) C 2)
(<= (PROD nil (<= (PROD nil C) C nil) nil ) C nil)
(<= (PROD t (<= (PROD t C) C t) t ) C t)
(<= (PROD (cons t t) (<= (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 1) 1 1) 1 ) 1 1)
(<= (PROD 2 (<= (PROD 2 1) 1 2) 2 ) 1 2)
(<= (PROD nil (<= (PROD nil 1) 1 nil) nil ) 1 nil)
(<= (PROD t (<= (PROD t 1) 1 t) t ) 1 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 2) 2 1) 1 ) 2 1)
(<= (PROD 2 (<= (PROD 2 2) 2 2) 2 ) 2 2)
(<= (PROD nil (<= (PROD nil 2) 2 nil) nil ) 2 nil)
(<= (PROD t (<= (PROD t 2) 2 t) t ) 2 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 3) 3 1) 1 ) 3 1)
(<= (PROD 2 (<= (PROD 2 3) 3 2) 2 ) 3 2)
(<= (PROD nil (<= (PROD nil 3) 3 nil) nil ) 3 nil)
(<= (PROD t (<= (PROD t 3) 3 t) t ) 3 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 ()) () 1) 1 ) () 1)
(<= (PROD 2 (<= (PROD 2 ()) () 2) 2 ) () 2)
(<= (PROD nil (<= (PROD nil ()) () nil) nil ) () nil)
(<= (PROD t (<= (PROD t ()) () t) t ) () t)
(<= (PROD (cons t t) (<= (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 (())) (()) 1) 1 ) (()) 1)
(<= (PROD 2 (<= (PROD 2 (())) (()) 2) 2 ) (()) 2)
(<= (PROD nil (<= (PROD nil (())) (()) nil) nil ) (()) nil)
(<= (PROD t (<= (PROD t (())) (()) t) t ) (()) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(<= (PROD 2 (<= (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(<= (PROD nil (<= (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(<= (PROD t (<= (PROD t ((()))) ((())) t) t ) ((())) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(<= (PROD 2 (<= (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(<= (PROD nil (<= (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(<= (PROD t (<= (PROD t (((())))) (((()))) t) t ) (((()))) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 'A) 'A 1) 1 ) 'A 1)
(<= (PROD 2 (<= (PROD 2 'A) 'A 2) 2 ) 'A 2)
(<= (PROD nil (<= (PROD nil 'A) 'A nil) nil ) 'A nil)
(<= (PROD t (<= (PROD t 'A) 'A t) t ) 'A t)
(<= (PROD (cons t t) (<= (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 'B) 'B 1) 1 ) 'B 1)
(<= (PROD 2 (<= (PROD 2 'B) 'B 2) 2 ) 'B 2)
(<= (PROD nil (<= (PROD nil 'B) 'B nil) nil ) 'B nil)
(<= (PROD t (<= (PROD t 'B) 'B t) t ) 'B t)
(<= (PROD (cons t t) (<= (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 'C) 'C 1) 1 ) 'C 1)
(<= (PROD 2 (<= (PROD 2 'C) 'C 2) 2 ) 'C 2)
(<= (PROD nil (<= (PROD nil 'C) 'C nil) nil ) 'C nil)
(<= (PROD t (<= (PROD t 'C) 'C t) t ) 'C t)
(<= (PROD (cons t t) (<= (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 '1) '1 1) 1 ) '1 1)
(<= (PROD 2 (<= (PROD 2 '1) '1 2) 2 ) '1 2)
(<= (PROD nil (<= (PROD nil '1) '1 nil) nil ) '1 nil)
(<= (PROD t (<= (PROD t '1) '1 t) t ) '1 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 '2) '2 1) 1 ) '2 1)
(<= (PROD 2 (<= (PROD 2 '2) '2 2) 2 ) '2 2)
(<= (PROD nil (<= (PROD nil '2) '2 nil) nil ) '2 nil)
(<= (PROD t (<= (PROD t '2) '2 t) t ) '2 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 '3) '3 1) 1 ) '3 1)
(<= (PROD 2 (<= (PROD 2 '3) '3 2) 2 ) '3 2)
(<= (PROD nil (<= (PROD nil '3) '3 nil) nil ) '3 nil)
(<= (PROD t (<= (PROD t '3) '3 t) t ) '3 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 '()) '() 1) 1 ) '() 1)
(<= (PROD 2 (<= (PROD 2 '()) '() 2) 2 ) '() 2)
(<= (PROD nil (<= (PROD nil '()) '() nil) nil ) '() nil)
(<= (PROD t (<= (PROD t '()) '() t) t ) '() t)
(<= (PROD (cons t t) (<= (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(<= (PROD 2 (<= (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(<= (PROD nil (<= (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(<= (PROD t (<= (PROD t '(())) '(()) t) t ) '(()) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(<= (PROD 2 (<= (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(<= (PROD nil (<= (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(<= (PROD t (<= (PROD t '((()))) '((())) t) t ) '((())) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(<= (PROD 2 (<= (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(<= (PROD nil (<= (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(<= (PROD t (<= (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(<= (PROD 2 (<= (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(<= (PROD nil (<= (PROD nil ,A) ,A nil) nil ) ,A nil)
(<= (PROD t (<= (PROD t ,A) ,A t) t ) ,A t)
(<= (PROD (cons t t) (<= (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(<= (PROD 2 (<= (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(<= (PROD nil (<= (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(<= (PROD t (<= (PROD t ,1) ,1 t) t ) ,1 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(<= (PROD 2 (<= (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(<= (PROD nil (<= (PROD nil ,()) ,() nil) nil ) ,() nil)
(<= (PROD t (<= (PROD t ,()) ,() t) t ) ,() t)
(<= (PROD (cons t t) (<= (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(<= (PROD 2 (<= (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(<= (PROD nil (<= (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(<= (PROD t (<= (PROD t ,(())) ,(()) t) t ) ,(()) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(<= (PROD 2 (<= (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(<= (PROD nil (<= (PROD nil `'A) `'A nil) nil ) `'A nil)
(<= (PROD t (<= (PROD t `'A) `'A t) t ) `'A t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(<= (PROD 2 (<= (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(<= (PROD nil (<= (PROD nil `'B) `'B nil) nil ) `'B nil)
(<= (PROD t (<= (PROD t `'B) `'B t) t ) `'B t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(<= (PROD 2 (<= (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(<= (PROD nil (<= (PROD nil `'C) `'C nil) nil ) `'C nil)
(<= (PROD t (<= (PROD t `'C) `'C t) t ) `'C t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(<= (PROD 2 (<= (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(<= (PROD nil (<= (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(<= (PROD t (<= (PROD t `'1) `'1 t) t ) `'1 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(<= (PROD 2 (<= (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(<= (PROD nil (<= (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(<= (PROD t (<= (PROD t `'2) `'2 t) t ) `'2 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(<= (PROD 2 (<= (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(<= (PROD nil (<= (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(<= (PROD t (<= (PROD t `'3) `'3 t) t ) `'3 t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(<= (PROD 2 (<= (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(<= (PROD nil (<= (PROD nil `'()) `'() nil) nil ) `'() nil)
(<= (PROD t (<= (PROD t `'()) `'() t) t ) `'() t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(<= (PROD 2 (<= (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(<= (PROD nil (<= (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(<= (PROD t (<= (PROD t `'(())) `'(()) t) t ) `'(()) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(<= (PROD 2 (<= (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(<= (PROD nil (<= (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(<= (PROD t (<= (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(<= (PROD 1 (<= (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(<= (PROD 2 (<= (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(<= (PROD nil (<= (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(<= (PROD t (<= (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(<= (PROD (cons t t) (<= (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(<= (PROD (cons nil t) (<= (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(<= (PROD (cons nil nil) (<= (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(<= (PROD (cons 0 0) (<= (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(<= (PROD (cons 1 1) (<= (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(<= (PROD (list 1 2 3) (<= (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(<= (PROD (list (cons 1 1 ) ) (<= (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 T) T 1) 1 ) T 1)
(= (PROD 2 (= (PROD 2 T) T 2) 2 ) T 2)
(= (PROD nil (= (PROD nil T) T nil) nil ) T nil)
(= (PROD t (= (PROD t T) T t) t ) T t)
(= (PROD (cons t t) (= (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(= (PROD 2 (= (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(= (PROD nil (= (PROD nil NIL) NIL nil) nil ) NIL nil)
(= (PROD t (= (PROD t NIL) NIL t) t ) NIL t)
(= (PROD (cons t t) (= (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 A) A 1) 1 ) A 1)
(= (PROD 2 (= (PROD 2 A) A 2) 2 ) A 2)
(= (PROD nil (= (PROD nil A) A nil) nil ) A nil)
(= (PROD t (= (PROD t A) A t) t ) A t)
(= (PROD (cons t t) (= (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 B) B 1) 1 ) B 1)
(= (PROD 2 (= (PROD 2 B) B 2) 2 ) B 2)
(= (PROD nil (= (PROD nil B) B nil) nil ) B nil)
(= (PROD t (= (PROD t B) B t) t ) B t)
(= (PROD (cons t t) (= (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 C) C 1) 1 ) C 1)
(= (PROD 2 (= (PROD 2 C) C 2) 2 ) C 2)
(= (PROD nil (= (PROD nil C) C nil) nil ) C nil)
(= (PROD t (= (PROD t C) C t) t ) C t)
(= (PROD (cons t t) (= (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 1) 1 1) 1 ) 1 1)
(= (PROD 2 (= (PROD 2 1) 1 2) 2 ) 1 2)
(= (PROD nil (= (PROD nil 1) 1 nil) nil ) 1 nil)
(= (PROD t (= (PROD t 1) 1 t) t ) 1 t)
(= (PROD (cons t t) (= (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 2) 2 1) 1 ) 2 1)
(= (PROD 2 (= (PROD 2 2) 2 2) 2 ) 2 2)
(= (PROD nil (= (PROD nil 2) 2 nil) nil ) 2 nil)
(= (PROD t (= (PROD t 2) 2 t) t ) 2 t)
(= (PROD (cons t t) (= (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 3) 3 1) 1 ) 3 1)
(= (PROD 2 (= (PROD 2 3) 3 2) 2 ) 3 2)
(= (PROD nil (= (PROD nil 3) 3 nil) nil ) 3 nil)
(= (PROD t (= (PROD t 3) 3 t) t ) 3 t)
(= (PROD (cons t t) (= (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 ()) () 1) 1 ) () 1)
(= (PROD 2 (= (PROD 2 ()) () 2) 2 ) () 2)
(= (PROD nil (= (PROD nil ()) () nil) nil ) () nil)
(= (PROD t (= (PROD t ()) () t) t ) () t)
(= (PROD (cons t t) (= (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 (())) (()) 1) 1 ) (()) 1)
(= (PROD 2 (= (PROD 2 (())) (()) 2) 2 ) (()) 2)
(= (PROD nil (= (PROD nil (())) (()) nil) nil ) (()) nil)
(= (PROD t (= (PROD t (())) (()) t) t ) (()) t)
(= (PROD (cons t t) (= (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(= (PROD 2 (= (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(= (PROD nil (= (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(= (PROD t (= (PROD t ((()))) ((())) t) t ) ((())) t)
(= (PROD (cons t t) (= (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(= (PROD 2 (= (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(= (PROD nil (= (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(= (PROD t (= (PROD t (((())))) (((()))) t) t ) (((()))) t)
(= (PROD (cons t t) (= (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 'A) 'A 1) 1 ) 'A 1)
(= (PROD 2 (= (PROD 2 'A) 'A 2) 2 ) 'A 2)
(= (PROD nil (= (PROD nil 'A) 'A nil) nil ) 'A nil)
(= (PROD t (= (PROD t 'A) 'A t) t ) 'A t)
(= (PROD (cons t t) (= (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 'B) 'B 1) 1 ) 'B 1)
(= (PROD 2 (= (PROD 2 'B) 'B 2) 2 ) 'B 2)
(= (PROD nil (= (PROD nil 'B) 'B nil) nil ) 'B nil)
(= (PROD t (= (PROD t 'B) 'B t) t ) 'B t)
(= (PROD (cons t t) (= (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 'C) 'C 1) 1 ) 'C 1)
(= (PROD 2 (= (PROD 2 'C) 'C 2) 2 ) 'C 2)
(= (PROD nil (= (PROD nil 'C) 'C nil) nil ) 'C nil)
(= (PROD t (= (PROD t 'C) 'C t) t ) 'C t)
(= (PROD (cons t t) (= (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 '1) '1 1) 1 ) '1 1)
(= (PROD 2 (= (PROD 2 '1) '1 2) 2 ) '1 2)
(= (PROD nil (= (PROD nil '1) '1 nil) nil ) '1 nil)
(= (PROD t (= (PROD t '1) '1 t) t ) '1 t)
(= (PROD (cons t t) (= (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 '2) '2 1) 1 ) '2 1)
(= (PROD 2 (= (PROD 2 '2) '2 2) 2 ) '2 2)
(= (PROD nil (= (PROD nil '2) '2 nil) nil ) '2 nil)
(= (PROD t (= (PROD t '2) '2 t) t ) '2 t)
(= (PROD (cons t t) (= (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 '3) '3 1) 1 ) '3 1)
(= (PROD 2 (= (PROD 2 '3) '3 2) 2 ) '3 2)
(= (PROD nil (= (PROD nil '3) '3 nil) nil ) '3 nil)
(= (PROD t (= (PROD t '3) '3 t) t ) '3 t)
(= (PROD (cons t t) (= (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 '()) '() 1) 1 ) '() 1)
(= (PROD 2 (= (PROD 2 '()) '() 2) 2 ) '() 2)
(= (PROD nil (= (PROD nil '()) '() nil) nil ) '() nil)
(= (PROD t (= (PROD t '()) '() t) t ) '() t)
(= (PROD (cons t t) (= (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(= (PROD 2 (= (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(= (PROD nil (= (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(= (PROD t (= (PROD t '(())) '(()) t) t ) '(()) t)
(= (PROD (cons t t) (= (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(= (PROD 2 (= (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(= (PROD nil (= (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(= (PROD t (= (PROD t '((()))) '((())) t) t ) '((())) t)
(= (PROD (cons t t) (= (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(= (PROD 2 (= (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(= (PROD nil (= (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(= (PROD t (= (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(= (PROD (cons t t) (= (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(= (PROD 2 (= (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(= (PROD nil (= (PROD nil ,A) ,A nil) nil ) ,A nil)
(= (PROD t (= (PROD t ,A) ,A t) t ) ,A t)
(= (PROD (cons t t) (= (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(= (PROD 2 (= (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(= (PROD nil (= (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(= (PROD t (= (PROD t ,1) ,1 t) t ) ,1 t)
(= (PROD (cons t t) (= (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(= (PROD 2 (= (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(= (PROD nil (= (PROD nil ,()) ,() nil) nil ) ,() nil)
(= (PROD t (= (PROD t ,()) ,() t) t ) ,() t)
(= (PROD (cons t t) (= (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(= (PROD 2 (= (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(= (PROD nil (= (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(= (PROD t (= (PROD t ,(())) ,(()) t) t ) ,(()) t)
(= (PROD (cons t t) (= (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(= (PROD 2 (= (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(= (PROD nil (= (PROD nil `'A) `'A nil) nil ) `'A nil)
(= (PROD t (= (PROD t `'A) `'A t) t ) `'A t)
(= (PROD (cons t t) (= (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(= (PROD 2 (= (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(= (PROD nil (= (PROD nil `'B) `'B nil) nil ) `'B nil)
(= (PROD t (= (PROD t `'B) `'B t) t ) `'B t)
(= (PROD (cons t t) (= (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(= (PROD 2 (= (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(= (PROD nil (= (PROD nil `'C) `'C nil) nil ) `'C nil)
(= (PROD t (= (PROD t `'C) `'C t) t ) `'C t)
(= (PROD (cons t t) (= (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(= (PROD 2 (= (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(= (PROD nil (= (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(= (PROD t (= (PROD t `'1) `'1 t) t ) `'1 t)
(= (PROD (cons t t) (= (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(= (PROD 2 (= (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(= (PROD nil (= (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(= (PROD t (= (PROD t `'2) `'2 t) t ) `'2 t)
(= (PROD (cons t t) (= (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(= (PROD 2 (= (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(= (PROD nil (= (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(= (PROD t (= (PROD t `'3) `'3 t) t ) `'3 t)
(= (PROD (cons t t) (= (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(= (PROD 2 (= (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(= (PROD nil (= (PROD nil `'()) `'() nil) nil ) `'() nil)
(= (PROD t (= (PROD t `'()) `'() t) t ) `'() t)
(= (PROD (cons t t) (= (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(= (PROD 2 (= (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(= (PROD nil (= (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(= (PROD t (= (PROD t `'(())) `'(()) t) t ) `'(()) t)
(= (PROD (cons t t) (= (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(= (PROD 2 (= (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(= (PROD nil (= (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(= (PROD t (= (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(= (PROD (cons t t) (= (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(= (PROD 1 (= (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(= (PROD 2 (= (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(= (PROD nil (= (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(= (PROD t (= (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(= (PROD (cons t t) (= (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(= (PROD (cons nil t) (= (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(= (PROD (cons nil nil) (= (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(= (PROD (cons 0 0) (= (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(= (PROD (cons 1 1) (= (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(= (PROD (list 1 2 3) (= (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(= (PROD (list (cons 1 1 ) ) (= (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 T) T 1) 1 ) T 1)
(> (PROD 2 (> (PROD 2 T) T 2) 2 ) T 2)
(> (PROD nil (> (PROD nil T) T nil) nil ) T nil)
(> (PROD t (> (PROD t T) T t) t ) T t)
(> (PROD (cons t t) (> (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(> (PROD 2 (> (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(> (PROD nil (> (PROD nil NIL) NIL nil) nil ) NIL nil)
(> (PROD t (> (PROD t NIL) NIL t) t ) NIL t)
(> (PROD (cons t t) (> (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 A) A 1) 1 ) A 1)
(> (PROD 2 (> (PROD 2 A) A 2) 2 ) A 2)
(> (PROD nil (> (PROD nil A) A nil) nil ) A nil)
(> (PROD t (> (PROD t A) A t) t ) A t)
(> (PROD (cons t t) (> (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 B) B 1) 1 ) B 1)
(> (PROD 2 (> (PROD 2 B) B 2) 2 ) B 2)
(> (PROD nil (> (PROD nil B) B nil) nil ) B nil)
(> (PROD t (> (PROD t B) B t) t ) B t)
(> (PROD (cons t t) (> (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 C) C 1) 1 ) C 1)
(> (PROD 2 (> (PROD 2 C) C 2) 2 ) C 2)
(> (PROD nil (> (PROD nil C) C nil) nil ) C nil)
(> (PROD t (> (PROD t C) C t) t ) C t)
(> (PROD (cons t t) (> (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 1) 1 1) 1 ) 1 1)
(> (PROD 2 (> (PROD 2 1) 1 2) 2 ) 1 2)
(> (PROD nil (> (PROD nil 1) 1 nil) nil ) 1 nil)
(> (PROD t (> (PROD t 1) 1 t) t ) 1 t)
(> (PROD (cons t t) (> (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 2) 2 1) 1 ) 2 1)
(> (PROD 2 (> (PROD 2 2) 2 2) 2 ) 2 2)
(> (PROD nil (> (PROD nil 2) 2 nil) nil ) 2 nil)
(> (PROD t (> (PROD t 2) 2 t) t ) 2 t)
(> (PROD (cons t t) (> (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 3) 3 1) 1 ) 3 1)
(> (PROD 2 (> (PROD 2 3) 3 2) 2 ) 3 2)
(> (PROD nil (> (PROD nil 3) 3 nil) nil ) 3 nil)
(> (PROD t (> (PROD t 3) 3 t) t ) 3 t)
(> (PROD (cons t t) (> (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 ()) () 1) 1 ) () 1)
(> (PROD 2 (> (PROD 2 ()) () 2) 2 ) () 2)
(> (PROD nil (> (PROD nil ()) () nil) nil ) () nil)
(> (PROD t (> (PROD t ()) () t) t ) () t)
(> (PROD (cons t t) (> (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 (())) (()) 1) 1 ) (()) 1)
(> (PROD 2 (> (PROD 2 (())) (()) 2) 2 ) (()) 2)
(> (PROD nil (> (PROD nil (())) (()) nil) nil ) (()) nil)
(> (PROD t (> (PROD t (())) (()) t) t ) (()) t)
(> (PROD (cons t t) (> (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(> (PROD 2 (> (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(> (PROD nil (> (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(> (PROD t (> (PROD t ((()))) ((())) t) t ) ((())) t)
(> (PROD (cons t t) (> (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(> (PROD 2 (> (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(> (PROD nil (> (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(> (PROD t (> (PROD t (((())))) (((()))) t) t ) (((()))) t)
(> (PROD (cons t t) (> (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 'A) 'A 1) 1 ) 'A 1)
(> (PROD 2 (> (PROD 2 'A) 'A 2) 2 ) 'A 2)
(> (PROD nil (> (PROD nil 'A) 'A nil) nil ) 'A nil)
(> (PROD t (> (PROD t 'A) 'A t) t ) 'A t)
(> (PROD (cons t t) (> (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 'B) 'B 1) 1 ) 'B 1)
(> (PROD 2 (> (PROD 2 'B) 'B 2) 2 ) 'B 2)
(> (PROD nil (> (PROD nil 'B) 'B nil) nil ) 'B nil)
(> (PROD t (> (PROD t 'B) 'B t) t ) 'B t)
(> (PROD (cons t t) (> (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 'C) 'C 1) 1 ) 'C 1)
(> (PROD 2 (> (PROD 2 'C) 'C 2) 2 ) 'C 2)
(> (PROD nil (> (PROD nil 'C) 'C nil) nil ) 'C nil)
(> (PROD t (> (PROD t 'C) 'C t) t ) 'C t)
(> (PROD (cons t t) (> (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 '1) '1 1) 1 ) '1 1)
(> (PROD 2 (> (PROD 2 '1) '1 2) 2 ) '1 2)
(> (PROD nil (> (PROD nil '1) '1 nil) nil ) '1 nil)
(> (PROD t (> (PROD t '1) '1 t) t ) '1 t)
(> (PROD (cons t t) (> (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 '2) '2 1) 1 ) '2 1)
(> (PROD 2 (> (PROD 2 '2) '2 2) 2 ) '2 2)
(> (PROD nil (> (PROD nil '2) '2 nil) nil ) '2 nil)
(> (PROD t (> (PROD t '2) '2 t) t ) '2 t)
(> (PROD (cons t t) (> (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 '3) '3 1) 1 ) '3 1)
(> (PROD 2 (> (PROD 2 '3) '3 2) 2 ) '3 2)
(> (PROD nil (> (PROD nil '3) '3 nil) nil ) '3 nil)
(> (PROD t (> (PROD t '3) '3 t) t ) '3 t)
(> (PROD (cons t t) (> (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 '()) '() 1) 1 ) '() 1)
(> (PROD 2 (> (PROD 2 '()) '() 2) 2 ) '() 2)
(> (PROD nil (> (PROD nil '()) '() nil) nil ) '() nil)
(> (PROD t (> (PROD t '()) '() t) t ) '() t)
(> (PROD (cons t t) (> (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(> (PROD 2 (> (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(> (PROD nil (> (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(> (PROD t (> (PROD t '(())) '(()) t) t ) '(()) t)
(> (PROD (cons t t) (> (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(> (PROD 2 (> (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(> (PROD nil (> (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(> (PROD t (> (PROD t '((()))) '((())) t) t ) '((())) t)
(> (PROD (cons t t) (> (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(> (PROD 2 (> (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(> (PROD nil (> (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(> (PROD t (> (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(> (PROD (cons t t) (> (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(> (PROD 2 (> (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(> (PROD nil (> (PROD nil ,A) ,A nil) nil ) ,A nil)
(> (PROD t (> (PROD t ,A) ,A t) t ) ,A t)
(> (PROD (cons t t) (> (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(> (PROD 2 (> (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(> (PROD nil (> (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(> (PROD t (> (PROD t ,1) ,1 t) t ) ,1 t)
(> (PROD (cons t t) (> (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(> (PROD 2 (> (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(> (PROD nil (> (PROD nil ,()) ,() nil) nil ) ,() nil)
(> (PROD t (> (PROD t ,()) ,() t) t ) ,() t)
(> (PROD (cons t t) (> (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(> (PROD 2 (> (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(> (PROD nil (> (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(> (PROD t (> (PROD t ,(())) ,(()) t) t ) ,(()) t)
(> (PROD (cons t t) (> (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(> (PROD 2 (> (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(> (PROD nil (> (PROD nil `'A) `'A nil) nil ) `'A nil)
(> (PROD t (> (PROD t `'A) `'A t) t ) `'A t)
(> (PROD (cons t t) (> (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(> (PROD 2 (> (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(> (PROD nil (> (PROD nil `'B) `'B nil) nil ) `'B nil)
(> (PROD t (> (PROD t `'B) `'B t) t ) `'B t)
(> (PROD (cons t t) (> (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(> (PROD 2 (> (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(> (PROD nil (> (PROD nil `'C) `'C nil) nil ) `'C nil)
(> (PROD t (> (PROD t `'C) `'C t) t ) `'C t)
(> (PROD (cons t t) (> (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(> (PROD 2 (> (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(> (PROD nil (> (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(> (PROD t (> (PROD t `'1) `'1 t) t ) `'1 t)
(> (PROD (cons t t) (> (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(> (PROD 2 (> (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(> (PROD nil (> (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(> (PROD t (> (PROD t `'2) `'2 t) t ) `'2 t)
(> (PROD (cons t t) (> (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(> (PROD 2 (> (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(> (PROD nil (> (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(> (PROD t (> (PROD t `'3) `'3 t) t ) `'3 t)
(> (PROD (cons t t) (> (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(> (PROD 2 (> (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(> (PROD nil (> (PROD nil `'()) `'() nil) nil ) `'() nil)
(> (PROD t (> (PROD t `'()) `'() t) t ) `'() t)
(> (PROD (cons t t) (> (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(> (PROD 2 (> (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(> (PROD nil (> (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(> (PROD t (> (PROD t `'(())) `'(()) t) t ) `'(()) t)
(> (PROD (cons t t) (> (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(> (PROD 2 (> (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(> (PROD nil (> (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(> (PROD t (> (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(> (PROD (cons t t) (> (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(> (PROD 1 (> (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(> (PROD 2 (> (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(> (PROD nil (> (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(> (PROD t (> (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(> (PROD (cons t t) (> (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(> (PROD (cons nil t) (> (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(> (PROD (cons nil nil) (> (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(> (PROD (cons 0 0) (> (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(> (PROD (cons 1 1) (> (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(> (PROD (list 1 2 3) (> (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(> (PROD (list (cons 1 1 ) ) (> (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 T) T 1) 1 ) T 1)
(>= (PROD 2 (>= (PROD 2 T) T 2) 2 ) T 2)
(>= (PROD nil (>= (PROD nil T) T nil) nil ) T nil)
(>= (PROD t (>= (PROD t T) T t) t ) T t)
(>= (PROD (cons t t) (>= (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(>= (PROD 2 (>= (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(>= (PROD nil (>= (PROD nil NIL) NIL nil) nil ) NIL nil)
(>= (PROD t (>= (PROD t NIL) NIL t) t ) NIL t)
(>= (PROD (cons t t) (>= (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 A) A 1) 1 ) A 1)
(>= (PROD 2 (>= (PROD 2 A) A 2) 2 ) A 2)
(>= (PROD nil (>= (PROD nil A) A nil) nil ) A nil)
(>= (PROD t (>= (PROD t A) A t) t ) A t)
(>= (PROD (cons t t) (>= (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 B) B 1) 1 ) B 1)
(>= (PROD 2 (>= (PROD 2 B) B 2) 2 ) B 2)
(>= (PROD nil (>= (PROD nil B) B nil) nil ) B nil)
(>= (PROD t (>= (PROD t B) B t) t ) B t)
(>= (PROD (cons t t) (>= (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 C) C 1) 1 ) C 1)
(>= (PROD 2 (>= (PROD 2 C) C 2) 2 ) C 2)
(>= (PROD nil (>= (PROD nil C) C nil) nil ) C nil)
(>= (PROD t (>= (PROD t C) C t) t ) C t)
(>= (PROD (cons t t) (>= (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 1) 1 1) 1 ) 1 1)
(>= (PROD 2 (>= (PROD 2 1) 1 2) 2 ) 1 2)
(>= (PROD nil (>= (PROD nil 1) 1 nil) nil ) 1 nil)
(>= (PROD t (>= (PROD t 1) 1 t) t ) 1 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 2) 2 1) 1 ) 2 1)
(>= (PROD 2 (>= (PROD 2 2) 2 2) 2 ) 2 2)
(>= (PROD nil (>= (PROD nil 2) 2 nil) nil ) 2 nil)
(>= (PROD t (>= (PROD t 2) 2 t) t ) 2 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 3) 3 1) 1 ) 3 1)
(>= (PROD 2 (>= (PROD 2 3) 3 2) 2 ) 3 2)
(>= (PROD nil (>= (PROD nil 3) 3 nil) nil ) 3 nil)
(>= (PROD t (>= (PROD t 3) 3 t) t ) 3 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 ()) () 1) 1 ) () 1)
(>= (PROD 2 (>= (PROD 2 ()) () 2) 2 ) () 2)
(>= (PROD nil (>= (PROD nil ()) () nil) nil ) () nil)
(>= (PROD t (>= (PROD t ()) () t) t ) () t)
(>= (PROD (cons t t) (>= (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 (())) (()) 1) 1 ) (()) 1)
(>= (PROD 2 (>= (PROD 2 (())) (()) 2) 2 ) (()) 2)
(>= (PROD nil (>= (PROD nil (())) (()) nil) nil ) (()) nil)
(>= (PROD t (>= (PROD t (())) (()) t) t ) (()) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(>= (PROD 2 (>= (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(>= (PROD nil (>= (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(>= (PROD t (>= (PROD t ((()))) ((())) t) t ) ((())) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(>= (PROD 2 (>= (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(>= (PROD nil (>= (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(>= (PROD t (>= (PROD t (((())))) (((()))) t) t ) (((()))) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 'A) 'A 1) 1 ) 'A 1)
(>= (PROD 2 (>= (PROD 2 'A) 'A 2) 2 ) 'A 2)
(>= (PROD nil (>= (PROD nil 'A) 'A nil) nil ) 'A nil)
(>= (PROD t (>= (PROD t 'A) 'A t) t ) 'A t)
(>= (PROD (cons t t) (>= (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 'B) 'B 1) 1 ) 'B 1)
(>= (PROD 2 (>= (PROD 2 'B) 'B 2) 2 ) 'B 2)
(>= (PROD nil (>= (PROD nil 'B) 'B nil) nil ) 'B nil)
(>= (PROD t (>= (PROD t 'B) 'B t) t ) 'B t)
(>= (PROD (cons t t) (>= (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 'C) 'C 1) 1 ) 'C 1)
(>= (PROD 2 (>= (PROD 2 'C) 'C 2) 2 ) 'C 2)
(>= (PROD nil (>= (PROD nil 'C) 'C nil) nil ) 'C nil)
(>= (PROD t (>= (PROD t 'C) 'C t) t ) 'C t)
(>= (PROD (cons t t) (>= (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 '1) '1 1) 1 ) '1 1)
(>= (PROD 2 (>= (PROD 2 '1) '1 2) 2 ) '1 2)
(>= (PROD nil (>= (PROD nil '1) '1 nil) nil ) '1 nil)
(>= (PROD t (>= (PROD t '1) '1 t) t ) '1 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 '2) '2 1) 1 ) '2 1)
(>= (PROD 2 (>= (PROD 2 '2) '2 2) 2 ) '2 2)
(>= (PROD nil (>= (PROD nil '2) '2 nil) nil ) '2 nil)
(>= (PROD t (>= (PROD t '2) '2 t) t ) '2 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 '3) '3 1) 1 ) '3 1)
(>= (PROD 2 (>= (PROD 2 '3) '3 2) 2 ) '3 2)
(>= (PROD nil (>= (PROD nil '3) '3 nil) nil ) '3 nil)
(>= (PROD t (>= (PROD t '3) '3 t) t ) '3 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 '()) '() 1) 1 ) '() 1)
(>= (PROD 2 (>= (PROD 2 '()) '() 2) 2 ) '() 2)
(>= (PROD nil (>= (PROD nil '()) '() nil) nil ) '() nil)
(>= (PROD t (>= (PROD t '()) '() t) t ) '() t)
(>= (PROD (cons t t) (>= (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(>= (PROD 2 (>= (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(>= (PROD nil (>= (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(>= (PROD t (>= (PROD t '(())) '(()) t) t ) '(()) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(>= (PROD 2 (>= (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(>= (PROD nil (>= (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(>= (PROD t (>= (PROD t '((()))) '((())) t) t ) '((())) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(>= (PROD 2 (>= (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(>= (PROD nil (>= (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(>= (PROD t (>= (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(>= (PROD 2 (>= (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(>= (PROD nil (>= (PROD nil ,A) ,A nil) nil ) ,A nil)
(>= (PROD t (>= (PROD t ,A) ,A t) t ) ,A t)
(>= (PROD (cons t t) (>= (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(>= (PROD 2 (>= (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(>= (PROD nil (>= (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(>= (PROD t (>= (PROD t ,1) ,1 t) t ) ,1 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(>= (PROD 2 (>= (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(>= (PROD nil (>= (PROD nil ,()) ,() nil) nil ) ,() nil)
(>= (PROD t (>= (PROD t ,()) ,() t) t ) ,() t)
(>= (PROD (cons t t) (>= (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(>= (PROD 2 (>= (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(>= (PROD nil (>= (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(>= (PROD t (>= (PROD t ,(())) ,(()) t) t ) ,(()) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(>= (PROD 2 (>= (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(>= (PROD nil (>= (PROD nil `'A) `'A nil) nil ) `'A nil)
(>= (PROD t (>= (PROD t `'A) `'A t) t ) `'A t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(>= (PROD 2 (>= (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(>= (PROD nil (>= (PROD nil `'B) `'B nil) nil ) `'B nil)
(>= (PROD t (>= (PROD t `'B) `'B t) t ) `'B t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(>= (PROD 2 (>= (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(>= (PROD nil (>= (PROD nil `'C) `'C nil) nil ) `'C nil)
(>= (PROD t (>= (PROD t `'C) `'C t) t ) `'C t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(>= (PROD 2 (>= (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(>= (PROD nil (>= (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(>= (PROD t (>= (PROD t `'1) `'1 t) t ) `'1 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(>= (PROD 2 (>= (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(>= (PROD nil (>= (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(>= (PROD t (>= (PROD t `'2) `'2 t) t ) `'2 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(>= (PROD 2 (>= (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(>= (PROD nil (>= (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(>= (PROD t (>= (PROD t `'3) `'3 t) t ) `'3 t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(>= (PROD 2 (>= (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(>= (PROD nil (>= (PROD nil `'()) `'() nil) nil ) `'() nil)
(>= (PROD t (>= (PROD t `'()) `'() t) t ) `'() t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(>= (PROD 2 (>= (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(>= (PROD nil (>= (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(>= (PROD t (>= (PROD t `'(())) `'(()) t) t ) `'(()) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(>= (PROD 2 (>= (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(>= (PROD nil (>= (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(>= (PROD t (>= (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(>= (PROD 1 (>= (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(>= (PROD 2 (>= (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(>= (PROD nil (>= (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(>= (PROD t (>= (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(>= (PROD (cons t t) (>= (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(>= (PROD (cons nil t) (>= (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(>= (PROD (cons nil nil) (>= (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(>= (PROD (cons 0 0) (>= (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(>= (PROD (cons 1 1) (>= (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(>= (PROD (list 1 2 3) (>= (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(>= (PROD (list (cons 1 1 ) ) (>= (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 T) T 1) 1 ) T 1)
(ADD (PROD 2 (ADD (PROD 2 T) T 2) 2 ) T 2)
(ADD (PROD nil (ADD (PROD nil T) T nil) nil ) T nil)
(ADD (PROD t (ADD (PROD t T) T t) t ) T t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(ADD (PROD 2 (ADD (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(ADD (PROD nil (ADD (PROD nil NIL) NIL nil) nil ) NIL nil)
(ADD (PROD t (ADD (PROD t NIL) NIL t) t ) NIL t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 A) A 1) 1 ) A 1)
(ADD (PROD 2 (ADD (PROD 2 A) A 2) 2 ) A 2)
(ADD (PROD nil (ADD (PROD nil A) A nil) nil ) A nil)
(ADD (PROD t (ADD (PROD t A) A t) t ) A t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 B) B 1) 1 ) B 1)
(ADD (PROD 2 (ADD (PROD 2 B) B 2) 2 ) B 2)
(ADD (PROD nil (ADD (PROD nil B) B nil) nil ) B nil)
(ADD (PROD t (ADD (PROD t B) B t) t ) B t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 C) C 1) 1 ) C 1)
(ADD (PROD 2 (ADD (PROD 2 C) C 2) 2 ) C 2)
(ADD (PROD nil (ADD (PROD nil C) C nil) nil ) C nil)
(ADD (PROD t (ADD (PROD t C) C t) t ) C t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 1) 1 1) 1 ) 1 1)
(ADD (PROD 2 (ADD (PROD 2 1) 1 2) 2 ) 1 2)
(ADD (PROD nil (ADD (PROD nil 1) 1 nil) nil ) 1 nil)
(ADD (PROD t (ADD (PROD t 1) 1 t) t ) 1 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 2) 2 1) 1 ) 2 1)
(ADD (PROD 2 (ADD (PROD 2 2) 2 2) 2 ) 2 2)
(ADD (PROD nil (ADD (PROD nil 2) 2 nil) nil ) 2 nil)
(ADD (PROD t (ADD (PROD t 2) 2 t) t ) 2 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 3) 3 1) 1 ) 3 1)
(ADD (PROD 2 (ADD (PROD 2 3) 3 2) 2 ) 3 2)
(ADD (PROD nil (ADD (PROD nil 3) 3 nil) nil ) 3 nil)
(ADD (PROD t (ADD (PROD t 3) 3 t) t ) 3 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 ()) () 1) 1 ) () 1)
(ADD (PROD 2 (ADD (PROD 2 ()) () 2) 2 ) () 2)
(ADD (PROD nil (ADD (PROD nil ()) () nil) nil ) () nil)
(ADD (PROD t (ADD (PROD t ()) () t) t ) () t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 (())) (()) 1) 1 ) (()) 1)
(ADD (PROD 2 (ADD (PROD 2 (())) (()) 2) 2 ) (()) 2)
(ADD (PROD nil (ADD (PROD nil (())) (()) nil) nil ) (()) nil)
(ADD (PROD t (ADD (PROD t (())) (()) t) t ) (()) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(ADD (PROD 2 (ADD (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(ADD (PROD nil (ADD (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(ADD (PROD t (ADD (PROD t ((()))) ((())) t) t ) ((())) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(ADD (PROD 2 (ADD (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(ADD (PROD nil (ADD (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(ADD (PROD t (ADD (PROD t (((())))) (((()))) t) t ) (((()))) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 'A) 'A 1) 1 ) 'A 1)
(ADD (PROD 2 (ADD (PROD 2 'A) 'A 2) 2 ) 'A 2)
(ADD (PROD nil (ADD (PROD nil 'A) 'A nil) nil ) 'A nil)
(ADD (PROD t (ADD (PROD t 'A) 'A t) t ) 'A t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 'B) 'B 1) 1 ) 'B 1)
(ADD (PROD 2 (ADD (PROD 2 'B) 'B 2) 2 ) 'B 2)
(ADD (PROD nil (ADD (PROD nil 'B) 'B nil) nil ) 'B nil)
(ADD (PROD t (ADD (PROD t 'B) 'B t) t ) 'B t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 'C) 'C 1) 1 ) 'C 1)
(ADD (PROD 2 (ADD (PROD 2 'C) 'C 2) 2 ) 'C 2)
(ADD (PROD nil (ADD (PROD nil 'C) 'C nil) nil ) 'C nil)
(ADD (PROD t (ADD (PROD t 'C) 'C t) t ) 'C t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 '1) '1 1) 1 ) '1 1)
(ADD (PROD 2 (ADD (PROD 2 '1) '1 2) 2 ) '1 2)
(ADD (PROD nil (ADD (PROD nil '1) '1 nil) nil ) '1 nil)
(ADD (PROD t (ADD (PROD t '1) '1 t) t ) '1 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 '2) '2 1) 1 ) '2 1)
(ADD (PROD 2 (ADD (PROD 2 '2) '2 2) 2 ) '2 2)
(ADD (PROD nil (ADD (PROD nil '2) '2 nil) nil ) '2 nil)
(ADD (PROD t (ADD (PROD t '2) '2 t) t ) '2 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 '3) '3 1) 1 ) '3 1)
(ADD (PROD 2 (ADD (PROD 2 '3) '3 2) 2 ) '3 2)
(ADD (PROD nil (ADD (PROD nil '3) '3 nil) nil ) '3 nil)
(ADD (PROD t (ADD (PROD t '3) '3 t) t ) '3 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 '()) '() 1) 1 ) '() 1)
(ADD (PROD 2 (ADD (PROD 2 '()) '() 2) 2 ) '() 2)
(ADD (PROD nil (ADD (PROD nil '()) '() nil) nil ) '() nil)
(ADD (PROD t (ADD (PROD t '()) '() t) t ) '() t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(ADD (PROD 2 (ADD (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(ADD (PROD nil (ADD (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(ADD (PROD t (ADD (PROD t '(())) '(()) t) t ) '(()) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(ADD (PROD 2 (ADD (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(ADD (PROD nil (ADD (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(ADD (PROD t (ADD (PROD t '((()))) '((())) t) t ) '((())) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(ADD (PROD 2 (ADD (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(ADD (PROD nil (ADD (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(ADD (PROD t (ADD (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(ADD (PROD 2 (ADD (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(ADD (PROD nil (ADD (PROD nil ,A) ,A nil) nil ) ,A nil)
(ADD (PROD t (ADD (PROD t ,A) ,A t) t ) ,A t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(ADD (PROD 2 (ADD (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(ADD (PROD nil (ADD (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(ADD (PROD t (ADD (PROD t ,1) ,1 t) t ) ,1 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(ADD (PROD 2 (ADD (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(ADD (PROD nil (ADD (PROD nil ,()) ,() nil) nil ) ,() nil)
(ADD (PROD t (ADD (PROD t ,()) ,() t) t ) ,() t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(ADD (PROD 2 (ADD (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(ADD (PROD nil (ADD (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(ADD (PROD t (ADD (PROD t ,(())) ,(()) t) t ) ,(()) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(ADD (PROD 2 (ADD (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(ADD (PROD nil (ADD (PROD nil `'A) `'A nil) nil ) `'A nil)
(ADD (PROD t (ADD (PROD t `'A) `'A t) t ) `'A t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(ADD (PROD 2 (ADD (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(ADD (PROD nil (ADD (PROD nil `'B) `'B nil) nil ) `'B nil)
(ADD (PROD t (ADD (PROD t `'B) `'B t) t ) `'B t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(ADD (PROD 2 (ADD (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(ADD (PROD nil (ADD (PROD nil `'C) `'C nil) nil ) `'C nil)
(ADD (PROD t (ADD (PROD t `'C) `'C t) t ) `'C t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(ADD (PROD 2 (ADD (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(ADD (PROD nil (ADD (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(ADD (PROD t (ADD (PROD t `'1) `'1 t) t ) `'1 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(ADD (PROD 2 (ADD (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(ADD (PROD nil (ADD (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(ADD (PROD t (ADD (PROD t `'2) `'2 t) t ) `'2 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(ADD (PROD 2 (ADD (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(ADD (PROD nil (ADD (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(ADD (PROD t (ADD (PROD t `'3) `'3 t) t ) `'3 t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(ADD (PROD 2 (ADD (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(ADD (PROD nil (ADD (PROD nil `'()) `'() nil) nil ) `'() nil)
(ADD (PROD t (ADD (PROD t `'()) `'() t) t ) `'() t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(ADD (PROD 2 (ADD (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(ADD (PROD nil (ADD (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(ADD (PROD t (ADD (PROD t `'(())) `'(()) t) t ) `'(()) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(ADD (PROD 2 (ADD (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(ADD (PROD nil (ADD (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(ADD (PROD t (ADD (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(ADD (PROD 1 (ADD (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(ADD (PROD 2 (ADD (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(ADD (PROD nil (ADD (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(ADD (PROD t (ADD (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(ADD (PROD (cons t t) (ADD (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(ADD (PROD (cons nil t) (ADD (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(ADD (PROD (cons nil nil) (ADD (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(ADD (PROD (cons 0 0) (ADD (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(ADD (PROD (cons 1 1) (ADD (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(ADD (PROD (list 1 2 3) (ADD (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(ADD (PROD (list (cons 1 1 ) ) (ADD (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 T) T 1) 1 ) T 1)
(AND (PROD 2 (AND (PROD 2 T) T 2) 2 ) T 2)
(AND (PROD nil (AND (PROD nil T) T nil) nil ) T nil)
(AND (PROD t (AND (PROD t T) T t) t ) T t)
(AND (PROD (cons t t) (AND (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(AND (PROD 2 (AND (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(AND (PROD nil (AND (PROD nil NIL) NIL nil) nil ) NIL nil)
(AND (PROD t (AND (PROD t NIL) NIL t) t ) NIL t)
(AND (PROD (cons t t) (AND (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 A) A 1) 1 ) A 1)
(AND (PROD 2 (AND (PROD 2 A) A 2) 2 ) A 2)
(AND (PROD nil (AND (PROD nil A) A nil) nil ) A nil)
(AND (PROD t (AND (PROD t A) A t) t ) A t)
(AND (PROD (cons t t) (AND (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 B) B 1) 1 ) B 1)
(AND (PROD 2 (AND (PROD 2 B) B 2) 2 ) B 2)
(AND (PROD nil (AND (PROD nil B) B nil) nil ) B nil)
(AND (PROD t (AND (PROD t B) B t) t ) B t)
(AND (PROD (cons t t) (AND (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 C) C 1) 1 ) C 1)
(AND (PROD 2 (AND (PROD 2 C) C 2) 2 ) C 2)
(AND (PROD nil (AND (PROD nil C) C nil) nil ) C nil)
(AND (PROD t (AND (PROD t C) C t) t ) C t)
(AND (PROD (cons t t) (AND (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 1) 1 1) 1 ) 1 1)
(AND (PROD 2 (AND (PROD 2 1) 1 2) 2 ) 1 2)
(AND (PROD nil (AND (PROD nil 1) 1 nil) nil ) 1 nil)
(AND (PROD t (AND (PROD t 1) 1 t) t ) 1 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 2) 2 1) 1 ) 2 1)
(AND (PROD 2 (AND (PROD 2 2) 2 2) 2 ) 2 2)
(AND (PROD nil (AND (PROD nil 2) 2 nil) nil ) 2 nil)
(AND (PROD t (AND (PROD t 2) 2 t) t ) 2 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 3) 3 1) 1 ) 3 1)
(AND (PROD 2 (AND (PROD 2 3) 3 2) 2 ) 3 2)
(AND (PROD nil (AND (PROD nil 3) 3 nil) nil ) 3 nil)
(AND (PROD t (AND (PROD t 3) 3 t) t ) 3 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 ()) () 1) 1 ) () 1)
(AND (PROD 2 (AND (PROD 2 ()) () 2) 2 ) () 2)
(AND (PROD nil (AND (PROD nil ()) () nil) nil ) () nil)
(AND (PROD t (AND (PROD t ()) () t) t ) () t)
(AND (PROD (cons t t) (AND (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 (())) (()) 1) 1 ) (()) 1)
(AND (PROD 2 (AND (PROD 2 (())) (()) 2) 2 ) (()) 2)
(AND (PROD nil (AND (PROD nil (())) (()) nil) nil ) (()) nil)
(AND (PROD t (AND (PROD t (())) (()) t) t ) (()) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(AND (PROD 2 (AND (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(AND (PROD nil (AND (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(AND (PROD t (AND (PROD t ((()))) ((())) t) t ) ((())) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(AND (PROD 2 (AND (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(AND (PROD nil (AND (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(AND (PROD t (AND (PROD t (((())))) (((()))) t) t ) (((()))) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 'A) 'A 1) 1 ) 'A 1)
(AND (PROD 2 (AND (PROD 2 'A) 'A 2) 2 ) 'A 2)
(AND (PROD nil (AND (PROD nil 'A) 'A nil) nil ) 'A nil)
(AND (PROD t (AND (PROD t 'A) 'A t) t ) 'A t)
(AND (PROD (cons t t) (AND (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 'B) 'B 1) 1 ) 'B 1)
(AND (PROD 2 (AND (PROD 2 'B) 'B 2) 2 ) 'B 2)
(AND (PROD nil (AND (PROD nil 'B) 'B nil) nil ) 'B nil)
(AND (PROD t (AND (PROD t 'B) 'B t) t ) 'B t)
(AND (PROD (cons t t) (AND (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 'C) 'C 1) 1 ) 'C 1)
(AND (PROD 2 (AND (PROD 2 'C) 'C 2) 2 ) 'C 2)
(AND (PROD nil (AND (PROD nil 'C) 'C nil) nil ) 'C nil)
(AND (PROD t (AND (PROD t 'C) 'C t) t ) 'C t)
(AND (PROD (cons t t) (AND (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 '1) '1 1) 1 ) '1 1)
(AND (PROD 2 (AND (PROD 2 '1) '1 2) 2 ) '1 2)
(AND (PROD nil (AND (PROD nil '1) '1 nil) nil ) '1 nil)
(AND (PROD t (AND (PROD t '1) '1 t) t ) '1 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 '2) '2 1) 1 ) '2 1)
(AND (PROD 2 (AND (PROD 2 '2) '2 2) 2 ) '2 2)
(AND (PROD nil (AND (PROD nil '2) '2 nil) nil ) '2 nil)
(AND (PROD t (AND (PROD t '2) '2 t) t ) '2 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 '3) '3 1) 1 ) '3 1)
(AND (PROD 2 (AND (PROD 2 '3) '3 2) 2 ) '3 2)
(AND (PROD nil (AND (PROD nil '3) '3 nil) nil ) '3 nil)
(AND (PROD t (AND (PROD t '3) '3 t) t ) '3 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 '()) '() 1) 1 ) '() 1)
(AND (PROD 2 (AND (PROD 2 '()) '() 2) 2 ) '() 2)
(AND (PROD nil (AND (PROD nil '()) '() nil) nil ) '() nil)
(AND (PROD t (AND (PROD t '()) '() t) t ) '() t)
(AND (PROD (cons t t) (AND (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(AND (PROD 2 (AND (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(AND (PROD nil (AND (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(AND (PROD t (AND (PROD t '(())) '(()) t) t ) '(()) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(AND (PROD 2 (AND (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(AND (PROD nil (AND (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(AND (PROD t (AND (PROD t '((()))) '((())) t) t ) '((())) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(AND (PROD 2 (AND (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(AND (PROD nil (AND (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(AND (PROD t (AND (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(AND (PROD 2 (AND (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(AND (PROD nil (AND (PROD nil ,A) ,A nil) nil ) ,A nil)
(AND (PROD t (AND (PROD t ,A) ,A t) t ) ,A t)
(AND (PROD (cons t t) (AND (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(AND (PROD 2 (AND (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(AND (PROD nil (AND (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(AND (PROD t (AND (PROD t ,1) ,1 t) t ) ,1 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(AND (PROD 2 (AND (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(AND (PROD nil (AND (PROD nil ,()) ,() nil) nil ) ,() nil)
(AND (PROD t (AND (PROD t ,()) ,() t) t ) ,() t)
(AND (PROD (cons t t) (AND (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(AND (PROD 2 (AND (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(AND (PROD nil (AND (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(AND (PROD t (AND (PROD t ,(())) ,(()) t) t ) ,(()) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(AND (PROD 2 (AND (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(AND (PROD nil (AND (PROD nil `'A) `'A nil) nil ) `'A nil)
(AND (PROD t (AND (PROD t `'A) `'A t) t ) `'A t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(AND (PROD 2 (AND (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(AND (PROD nil (AND (PROD nil `'B) `'B nil) nil ) `'B nil)
(AND (PROD t (AND (PROD t `'B) `'B t) t ) `'B t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(AND (PROD 2 (AND (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(AND (PROD nil (AND (PROD nil `'C) `'C nil) nil ) `'C nil)
(AND (PROD t (AND (PROD t `'C) `'C t) t ) `'C t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(AND (PROD 2 (AND (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(AND (PROD nil (AND (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(AND (PROD t (AND (PROD t `'1) `'1 t) t ) `'1 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(AND (PROD 2 (AND (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(AND (PROD nil (AND (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(AND (PROD t (AND (PROD t `'2) `'2 t) t ) `'2 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(AND (PROD 2 (AND (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(AND (PROD nil (AND (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(AND (PROD t (AND (PROD t `'3) `'3 t) t ) `'3 t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(AND (PROD 2 (AND (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(AND (PROD nil (AND (PROD nil `'()) `'() nil) nil ) `'() nil)
(AND (PROD t (AND (PROD t `'()) `'() t) t ) `'() t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(AND (PROD 2 (AND (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(AND (PROD nil (AND (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(AND (PROD t (AND (PROD t `'(())) `'(()) t) t ) `'(()) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(AND (PROD 2 (AND (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(AND (PROD nil (AND (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(AND (PROD t (AND (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(AND (PROD 1 (AND (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(AND (PROD 2 (AND (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(AND (PROD nil (AND (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(AND (PROD t (AND (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(AND (PROD (cons t t) (AND (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(AND (PROD (cons nil t) (AND (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(AND (PROD (cons nil nil) (AND (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(AND (PROD (cons 0 0) (AND (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(AND (PROD (cons 1 1) (AND (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(AND (PROD (list 1 2 3) (AND (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(AND (PROD (list (cons 1 1 ) ) (AND (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 T) T 1) 1 ) T 1)
(APPEND (PROD 2 (APPEND (PROD 2 T) T 2) 2 ) T 2)
(APPEND (PROD nil (APPEND (PROD nil T) T nil) nil ) T nil)
(APPEND (PROD t (APPEND (PROD t T) T t) t ) T t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(APPEND (PROD 2 (APPEND (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(APPEND (PROD nil (APPEND (PROD nil NIL) NIL nil) nil ) NIL nil)
(APPEND (PROD t (APPEND (PROD t NIL) NIL t) t ) NIL t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 A) A 1) 1 ) A 1)
(APPEND (PROD 2 (APPEND (PROD 2 A) A 2) 2 ) A 2)
(APPEND (PROD nil (APPEND (PROD nil A) A nil) nil ) A nil)
(APPEND (PROD t (APPEND (PROD t A) A t) t ) A t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 B) B 1) 1 ) B 1)
(APPEND (PROD 2 (APPEND (PROD 2 B) B 2) 2 ) B 2)
(APPEND (PROD nil (APPEND (PROD nil B) B nil) nil ) B nil)
(APPEND (PROD t (APPEND (PROD t B) B t) t ) B t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 C) C 1) 1 ) C 1)
(APPEND (PROD 2 (APPEND (PROD 2 C) C 2) 2 ) C 2)
(APPEND (PROD nil (APPEND (PROD nil C) C nil) nil ) C nil)
(APPEND (PROD t (APPEND (PROD t C) C t) t ) C t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 1) 1 1) 1 ) 1 1)
(APPEND (PROD 2 (APPEND (PROD 2 1) 1 2) 2 ) 1 2)
(APPEND (PROD nil (APPEND (PROD nil 1) 1 nil) nil ) 1 nil)
(APPEND (PROD t (APPEND (PROD t 1) 1 t) t ) 1 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 2) 2 1) 1 ) 2 1)
(APPEND (PROD 2 (APPEND (PROD 2 2) 2 2) 2 ) 2 2)
(APPEND (PROD nil (APPEND (PROD nil 2) 2 nil) nil ) 2 nil)
(APPEND (PROD t (APPEND (PROD t 2) 2 t) t ) 2 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 3) 3 1) 1 ) 3 1)
(APPEND (PROD 2 (APPEND (PROD 2 3) 3 2) 2 ) 3 2)
(APPEND (PROD nil (APPEND (PROD nil 3) 3 nil) nil ) 3 nil)
(APPEND (PROD t (APPEND (PROD t 3) 3 t) t ) 3 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 ()) () 1) 1 ) () 1)
(APPEND (PROD 2 (APPEND (PROD 2 ()) () 2) 2 ) () 2)
(APPEND (PROD nil (APPEND (PROD nil ()) () nil) nil ) () nil)
(APPEND (PROD t (APPEND (PROD t ()) () t) t ) () t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 (())) (()) 1) 1 ) (()) 1)
(APPEND (PROD 2 (APPEND (PROD 2 (())) (()) 2) 2 ) (()) 2)
(APPEND (PROD nil (APPEND (PROD nil (())) (()) nil) nil ) (()) nil)
(APPEND (PROD t (APPEND (PROD t (())) (()) t) t ) (()) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(APPEND (PROD 2 (APPEND (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(APPEND (PROD nil (APPEND (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(APPEND (PROD t (APPEND (PROD t ((()))) ((())) t) t ) ((())) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(APPEND (PROD 2 (APPEND (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(APPEND (PROD nil (APPEND (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(APPEND (PROD t (APPEND (PROD t (((())))) (((()))) t) t ) (((()))) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 'A) 'A 1) 1 ) 'A 1)
(APPEND (PROD 2 (APPEND (PROD 2 'A) 'A 2) 2 ) 'A 2)
(APPEND (PROD nil (APPEND (PROD nil 'A) 'A nil) nil ) 'A nil)
(APPEND (PROD t (APPEND (PROD t 'A) 'A t) t ) 'A t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 'B) 'B 1) 1 ) 'B 1)
(APPEND (PROD 2 (APPEND (PROD 2 'B) 'B 2) 2 ) 'B 2)
(APPEND (PROD nil (APPEND (PROD nil 'B) 'B nil) nil ) 'B nil)
(APPEND (PROD t (APPEND (PROD t 'B) 'B t) t ) 'B t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 'C) 'C 1) 1 ) 'C 1)
(APPEND (PROD 2 (APPEND (PROD 2 'C) 'C 2) 2 ) 'C 2)
(APPEND (PROD nil (APPEND (PROD nil 'C) 'C nil) nil ) 'C nil)
(APPEND (PROD t (APPEND (PROD t 'C) 'C t) t ) 'C t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 '1) '1 1) 1 ) '1 1)
(APPEND (PROD 2 (APPEND (PROD 2 '1) '1 2) 2 ) '1 2)
(APPEND (PROD nil (APPEND (PROD nil '1) '1 nil) nil ) '1 nil)
(APPEND (PROD t (APPEND (PROD t '1) '1 t) t ) '1 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 '2) '2 1) 1 ) '2 1)
(APPEND (PROD 2 (APPEND (PROD 2 '2) '2 2) 2 ) '2 2)
(APPEND (PROD nil (APPEND (PROD nil '2) '2 nil) nil ) '2 nil)
(APPEND (PROD t (APPEND (PROD t '2) '2 t) t ) '2 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 '3) '3 1) 1 ) '3 1)
(APPEND (PROD 2 (APPEND (PROD 2 '3) '3 2) 2 ) '3 2)
(APPEND (PROD nil (APPEND (PROD nil '3) '3 nil) nil ) '3 nil)
(APPEND (PROD t (APPEND (PROD t '3) '3 t) t ) '3 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 '()) '() 1) 1 ) '() 1)
(APPEND (PROD 2 (APPEND (PROD 2 '()) '() 2) 2 ) '() 2)
(APPEND (PROD nil (APPEND (PROD nil '()) '() nil) nil ) '() nil)
(APPEND (PROD t (APPEND (PROD t '()) '() t) t ) '() t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(APPEND (PROD 2 (APPEND (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(APPEND (PROD nil (APPEND (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(APPEND (PROD t (APPEND (PROD t '(())) '(()) t) t ) '(()) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(APPEND (PROD 2 (APPEND (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(APPEND (PROD nil (APPEND (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(APPEND (PROD t (APPEND (PROD t '((()))) '((())) t) t ) '((())) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(APPEND (PROD 2 (APPEND (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(APPEND (PROD nil (APPEND (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(APPEND (PROD t (APPEND (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(APPEND (PROD 2 (APPEND (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(APPEND (PROD nil (APPEND (PROD nil ,A) ,A nil) nil ) ,A nil)
(APPEND (PROD t (APPEND (PROD t ,A) ,A t) t ) ,A t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(APPEND (PROD 2 (APPEND (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(APPEND (PROD nil (APPEND (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(APPEND (PROD t (APPEND (PROD t ,1) ,1 t) t ) ,1 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(APPEND (PROD 2 (APPEND (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(APPEND (PROD nil (APPEND (PROD nil ,()) ,() nil) nil ) ,() nil)
(APPEND (PROD t (APPEND (PROD t ,()) ,() t) t ) ,() t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(APPEND (PROD 2 (APPEND (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(APPEND (PROD nil (APPEND (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(APPEND (PROD t (APPEND (PROD t ,(())) ,(()) t) t ) ,(()) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(APPEND (PROD nil (APPEND (PROD nil `'A) `'A nil) nil ) `'A nil)
(APPEND (PROD t (APPEND (PROD t `'A) `'A t) t ) `'A t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(APPEND (PROD nil (APPEND (PROD nil `'B) `'B nil) nil ) `'B nil)
(APPEND (PROD t (APPEND (PROD t `'B) `'B t) t ) `'B t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(APPEND (PROD nil (APPEND (PROD nil `'C) `'C nil) nil ) `'C nil)
(APPEND (PROD t (APPEND (PROD t `'C) `'C t) t ) `'C t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(APPEND (PROD nil (APPEND (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(APPEND (PROD t (APPEND (PROD t `'1) `'1 t) t ) `'1 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(APPEND (PROD nil (APPEND (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(APPEND (PROD t (APPEND (PROD t `'2) `'2 t) t ) `'2 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(APPEND (PROD nil (APPEND (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(APPEND (PROD t (APPEND (PROD t `'3) `'3 t) t ) `'3 t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(APPEND (PROD nil (APPEND (PROD nil `'()) `'() nil) nil ) `'() nil)
(APPEND (PROD t (APPEND (PROD t `'()) `'() t) t ) `'() t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(APPEND (PROD nil (APPEND (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(APPEND (PROD t (APPEND (PROD t `'(())) `'(()) t) t ) `'(()) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(APPEND (PROD nil (APPEND (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(APPEND (PROD t (APPEND (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(APPEND (PROD 1 (APPEND (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(APPEND (PROD 2 (APPEND (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(APPEND (PROD nil (APPEND (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(APPEND (PROD t (APPEND (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(APPEND (PROD (cons t t) (APPEND (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(APPEND (PROD (cons nil t) (APPEND (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(APPEND (PROD (cons nil nil) (APPEND (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(APPEND (PROD (cons 0 0) (APPEND (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(APPEND (PROD (cons 1 1) (APPEND (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(APPEND (PROD (list 1 2 3) (APPEND (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(APPEND (PROD (list (cons 1 1 ) ) (APPEND (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 T) T 1) 1 ) T 1)
(ATOM (PROD 2 (ATOM (PROD 2 T) T 2) 2 ) T 2)
(ATOM (PROD nil (ATOM (PROD nil T) T nil) nil ) T nil)
(ATOM (PROD t (ATOM (PROD t T) T t) t ) T t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(ATOM (PROD 2 (ATOM (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(ATOM (PROD nil (ATOM (PROD nil NIL) NIL nil) nil ) NIL nil)
(ATOM (PROD t (ATOM (PROD t NIL) NIL t) t ) NIL t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 A) A 1) 1 ) A 1)
(ATOM (PROD 2 (ATOM (PROD 2 A) A 2) 2 ) A 2)
(ATOM (PROD nil (ATOM (PROD nil A) A nil) nil ) A nil)
(ATOM (PROD t (ATOM (PROD t A) A t) t ) A t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 B) B 1) 1 ) B 1)
(ATOM (PROD 2 (ATOM (PROD 2 B) B 2) 2 ) B 2)
(ATOM (PROD nil (ATOM (PROD nil B) B nil) nil ) B nil)
(ATOM (PROD t (ATOM (PROD t B) B t) t ) B t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 C) C 1) 1 ) C 1)
(ATOM (PROD 2 (ATOM (PROD 2 C) C 2) 2 ) C 2)
(ATOM (PROD nil (ATOM (PROD nil C) C nil) nil ) C nil)
(ATOM (PROD t (ATOM (PROD t C) C t) t ) C t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 1) 1 1) 1 ) 1 1)
(ATOM (PROD 2 (ATOM (PROD 2 1) 1 2) 2 ) 1 2)
(ATOM (PROD nil (ATOM (PROD nil 1) 1 nil) nil ) 1 nil)
(ATOM (PROD t (ATOM (PROD t 1) 1 t) t ) 1 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 2) 2 1) 1 ) 2 1)
(ATOM (PROD 2 (ATOM (PROD 2 2) 2 2) 2 ) 2 2)
(ATOM (PROD nil (ATOM (PROD nil 2) 2 nil) nil ) 2 nil)
(ATOM (PROD t (ATOM (PROD t 2) 2 t) t ) 2 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 3) 3 1) 1 ) 3 1)
(ATOM (PROD 2 (ATOM (PROD 2 3) 3 2) 2 ) 3 2)
(ATOM (PROD nil (ATOM (PROD nil 3) 3 nil) nil ) 3 nil)
(ATOM (PROD t (ATOM (PROD t 3) 3 t) t ) 3 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 ()) () 1) 1 ) () 1)
(ATOM (PROD 2 (ATOM (PROD 2 ()) () 2) 2 ) () 2)
(ATOM (PROD nil (ATOM (PROD nil ()) () nil) nil ) () nil)
(ATOM (PROD t (ATOM (PROD t ()) () t) t ) () t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 (())) (()) 1) 1 ) (()) 1)
(ATOM (PROD 2 (ATOM (PROD 2 (())) (()) 2) 2 ) (()) 2)
(ATOM (PROD nil (ATOM (PROD nil (())) (()) nil) nil ) (()) nil)
(ATOM (PROD t (ATOM (PROD t (())) (()) t) t ) (()) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(ATOM (PROD 2 (ATOM (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(ATOM (PROD nil (ATOM (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(ATOM (PROD t (ATOM (PROD t ((()))) ((())) t) t ) ((())) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(ATOM (PROD 2 (ATOM (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(ATOM (PROD nil (ATOM (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(ATOM (PROD t (ATOM (PROD t (((())))) (((()))) t) t ) (((()))) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 'A) 'A 1) 1 ) 'A 1)
(ATOM (PROD 2 (ATOM (PROD 2 'A) 'A 2) 2 ) 'A 2)
(ATOM (PROD nil (ATOM (PROD nil 'A) 'A nil) nil ) 'A nil)
(ATOM (PROD t (ATOM (PROD t 'A) 'A t) t ) 'A t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 'B) 'B 1) 1 ) 'B 1)
(ATOM (PROD 2 (ATOM (PROD 2 'B) 'B 2) 2 ) 'B 2)
(ATOM (PROD nil (ATOM (PROD nil 'B) 'B nil) nil ) 'B nil)
(ATOM (PROD t (ATOM (PROD t 'B) 'B t) t ) 'B t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 'C) 'C 1) 1 ) 'C 1)
(ATOM (PROD 2 (ATOM (PROD 2 'C) 'C 2) 2 ) 'C 2)
(ATOM (PROD nil (ATOM (PROD nil 'C) 'C nil) nil ) 'C nil)
(ATOM (PROD t (ATOM (PROD t 'C) 'C t) t ) 'C t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 '1) '1 1) 1 ) '1 1)
(ATOM (PROD 2 (ATOM (PROD 2 '1) '1 2) 2 ) '1 2)
(ATOM (PROD nil (ATOM (PROD nil '1) '1 nil) nil ) '1 nil)
(ATOM (PROD t (ATOM (PROD t '1) '1 t) t ) '1 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 '2) '2 1) 1 ) '2 1)
(ATOM (PROD 2 (ATOM (PROD 2 '2) '2 2) 2 ) '2 2)
(ATOM (PROD nil (ATOM (PROD nil '2) '2 nil) nil ) '2 nil)
(ATOM (PROD t (ATOM (PROD t '2) '2 t) t ) '2 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 '3) '3 1) 1 ) '3 1)
(ATOM (PROD 2 (ATOM (PROD 2 '3) '3 2) 2 ) '3 2)
(ATOM (PROD nil (ATOM (PROD nil '3) '3 nil) nil ) '3 nil)
(ATOM (PROD t (ATOM (PROD t '3) '3 t) t ) '3 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 '()) '() 1) 1 ) '() 1)
(ATOM (PROD 2 (ATOM (PROD 2 '()) '() 2) 2 ) '() 2)
(ATOM (PROD nil (ATOM (PROD nil '()) '() nil) nil ) '() nil)
(ATOM (PROD t (ATOM (PROD t '()) '() t) t ) '() t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(ATOM (PROD 2 (ATOM (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(ATOM (PROD nil (ATOM (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(ATOM (PROD t (ATOM (PROD t '(())) '(()) t) t ) '(()) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(ATOM (PROD 2 (ATOM (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(ATOM (PROD nil (ATOM (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(ATOM (PROD t (ATOM (PROD t '((()))) '((())) t) t ) '((())) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(ATOM (PROD 2 (ATOM (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(ATOM (PROD nil (ATOM (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(ATOM (PROD t (ATOM (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(ATOM (PROD 2 (ATOM (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(ATOM (PROD nil (ATOM (PROD nil ,A) ,A nil) nil ) ,A nil)
(ATOM (PROD t (ATOM (PROD t ,A) ,A t) t ) ,A t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(ATOM (PROD 2 (ATOM (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(ATOM (PROD nil (ATOM (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(ATOM (PROD t (ATOM (PROD t ,1) ,1 t) t ) ,1 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(ATOM (PROD 2 (ATOM (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(ATOM (PROD nil (ATOM (PROD nil ,()) ,() nil) nil ) ,() nil)
(ATOM (PROD t (ATOM (PROD t ,()) ,() t) t ) ,() t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(ATOM (PROD 2 (ATOM (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(ATOM (PROD nil (ATOM (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(ATOM (PROD t (ATOM (PROD t ,(())) ,(()) t) t ) ,(()) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(ATOM (PROD nil (ATOM (PROD nil `'A) `'A nil) nil ) `'A nil)
(ATOM (PROD t (ATOM (PROD t `'A) `'A t) t ) `'A t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(ATOM (PROD nil (ATOM (PROD nil `'B) `'B nil) nil ) `'B nil)
(ATOM (PROD t (ATOM (PROD t `'B) `'B t) t ) `'B t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(ATOM (PROD nil (ATOM (PROD nil `'C) `'C nil) nil ) `'C nil)
(ATOM (PROD t (ATOM (PROD t `'C) `'C t) t ) `'C t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(ATOM (PROD nil (ATOM (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(ATOM (PROD t (ATOM (PROD t `'1) `'1 t) t ) `'1 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(ATOM (PROD nil (ATOM (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(ATOM (PROD t (ATOM (PROD t `'2) `'2 t) t ) `'2 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(ATOM (PROD nil (ATOM (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(ATOM (PROD t (ATOM (PROD t `'3) `'3 t) t ) `'3 t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(ATOM (PROD nil (ATOM (PROD nil `'()) `'() nil) nil ) `'() nil)
(ATOM (PROD t (ATOM (PROD t `'()) `'() t) t ) `'() t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(ATOM (PROD nil (ATOM (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(ATOM (PROD t (ATOM (PROD t `'(())) `'(()) t) t ) `'(()) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(ATOM (PROD nil (ATOM (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(ATOM (PROD t (ATOM (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(ATOM (PROD 1 (ATOM (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(ATOM (PROD 2 (ATOM (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(ATOM (PROD nil (ATOM (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(ATOM (PROD t (ATOM (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(ATOM (PROD (cons t t) (ATOM (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(ATOM (PROD (cons nil t) (ATOM (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(ATOM (PROD (cons nil nil) (ATOM (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(ATOM (PROD (cons 0 0) (ATOM (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(ATOM (PROD (cons 1 1) (ATOM (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(ATOM (PROD (list 1 2 3) (ATOM (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(ATOM (PROD (list (cons 1 1 ) ) (ATOM (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 T) T 1) 1 ) T 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 T) T 2) 2 ) T 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil T) T nil) nil ) T nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t T) T t) t ) T t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil NIL) NIL nil) nil ) NIL nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t NIL) NIL t) t ) NIL t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 A) A 1) 1 ) A 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 A) A 2) 2 ) A 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil A) A nil) nil ) A nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t A) A t) t ) A t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 B) B 1) 1 ) B 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 B) B 2) 2 ) B 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil B) B nil) nil ) B nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t B) B t) t ) B t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 C) C 1) 1 ) C 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 C) C 2) 2 ) C 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil C) C nil) nil ) C nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t C) C t) t ) C t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 1) 1 1) 1 ) 1 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 1) 1 2) 2 ) 1 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil 1) 1 nil) nil ) 1 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t 1) 1 t) t ) 1 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 2) 2 1) 1 ) 2 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 2) 2 2) 2 ) 2 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil 2) 2 nil) nil ) 2 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t 2) 2 t) t ) 2 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 3) 3 1) 1 ) 3 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 3) 3 2) 2 ) 3 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil 3) 3 nil) nil ) 3 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t 3) 3 t) t ) 3 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 ()) () 1) 1 ) () 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 ()) () 2) 2 ) () 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil ()) () nil) nil ) () nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t ()) () t) t ) () t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 (())) (()) 1) 1 ) (()) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 (())) (()) 2) 2 ) (()) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil (())) (()) nil) nil ) (()) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t (())) (()) t) t ) (()) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t ((()))) ((())) t) t ) ((())) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t (((())))) (((()))) t) t ) (((()))) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 'A) 'A 1) 1 ) 'A 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 'A) 'A 2) 2 ) 'A 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil 'A) 'A nil) nil ) 'A nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t 'A) 'A t) t ) 'A t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 'B) 'B 1) 1 ) 'B 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 'B) 'B 2) 2 ) 'B 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil 'B) 'B nil) nil ) 'B nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t 'B) 'B t) t ) 'B t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 'C) 'C 1) 1 ) 'C 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 'C) 'C 2) 2 ) 'C 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil 'C) 'C nil) nil ) 'C nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t 'C) 'C t) t ) 'C t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 '1) '1 1) 1 ) '1 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 '1) '1 2) 2 ) '1 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil '1) '1 nil) nil ) '1 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t '1) '1 t) t ) '1 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 '2) '2 1) 1 ) '2 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 '2) '2 2) 2 ) '2 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil '2) '2 nil) nil ) '2 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t '2) '2 t) t ) '2 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 '3) '3 1) 1 ) '3 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 '3) '3 2) 2 ) '3 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil '3) '3 nil) nil ) '3 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t '3) '3 t) t ) '3 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 '()) '() 1) 1 ) '() 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 '()) '() 2) 2 ) '() 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil '()) '() nil) nil ) '() nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t '()) '() t) t ) '() t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t '(())) '(()) t) t ) '(()) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t '((()))) '((())) t) t ) '((())) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil ,A) ,A nil) nil ) ,A nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t ,A) ,A t) t ) ,A t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t ,1) ,1 t) t ) ,1 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil ,()) ,() nil) nil ) ,() nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t ,()) ,() t) t ) ,() t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t ,(())) ,(()) t) t ) ,(()) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'A) `'A nil) nil ) `'A nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'A) `'A t) t ) `'A t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'B) `'B nil) nil ) `'B nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'B) `'B t) t ) `'B t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'C) `'C nil) nil ) `'C nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'C) `'C t) t ) `'C t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'1) `'1 t) t ) `'1 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'2) `'2 t) t ) `'2 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'3) `'3 t) t ) `'3 t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'()) `'() nil) nil ) `'() nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'()) `'() t) t ) `'() t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'(())) `'(()) t) t ) `'(()) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(BACKQUOTE (PROD 1 (BACKQUOTE (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(BACKQUOTE (PROD 2 (BACKQUOTE (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(BACKQUOTE (PROD nil (BACKQUOTE (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(BACKQUOTE (PROD t (BACKQUOTE (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(BACKQUOTE (PROD (cons t t) (BACKQUOTE (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(BACKQUOTE (PROD (cons nil t) (BACKQUOTE (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(BACKQUOTE (PROD (cons nil nil) (BACKQUOTE (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(BACKQUOTE (PROD (cons 0 0) (BACKQUOTE (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(BACKQUOTE (PROD (cons 1 1) (BACKQUOTE (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(BACKQUOTE (PROD (list 1 2 3) (BACKQUOTE (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(BACKQUOTE (PROD (list (cons 1 1 ) ) (BACKQUOTE (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 T) T 1) 1 ) T 1)
(CAR (PROD 2 (CAR (PROD 2 T) T 2) 2 ) T 2)
(CAR (PROD nil (CAR (PROD nil T) T nil) nil ) T nil)
(CAR (PROD t (CAR (PROD t T) T t) t ) T t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(CAR (PROD 2 (CAR (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(CAR (PROD nil (CAR (PROD nil NIL) NIL nil) nil ) NIL nil)
(CAR (PROD t (CAR (PROD t NIL) NIL t) t ) NIL t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 A) A 1) 1 ) A 1)
(CAR (PROD 2 (CAR (PROD 2 A) A 2) 2 ) A 2)
(CAR (PROD nil (CAR (PROD nil A) A nil) nil ) A nil)
(CAR (PROD t (CAR (PROD t A) A t) t ) A t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 B) B 1) 1 ) B 1)
(CAR (PROD 2 (CAR (PROD 2 B) B 2) 2 ) B 2)
(CAR (PROD nil (CAR (PROD nil B) B nil) nil ) B nil)
(CAR (PROD t (CAR (PROD t B) B t) t ) B t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 C) C 1) 1 ) C 1)
(CAR (PROD 2 (CAR (PROD 2 C) C 2) 2 ) C 2)
(CAR (PROD nil (CAR (PROD nil C) C nil) nil ) C nil)
(CAR (PROD t (CAR (PROD t C) C t) t ) C t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 1) 1 1) 1 ) 1 1)
(CAR (PROD 2 (CAR (PROD 2 1) 1 2) 2 ) 1 2)
(CAR (PROD nil (CAR (PROD nil 1) 1 nil) nil ) 1 nil)
(CAR (PROD t (CAR (PROD t 1) 1 t) t ) 1 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 2) 2 1) 1 ) 2 1)
(CAR (PROD 2 (CAR (PROD 2 2) 2 2) 2 ) 2 2)
(CAR (PROD nil (CAR (PROD nil 2) 2 nil) nil ) 2 nil)
(CAR (PROD t (CAR (PROD t 2) 2 t) t ) 2 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 3) 3 1) 1 ) 3 1)
(CAR (PROD 2 (CAR (PROD 2 3) 3 2) 2 ) 3 2)
(CAR (PROD nil (CAR (PROD nil 3) 3 nil) nil ) 3 nil)
(CAR (PROD t (CAR (PROD t 3) 3 t) t ) 3 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 ()) () 1) 1 ) () 1)
(CAR (PROD 2 (CAR (PROD 2 ()) () 2) 2 ) () 2)
(CAR (PROD nil (CAR (PROD nil ()) () nil) nil ) () nil)
(CAR (PROD t (CAR (PROD t ()) () t) t ) () t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 (())) (()) 1) 1 ) (()) 1)
(CAR (PROD 2 (CAR (PROD 2 (())) (()) 2) 2 ) (()) 2)
(CAR (PROD nil (CAR (PROD nil (())) (()) nil) nil ) (()) nil)
(CAR (PROD t (CAR (PROD t (())) (()) t) t ) (()) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CAR (PROD 2 (CAR (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CAR (PROD nil (CAR (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(CAR (PROD t (CAR (PROD t ((()))) ((())) t) t ) ((())) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CAR (PROD 2 (CAR (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CAR (PROD nil (CAR (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CAR (PROD t (CAR (PROD t (((())))) (((()))) t) t ) (((()))) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 'A) 'A 1) 1 ) 'A 1)
(CAR (PROD 2 (CAR (PROD 2 'A) 'A 2) 2 ) 'A 2)
(CAR (PROD nil (CAR (PROD nil 'A) 'A nil) nil ) 'A nil)
(CAR (PROD t (CAR (PROD t 'A) 'A t) t ) 'A t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 'B) 'B 1) 1 ) 'B 1)
(CAR (PROD 2 (CAR (PROD 2 'B) 'B 2) 2 ) 'B 2)
(CAR (PROD nil (CAR (PROD nil 'B) 'B nil) nil ) 'B nil)
(CAR (PROD t (CAR (PROD t 'B) 'B t) t ) 'B t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 'C) 'C 1) 1 ) 'C 1)
(CAR (PROD 2 (CAR (PROD 2 'C) 'C 2) 2 ) 'C 2)
(CAR (PROD nil (CAR (PROD nil 'C) 'C nil) nil ) 'C nil)
(CAR (PROD t (CAR (PROD t 'C) 'C t) t ) 'C t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 '1) '1 1) 1 ) '1 1)
(CAR (PROD 2 (CAR (PROD 2 '1) '1 2) 2 ) '1 2)
(CAR (PROD nil (CAR (PROD nil '1) '1 nil) nil ) '1 nil)
(CAR (PROD t (CAR (PROD t '1) '1 t) t ) '1 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 '2) '2 1) 1 ) '2 1)
(CAR (PROD 2 (CAR (PROD 2 '2) '2 2) 2 ) '2 2)
(CAR (PROD nil (CAR (PROD nil '2) '2 nil) nil ) '2 nil)
(CAR (PROD t (CAR (PROD t '2) '2 t) t ) '2 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 '3) '3 1) 1 ) '3 1)
(CAR (PROD 2 (CAR (PROD 2 '3) '3 2) 2 ) '3 2)
(CAR (PROD nil (CAR (PROD nil '3) '3 nil) nil ) '3 nil)
(CAR (PROD t (CAR (PROD t '3) '3 t) t ) '3 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 '()) '() 1) 1 ) '() 1)
(CAR (PROD 2 (CAR (PROD 2 '()) '() 2) 2 ) '() 2)
(CAR (PROD nil (CAR (PROD nil '()) '() nil) nil ) '() nil)
(CAR (PROD t (CAR (PROD t '()) '() t) t ) '() t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(CAR (PROD 2 (CAR (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(CAR (PROD nil (CAR (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(CAR (PROD t (CAR (PROD t '(())) '(()) t) t ) '(()) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CAR (PROD 2 (CAR (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CAR (PROD nil (CAR (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(CAR (PROD t (CAR (PROD t '((()))) '((())) t) t ) '((())) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CAR (PROD 2 (CAR (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CAR (PROD nil (CAR (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CAR (PROD t (CAR (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(CAR (PROD 2 (CAR (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(CAR (PROD nil (CAR (PROD nil ,A) ,A nil) nil ) ,A nil)
(CAR (PROD t (CAR (PROD t ,A) ,A t) t ) ,A t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(CAR (PROD 2 (CAR (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(CAR (PROD nil (CAR (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(CAR (PROD t (CAR (PROD t ,1) ,1 t) t ) ,1 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(CAR (PROD 2 (CAR (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(CAR (PROD nil (CAR (PROD nil ,()) ,() nil) nil ) ,() nil)
(CAR (PROD t (CAR (PROD t ,()) ,() t) t ) ,() t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CAR (PROD 2 (CAR (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CAR (PROD nil (CAR (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CAR (PROD t (CAR (PROD t ,(())) ,(()) t) t ) ,(()) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(CAR (PROD 2 (CAR (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(CAR (PROD nil (CAR (PROD nil `'A) `'A nil) nil ) `'A nil)
(CAR (PROD t (CAR (PROD t `'A) `'A t) t ) `'A t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(CAR (PROD 2 (CAR (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(CAR (PROD nil (CAR (PROD nil `'B) `'B nil) nil ) `'B nil)
(CAR (PROD t (CAR (PROD t `'B) `'B t) t ) `'B t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(CAR (PROD 2 (CAR (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(CAR (PROD nil (CAR (PROD nil `'C) `'C nil) nil ) `'C nil)
(CAR (PROD t (CAR (PROD t `'C) `'C t) t ) `'C t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(CAR (PROD 2 (CAR (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(CAR (PROD nil (CAR (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(CAR (PROD t (CAR (PROD t `'1) `'1 t) t ) `'1 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(CAR (PROD 2 (CAR (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(CAR (PROD nil (CAR (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(CAR (PROD t (CAR (PROD t `'2) `'2 t) t ) `'2 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(CAR (PROD 2 (CAR (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(CAR (PROD nil (CAR (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(CAR (PROD t (CAR (PROD t `'3) `'3 t) t ) `'3 t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(CAR (PROD 2 (CAR (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(CAR (PROD nil (CAR (PROD nil `'()) `'() nil) nil ) `'() nil)
(CAR (PROD t (CAR (PROD t `'()) `'() t) t ) `'() t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CAR (PROD 2 (CAR (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CAR (PROD nil (CAR (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CAR (PROD t (CAR (PROD t `'(())) `'(()) t) t ) `'(()) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CAR (PROD 2 (CAR (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CAR (PROD nil (CAR (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CAR (PROD t (CAR (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CAR (PROD 1 (CAR (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CAR (PROD 2 (CAR (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CAR (PROD nil (CAR (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CAR (PROD t (CAR (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CAR (PROD (cons t t) (CAR (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CAR (PROD (cons nil t) (CAR (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CAR (PROD (cons nil nil) (CAR (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CAR (PROD (cons 0 0) (CAR (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CAR (PROD (cons 1 1) (CAR (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CAR (PROD (list 1 2 3) (CAR (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CAR (PROD (list (cons 1 1 ) ) (CAR (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 T) T 1) 1 ) T 1)
(CDR (PROD 2 (CDR (PROD 2 T) T 2) 2 ) T 2)
(CDR (PROD nil (CDR (PROD nil T) T nil) nil ) T nil)
(CDR (PROD t (CDR (PROD t T) T t) t ) T t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(CDR (PROD 2 (CDR (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(CDR (PROD nil (CDR (PROD nil NIL) NIL nil) nil ) NIL nil)
(CDR (PROD t (CDR (PROD t NIL) NIL t) t ) NIL t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 A) A 1) 1 ) A 1)
(CDR (PROD 2 (CDR (PROD 2 A) A 2) 2 ) A 2)
(CDR (PROD nil (CDR (PROD nil A) A nil) nil ) A nil)
(CDR (PROD t (CDR (PROD t A) A t) t ) A t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 B) B 1) 1 ) B 1)
(CDR (PROD 2 (CDR (PROD 2 B) B 2) 2 ) B 2)
(CDR (PROD nil (CDR (PROD nil B) B nil) nil ) B nil)
(CDR (PROD t (CDR (PROD t B) B t) t ) B t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 C) C 1) 1 ) C 1)
(CDR (PROD 2 (CDR (PROD 2 C) C 2) 2 ) C 2)
(CDR (PROD nil (CDR (PROD nil C) C nil) nil ) C nil)
(CDR (PROD t (CDR (PROD t C) C t) t ) C t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 1) 1 1) 1 ) 1 1)
(CDR (PROD 2 (CDR (PROD 2 1) 1 2) 2 ) 1 2)
(CDR (PROD nil (CDR (PROD nil 1) 1 nil) nil ) 1 nil)
(CDR (PROD t (CDR (PROD t 1) 1 t) t ) 1 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 2) 2 1) 1 ) 2 1)
(CDR (PROD 2 (CDR (PROD 2 2) 2 2) 2 ) 2 2)
(CDR (PROD nil (CDR (PROD nil 2) 2 nil) nil ) 2 nil)
(CDR (PROD t (CDR (PROD t 2) 2 t) t ) 2 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 3) 3 1) 1 ) 3 1)
(CDR (PROD 2 (CDR (PROD 2 3) 3 2) 2 ) 3 2)
(CDR (PROD nil (CDR (PROD nil 3) 3 nil) nil ) 3 nil)
(CDR (PROD t (CDR (PROD t 3) 3 t) t ) 3 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 ()) () 1) 1 ) () 1)
(CDR (PROD 2 (CDR (PROD 2 ()) () 2) 2 ) () 2)
(CDR (PROD nil (CDR (PROD nil ()) () nil) nil ) () nil)
(CDR (PROD t (CDR (PROD t ()) () t) t ) () t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 (())) (()) 1) 1 ) (()) 1)
(CDR (PROD 2 (CDR (PROD 2 (())) (()) 2) 2 ) (()) 2)
(CDR (PROD nil (CDR (PROD nil (())) (()) nil) nil ) (()) nil)
(CDR (PROD t (CDR (PROD t (())) (()) t) t ) (()) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CDR (PROD 2 (CDR (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CDR (PROD nil (CDR (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(CDR (PROD t (CDR (PROD t ((()))) ((())) t) t ) ((())) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CDR (PROD 2 (CDR (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CDR (PROD nil (CDR (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CDR (PROD t (CDR (PROD t (((())))) (((()))) t) t ) (((()))) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 'A) 'A 1) 1 ) 'A 1)
(CDR (PROD 2 (CDR (PROD 2 'A) 'A 2) 2 ) 'A 2)
(CDR (PROD nil (CDR (PROD nil 'A) 'A nil) nil ) 'A nil)
(CDR (PROD t (CDR (PROD t 'A) 'A t) t ) 'A t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 'B) 'B 1) 1 ) 'B 1)
(CDR (PROD 2 (CDR (PROD 2 'B) 'B 2) 2 ) 'B 2)
(CDR (PROD nil (CDR (PROD nil 'B) 'B nil) nil ) 'B nil)
(CDR (PROD t (CDR (PROD t 'B) 'B t) t ) 'B t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 'C) 'C 1) 1 ) 'C 1)
(CDR (PROD 2 (CDR (PROD 2 'C) 'C 2) 2 ) 'C 2)
(CDR (PROD nil (CDR (PROD nil 'C) 'C nil) nil ) 'C nil)
(CDR (PROD t (CDR (PROD t 'C) 'C t) t ) 'C t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 '1) '1 1) 1 ) '1 1)
(CDR (PROD 2 (CDR (PROD 2 '1) '1 2) 2 ) '1 2)
(CDR (PROD nil (CDR (PROD nil '1) '1 nil) nil ) '1 nil)
(CDR (PROD t (CDR (PROD t '1) '1 t) t ) '1 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 '2) '2 1) 1 ) '2 1)
(CDR (PROD 2 (CDR (PROD 2 '2) '2 2) 2 ) '2 2)
(CDR (PROD nil (CDR (PROD nil '2) '2 nil) nil ) '2 nil)
(CDR (PROD t (CDR (PROD t '2) '2 t) t ) '2 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 '3) '3 1) 1 ) '3 1)
(CDR (PROD 2 (CDR (PROD 2 '3) '3 2) 2 ) '3 2)
(CDR (PROD nil (CDR (PROD nil '3) '3 nil) nil ) '3 nil)
(CDR (PROD t (CDR (PROD t '3) '3 t) t ) '3 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 '()) '() 1) 1 ) '() 1)
(CDR (PROD 2 (CDR (PROD 2 '()) '() 2) 2 ) '() 2)
(CDR (PROD nil (CDR (PROD nil '()) '() nil) nil ) '() nil)
(CDR (PROD t (CDR (PROD t '()) '() t) t ) '() t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(CDR (PROD 2 (CDR (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(CDR (PROD nil (CDR (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(CDR (PROD t (CDR (PROD t '(())) '(()) t) t ) '(()) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CDR (PROD 2 (CDR (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CDR (PROD nil (CDR (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(CDR (PROD t (CDR (PROD t '((()))) '((())) t) t ) '((())) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CDR (PROD 2 (CDR (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CDR (PROD nil (CDR (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CDR (PROD t (CDR (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(CDR (PROD 2 (CDR (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(CDR (PROD nil (CDR (PROD nil ,A) ,A nil) nil ) ,A nil)
(CDR (PROD t (CDR (PROD t ,A) ,A t) t ) ,A t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(CDR (PROD 2 (CDR (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(CDR (PROD nil (CDR (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(CDR (PROD t (CDR (PROD t ,1) ,1 t) t ) ,1 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(CDR (PROD 2 (CDR (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(CDR (PROD nil (CDR (PROD nil ,()) ,() nil) nil ) ,() nil)
(CDR (PROD t (CDR (PROD t ,()) ,() t) t ) ,() t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CDR (PROD 2 (CDR (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CDR (PROD nil (CDR (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CDR (PROD t (CDR (PROD t ,(())) ,(()) t) t ) ,(()) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(CDR (PROD 2 (CDR (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(CDR (PROD nil (CDR (PROD nil `'A) `'A nil) nil ) `'A nil)
(CDR (PROD t (CDR (PROD t `'A) `'A t) t ) `'A t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(CDR (PROD 2 (CDR (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(CDR (PROD nil (CDR (PROD nil `'B) `'B nil) nil ) `'B nil)
(CDR (PROD t (CDR (PROD t `'B) `'B t) t ) `'B t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(CDR (PROD 2 (CDR (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(CDR (PROD nil (CDR (PROD nil `'C) `'C nil) nil ) `'C nil)
(CDR (PROD t (CDR (PROD t `'C) `'C t) t ) `'C t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(CDR (PROD 2 (CDR (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(CDR (PROD nil (CDR (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(CDR (PROD t (CDR (PROD t `'1) `'1 t) t ) `'1 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(CDR (PROD 2 (CDR (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(CDR (PROD nil (CDR (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(CDR (PROD t (CDR (PROD t `'2) `'2 t) t ) `'2 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(CDR (PROD 2 (CDR (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(CDR (PROD nil (CDR (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(CDR (PROD t (CDR (PROD t `'3) `'3 t) t ) `'3 t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(CDR (PROD 2 (CDR (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(CDR (PROD nil (CDR (PROD nil `'()) `'() nil) nil ) `'() nil)
(CDR (PROD t (CDR (PROD t `'()) `'() t) t ) `'() t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CDR (PROD 2 (CDR (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CDR (PROD nil (CDR (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CDR (PROD t (CDR (PROD t `'(())) `'(()) t) t ) `'(()) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CDR (PROD 2 (CDR (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CDR (PROD nil (CDR (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CDR (PROD t (CDR (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CDR (PROD 1 (CDR (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CDR (PROD 2 (CDR (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CDR (PROD nil (CDR (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CDR (PROD t (CDR (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CDR (PROD (cons t t) (CDR (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CDR (PROD (cons nil t) (CDR (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CDR (PROD (cons nil nil) (CDR (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CDR (PROD (cons 0 0) (CDR (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CDR (PROD (cons 1 1) (CDR (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CDR (PROD (list 1 2 3) (CDR (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CDR (PROD (list (cons 1 1 ) ) (CDR (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 T) T 1) 1 ) T 1)
(COMMA (PROD 2 (COMMA (PROD 2 T) T 2) 2 ) T 2)
(COMMA (PROD nil (COMMA (PROD nil T) T nil) nil ) T nil)
(COMMA (PROD t (COMMA (PROD t T) T t) t ) T t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(COMMA (PROD 2 (COMMA (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(COMMA (PROD nil (COMMA (PROD nil NIL) NIL nil) nil ) NIL nil)
(COMMA (PROD t (COMMA (PROD t NIL) NIL t) t ) NIL t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 A) A 1) 1 ) A 1)
(COMMA (PROD 2 (COMMA (PROD 2 A) A 2) 2 ) A 2)
(COMMA (PROD nil (COMMA (PROD nil A) A nil) nil ) A nil)
(COMMA (PROD t (COMMA (PROD t A) A t) t ) A t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 B) B 1) 1 ) B 1)
(COMMA (PROD 2 (COMMA (PROD 2 B) B 2) 2 ) B 2)
(COMMA (PROD nil (COMMA (PROD nil B) B nil) nil ) B nil)
(COMMA (PROD t (COMMA (PROD t B) B t) t ) B t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 C) C 1) 1 ) C 1)
(COMMA (PROD 2 (COMMA (PROD 2 C) C 2) 2 ) C 2)
(COMMA (PROD nil (COMMA (PROD nil C) C nil) nil ) C nil)
(COMMA (PROD t (COMMA (PROD t C) C t) t ) C t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 1) 1 1) 1 ) 1 1)
(COMMA (PROD 2 (COMMA (PROD 2 1) 1 2) 2 ) 1 2)
(COMMA (PROD nil (COMMA (PROD nil 1) 1 nil) nil ) 1 nil)
(COMMA (PROD t (COMMA (PROD t 1) 1 t) t ) 1 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 2) 2 1) 1 ) 2 1)
(COMMA (PROD 2 (COMMA (PROD 2 2) 2 2) 2 ) 2 2)
(COMMA (PROD nil (COMMA (PROD nil 2) 2 nil) nil ) 2 nil)
(COMMA (PROD t (COMMA (PROD t 2) 2 t) t ) 2 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 3) 3 1) 1 ) 3 1)
(COMMA (PROD 2 (COMMA (PROD 2 3) 3 2) 2 ) 3 2)
(COMMA (PROD nil (COMMA (PROD nil 3) 3 nil) nil ) 3 nil)
(COMMA (PROD t (COMMA (PROD t 3) 3 t) t ) 3 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 ()) () 1) 1 ) () 1)
(COMMA (PROD 2 (COMMA (PROD 2 ()) () 2) 2 ) () 2)
(COMMA (PROD nil (COMMA (PROD nil ()) () nil) nil ) () nil)
(COMMA (PROD t (COMMA (PROD t ()) () t) t ) () t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 (())) (()) 1) 1 ) (()) 1)
(COMMA (PROD 2 (COMMA (PROD 2 (())) (()) 2) 2 ) (()) 2)
(COMMA (PROD nil (COMMA (PROD nil (())) (()) nil) nil ) (()) nil)
(COMMA (PROD t (COMMA (PROD t (())) (()) t) t ) (()) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COMMA (PROD 2 (COMMA (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COMMA (PROD nil (COMMA (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(COMMA (PROD t (COMMA (PROD t ((()))) ((())) t) t ) ((())) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COMMA (PROD 2 (COMMA (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COMMA (PROD nil (COMMA (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COMMA (PROD t (COMMA (PROD t (((())))) (((()))) t) t ) (((()))) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 'A) 'A 1) 1 ) 'A 1)
(COMMA (PROD 2 (COMMA (PROD 2 'A) 'A 2) 2 ) 'A 2)
(COMMA (PROD nil (COMMA (PROD nil 'A) 'A nil) nil ) 'A nil)
(COMMA (PROD t (COMMA (PROD t 'A) 'A t) t ) 'A t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 'B) 'B 1) 1 ) 'B 1)
(COMMA (PROD 2 (COMMA (PROD 2 'B) 'B 2) 2 ) 'B 2)
(COMMA (PROD nil (COMMA (PROD nil 'B) 'B nil) nil ) 'B nil)
(COMMA (PROD t (COMMA (PROD t 'B) 'B t) t ) 'B t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 'C) 'C 1) 1 ) 'C 1)
(COMMA (PROD 2 (COMMA (PROD 2 'C) 'C 2) 2 ) 'C 2)
(COMMA (PROD nil (COMMA (PROD nil 'C) 'C nil) nil ) 'C nil)
(COMMA (PROD t (COMMA (PROD t 'C) 'C t) t ) 'C t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 '1) '1 1) 1 ) '1 1)
(COMMA (PROD 2 (COMMA (PROD 2 '1) '1 2) 2 ) '1 2)
(COMMA (PROD nil (COMMA (PROD nil '1) '1 nil) nil ) '1 nil)
(COMMA (PROD t (COMMA (PROD t '1) '1 t) t ) '1 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 '2) '2 1) 1 ) '2 1)
(COMMA (PROD 2 (COMMA (PROD 2 '2) '2 2) 2 ) '2 2)
(COMMA (PROD nil (COMMA (PROD nil '2) '2 nil) nil ) '2 nil)
(COMMA (PROD t (COMMA (PROD t '2) '2 t) t ) '2 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 '3) '3 1) 1 ) '3 1)
(COMMA (PROD 2 (COMMA (PROD 2 '3) '3 2) 2 ) '3 2)
(COMMA (PROD nil (COMMA (PROD nil '3) '3 nil) nil ) '3 nil)
(COMMA (PROD t (COMMA (PROD t '3) '3 t) t ) '3 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 '()) '() 1) 1 ) '() 1)
(COMMA (PROD 2 (COMMA (PROD 2 '()) '() 2) 2 ) '() 2)
(COMMA (PROD nil (COMMA (PROD nil '()) '() nil) nil ) '() nil)
(COMMA (PROD t (COMMA (PROD t '()) '() t) t ) '() t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(COMMA (PROD 2 (COMMA (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(COMMA (PROD nil (COMMA (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(COMMA (PROD t (COMMA (PROD t '(())) '(()) t) t ) '(()) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COMMA (PROD 2 (COMMA (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COMMA (PROD nil (COMMA (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(COMMA (PROD t (COMMA (PROD t '((()))) '((())) t) t ) '((())) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COMMA (PROD 2 (COMMA (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COMMA (PROD nil (COMMA (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COMMA (PROD t (COMMA (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(COMMA (PROD 2 (COMMA (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(COMMA (PROD nil (COMMA (PROD nil ,A) ,A nil) nil ) ,A nil)
(COMMA (PROD t (COMMA (PROD t ,A) ,A t) t ) ,A t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(COMMA (PROD 2 (COMMA (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(COMMA (PROD nil (COMMA (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(COMMA (PROD t (COMMA (PROD t ,1) ,1 t) t ) ,1 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(COMMA (PROD 2 (COMMA (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(COMMA (PROD nil (COMMA (PROD nil ,()) ,() nil) nil ) ,() nil)
(COMMA (PROD t (COMMA (PROD t ,()) ,() t) t ) ,() t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COMMA (PROD 2 (COMMA (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COMMA (PROD nil (COMMA (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COMMA (PROD t (COMMA (PROD t ,(())) ,(()) t) t ) ,(()) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(COMMA (PROD nil (COMMA (PROD nil `'A) `'A nil) nil ) `'A nil)
(COMMA (PROD t (COMMA (PROD t `'A) `'A t) t ) `'A t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(COMMA (PROD nil (COMMA (PROD nil `'B) `'B nil) nil ) `'B nil)
(COMMA (PROD t (COMMA (PROD t `'B) `'B t) t ) `'B t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(COMMA (PROD nil (COMMA (PROD nil `'C) `'C nil) nil ) `'C nil)
(COMMA (PROD t (COMMA (PROD t `'C) `'C t) t ) `'C t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(COMMA (PROD nil (COMMA (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(COMMA (PROD t (COMMA (PROD t `'1) `'1 t) t ) `'1 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(COMMA (PROD nil (COMMA (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(COMMA (PROD t (COMMA (PROD t `'2) `'2 t) t ) `'2 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(COMMA (PROD nil (COMMA (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(COMMA (PROD t (COMMA (PROD t `'3) `'3 t) t ) `'3 t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(COMMA (PROD nil (COMMA (PROD nil `'()) `'() nil) nil ) `'() nil)
(COMMA (PROD t (COMMA (PROD t `'()) `'() t) t ) `'() t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COMMA (PROD nil (COMMA (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COMMA (PROD t (COMMA (PROD t `'(())) `'(()) t) t ) `'(()) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COMMA (PROD nil (COMMA (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COMMA (PROD t (COMMA (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COMMA (PROD 1 (COMMA (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COMMA (PROD 2 (COMMA (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COMMA (PROD nil (COMMA (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COMMA (PROD t (COMMA (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COMMA (PROD (cons t t) (COMMA (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COMMA (PROD (cons nil t) (COMMA (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COMMA (PROD (cons nil nil) (COMMA (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COMMA (PROD (cons 0 0) (COMMA (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COMMA (PROD (cons 1 1) (COMMA (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COMMA (PROD (list 1 2 3) (COMMA (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COMMA (PROD (list (cons 1 1 ) ) (COMMA (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 T) T 1) 1 ) T 1)
(COND (PROD 2 (COND (PROD 2 T) T 2) 2 ) T 2)
(COND (PROD nil (COND (PROD nil T) T nil) nil ) T nil)
(COND (PROD t (COND (PROD t T) T t) t ) T t)
(COND (PROD (cons t t) (COND (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(COND (PROD 2 (COND (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(COND (PROD nil (COND (PROD nil NIL) NIL nil) nil ) NIL nil)
(COND (PROD t (COND (PROD t NIL) NIL t) t ) NIL t)
(COND (PROD (cons t t) (COND (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 A) A 1) 1 ) A 1)
(COND (PROD 2 (COND (PROD 2 A) A 2) 2 ) A 2)
(COND (PROD nil (COND (PROD nil A) A nil) nil ) A nil)
(COND (PROD t (COND (PROD t A) A t) t ) A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 B) B 1) 1 ) B 1)
(COND (PROD 2 (COND (PROD 2 B) B 2) 2 ) B 2)
(COND (PROD nil (COND (PROD nil B) B nil) nil ) B nil)
(COND (PROD t (COND (PROD t B) B t) t ) B t)
(COND (PROD (cons t t) (COND (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 C) C 1) 1 ) C 1)
(COND (PROD 2 (COND (PROD 2 C) C 2) 2 ) C 2)
(COND (PROD nil (COND (PROD nil C) C nil) nil ) C nil)
(COND (PROD t (COND (PROD t C) C t) t ) C t)
(COND (PROD (cons t t) (COND (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 1) 1 1) 1 ) 1 1)
(COND (PROD 2 (COND (PROD 2 1) 1 2) 2 ) 1 2)
(COND (PROD nil (COND (PROD nil 1) 1 nil) nil ) 1 nil)
(COND (PROD t (COND (PROD t 1) 1 t) t ) 1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 2) 2 1) 1 ) 2 1)
(COND (PROD 2 (COND (PROD 2 2) 2 2) 2 ) 2 2)
(COND (PROD nil (COND (PROD nil 2) 2 nil) nil ) 2 nil)
(COND (PROD t (COND (PROD t 2) 2 t) t ) 2 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 3) 3 1) 1 ) 3 1)
(COND (PROD 2 (COND (PROD 2 3) 3 2) 2 ) 3 2)
(COND (PROD nil (COND (PROD nil 3) 3 nil) nil ) 3 nil)
(COND (PROD t (COND (PROD t 3) 3 t) t ) 3 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ()) () 1) 1 ) () 1)
(COND (PROD 2 (COND (PROD 2 ()) () 2) 2 ) () 2)
(COND (PROD nil (COND (PROD nil ()) () nil) nil ) () nil)
(COND (PROD t (COND (PROD t ()) () t) t ) () t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 (())) (()) 1) 1 ) (()) 1)
(COND (PROD 2 (COND (PROD 2 (())) (()) 2) 2 ) (()) 2)
(COND (PROD nil (COND (PROD nil (())) (()) nil) nil ) (()) nil)
(COND (PROD t (COND (PROD t (())) (()) t) t ) (()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (PROD 2 (COND (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (PROD nil (COND (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (PROD t (COND (PROD t ((()))) ((())) t) t ) ((())) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (PROD 2 (COND (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (PROD nil (COND (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (PROD t (COND (PROD t (((())))) (((()))) t) t ) (((()))) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 'A) 'A 1) 1 ) 'A 1)
(COND (PROD 2 (COND (PROD 2 'A) 'A 2) 2 ) 'A 2)
(COND (PROD nil (COND (PROD nil 'A) 'A nil) nil ) 'A nil)
(COND (PROD t (COND (PROD t 'A) 'A t) t ) 'A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 'B) 'B 1) 1 ) 'B 1)
(COND (PROD 2 (COND (PROD 2 'B) 'B 2) 2 ) 'B 2)
(COND (PROD nil (COND (PROD nil 'B) 'B nil) nil ) 'B nil)
(COND (PROD t (COND (PROD t 'B) 'B t) t ) 'B t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 'C) 'C 1) 1 ) 'C 1)
(COND (PROD 2 (COND (PROD 2 'C) 'C 2) 2 ) 'C 2)
(COND (PROD nil (COND (PROD nil 'C) 'C nil) nil ) 'C nil)
(COND (PROD t (COND (PROD t 'C) 'C t) t ) 'C t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '1) '1 1) 1 ) '1 1)
(COND (PROD 2 (COND (PROD 2 '1) '1 2) 2 ) '1 2)
(COND (PROD nil (COND (PROD nil '1) '1 nil) nil ) '1 nil)
(COND (PROD t (COND (PROD t '1) '1 t) t ) '1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '2) '2 1) 1 ) '2 1)
(COND (PROD 2 (COND (PROD 2 '2) '2 2) 2 ) '2 2)
(COND (PROD nil (COND (PROD nil '2) '2 nil) nil ) '2 nil)
(COND (PROD t (COND (PROD t '2) '2 t) t ) '2 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '3) '3 1) 1 ) '3 1)
(COND (PROD 2 (COND (PROD 2 '3) '3 2) 2 ) '3 2)
(COND (PROD nil (COND (PROD nil '3) '3 nil) nil ) '3 nil)
(COND (PROD t (COND (PROD t '3) '3 t) t ) '3 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '()) '() 1) 1 ) '() 1)
(COND (PROD 2 (COND (PROD 2 '()) '() 2) 2 ) '() 2)
(COND (PROD nil (COND (PROD nil '()) '() nil) nil ) '() nil)
(COND (PROD t (COND (PROD t '()) '() t) t ) '() t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (PROD 2 (COND (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (PROD nil (COND (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(COND (PROD t (COND (PROD t '(())) '(()) t) t ) '(()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (PROD 2 (COND (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (PROD nil (COND (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (PROD t (COND (PROD t '((()))) '((())) t) t ) '((())) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (PROD 2 (COND (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (PROD nil (COND (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (PROD t (COND (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(COND (PROD 2 (COND (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(COND (PROD nil (COND (PROD nil ,A) ,A nil) nil ) ,A nil)
(COND (PROD t (COND (PROD t ,A) ,A t) t ) ,A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(COND (PROD 2 (COND (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(COND (PROD nil (COND (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(COND (PROD t (COND (PROD t ,1) ,1 t) t ) ,1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(COND (PROD 2 (COND (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(COND (PROD nil (COND (PROD nil ,()) ,() nil) nil ) ,() nil)
(COND (PROD t (COND (PROD t ,()) ,() t) t ) ,() t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (PROD 2 (COND (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (PROD nil (COND (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (PROD t (COND (PROD t ,(())) ,(()) t) t ) ,(()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(COND (PROD 2 (COND (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(COND (PROD nil (COND (PROD nil `'A) `'A nil) nil ) `'A nil)
(COND (PROD t (COND (PROD t `'A) `'A t) t ) `'A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(COND (PROD 2 (COND (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(COND (PROD nil (COND (PROD nil `'B) `'B nil) nil ) `'B nil)
(COND (PROD t (COND (PROD t `'B) `'B t) t ) `'B t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(COND (PROD 2 (COND (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(COND (PROD nil (COND (PROD nil `'C) `'C nil) nil ) `'C nil)
(COND (PROD t (COND (PROD t `'C) `'C t) t ) `'C t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(COND (PROD 2 (COND (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(COND (PROD nil (COND (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(COND (PROD t (COND (PROD t `'1) `'1 t) t ) `'1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(COND (PROD 2 (COND (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(COND (PROD nil (COND (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(COND (PROD t (COND (PROD t `'2) `'2 t) t ) `'2 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(COND (PROD 2 (COND (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(COND (PROD nil (COND (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(COND (PROD t (COND (PROD t `'3) `'3 t) t ) `'3 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(COND (PROD 2 (COND (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(COND (PROD nil (COND (PROD nil `'()) `'() nil) nil ) `'() nil)
(COND (PROD t (COND (PROD t `'()) `'() t) t ) `'() t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (PROD 2 (COND (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (PROD nil (COND (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (PROD t (COND (PROD t `'(())) `'(()) t) t ) `'(()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (PROD 2 (COND (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (PROD nil (COND (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (PROD t (COND (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (PROD 2 (COND (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (PROD nil (COND (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (PROD t (COND (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 T) T 1) 1 ) T 1)
(CONS (PROD 2 (CONS (PROD 2 T) T 2) 2 ) T 2)
(CONS (PROD nil (CONS (PROD nil T) T nil) nil ) T nil)
(CONS (PROD t (CONS (PROD t T) T t) t ) T t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(CONS (PROD 2 (CONS (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(CONS (PROD nil (CONS (PROD nil NIL) NIL nil) nil ) NIL nil)
(CONS (PROD t (CONS (PROD t NIL) NIL t) t ) NIL t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 A) A 1) 1 ) A 1)
(CONS (PROD 2 (CONS (PROD 2 A) A 2) 2 ) A 2)
(CONS (PROD nil (CONS (PROD nil A) A nil) nil ) A nil)
(CONS (PROD t (CONS (PROD t A) A t) t ) A t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 B) B 1) 1 ) B 1)
(CONS (PROD 2 (CONS (PROD 2 B) B 2) 2 ) B 2)
(CONS (PROD nil (CONS (PROD nil B) B nil) nil ) B nil)
(CONS (PROD t (CONS (PROD t B) B t) t ) B t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 C) C 1) 1 ) C 1)
(CONS (PROD 2 (CONS (PROD 2 C) C 2) 2 ) C 2)
(CONS (PROD nil (CONS (PROD nil C) C nil) nil ) C nil)
(CONS (PROD t (CONS (PROD t C) C t) t ) C t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 1) 1 1) 1 ) 1 1)
(CONS (PROD 2 (CONS (PROD 2 1) 1 2) 2 ) 1 2)
(CONS (PROD nil (CONS (PROD nil 1) 1 nil) nil ) 1 nil)
(CONS (PROD t (CONS (PROD t 1) 1 t) t ) 1 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 2) 2 1) 1 ) 2 1)
(CONS (PROD 2 (CONS (PROD 2 2) 2 2) 2 ) 2 2)
(CONS (PROD nil (CONS (PROD nil 2) 2 nil) nil ) 2 nil)
(CONS (PROD t (CONS (PROD t 2) 2 t) t ) 2 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 3) 3 1) 1 ) 3 1)
(CONS (PROD 2 (CONS (PROD 2 3) 3 2) 2 ) 3 2)
(CONS (PROD nil (CONS (PROD nil 3) 3 nil) nil ) 3 nil)
(CONS (PROD t (CONS (PROD t 3) 3 t) t ) 3 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 ()) () 1) 1 ) () 1)
(CONS (PROD 2 (CONS (PROD 2 ()) () 2) 2 ) () 2)
(CONS (PROD nil (CONS (PROD nil ()) () nil) nil ) () nil)
(CONS (PROD t (CONS (PROD t ()) () t) t ) () t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 (())) (()) 1) 1 ) (()) 1)
(CONS (PROD 2 (CONS (PROD 2 (())) (()) 2) 2 ) (()) 2)
(CONS (PROD nil (CONS (PROD nil (())) (()) nil) nil ) (()) nil)
(CONS (PROD t (CONS (PROD t (())) (()) t) t ) (()) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CONS (PROD 2 (CONS (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CONS (PROD nil (CONS (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(CONS (PROD t (CONS (PROD t ((()))) ((())) t) t ) ((())) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CONS (PROD 2 (CONS (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CONS (PROD nil (CONS (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CONS (PROD t (CONS (PROD t (((())))) (((()))) t) t ) (((()))) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 'A) 'A 1) 1 ) 'A 1)
(CONS (PROD 2 (CONS (PROD 2 'A) 'A 2) 2 ) 'A 2)
(CONS (PROD nil (CONS (PROD nil 'A) 'A nil) nil ) 'A nil)
(CONS (PROD t (CONS (PROD t 'A) 'A t) t ) 'A t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 'B) 'B 1) 1 ) 'B 1)
(CONS (PROD 2 (CONS (PROD 2 'B) 'B 2) 2 ) 'B 2)
(CONS (PROD nil (CONS (PROD nil 'B) 'B nil) nil ) 'B nil)
(CONS (PROD t (CONS (PROD t 'B) 'B t) t ) 'B t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 'C) 'C 1) 1 ) 'C 1)
(CONS (PROD 2 (CONS (PROD 2 'C) 'C 2) 2 ) 'C 2)
(CONS (PROD nil (CONS (PROD nil 'C) 'C nil) nil ) 'C nil)
(CONS (PROD t (CONS (PROD t 'C) 'C t) t ) 'C t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 '1) '1 1) 1 ) '1 1)
(CONS (PROD 2 (CONS (PROD 2 '1) '1 2) 2 ) '1 2)
(CONS (PROD nil (CONS (PROD nil '1) '1 nil) nil ) '1 nil)
(CONS (PROD t (CONS (PROD t '1) '1 t) t ) '1 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 '2) '2 1) 1 ) '2 1)
(CONS (PROD 2 (CONS (PROD 2 '2) '2 2) 2 ) '2 2)
(CONS (PROD nil (CONS (PROD nil '2) '2 nil) nil ) '2 nil)
(CONS (PROD t (CONS (PROD t '2) '2 t) t ) '2 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 '3) '3 1) 1 ) '3 1)
(CONS (PROD 2 (CONS (PROD 2 '3) '3 2) 2 ) '3 2)
(CONS (PROD nil (CONS (PROD nil '3) '3 nil) nil ) '3 nil)
(CONS (PROD t (CONS (PROD t '3) '3 t) t ) '3 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 '()) '() 1) 1 ) '() 1)
(CONS (PROD 2 (CONS (PROD 2 '()) '() 2) 2 ) '() 2)
(CONS (PROD nil (CONS (PROD nil '()) '() nil) nil ) '() nil)
(CONS (PROD t (CONS (PROD t '()) '() t) t ) '() t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(CONS (PROD 2 (CONS (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(CONS (PROD nil (CONS (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(CONS (PROD t (CONS (PROD t '(())) '(()) t) t ) '(()) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CONS (PROD 2 (CONS (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CONS (PROD nil (CONS (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(CONS (PROD t (CONS (PROD t '((()))) '((())) t) t ) '((())) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CONS (PROD 2 (CONS (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CONS (PROD nil (CONS (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CONS (PROD t (CONS (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(CONS (PROD 2 (CONS (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(CONS (PROD nil (CONS (PROD nil ,A) ,A nil) nil ) ,A nil)
(CONS (PROD t (CONS (PROD t ,A) ,A t) t ) ,A t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(CONS (PROD 2 (CONS (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(CONS (PROD nil (CONS (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(CONS (PROD t (CONS (PROD t ,1) ,1 t) t ) ,1 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(CONS (PROD 2 (CONS (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(CONS (PROD nil (CONS (PROD nil ,()) ,() nil) nil ) ,() nil)
(CONS (PROD t (CONS (PROD t ,()) ,() t) t ) ,() t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CONS (PROD 2 (CONS (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CONS (PROD nil (CONS (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CONS (PROD t (CONS (PROD t ,(())) ,(()) t) t ) ,(()) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(CONS (PROD 2 (CONS (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(CONS (PROD nil (CONS (PROD nil `'A) `'A nil) nil ) `'A nil)
(CONS (PROD t (CONS (PROD t `'A) `'A t) t ) `'A t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(CONS (PROD 2 (CONS (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(CONS (PROD nil (CONS (PROD nil `'B) `'B nil) nil ) `'B nil)
(CONS (PROD t (CONS (PROD t `'B) `'B t) t ) `'B t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(CONS (PROD 2 (CONS (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(CONS (PROD nil (CONS (PROD nil `'C) `'C nil) nil ) `'C nil)
(CONS (PROD t (CONS (PROD t `'C) `'C t) t ) `'C t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(CONS (PROD 2 (CONS (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(CONS (PROD nil (CONS (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(CONS (PROD t (CONS (PROD t `'1) `'1 t) t ) `'1 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(CONS (PROD 2 (CONS (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(CONS (PROD nil (CONS (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(CONS (PROD t (CONS (PROD t `'2) `'2 t) t ) `'2 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(CONS (PROD 2 (CONS (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(CONS (PROD nil (CONS (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(CONS (PROD t (CONS (PROD t `'3) `'3 t) t ) `'3 t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(CONS (PROD 2 (CONS (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(CONS (PROD nil (CONS (PROD nil `'()) `'() nil) nil ) `'() nil)
(CONS (PROD t (CONS (PROD t `'()) `'() t) t ) `'() t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CONS (PROD 2 (CONS (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CONS (PROD nil (CONS (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CONS (PROD t (CONS (PROD t `'(())) `'(()) t) t ) `'(()) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CONS (PROD 2 (CONS (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CONS (PROD nil (CONS (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CONS (PROD t (CONS (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CONS (PROD 1 (CONS (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CONS (PROD 2 (CONS (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CONS (PROD nil (CONS (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CONS (PROD t (CONS (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CONS (PROD (cons t t) (CONS (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CONS (PROD (cons nil t) (CONS (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CONS (PROD (cons nil nil) (CONS (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CONS (PROD (cons 0 0) (CONS (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CONS (PROD (cons 1 1) (CONS (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CONS (PROD (list 1 2 3) (CONS (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CONS (PROD (list (cons 1 1 ) ) (CONS (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 T) T 1) 1 ) T 1)
(CONSP (PROD 2 (CONSP (PROD 2 T) T 2) 2 ) T 2)
(CONSP (PROD nil (CONSP (PROD nil T) T nil) nil ) T nil)
(CONSP (PROD t (CONSP (PROD t T) T t) t ) T t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(CONSP (PROD 2 (CONSP (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(CONSP (PROD nil (CONSP (PROD nil NIL) NIL nil) nil ) NIL nil)
(CONSP (PROD t (CONSP (PROD t NIL) NIL t) t ) NIL t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 A) A 1) 1 ) A 1)
(CONSP (PROD 2 (CONSP (PROD 2 A) A 2) 2 ) A 2)
(CONSP (PROD nil (CONSP (PROD nil A) A nil) nil ) A nil)
(CONSP (PROD t (CONSP (PROD t A) A t) t ) A t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 B) B 1) 1 ) B 1)
(CONSP (PROD 2 (CONSP (PROD 2 B) B 2) 2 ) B 2)
(CONSP (PROD nil (CONSP (PROD nil B) B nil) nil ) B nil)
(CONSP (PROD t (CONSP (PROD t B) B t) t ) B t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 C) C 1) 1 ) C 1)
(CONSP (PROD 2 (CONSP (PROD 2 C) C 2) 2 ) C 2)
(CONSP (PROD nil (CONSP (PROD nil C) C nil) nil ) C nil)
(CONSP (PROD t (CONSP (PROD t C) C t) t ) C t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 1) 1 1) 1 ) 1 1)
(CONSP (PROD 2 (CONSP (PROD 2 1) 1 2) 2 ) 1 2)
(CONSP (PROD nil (CONSP (PROD nil 1) 1 nil) nil ) 1 nil)
(CONSP (PROD t (CONSP (PROD t 1) 1 t) t ) 1 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 2) 2 1) 1 ) 2 1)
(CONSP (PROD 2 (CONSP (PROD 2 2) 2 2) 2 ) 2 2)
(CONSP (PROD nil (CONSP (PROD nil 2) 2 nil) nil ) 2 nil)
(CONSP (PROD t (CONSP (PROD t 2) 2 t) t ) 2 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 3) 3 1) 1 ) 3 1)
(CONSP (PROD 2 (CONSP (PROD 2 3) 3 2) 2 ) 3 2)
(CONSP (PROD nil (CONSP (PROD nil 3) 3 nil) nil ) 3 nil)
(CONSP (PROD t (CONSP (PROD t 3) 3 t) t ) 3 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 ()) () 1) 1 ) () 1)
(CONSP (PROD 2 (CONSP (PROD 2 ()) () 2) 2 ) () 2)
(CONSP (PROD nil (CONSP (PROD nil ()) () nil) nil ) () nil)
(CONSP (PROD t (CONSP (PROD t ()) () t) t ) () t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 (())) (()) 1) 1 ) (()) 1)
(CONSP (PROD 2 (CONSP (PROD 2 (())) (()) 2) 2 ) (()) 2)
(CONSP (PROD nil (CONSP (PROD nil (())) (()) nil) nil ) (()) nil)
(CONSP (PROD t (CONSP (PROD t (())) (()) t) t ) (()) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CONSP (PROD 2 (CONSP (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CONSP (PROD nil (CONSP (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(CONSP (PROD t (CONSP (PROD t ((()))) ((())) t) t ) ((())) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CONSP (PROD 2 (CONSP (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CONSP (PROD nil (CONSP (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CONSP (PROD t (CONSP (PROD t (((())))) (((()))) t) t ) (((()))) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 'A) 'A 1) 1 ) 'A 1)
(CONSP (PROD 2 (CONSP (PROD 2 'A) 'A 2) 2 ) 'A 2)
(CONSP (PROD nil (CONSP (PROD nil 'A) 'A nil) nil ) 'A nil)
(CONSP (PROD t (CONSP (PROD t 'A) 'A t) t ) 'A t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 'B) 'B 1) 1 ) 'B 1)
(CONSP (PROD 2 (CONSP (PROD 2 'B) 'B 2) 2 ) 'B 2)
(CONSP (PROD nil (CONSP (PROD nil 'B) 'B nil) nil ) 'B nil)
(CONSP (PROD t (CONSP (PROD t 'B) 'B t) t ) 'B t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 'C) 'C 1) 1 ) 'C 1)
(CONSP (PROD 2 (CONSP (PROD 2 'C) 'C 2) 2 ) 'C 2)
(CONSP (PROD nil (CONSP (PROD nil 'C) 'C nil) nil ) 'C nil)
(CONSP (PROD t (CONSP (PROD t 'C) 'C t) t ) 'C t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 '1) '1 1) 1 ) '1 1)
(CONSP (PROD 2 (CONSP (PROD 2 '1) '1 2) 2 ) '1 2)
(CONSP (PROD nil (CONSP (PROD nil '1) '1 nil) nil ) '1 nil)
(CONSP (PROD t (CONSP (PROD t '1) '1 t) t ) '1 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 '2) '2 1) 1 ) '2 1)
(CONSP (PROD 2 (CONSP (PROD 2 '2) '2 2) 2 ) '2 2)
(CONSP (PROD nil (CONSP (PROD nil '2) '2 nil) nil ) '2 nil)
(CONSP (PROD t (CONSP (PROD t '2) '2 t) t ) '2 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 '3) '3 1) 1 ) '3 1)
(CONSP (PROD 2 (CONSP (PROD 2 '3) '3 2) 2 ) '3 2)
(CONSP (PROD nil (CONSP (PROD nil '3) '3 nil) nil ) '3 nil)
(CONSP (PROD t (CONSP (PROD t '3) '3 t) t ) '3 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 '()) '() 1) 1 ) '() 1)
(CONSP (PROD 2 (CONSP (PROD 2 '()) '() 2) 2 ) '() 2)
(CONSP (PROD nil (CONSP (PROD nil '()) '() nil) nil ) '() nil)
(CONSP (PROD t (CONSP (PROD t '()) '() t) t ) '() t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(CONSP (PROD 2 (CONSP (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(CONSP (PROD nil (CONSP (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(CONSP (PROD t (CONSP (PROD t '(())) '(()) t) t ) '(()) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CONSP (PROD 2 (CONSP (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CONSP (PROD nil (CONSP (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(CONSP (PROD t (CONSP (PROD t '((()))) '((())) t) t ) '((())) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CONSP (PROD 2 (CONSP (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CONSP (PROD nil (CONSP (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CONSP (PROD t (CONSP (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(CONSP (PROD 2 (CONSP (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(CONSP (PROD nil (CONSP (PROD nil ,A) ,A nil) nil ) ,A nil)
(CONSP (PROD t (CONSP (PROD t ,A) ,A t) t ) ,A t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(CONSP (PROD 2 (CONSP (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(CONSP (PROD nil (CONSP (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(CONSP (PROD t (CONSP (PROD t ,1) ,1 t) t ) ,1 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(CONSP (PROD 2 (CONSP (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(CONSP (PROD nil (CONSP (PROD nil ,()) ,() nil) nil ) ,() nil)
(CONSP (PROD t (CONSP (PROD t ,()) ,() t) t ) ,() t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CONSP (PROD 2 (CONSP (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CONSP (PROD nil (CONSP (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CONSP (PROD t (CONSP (PROD t ,(())) ,(()) t) t ) ,(()) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(CONSP (PROD nil (CONSP (PROD nil `'A) `'A nil) nil ) `'A nil)
(CONSP (PROD t (CONSP (PROD t `'A) `'A t) t ) `'A t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(CONSP (PROD nil (CONSP (PROD nil `'B) `'B nil) nil ) `'B nil)
(CONSP (PROD t (CONSP (PROD t `'B) `'B t) t ) `'B t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(CONSP (PROD nil (CONSP (PROD nil `'C) `'C nil) nil ) `'C nil)
(CONSP (PROD t (CONSP (PROD t `'C) `'C t) t ) `'C t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(CONSP (PROD nil (CONSP (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(CONSP (PROD t (CONSP (PROD t `'1) `'1 t) t ) `'1 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(CONSP (PROD nil (CONSP (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(CONSP (PROD t (CONSP (PROD t `'2) `'2 t) t ) `'2 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(CONSP (PROD nil (CONSP (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(CONSP (PROD t (CONSP (PROD t `'3) `'3 t) t ) `'3 t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(CONSP (PROD nil (CONSP (PROD nil `'()) `'() nil) nil ) `'() nil)
(CONSP (PROD t (CONSP (PROD t `'()) `'() t) t ) `'() t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CONSP (PROD nil (CONSP (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CONSP (PROD t (CONSP (PROD t `'(())) `'(()) t) t ) `'(()) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CONSP (PROD nil (CONSP (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CONSP (PROD t (CONSP (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CONSP (PROD 1 (CONSP (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CONSP (PROD 2 (CONSP (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CONSP (PROD nil (CONSP (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CONSP (PROD t (CONSP (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CONSP (PROD (cons t t) (CONSP (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CONSP (PROD (cons nil t) (CONSP (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CONSP (PROD (cons nil nil) (CONSP (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CONSP (PROD (cons 0 0) (CONSP (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CONSP (PROD (cons 1 1) (CONSP (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CONSP (PROD (list 1 2 3) (CONSP (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CONSP (PROD (list (cons 1 1 ) ) (CONSP (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 T) T 1) 1 ) T 1)
(EQ (PROD 2 (EQ (PROD 2 T) T 2) 2 ) T 2)
(EQ (PROD nil (EQ (PROD nil T) T nil) nil ) T nil)
(EQ (PROD t (EQ (PROD t T) T t) t ) T t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(EQ (PROD 2 (EQ (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(EQ (PROD nil (EQ (PROD nil NIL) NIL nil) nil ) NIL nil)
(EQ (PROD t (EQ (PROD t NIL) NIL t) t ) NIL t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 A) A 1) 1 ) A 1)
(EQ (PROD 2 (EQ (PROD 2 A) A 2) 2 ) A 2)
(EQ (PROD nil (EQ (PROD nil A) A nil) nil ) A nil)
(EQ (PROD t (EQ (PROD t A) A t) t ) A t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 B) B 1) 1 ) B 1)
(EQ (PROD 2 (EQ (PROD 2 B) B 2) 2 ) B 2)
(EQ (PROD nil (EQ (PROD nil B) B nil) nil ) B nil)
(EQ (PROD t (EQ (PROD t B) B t) t ) B t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 C) C 1) 1 ) C 1)
(EQ (PROD 2 (EQ (PROD 2 C) C 2) 2 ) C 2)
(EQ (PROD nil (EQ (PROD nil C) C nil) nil ) C nil)
(EQ (PROD t (EQ (PROD t C) C t) t ) C t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 1) 1 1) 1 ) 1 1)
(EQ (PROD 2 (EQ (PROD 2 1) 1 2) 2 ) 1 2)
(EQ (PROD nil (EQ (PROD nil 1) 1 nil) nil ) 1 nil)
(EQ (PROD t (EQ (PROD t 1) 1 t) t ) 1 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 2) 2 1) 1 ) 2 1)
(EQ (PROD 2 (EQ (PROD 2 2) 2 2) 2 ) 2 2)
(EQ (PROD nil (EQ (PROD nil 2) 2 nil) nil ) 2 nil)
(EQ (PROD t (EQ (PROD t 2) 2 t) t ) 2 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 3) 3 1) 1 ) 3 1)
(EQ (PROD 2 (EQ (PROD 2 3) 3 2) 2 ) 3 2)
(EQ (PROD nil (EQ (PROD nil 3) 3 nil) nil ) 3 nil)
(EQ (PROD t (EQ (PROD t 3) 3 t) t ) 3 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 ()) () 1) 1 ) () 1)
(EQ (PROD 2 (EQ (PROD 2 ()) () 2) 2 ) () 2)
(EQ (PROD nil (EQ (PROD nil ()) () nil) nil ) () nil)
(EQ (PROD t (EQ (PROD t ()) () t) t ) () t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 (())) (()) 1) 1 ) (()) 1)
(EQ (PROD 2 (EQ (PROD 2 (())) (()) 2) 2 ) (()) 2)
(EQ (PROD nil (EQ (PROD nil (())) (()) nil) nil ) (()) nil)
(EQ (PROD t (EQ (PROD t (())) (()) t) t ) (()) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(EQ (PROD 2 (EQ (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(EQ (PROD nil (EQ (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(EQ (PROD t (EQ (PROD t ((()))) ((())) t) t ) ((())) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(EQ (PROD 2 (EQ (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(EQ (PROD nil (EQ (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(EQ (PROD t (EQ (PROD t (((())))) (((()))) t) t ) (((()))) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 'A) 'A 1) 1 ) 'A 1)
(EQ (PROD 2 (EQ (PROD 2 'A) 'A 2) 2 ) 'A 2)
(EQ (PROD nil (EQ (PROD nil 'A) 'A nil) nil ) 'A nil)
(EQ (PROD t (EQ (PROD t 'A) 'A t) t ) 'A t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 'B) 'B 1) 1 ) 'B 1)
(EQ (PROD 2 (EQ (PROD 2 'B) 'B 2) 2 ) 'B 2)
(EQ (PROD nil (EQ (PROD nil 'B) 'B nil) nil ) 'B nil)
(EQ (PROD t (EQ (PROD t 'B) 'B t) t ) 'B t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 'C) 'C 1) 1 ) 'C 1)
(EQ (PROD 2 (EQ (PROD 2 'C) 'C 2) 2 ) 'C 2)
(EQ (PROD nil (EQ (PROD nil 'C) 'C nil) nil ) 'C nil)
(EQ (PROD t (EQ (PROD t 'C) 'C t) t ) 'C t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 '1) '1 1) 1 ) '1 1)
(EQ (PROD 2 (EQ (PROD 2 '1) '1 2) 2 ) '1 2)
(EQ (PROD nil (EQ (PROD nil '1) '1 nil) nil ) '1 nil)
(EQ (PROD t (EQ (PROD t '1) '1 t) t ) '1 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 '2) '2 1) 1 ) '2 1)
(EQ (PROD 2 (EQ (PROD 2 '2) '2 2) 2 ) '2 2)
(EQ (PROD nil (EQ (PROD nil '2) '2 nil) nil ) '2 nil)
(EQ (PROD t (EQ (PROD t '2) '2 t) t ) '2 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 '3) '3 1) 1 ) '3 1)
(EQ (PROD 2 (EQ (PROD 2 '3) '3 2) 2 ) '3 2)
(EQ (PROD nil (EQ (PROD nil '3) '3 nil) nil ) '3 nil)
(EQ (PROD t (EQ (PROD t '3) '3 t) t ) '3 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 '()) '() 1) 1 ) '() 1)
(EQ (PROD 2 (EQ (PROD 2 '()) '() 2) 2 ) '() 2)
(EQ (PROD nil (EQ (PROD nil '()) '() nil) nil ) '() nil)
(EQ (PROD t (EQ (PROD t '()) '() t) t ) '() t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(EQ (PROD 2 (EQ (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(EQ (PROD nil (EQ (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(EQ (PROD t (EQ (PROD t '(())) '(()) t) t ) '(()) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(EQ (PROD 2 (EQ (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(EQ (PROD nil (EQ (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(EQ (PROD t (EQ (PROD t '((()))) '((())) t) t ) '((())) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(EQ (PROD 2 (EQ (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(EQ (PROD nil (EQ (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(EQ (PROD t (EQ (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(EQ (PROD 2 (EQ (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(EQ (PROD nil (EQ (PROD nil ,A) ,A nil) nil ) ,A nil)
(EQ (PROD t (EQ (PROD t ,A) ,A t) t ) ,A t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(EQ (PROD 2 (EQ (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(EQ (PROD nil (EQ (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(EQ (PROD t (EQ (PROD t ,1) ,1 t) t ) ,1 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(EQ (PROD 2 (EQ (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(EQ (PROD nil (EQ (PROD nil ,()) ,() nil) nil ) ,() nil)
(EQ (PROD t (EQ (PROD t ,()) ,() t) t ) ,() t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(EQ (PROD 2 (EQ (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(EQ (PROD nil (EQ (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(EQ (PROD t (EQ (PROD t ,(())) ,(()) t) t ) ,(()) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(EQ (PROD 2 (EQ (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(EQ (PROD nil (EQ (PROD nil `'A) `'A nil) nil ) `'A nil)
(EQ (PROD t (EQ (PROD t `'A) `'A t) t ) `'A t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(EQ (PROD 2 (EQ (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(EQ (PROD nil (EQ (PROD nil `'B) `'B nil) nil ) `'B nil)
(EQ (PROD t (EQ (PROD t `'B) `'B t) t ) `'B t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(EQ (PROD 2 (EQ (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(EQ (PROD nil (EQ (PROD nil `'C) `'C nil) nil ) `'C nil)
(EQ (PROD t (EQ (PROD t `'C) `'C t) t ) `'C t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(EQ (PROD 2 (EQ (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(EQ (PROD nil (EQ (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(EQ (PROD t (EQ (PROD t `'1) `'1 t) t ) `'1 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(EQ (PROD 2 (EQ (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(EQ (PROD nil (EQ (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(EQ (PROD t (EQ (PROD t `'2) `'2 t) t ) `'2 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(EQ (PROD 2 (EQ (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(EQ (PROD nil (EQ (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(EQ (PROD t (EQ (PROD t `'3) `'3 t) t ) `'3 t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(EQ (PROD 2 (EQ (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(EQ (PROD nil (EQ (PROD nil `'()) `'() nil) nil ) `'() nil)
(EQ (PROD t (EQ (PROD t `'()) `'() t) t ) `'() t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(EQ (PROD 2 (EQ (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(EQ (PROD nil (EQ (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(EQ (PROD t (EQ (PROD t `'(())) `'(()) t) t ) `'(()) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(EQ (PROD 2 (EQ (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(EQ (PROD nil (EQ (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(EQ (PROD t (EQ (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(EQ (PROD 1 (EQ (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(EQ (PROD 2 (EQ (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(EQ (PROD nil (EQ (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(EQ (PROD t (EQ (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(EQ (PROD (cons t t) (EQ (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(EQ (PROD (cons nil t) (EQ (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(EQ (PROD (cons nil nil) (EQ (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(EQ (PROD (cons 0 0) (EQ (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(EQ (PROD (cons 1 1) (EQ (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(EQ (PROD (list 1 2 3) (EQ (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(EQ (PROD (list (cons 1 1 ) ) (EQ (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 T) T 1) 1 ) T 1)
(EQL (PROD 2 (EQL (PROD 2 T) T 2) 2 ) T 2)
(EQL (PROD nil (EQL (PROD nil T) T nil) nil ) T nil)
(EQL (PROD t (EQL (PROD t T) T t) t ) T t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(EQL (PROD 2 (EQL (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(EQL (PROD nil (EQL (PROD nil NIL) NIL nil) nil ) NIL nil)
(EQL (PROD t (EQL (PROD t NIL) NIL t) t ) NIL t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 A) A 1) 1 ) A 1)
(EQL (PROD 2 (EQL (PROD 2 A) A 2) 2 ) A 2)
(EQL (PROD nil (EQL (PROD nil A) A nil) nil ) A nil)
(EQL (PROD t (EQL (PROD t A) A t) t ) A t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 B) B 1) 1 ) B 1)
(EQL (PROD 2 (EQL (PROD 2 B) B 2) 2 ) B 2)
(EQL (PROD nil (EQL (PROD nil B) B nil) nil ) B nil)
(EQL (PROD t (EQL (PROD t B) B t) t ) B t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 C) C 1) 1 ) C 1)
(EQL (PROD 2 (EQL (PROD 2 C) C 2) 2 ) C 2)
(EQL (PROD nil (EQL (PROD nil C) C nil) nil ) C nil)
(EQL (PROD t (EQL (PROD t C) C t) t ) C t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 1) 1 1) 1 ) 1 1)
(EQL (PROD 2 (EQL (PROD 2 1) 1 2) 2 ) 1 2)
(EQL (PROD nil (EQL (PROD nil 1) 1 nil) nil ) 1 nil)
(EQL (PROD t (EQL (PROD t 1) 1 t) t ) 1 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 2) 2 1) 1 ) 2 1)
(EQL (PROD 2 (EQL (PROD 2 2) 2 2) 2 ) 2 2)
(EQL (PROD nil (EQL (PROD nil 2) 2 nil) nil ) 2 nil)
(EQL (PROD t (EQL (PROD t 2) 2 t) t ) 2 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 3) 3 1) 1 ) 3 1)
(EQL (PROD 2 (EQL (PROD 2 3) 3 2) 2 ) 3 2)
(EQL (PROD nil (EQL (PROD nil 3) 3 nil) nil ) 3 nil)
(EQL (PROD t (EQL (PROD t 3) 3 t) t ) 3 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 ()) () 1) 1 ) () 1)
(EQL (PROD 2 (EQL (PROD 2 ()) () 2) 2 ) () 2)
(EQL (PROD nil (EQL (PROD nil ()) () nil) nil ) () nil)
(EQL (PROD t (EQL (PROD t ()) () t) t ) () t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 (())) (()) 1) 1 ) (()) 1)
(EQL (PROD 2 (EQL (PROD 2 (())) (()) 2) 2 ) (()) 2)
(EQL (PROD nil (EQL (PROD nil (())) (()) nil) nil ) (()) nil)
(EQL (PROD t (EQL (PROD t (())) (()) t) t ) (()) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(EQL (PROD 2 (EQL (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(EQL (PROD nil (EQL (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(EQL (PROD t (EQL (PROD t ((()))) ((())) t) t ) ((())) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(EQL (PROD 2 (EQL (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(EQL (PROD nil (EQL (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(EQL (PROD t (EQL (PROD t (((())))) (((()))) t) t ) (((()))) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 'A) 'A 1) 1 ) 'A 1)
(EQL (PROD 2 (EQL (PROD 2 'A) 'A 2) 2 ) 'A 2)
(EQL (PROD nil (EQL (PROD nil 'A) 'A nil) nil ) 'A nil)
(EQL (PROD t (EQL (PROD t 'A) 'A t) t ) 'A t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 'B) 'B 1) 1 ) 'B 1)
(EQL (PROD 2 (EQL (PROD 2 'B) 'B 2) 2 ) 'B 2)
(EQL (PROD nil (EQL (PROD nil 'B) 'B nil) nil ) 'B nil)
(EQL (PROD t (EQL (PROD t 'B) 'B t) t ) 'B t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 'C) 'C 1) 1 ) 'C 1)
(EQL (PROD 2 (EQL (PROD 2 'C) 'C 2) 2 ) 'C 2)
(EQL (PROD nil (EQL (PROD nil 'C) 'C nil) nil ) 'C nil)
(EQL (PROD t (EQL (PROD t 'C) 'C t) t ) 'C t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 '1) '1 1) 1 ) '1 1)
(EQL (PROD 2 (EQL (PROD 2 '1) '1 2) 2 ) '1 2)
(EQL (PROD nil (EQL (PROD nil '1) '1 nil) nil ) '1 nil)
(EQL (PROD t (EQL (PROD t '1) '1 t) t ) '1 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 '2) '2 1) 1 ) '2 1)
(EQL (PROD 2 (EQL (PROD 2 '2) '2 2) 2 ) '2 2)
(EQL (PROD nil (EQL (PROD nil '2) '2 nil) nil ) '2 nil)
(EQL (PROD t (EQL (PROD t '2) '2 t) t ) '2 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 '3) '3 1) 1 ) '3 1)
(EQL (PROD 2 (EQL (PROD 2 '3) '3 2) 2 ) '3 2)
(EQL (PROD nil (EQL (PROD nil '3) '3 nil) nil ) '3 nil)
(EQL (PROD t (EQL (PROD t '3) '3 t) t ) '3 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 '()) '() 1) 1 ) '() 1)
(EQL (PROD 2 (EQL (PROD 2 '()) '() 2) 2 ) '() 2)
(EQL (PROD nil (EQL (PROD nil '()) '() nil) nil ) '() nil)
(EQL (PROD t (EQL (PROD t '()) '() t) t ) '() t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(EQL (PROD 2 (EQL (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(EQL (PROD nil (EQL (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(EQL (PROD t (EQL (PROD t '(())) '(()) t) t ) '(()) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(EQL (PROD 2 (EQL (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(EQL (PROD nil (EQL (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(EQL (PROD t (EQL (PROD t '((()))) '((())) t) t ) '((())) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(EQL (PROD 2 (EQL (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(EQL (PROD nil (EQL (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(EQL (PROD t (EQL (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(EQL (PROD 2 (EQL (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(EQL (PROD nil (EQL (PROD nil ,A) ,A nil) nil ) ,A nil)
(EQL (PROD t (EQL (PROD t ,A) ,A t) t ) ,A t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(EQL (PROD 2 (EQL (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(EQL (PROD nil (EQL (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(EQL (PROD t (EQL (PROD t ,1) ,1 t) t ) ,1 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(EQL (PROD 2 (EQL (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(EQL (PROD nil (EQL (PROD nil ,()) ,() nil) nil ) ,() nil)
(EQL (PROD t (EQL (PROD t ,()) ,() t) t ) ,() t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(EQL (PROD 2 (EQL (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(EQL (PROD nil (EQL (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(EQL (PROD t (EQL (PROD t ,(())) ,(()) t) t ) ,(()) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(EQL (PROD 2 (EQL (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(EQL (PROD nil (EQL (PROD nil `'A) `'A nil) nil ) `'A nil)
(EQL (PROD t (EQL (PROD t `'A) `'A t) t ) `'A t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(EQL (PROD 2 (EQL (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(EQL (PROD nil (EQL (PROD nil `'B) `'B nil) nil ) `'B nil)
(EQL (PROD t (EQL (PROD t `'B) `'B t) t ) `'B t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(EQL (PROD 2 (EQL (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(EQL (PROD nil (EQL (PROD nil `'C) `'C nil) nil ) `'C nil)
(EQL (PROD t (EQL (PROD t `'C) `'C t) t ) `'C t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(EQL (PROD 2 (EQL (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(EQL (PROD nil (EQL (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(EQL (PROD t (EQL (PROD t `'1) `'1 t) t ) `'1 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(EQL (PROD 2 (EQL (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(EQL (PROD nil (EQL (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(EQL (PROD t (EQL (PROD t `'2) `'2 t) t ) `'2 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(EQL (PROD 2 (EQL (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(EQL (PROD nil (EQL (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(EQL (PROD t (EQL (PROD t `'3) `'3 t) t ) `'3 t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(EQL (PROD 2 (EQL (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(EQL (PROD nil (EQL (PROD nil `'()) `'() nil) nil ) `'() nil)
(EQL (PROD t (EQL (PROD t `'()) `'() t) t ) `'() t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(EQL (PROD 2 (EQL (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(EQL (PROD nil (EQL (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(EQL (PROD t (EQL (PROD t `'(())) `'(()) t) t ) `'(()) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(EQL (PROD 2 (EQL (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(EQL (PROD nil (EQL (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(EQL (PROD t (EQL (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(EQL (PROD 1 (EQL (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(EQL (PROD 2 (EQL (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(EQL (PROD nil (EQL (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(EQL (PROD t (EQL (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(EQL (PROD (cons t t) (EQL (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(EQL (PROD (cons nil t) (EQL (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(EQL (PROD (cons nil nil) (EQL (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(EQL (PROD (cons 0 0) (EQL (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(EQL (PROD (cons 1 1) (EQL (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(EQL (PROD (list 1 2 3) (EQL (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(EQL (PROD (list (cons 1 1 ) ) (EQL (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 T) T 1) 1 ) T 1)
(EVAL (PROD 2 (EVAL (PROD 2 T) T 2) 2 ) T 2)
(EVAL (PROD nil (EVAL (PROD nil T) T nil) nil ) T nil)
(EVAL (PROD t (EVAL (PROD t T) T t) t ) T t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(EVAL (PROD 2 (EVAL (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(EVAL (PROD nil (EVAL (PROD nil NIL) NIL nil) nil ) NIL nil)
(EVAL (PROD t (EVAL (PROD t NIL) NIL t) t ) NIL t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 A) A 1) 1 ) A 1)
(EVAL (PROD 2 (EVAL (PROD 2 A) A 2) 2 ) A 2)
(EVAL (PROD nil (EVAL (PROD nil A) A nil) nil ) A nil)
(EVAL (PROD t (EVAL (PROD t A) A t) t ) A t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 B) B 1) 1 ) B 1)
(EVAL (PROD 2 (EVAL (PROD 2 B) B 2) 2 ) B 2)
(EVAL (PROD nil (EVAL (PROD nil B) B nil) nil ) B nil)
(EVAL (PROD t (EVAL (PROD t B) B t) t ) B t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 C) C 1) 1 ) C 1)
(EVAL (PROD 2 (EVAL (PROD 2 C) C 2) 2 ) C 2)
(EVAL (PROD nil (EVAL (PROD nil C) C nil) nil ) C nil)
(EVAL (PROD t (EVAL (PROD t C) C t) t ) C t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 1) 1 1) 1 ) 1 1)
(EVAL (PROD 2 (EVAL (PROD 2 1) 1 2) 2 ) 1 2)
(EVAL (PROD nil (EVAL (PROD nil 1) 1 nil) nil ) 1 nil)
(EVAL (PROD t (EVAL (PROD t 1) 1 t) t ) 1 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 2) 2 1) 1 ) 2 1)
(EVAL (PROD 2 (EVAL (PROD 2 2) 2 2) 2 ) 2 2)
(EVAL (PROD nil (EVAL (PROD nil 2) 2 nil) nil ) 2 nil)
(EVAL (PROD t (EVAL (PROD t 2) 2 t) t ) 2 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 3) 3 1) 1 ) 3 1)
(EVAL (PROD 2 (EVAL (PROD 2 3) 3 2) 2 ) 3 2)
(EVAL (PROD nil (EVAL (PROD nil 3) 3 nil) nil ) 3 nil)
(EVAL (PROD t (EVAL (PROD t 3) 3 t) t ) 3 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 ()) () 1) 1 ) () 1)
(EVAL (PROD 2 (EVAL (PROD 2 ()) () 2) 2 ) () 2)
(EVAL (PROD nil (EVAL (PROD nil ()) () nil) nil ) () nil)
(EVAL (PROD t (EVAL (PROD t ()) () t) t ) () t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 (())) (()) 1) 1 ) (()) 1)
(EVAL (PROD 2 (EVAL (PROD 2 (())) (()) 2) 2 ) (()) 2)
(EVAL (PROD nil (EVAL (PROD nil (())) (()) nil) nil ) (()) nil)
(EVAL (PROD t (EVAL (PROD t (())) (()) t) t ) (()) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(EVAL (PROD 2 (EVAL (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(EVAL (PROD nil (EVAL (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(EVAL (PROD t (EVAL (PROD t ((()))) ((())) t) t ) ((())) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(EVAL (PROD 2 (EVAL (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(EVAL (PROD nil (EVAL (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(EVAL (PROD t (EVAL (PROD t (((())))) (((()))) t) t ) (((()))) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 'A) 'A 1) 1 ) 'A 1)
(EVAL (PROD 2 (EVAL (PROD 2 'A) 'A 2) 2 ) 'A 2)
(EVAL (PROD nil (EVAL (PROD nil 'A) 'A nil) nil ) 'A nil)
(EVAL (PROD t (EVAL (PROD t 'A) 'A t) t ) 'A t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 'B) 'B 1) 1 ) 'B 1)
(EVAL (PROD 2 (EVAL (PROD 2 'B) 'B 2) 2 ) 'B 2)
(EVAL (PROD nil (EVAL (PROD nil 'B) 'B nil) nil ) 'B nil)
(EVAL (PROD t (EVAL (PROD t 'B) 'B t) t ) 'B t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 'C) 'C 1) 1 ) 'C 1)
(EVAL (PROD 2 (EVAL (PROD 2 'C) 'C 2) 2 ) 'C 2)
(EVAL (PROD nil (EVAL (PROD nil 'C) 'C nil) nil ) 'C nil)
(EVAL (PROD t (EVAL (PROD t 'C) 'C t) t ) 'C t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 '1) '1 1) 1 ) '1 1)
(EVAL (PROD 2 (EVAL (PROD 2 '1) '1 2) 2 ) '1 2)
(EVAL (PROD nil (EVAL (PROD nil '1) '1 nil) nil ) '1 nil)
(EVAL (PROD t (EVAL (PROD t '1) '1 t) t ) '1 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 '2) '2 1) 1 ) '2 1)
(EVAL (PROD 2 (EVAL (PROD 2 '2) '2 2) 2 ) '2 2)
(EVAL (PROD nil (EVAL (PROD nil '2) '2 nil) nil ) '2 nil)
(EVAL (PROD t (EVAL (PROD t '2) '2 t) t ) '2 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 '3) '3 1) 1 ) '3 1)
(EVAL (PROD 2 (EVAL (PROD 2 '3) '3 2) 2 ) '3 2)
(EVAL (PROD nil (EVAL (PROD nil '3) '3 nil) nil ) '3 nil)
(EVAL (PROD t (EVAL (PROD t '3) '3 t) t ) '3 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 '()) '() 1) 1 ) '() 1)
(EVAL (PROD 2 (EVAL (PROD 2 '()) '() 2) 2 ) '() 2)
(EVAL (PROD nil (EVAL (PROD nil '()) '() nil) nil ) '() nil)
(EVAL (PROD t (EVAL (PROD t '()) '() t) t ) '() t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(EVAL (PROD 2 (EVAL (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(EVAL (PROD nil (EVAL (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(EVAL (PROD t (EVAL (PROD t '(())) '(()) t) t ) '(()) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(EVAL (PROD 2 (EVAL (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(EVAL (PROD nil (EVAL (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(EVAL (PROD t (EVAL (PROD t '((()))) '((())) t) t ) '((())) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(EVAL (PROD 2 (EVAL (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(EVAL (PROD nil (EVAL (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(EVAL (PROD t (EVAL (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(EVAL (PROD 2 (EVAL (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(EVAL (PROD nil (EVAL (PROD nil ,A) ,A nil) nil ) ,A nil)
(EVAL (PROD t (EVAL (PROD t ,A) ,A t) t ) ,A t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(EVAL (PROD 2 (EVAL (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(EVAL (PROD nil (EVAL (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(EVAL (PROD t (EVAL (PROD t ,1) ,1 t) t ) ,1 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(EVAL (PROD 2 (EVAL (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(EVAL (PROD nil (EVAL (PROD nil ,()) ,() nil) nil ) ,() nil)
(EVAL (PROD t (EVAL (PROD t ,()) ,() t) t ) ,() t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(EVAL (PROD 2 (EVAL (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(EVAL (PROD nil (EVAL (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(EVAL (PROD t (EVAL (PROD t ,(())) ,(()) t) t ) ,(()) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(EVAL (PROD nil (EVAL (PROD nil `'A) `'A nil) nil ) `'A nil)
(EVAL (PROD t (EVAL (PROD t `'A) `'A t) t ) `'A t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(EVAL (PROD nil (EVAL (PROD nil `'B) `'B nil) nil ) `'B nil)
(EVAL (PROD t (EVAL (PROD t `'B) `'B t) t ) `'B t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(EVAL (PROD nil (EVAL (PROD nil `'C) `'C nil) nil ) `'C nil)
(EVAL (PROD t (EVAL (PROD t `'C) `'C t) t ) `'C t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(EVAL (PROD nil (EVAL (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(EVAL (PROD t (EVAL (PROD t `'1) `'1 t) t ) `'1 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(EVAL (PROD nil (EVAL (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(EVAL (PROD t (EVAL (PROD t `'2) `'2 t) t ) `'2 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(EVAL (PROD nil (EVAL (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(EVAL (PROD t (EVAL (PROD t `'3) `'3 t) t ) `'3 t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(EVAL (PROD nil (EVAL (PROD nil `'()) `'() nil) nil ) `'() nil)
(EVAL (PROD t (EVAL (PROD t `'()) `'() t) t ) `'() t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(EVAL (PROD nil (EVAL (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(EVAL (PROD t (EVAL (PROD t `'(())) `'(()) t) t ) `'(()) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(EVAL (PROD nil (EVAL (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(EVAL (PROD t (EVAL (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(EVAL (PROD 1 (EVAL (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(EVAL (PROD 2 (EVAL (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(EVAL (PROD nil (EVAL (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(EVAL (PROD t (EVAL (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(EVAL (PROD (cons t t) (EVAL (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(EVAL (PROD (cons nil t) (EVAL (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(EVAL (PROD (cons nil nil) (EVAL (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(EVAL (PROD (cons 0 0) (EVAL (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(EVAL (PROD (cons 1 1) (EVAL (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(EVAL (PROD (list 1 2 3) (EVAL (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(EVAL (PROD (list (cons 1 1 ) ) (EVAL (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 T) T 1) 1 ) T 1)
(IF (PROD 2 (IF (PROD 2 T) T 2) 2 ) T 2)
(IF (PROD nil (IF (PROD nil T) T nil) nil ) T nil)
(IF (PROD t (IF (PROD t T) T t) t ) T t)
(IF (PROD (cons t t) (IF (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(IF (PROD 2 (IF (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(IF (PROD nil (IF (PROD nil NIL) NIL nil) nil ) NIL nil)
(IF (PROD t (IF (PROD t NIL) NIL t) t ) NIL t)
(IF (PROD (cons t t) (IF (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 A) A 1) 1 ) A 1)
(IF (PROD 2 (IF (PROD 2 A) A 2) 2 ) A 2)
(IF (PROD nil (IF (PROD nil A) A nil) nil ) A nil)
(IF (PROD t (IF (PROD t A) A t) t ) A t)
(IF (PROD (cons t t) (IF (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 B) B 1) 1 ) B 1)
(IF (PROD 2 (IF (PROD 2 B) B 2) 2 ) B 2)
(IF (PROD nil (IF (PROD nil B) B nil) nil ) B nil)
(IF (PROD t (IF (PROD t B) B t) t ) B t)
(IF (PROD (cons t t) (IF (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 C) C 1) 1 ) C 1)
(IF (PROD 2 (IF (PROD 2 C) C 2) 2 ) C 2)
(IF (PROD nil (IF (PROD nil C) C nil) nil ) C nil)
(IF (PROD t (IF (PROD t C) C t) t ) C t)
(IF (PROD (cons t t) (IF (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 1) 1 1) 1 ) 1 1)
(IF (PROD 2 (IF (PROD 2 1) 1 2) 2 ) 1 2)
(IF (PROD nil (IF (PROD nil 1) 1 nil) nil ) 1 nil)
(IF (PROD t (IF (PROD t 1) 1 t) t ) 1 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 2) 2 1) 1 ) 2 1)
(IF (PROD 2 (IF (PROD 2 2) 2 2) 2 ) 2 2)
(IF (PROD nil (IF (PROD nil 2) 2 nil) nil ) 2 nil)
(IF (PROD t (IF (PROD t 2) 2 t) t ) 2 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 3) 3 1) 1 ) 3 1)
(IF (PROD 2 (IF (PROD 2 3) 3 2) 2 ) 3 2)
(IF (PROD nil (IF (PROD nil 3) 3 nil) nil ) 3 nil)
(IF (PROD t (IF (PROD t 3) 3 t) t ) 3 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 ()) () 1) 1 ) () 1)
(IF (PROD 2 (IF (PROD 2 ()) () 2) 2 ) () 2)
(IF (PROD nil (IF (PROD nil ()) () nil) nil ) () nil)
(IF (PROD t (IF (PROD t ()) () t) t ) () t)
(IF (PROD (cons t t) (IF (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 (())) (()) 1) 1 ) (()) 1)
(IF (PROD 2 (IF (PROD 2 (())) (()) 2) 2 ) (()) 2)
(IF (PROD nil (IF (PROD nil (())) (()) nil) nil ) (()) nil)
(IF (PROD t (IF (PROD t (())) (()) t) t ) (()) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(IF (PROD 2 (IF (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(IF (PROD nil (IF (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(IF (PROD t (IF (PROD t ((()))) ((())) t) t ) ((())) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(IF (PROD 2 (IF (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(IF (PROD nil (IF (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(IF (PROD t (IF (PROD t (((())))) (((()))) t) t ) (((()))) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 'A) 'A 1) 1 ) 'A 1)
(IF (PROD 2 (IF (PROD 2 'A) 'A 2) 2 ) 'A 2)
(IF (PROD nil (IF (PROD nil 'A) 'A nil) nil ) 'A nil)
(IF (PROD t (IF (PROD t 'A) 'A t) t ) 'A t)
(IF (PROD (cons t t) (IF (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 'B) 'B 1) 1 ) 'B 1)
(IF (PROD 2 (IF (PROD 2 'B) 'B 2) 2 ) 'B 2)
(IF (PROD nil (IF (PROD nil 'B) 'B nil) nil ) 'B nil)
(IF (PROD t (IF (PROD t 'B) 'B t) t ) 'B t)
(IF (PROD (cons t t) (IF (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 'C) 'C 1) 1 ) 'C 1)
(IF (PROD 2 (IF (PROD 2 'C) 'C 2) 2 ) 'C 2)
(IF (PROD nil (IF (PROD nil 'C) 'C nil) nil ) 'C nil)
(IF (PROD t (IF (PROD t 'C) 'C t) t ) 'C t)
(IF (PROD (cons t t) (IF (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 '1) '1 1) 1 ) '1 1)
(IF (PROD 2 (IF (PROD 2 '1) '1 2) 2 ) '1 2)
(IF (PROD nil (IF (PROD nil '1) '1 nil) nil ) '1 nil)
(IF (PROD t (IF (PROD t '1) '1 t) t ) '1 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 '2) '2 1) 1 ) '2 1)
(IF (PROD 2 (IF (PROD 2 '2) '2 2) 2 ) '2 2)
(IF (PROD nil (IF (PROD nil '2) '2 nil) nil ) '2 nil)
(IF (PROD t (IF (PROD t '2) '2 t) t ) '2 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 '3) '3 1) 1 ) '3 1)
(IF (PROD 2 (IF (PROD 2 '3) '3 2) 2 ) '3 2)
(IF (PROD nil (IF (PROD nil '3) '3 nil) nil ) '3 nil)
(IF (PROD t (IF (PROD t '3) '3 t) t ) '3 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 '()) '() 1) 1 ) '() 1)
(IF (PROD 2 (IF (PROD 2 '()) '() 2) 2 ) '() 2)
(IF (PROD nil (IF (PROD nil '()) '() nil) nil ) '() nil)
(IF (PROD t (IF (PROD t '()) '() t) t ) '() t)
(IF (PROD (cons t t) (IF (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(IF (PROD 2 (IF (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(IF (PROD nil (IF (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(IF (PROD t (IF (PROD t '(())) '(()) t) t ) '(()) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(IF (PROD 2 (IF (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(IF (PROD nil (IF (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(IF (PROD t (IF (PROD t '((()))) '((())) t) t ) '((())) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(IF (PROD 2 (IF (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(IF (PROD nil (IF (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(IF (PROD t (IF (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(IF (PROD 2 (IF (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(IF (PROD nil (IF (PROD nil ,A) ,A nil) nil ) ,A nil)
(IF (PROD t (IF (PROD t ,A) ,A t) t ) ,A t)
(IF (PROD (cons t t) (IF (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(IF (PROD 2 (IF (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(IF (PROD nil (IF (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(IF (PROD t (IF (PROD t ,1) ,1 t) t ) ,1 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(IF (PROD 2 (IF (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(IF (PROD nil (IF (PROD nil ,()) ,() nil) nil ) ,() nil)
(IF (PROD t (IF (PROD t ,()) ,() t) t ) ,() t)
(IF (PROD (cons t t) (IF (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(IF (PROD 2 (IF (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(IF (PROD nil (IF (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(IF (PROD t (IF (PROD t ,(())) ,(()) t) t ) ,(()) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(IF (PROD 2 (IF (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(IF (PROD nil (IF (PROD nil `'A) `'A nil) nil ) `'A nil)
(IF (PROD t (IF (PROD t `'A) `'A t) t ) `'A t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(IF (PROD 2 (IF (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(IF (PROD nil (IF (PROD nil `'B) `'B nil) nil ) `'B nil)
(IF (PROD t (IF (PROD t `'B) `'B t) t ) `'B t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(IF (PROD 2 (IF (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(IF (PROD nil (IF (PROD nil `'C) `'C nil) nil ) `'C nil)
(IF (PROD t (IF (PROD t `'C) `'C t) t ) `'C t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(IF (PROD 2 (IF (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(IF (PROD nil (IF (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(IF (PROD t (IF (PROD t `'1) `'1 t) t ) `'1 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(IF (PROD 2 (IF (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(IF (PROD nil (IF (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(IF (PROD t (IF (PROD t `'2) `'2 t) t ) `'2 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(IF (PROD 2 (IF (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(IF (PROD nil (IF (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(IF (PROD t (IF (PROD t `'3) `'3 t) t ) `'3 t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(IF (PROD 2 (IF (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(IF (PROD nil (IF (PROD nil `'()) `'() nil) nil ) `'() nil)
(IF (PROD t (IF (PROD t `'()) `'() t) t ) `'() t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(IF (PROD 2 (IF (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(IF (PROD nil (IF (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(IF (PROD t (IF (PROD t `'(())) `'(()) t) t ) `'(()) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(IF (PROD 2 (IF (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(IF (PROD nil (IF (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(IF (PROD t (IF (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(IF (PROD 1 (IF (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(IF (PROD 2 (IF (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(IF (PROD nil (IF (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(IF (PROD t (IF (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(IF (PROD (cons t t) (IF (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(IF (PROD (cons nil t) (IF (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(IF (PROD (cons nil nil) (IF (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(IF (PROD (cons 0 0) (IF (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(IF (PROD (cons 1 1) (IF (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(IF (PROD (list 1 2 3) (IF (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(IF (PROD (list (cons 1 1 ) ) (IF (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 T) T 1) 1 ) T 1)
(LABELS (PROD 2 (LABELS (PROD 2 T) T 2) 2 ) T 2)
(LABELS (PROD nil (LABELS (PROD nil T) T nil) nil ) T nil)
(LABELS (PROD t (LABELS (PROD t T) T t) t ) T t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(LABELS (PROD 2 (LABELS (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(LABELS (PROD nil (LABELS (PROD nil NIL) NIL nil) nil ) NIL nil)
(LABELS (PROD t (LABELS (PROD t NIL) NIL t) t ) NIL t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 A) A 1) 1 ) A 1)
(LABELS (PROD 2 (LABELS (PROD 2 A) A 2) 2 ) A 2)
(LABELS (PROD nil (LABELS (PROD nil A) A nil) nil ) A nil)
(LABELS (PROD t (LABELS (PROD t A) A t) t ) A t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 B) B 1) 1 ) B 1)
(LABELS (PROD 2 (LABELS (PROD 2 B) B 2) 2 ) B 2)
(LABELS (PROD nil (LABELS (PROD nil B) B nil) nil ) B nil)
(LABELS (PROD t (LABELS (PROD t B) B t) t ) B t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 C) C 1) 1 ) C 1)
(LABELS (PROD 2 (LABELS (PROD 2 C) C 2) 2 ) C 2)
(LABELS (PROD nil (LABELS (PROD nil C) C nil) nil ) C nil)
(LABELS (PROD t (LABELS (PROD t C) C t) t ) C t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 1) 1 1) 1 ) 1 1)
(LABELS (PROD 2 (LABELS (PROD 2 1) 1 2) 2 ) 1 2)
(LABELS (PROD nil (LABELS (PROD nil 1) 1 nil) nil ) 1 nil)
(LABELS (PROD t (LABELS (PROD t 1) 1 t) t ) 1 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 2) 2 1) 1 ) 2 1)
(LABELS (PROD 2 (LABELS (PROD 2 2) 2 2) 2 ) 2 2)
(LABELS (PROD nil (LABELS (PROD nil 2) 2 nil) nil ) 2 nil)
(LABELS (PROD t (LABELS (PROD t 2) 2 t) t ) 2 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 3) 3 1) 1 ) 3 1)
(LABELS (PROD 2 (LABELS (PROD 2 3) 3 2) 2 ) 3 2)
(LABELS (PROD nil (LABELS (PROD nil 3) 3 nil) nil ) 3 nil)
(LABELS (PROD t (LABELS (PROD t 3) 3 t) t ) 3 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 ()) () 1) 1 ) () 1)
(LABELS (PROD 2 (LABELS (PROD 2 ()) () 2) 2 ) () 2)
(LABELS (PROD nil (LABELS (PROD nil ()) () nil) nil ) () nil)
(LABELS (PROD t (LABELS (PROD t ()) () t) t ) () t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 (())) (()) 1) 1 ) (()) 1)
(LABELS (PROD 2 (LABELS (PROD 2 (())) (()) 2) 2 ) (()) 2)
(LABELS (PROD nil (LABELS (PROD nil (())) (()) nil) nil ) (()) nil)
(LABELS (PROD t (LABELS (PROD t (())) (()) t) t ) (()) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LABELS (PROD 2 (LABELS (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LABELS (PROD nil (LABELS (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(LABELS (PROD t (LABELS (PROD t ((()))) ((())) t) t ) ((())) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LABELS (PROD 2 (LABELS (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LABELS (PROD nil (LABELS (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LABELS (PROD t (LABELS (PROD t (((())))) (((()))) t) t ) (((()))) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 'A) 'A 1) 1 ) 'A 1)
(LABELS (PROD 2 (LABELS (PROD 2 'A) 'A 2) 2 ) 'A 2)
(LABELS (PROD nil (LABELS (PROD nil 'A) 'A nil) nil ) 'A nil)
(LABELS (PROD t (LABELS (PROD t 'A) 'A t) t ) 'A t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 'B) 'B 1) 1 ) 'B 1)
(LABELS (PROD 2 (LABELS (PROD 2 'B) 'B 2) 2 ) 'B 2)
(LABELS (PROD nil (LABELS (PROD nil 'B) 'B nil) nil ) 'B nil)
(LABELS (PROD t (LABELS (PROD t 'B) 'B t) t ) 'B t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 'C) 'C 1) 1 ) 'C 1)
(LABELS (PROD 2 (LABELS (PROD 2 'C) 'C 2) 2 ) 'C 2)
(LABELS (PROD nil (LABELS (PROD nil 'C) 'C nil) nil ) 'C nil)
(LABELS (PROD t (LABELS (PROD t 'C) 'C t) t ) 'C t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 '1) '1 1) 1 ) '1 1)
(LABELS (PROD 2 (LABELS (PROD 2 '1) '1 2) 2 ) '1 2)
(LABELS (PROD nil (LABELS (PROD nil '1) '1 nil) nil ) '1 nil)
(LABELS (PROD t (LABELS (PROD t '1) '1 t) t ) '1 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 '2) '2 1) 1 ) '2 1)
(LABELS (PROD 2 (LABELS (PROD 2 '2) '2 2) 2 ) '2 2)
(LABELS (PROD nil (LABELS (PROD nil '2) '2 nil) nil ) '2 nil)
(LABELS (PROD t (LABELS (PROD t '2) '2 t) t ) '2 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 '3) '3 1) 1 ) '3 1)
(LABELS (PROD 2 (LABELS (PROD 2 '3) '3 2) 2 ) '3 2)
(LABELS (PROD nil (LABELS (PROD nil '3) '3 nil) nil ) '3 nil)
(LABELS (PROD t (LABELS (PROD t '3) '3 t) t ) '3 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 '()) '() 1) 1 ) '() 1)
(LABELS (PROD 2 (LABELS (PROD 2 '()) '() 2) 2 ) '() 2)
(LABELS (PROD nil (LABELS (PROD nil '()) '() nil) nil ) '() nil)
(LABELS (PROD t (LABELS (PROD t '()) '() t) t ) '() t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(LABELS (PROD 2 (LABELS (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(LABELS (PROD nil (LABELS (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(LABELS (PROD t (LABELS (PROD t '(())) '(()) t) t ) '(()) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LABELS (PROD 2 (LABELS (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LABELS (PROD nil (LABELS (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(LABELS (PROD t (LABELS (PROD t '((()))) '((())) t) t ) '((())) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LABELS (PROD 2 (LABELS (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LABELS (PROD nil (LABELS (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LABELS (PROD t (LABELS (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(LABELS (PROD 2 (LABELS (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(LABELS (PROD nil (LABELS (PROD nil ,A) ,A nil) nil ) ,A nil)
(LABELS (PROD t (LABELS (PROD t ,A) ,A t) t ) ,A t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(LABELS (PROD 2 (LABELS (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(LABELS (PROD nil (LABELS (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(LABELS (PROD t (LABELS (PROD t ,1) ,1 t) t ) ,1 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(LABELS (PROD 2 (LABELS (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(LABELS (PROD nil (LABELS (PROD nil ,()) ,() nil) nil ) ,() nil)
(LABELS (PROD t (LABELS (PROD t ,()) ,() t) t ) ,() t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LABELS (PROD 2 (LABELS (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LABELS (PROD nil (LABELS (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LABELS (PROD t (LABELS (PROD t ,(())) ,(()) t) t ) ,(()) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(LABELS (PROD nil (LABELS (PROD nil `'A) `'A nil) nil ) `'A nil)
(LABELS (PROD t (LABELS (PROD t `'A) `'A t) t ) `'A t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(LABELS (PROD nil (LABELS (PROD nil `'B) `'B nil) nil ) `'B nil)
(LABELS (PROD t (LABELS (PROD t `'B) `'B t) t ) `'B t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(LABELS (PROD nil (LABELS (PROD nil `'C) `'C nil) nil ) `'C nil)
(LABELS (PROD t (LABELS (PROD t `'C) `'C t) t ) `'C t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(LABELS (PROD nil (LABELS (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(LABELS (PROD t (LABELS (PROD t `'1) `'1 t) t ) `'1 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(LABELS (PROD nil (LABELS (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(LABELS (PROD t (LABELS (PROD t `'2) `'2 t) t ) `'2 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(LABELS (PROD nil (LABELS (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(LABELS (PROD t (LABELS (PROD t `'3) `'3 t) t ) `'3 t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(LABELS (PROD nil (LABELS (PROD nil `'()) `'() nil) nil ) `'() nil)
(LABELS (PROD t (LABELS (PROD t `'()) `'() t) t ) `'() t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LABELS (PROD nil (LABELS (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LABELS (PROD t (LABELS (PROD t `'(())) `'(()) t) t ) `'(()) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LABELS (PROD nil (LABELS (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LABELS (PROD t (LABELS (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LABELS (PROD 1 (LABELS (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LABELS (PROD 2 (LABELS (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LABELS (PROD nil (LABELS (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LABELS (PROD t (LABELS (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LABELS (PROD (cons t t) (LABELS (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LABELS (PROD (cons nil t) (LABELS (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LABELS (PROD (cons nil nil) (LABELS (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LABELS (PROD (cons 0 0) (LABELS (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LABELS (PROD (cons 1 1) (LABELS (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LABELS (PROD (list 1 2 3) (LABELS (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LABELS (PROD (list (cons 1 1 ) ) (LABELS (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 T) T 1) 1 ) T 1)
(LET (PROD 2 (LET (PROD 2 T) T 2) 2 ) T 2)
(LET (PROD nil (LET (PROD nil T) T nil) nil ) T nil)
(LET (PROD t (LET (PROD t T) T t) t ) T t)
(LET (PROD (cons t t) (LET (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(LET (PROD 2 (LET (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(LET (PROD nil (LET (PROD nil NIL) NIL nil) nil ) NIL nil)
(LET (PROD t (LET (PROD t NIL) NIL t) t ) NIL t)
(LET (PROD (cons t t) (LET (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 A) A 1) 1 ) A 1)
(LET (PROD 2 (LET (PROD 2 A) A 2) 2 ) A 2)
(LET (PROD nil (LET (PROD nil A) A nil) nil ) A nil)
(LET (PROD t (LET (PROD t A) A t) t ) A t)
(LET (PROD (cons t t) (LET (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 B) B 1) 1 ) B 1)
(LET (PROD 2 (LET (PROD 2 B) B 2) 2 ) B 2)
(LET (PROD nil (LET (PROD nil B) B nil) nil ) B nil)
(LET (PROD t (LET (PROD t B) B t) t ) B t)
(LET (PROD (cons t t) (LET (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 C) C 1) 1 ) C 1)
(LET (PROD 2 (LET (PROD 2 C) C 2) 2 ) C 2)
(LET (PROD nil (LET (PROD nil C) C nil) nil ) C nil)
(LET (PROD t (LET (PROD t C) C t) t ) C t)
(LET (PROD (cons t t) (LET (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 1) 1 1) 1 ) 1 1)
(LET (PROD 2 (LET (PROD 2 1) 1 2) 2 ) 1 2)
(LET (PROD nil (LET (PROD nil 1) 1 nil) nil ) 1 nil)
(LET (PROD t (LET (PROD t 1) 1 t) t ) 1 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 2) 2 1) 1 ) 2 1)
(LET (PROD 2 (LET (PROD 2 2) 2 2) 2 ) 2 2)
(LET (PROD nil (LET (PROD nil 2) 2 nil) nil ) 2 nil)
(LET (PROD t (LET (PROD t 2) 2 t) t ) 2 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 3) 3 1) 1 ) 3 1)
(LET (PROD 2 (LET (PROD 2 3) 3 2) 2 ) 3 2)
(LET (PROD nil (LET (PROD nil 3) 3 nil) nil ) 3 nil)
(LET (PROD t (LET (PROD t 3) 3 t) t ) 3 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 ()) () 1) 1 ) () 1)
(LET (PROD 2 (LET (PROD 2 ()) () 2) 2 ) () 2)
(LET (PROD nil (LET (PROD nil ()) () nil) nil ) () nil)
(LET (PROD t (LET (PROD t ()) () t) t ) () t)
(LET (PROD (cons t t) (LET (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 (())) (()) 1) 1 ) (()) 1)
(LET (PROD 2 (LET (PROD 2 (())) (()) 2) 2 ) (()) 2)
(LET (PROD nil (LET (PROD nil (())) (()) nil) nil ) (()) nil)
(LET (PROD t (LET (PROD t (())) (()) t) t ) (()) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LET (PROD 2 (LET (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LET (PROD nil (LET (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(LET (PROD t (LET (PROD t ((()))) ((())) t) t ) ((())) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LET (PROD 2 (LET (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LET (PROD nil (LET (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LET (PROD t (LET (PROD t (((())))) (((()))) t) t ) (((()))) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 'A) 'A 1) 1 ) 'A 1)
(LET (PROD 2 (LET (PROD 2 'A) 'A 2) 2 ) 'A 2)
(LET (PROD nil (LET (PROD nil 'A) 'A nil) nil ) 'A nil)
(LET (PROD t (LET (PROD t 'A) 'A t) t ) 'A t)
(LET (PROD (cons t t) (LET (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 'B) 'B 1) 1 ) 'B 1)
(LET (PROD 2 (LET (PROD 2 'B) 'B 2) 2 ) 'B 2)
(LET (PROD nil (LET (PROD nil 'B) 'B nil) nil ) 'B nil)
(LET (PROD t (LET (PROD t 'B) 'B t) t ) 'B t)
(LET (PROD (cons t t) (LET (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 'C) 'C 1) 1 ) 'C 1)
(LET (PROD 2 (LET (PROD 2 'C) 'C 2) 2 ) 'C 2)
(LET (PROD nil (LET (PROD nil 'C) 'C nil) nil ) 'C nil)
(LET (PROD t (LET (PROD t 'C) 'C t) t ) 'C t)
(LET (PROD (cons t t) (LET (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 '1) '1 1) 1 ) '1 1)
(LET (PROD 2 (LET (PROD 2 '1) '1 2) 2 ) '1 2)
(LET (PROD nil (LET (PROD nil '1) '1 nil) nil ) '1 nil)
(LET (PROD t (LET (PROD t '1) '1 t) t ) '1 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 '2) '2 1) 1 ) '2 1)
(LET (PROD 2 (LET (PROD 2 '2) '2 2) 2 ) '2 2)
(LET (PROD nil (LET (PROD nil '2) '2 nil) nil ) '2 nil)
(LET (PROD t (LET (PROD t '2) '2 t) t ) '2 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 '3) '3 1) 1 ) '3 1)
(LET (PROD 2 (LET (PROD 2 '3) '3 2) 2 ) '3 2)
(LET (PROD nil (LET (PROD nil '3) '3 nil) nil ) '3 nil)
(LET (PROD t (LET (PROD t '3) '3 t) t ) '3 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 '()) '() 1) 1 ) '() 1)
(LET (PROD 2 (LET (PROD 2 '()) '() 2) 2 ) '() 2)
(LET (PROD nil (LET (PROD nil '()) '() nil) nil ) '() nil)
(LET (PROD t (LET (PROD t '()) '() t) t ) '() t)
(LET (PROD (cons t t) (LET (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(LET (PROD 2 (LET (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(LET (PROD nil (LET (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(LET (PROD t (LET (PROD t '(())) '(()) t) t ) '(()) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LET (PROD 2 (LET (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LET (PROD nil (LET (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(LET (PROD t (LET (PROD t '((()))) '((())) t) t ) '((())) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LET (PROD 2 (LET (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LET (PROD nil (LET (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LET (PROD t (LET (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(LET (PROD 2 (LET (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(LET (PROD nil (LET (PROD nil ,A) ,A nil) nil ) ,A nil)
(LET (PROD t (LET (PROD t ,A) ,A t) t ) ,A t)
(LET (PROD (cons t t) (LET (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(LET (PROD 2 (LET (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(LET (PROD nil (LET (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(LET (PROD t (LET (PROD t ,1) ,1 t) t ) ,1 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(LET (PROD 2 (LET (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(LET (PROD nil (LET (PROD nil ,()) ,() nil) nil ) ,() nil)
(LET (PROD t (LET (PROD t ,()) ,() t) t ) ,() t)
(LET (PROD (cons t t) (LET (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LET (PROD 2 (LET (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LET (PROD nil (LET (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LET (PROD t (LET (PROD t ,(())) ,(()) t) t ) ,(()) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(LET (PROD 2 (LET (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(LET (PROD nil (LET (PROD nil `'A) `'A nil) nil ) `'A nil)
(LET (PROD t (LET (PROD t `'A) `'A t) t ) `'A t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(LET (PROD 2 (LET (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(LET (PROD nil (LET (PROD nil `'B) `'B nil) nil ) `'B nil)
(LET (PROD t (LET (PROD t `'B) `'B t) t ) `'B t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(LET (PROD 2 (LET (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(LET (PROD nil (LET (PROD nil `'C) `'C nil) nil ) `'C nil)
(LET (PROD t (LET (PROD t `'C) `'C t) t ) `'C t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(LET (PROD 2 (LET (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(LET (PROD nil (LET (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(LET (PROD t (LET (PROD t `'1) `'1 t) t ) `'1 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(LET (PROD 2 (LET (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(LET (PROD nil (LET (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(LET (PROD t (LET (PROD t `'2) `'2 t) t ) `'2 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(LET (PROD 2 (LET (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(LET (PROD nil (LET (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(LET (PROD t (LET (PROD t `'3) `'3 t) t ) `'3 t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(LET (PROD 2 (LET (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(LET (PROD nil (LET (PROD nil `'()) `'() nil) nil ) `'() nil)
(LET (PROD t (LET (PROD t `'()) `'() t) t ) `'() t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LET (PROD 2 (LET (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LET (PROD nil (LET (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LET (PROD t (LET (PROD t `'(())) `'(()) t) t ) `'(()) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LET (PROD 2 (LET (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LET (PROD nil (LET (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LET (PROD t (LET (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LET (PROD 1 (LET (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LET (PROD 2 (LET (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LET (PROD nil (LET (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LET (PROD t (LET (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LET (PROD (cons t t) (LET (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LET (PROD (cons nil t) (LET (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LET (PROD (cons nil nil) (LET (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LET (PROD (cons 0 0) (LET (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LET (PROD (cons 1 1) (LET (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LET (PROD (list 1 2 3) (LET (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LET (PROD (list (cons 1 1 ) ) (LET (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 T) T 1) 1 ) T 1)
(LIST (PROD 2 (LIST (PROD 2 T) T 2) 2 ) T 2)
(LIST (PROD nil (LIST (PROD nil T) T nil) nil ) T nil)
(LIST (PROD t (LIST (PROD t T) T t) t ) T t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(LIST (PROD 2 (LIST (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(LIST (PROD nil (LIST (PROD nil NIL) NIL nil) nil ) NIL nil)
(LIST (PROD t (LIST (PROD t NIL) NIL t) t ) NIL t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 A) A 1) 1 ) A 1)
(LIST (PROD 2 (LIST (PROD 2 A) A 2) 2 ) A 2)
(LIST (PROD nil (LIST (PROD nil A) A nil) nil ) A nil)
(LIST (PROD t (LIST (PROD t A) A t) t ) A t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 B) B 1) 1 ) B 1)
(LIST (PROD 2 (LIST (PROD 2 B) B 2) 2 ) B 2)
(LIST (PROD nil (LIST (PROD nil B) B nil) nil ) B nil)
(LIST (PROD t (LIST (PROD t B) B t) t ) B t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 C) C 1) 1 ) C 1)
(LIST (PROD 2 (LIST (PROD 2 C) C 2) 2 ) C 2)
(LIST (PROD nil (LIST (PROD nil C) C nil) nil ) C nil)
(LIST (PROD t (LIST (PROD t C) C t) t ) C t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 1) 1 1) 1 ) 1 1)
(LIST (PROD 2 (LIST (PROD 2 1) 1 2) 2 ) 1 2)
(LIST (PROD nil (LIST (PROD nil 1) 1 nil) nil ) 1 nil)
(LIST (PROD t (LIST (PROD t 1) 1 t) t ) 1 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 2) 2 1) 1 ) 2 1)
(LIST (PROD 2 (LIST (PROD 2 2) 2 2) 2 ) 2 2)
(LIST (PROD nil (LIST (PROD nil 2) 2 nil) nil ) 2 nil)
(LIST (PROD t (LIST (PROD t 2) 2 t) t ) 2 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 3) 3 1) 1 ) 3 1)
(LIST (PROD 2 (LIST (PROD 2 3) 3 2) 2 ) 3 2)
(LIST (PROD nil (LIST (PROD nil 3) 3 nil) nil ) 3 nil)
(LIST (PROD t (LIST (PROD t 3) 3 t) t ) 3 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 ()) () 1) 1 ) () 1)
(LIST (PROD 2 (LIST (PROD 2 ()) () 2) 2 ) () 2)
(LIST (PROD nil (LIST (PROD nil ()) () nil) nil ) () nil)
(LIST (PROD t (LIST (PROD t ()) () t) t ) () t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 (())) (()) 1) 1 ) (()) 1)
(LIST (PROD 2 (LIST (PROD 2 (())) (()) 2) 2 ) (()) 2)
(LIST (PROD nil (LIST (PROD nil (())) (()) nil) nil ) (()) nil)
(LIST (PROD t (LIST (PROD t (())) (()) t) t ) (()) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LIST (PROD 2 (LIST (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LIST (PROD nil (LIST (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(LIST (PROD t (LIST (PROD t ((()))) ((())) t) t ) ((())) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LIST (PROD 2 (LIST (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LIST (PROD nil (LIST (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LIST (PROD t (LIST (PROD t (((())))) (((()))) t) t ) (((()))) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 'A) 'A 1) 1 ) 'A 1)
(LIST (PROD 2 (LIST (PROD 2 'A) 'A 2) 2 ) 'A 2)
(LIST (PROD nil (LIST (PROD nil 'A) 'A nil) nil ) 'A nil)
(LIST (PROD t (LIST (PROD t 'A) 'A t) t ) 'A t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 'B) 'B 1) 1 ) 'B 1)
(LIST (PROD 2 (LIST (PROD 2 'B) 'B 2) 2 ) 'B 2)
(LIST (PROD nil (LIST (PROD nil 'B) 'B nil) nil ) 'B nil)
(LIST (PROD t (LIST (PROD t 'B) 'B t) t ) 'B t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 'C) 'C 1) 1 ) 'C 1)
(LIST (PROD 2 (LIST (PROD 2 'C) 'C 2) 2 ) 'C 2)
(LIST (PROD nil (LIST (PROD nil 'C) 'C nil) nil ) 'C nil)
(LIST (PROD t (LIST (PROD t 'C) 'C t) t ) 'C t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 '1) '1 1) 1 ) '1 1)
(LIST (PROD 2 (LIST (PROD 2 '1) '1 2) 2 ) '1 2)
(LIST (PROD nil (LIST (PROD nil '1) '1 nil) nil ) '1 nil)
(LIST (PROD t (LIST (PROD t '1) '1 t) t ) '1 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 '2) '2 1) 1 ) '2 1)
(LIST (PROD 2 (LIST (PROD 2 '2) '2 2) 2 ) '2 2)
(LIST (PROD nil (LIST (PROD nil '2) '2 nil) nil ) '2 nil)
(LIST (PROD t (LIST (PROD t '2) '2 t) t ) '2 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 '3) '3 1) 1 ) '3 1)
(LIST (PROD 2 (LIST (PROD 2 '3) '3 2) 2 ) '3 2)
(LIST (PROD nil (LIST (PROD nil '3) '3 nil) nil ) '3 nil)
(LIST (PROD t (LIST (PROD t '3) '3 t) t ) '3 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 '()) '() 1) 1 ) '() 1)
(LIST (PROD 2 (LIST (PROD 2 '()) '() 2) 2 ) '() 2)
(LIST (PROD nil (LIST (PROD nil '()) '() nil) nil ) '() nil)
(LIST (PROD t (LIST (PROD t '()) '() t) t ) '() t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(LIST (PROD 2 (LIST (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(LIST (PROD nil (LIST (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(LIST (PROD t (LIST (PROD t '(())) '(()) t) t ) '(()) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LIST (PROD 2 (LIST (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LIST (PROD nil (LIST (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(LIST (PROD t (LIST (PROD t '((()))) '((())) t) t ) '((())) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LIST (PROD 2 (LIST (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LIST (PROD nil (LIST (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LIST (PROD t (LIST (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(LIST (PROD 2 (LIST (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(LIST (PROD nil (LIST (PROD nil ,A) ,A nil) nil ) ,A nil)
(LIST (PROD t (LIST (PROD t ,A) ,A t) t ) ,A t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(LIST (PROD 2 (LIST (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(LIST (PROD nil (LIST (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(LIST (PROD t (LIST (PROD t ,1) ,1 t) t ) ,1 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(LIST (PROD 2 (LIST (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(LIST (PROD nil (LIST (PROD nil ,()) ,() nil) nil ) ,() nil)
(LIST (PROD t (LIST (PROD t ,()) ,() t) t ) ,() t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LIST (PROD 2 (LIST (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LIST (PROD nil (LIST (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LIST (PROD t (LIST (PROD t ,(())) ,(()) t) t ) ,(()) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(LIST (PROD 2 (LIST (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(LIST (PROD nil (LIST (PROD nil `'A) `'A nil) nil ) `'A nil)
(LIST (PROD t (LIST (PROD t `'A) `'A t) t ) `'A t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(LIST (PROD 2 (LIST (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(LIST (PROD nil (LIST (PROD nil `'B) `'B nil) nil ) `'B nil)
(LIST (PROD t (LIST (PROD t `'B) `'B t) t ) `'B t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(LIST (PROD 2 (LIST (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(LIST (PROD nil (LIST (PROD nil `'C) `'C nil) nil ) `'C nil)
(LIST (PROD t (LIST (PROD t `'C) `'C t) t ) `'C t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(LIST (PROD 2 (LIST (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(LIST (PROD nil (LIST (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(LIST (PROD t (LIST (PROD t `'1) `'1 t) t ) `'1 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(LIST (PROD 2 (LIST (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(LIST (PROD nil (LIST (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(LIST (PROD t (LIST (PROD t `'2) `'2 t) t ) `'2 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(LIST (PROD 2 (LIST (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(LIST (PROD nil (LIST (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(LIST (PROD t (LIST (PROD t `'3) `'3 t) t ) `'3 t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(LIST (PROD 2 (LIST (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(LIST (PROD nil (LIST (PROD nil `'()) `'() nil) nil ) `'() nil)
(LIST (PROD t (LIST (PROD t `'()) `'() t) t ) `'() t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LIST (PROD 2 (LIST (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LIST (PROD nil (LIST (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LIST (PROD t (LIST (PROD t `'(())) `'(()) t) t ) `'(()) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LIST (PROD 2 (LIST (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LIST (PROD nil (LIST (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LIST (PROD t (LIST (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LIST (PROD 1 (LIST (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LIST (PROD 2 (LIST (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LIST (PROD nil (LIST (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LIST (PROD t (LIST (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LIST (PROD (cons t t) (LIST (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LIST (PROD (cons nil t) (LIST (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LIST (PROD (cons nil nil) (LIST (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LIST (PROD (cons 0 0) (LIST (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LIST (PROD (cons 1 1) (LIST (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LIST (PROD (list 1 2 3) (LIST (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LIST (PROD (list (cons 1 1 ) ) (LIST (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 T) T 1) 1 ) T 1)
(LISTP (PROD 2 (LISTP (PROD 2 T) T 2) 2 ) T 2)
(LISTP (PROD nil (LISTP (PROD nil T) T nil) nil ) T nil)
(LISTP (PROD t (LISTP (PROD t T) T t) t ) T t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(LISTP (PROD 2 (LISTP (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(LISTP (PROD nil (LISTP (PROD nil NIL) NIL nil) nil ) NIL nil)
(LISTP (PROD t (LISTP (PROD t NIL) NIL t) t ) NIL t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 A) A 1) 1 ) A 1)
(LISTP (PROD 2 (LISTP (PROD 2 A) A 2) 2 ) A 2)
(LISTP (PROD nil (LISTP (PROD nil A) A nil) nil ) A nil)
(LISTP (PROD t (LISTP (PROD t A) A t) t ) A t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 B) B 1) 1 ) B 1)
(LISTP (PROD 2 (LISTP (PROD 2 B) B 2) 2 ) B 2)
(LISTP (PROD nil (LISTP (PROD nil B) B nil) nil ) B nil)
(LISTP (PROD t (LISTP (PROD t B) B t) t ) B t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 C) C 1) 1 ) C 1)
(LISTP (PROD 2 (LISTP (PROD 2 C) C 2) 2 ) C 2)
(LISTP (PROD nil (LISTP (PROD nil C) C nil) nil ) C nil)
(LISTP (PROD t (LISTP (PROD t C) C t) t ) C t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 1) 1 1) 1 ) 1 1)
(LISTP (PROD 2 (LISTP (PROD 2 1) 1 2) 2 ) 1 2)
(LISTP (PROD nil (LISTP (PROD nil 1) 1 nil) nil ) 1 nil)
(LISTP (PROD t (LISTP (PROD t 1) 1 t) t ) 1 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 2) 2 1) 1 ) 2 1)
(LISTP (PROD 2 (LISTP (PROD 2 2) 2 2) 2 ) 2 2)
(LISTP (PROD nil (LISTP (PROD nil 2) 2 nil) nil ) 2 nil)
(LISTP (PROD t (LISTP (PROD t 2) 2 t) t ) 2 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 3) 3 1) 1 ) 3 1)
(LISTP (PROD 2 (LISTP (PROD 2 3) 3 2) 2 ) 3 2)
(LISTP (PROD nil (LISTP (PROD nil 3) 3 nil) nil ) 3 nil)
(LISTP (PROD t (LISTP (PROD t 3) 3 t) t ) 3 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 ()) () 1) 1 ) () 1)
(LISTP (PROD 2 (LISTP (PROD 2 ()) () 2) 2 ) () 2)
(LISTP (PROD nil (LISTP (PROD nil ()) () nil) nil ) () nil)
(LISTP (PROD t (LISTP (PROD t ()) () t) t ) () t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 (())) (()) 1) 1 ) (()) 1)
(LISTP (PROD 2 (LISTP (PROD 2 (())) (()) 2) 2 ) (()) 2)
(LISTP (PROD nil (LISTP (PROD nil (())) (()) nil) nil ) (()) nil)
(LISTP (PROD t (LISTP (PROD t (())) (()) t) t ) (()) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LISTP (PROD 2 (LISTP (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LISTP (PROD nil (LISTP (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(LISTP (PROD t (LISTP (PROD t ((()))) ((())) t) t ) ((())) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LISTP (PROD 2 (LISTP (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LISTP (PROD nil (LISTP (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LISTP (PROD t (LISTP (PROD t (((())))) (((()))) t) t ) (((()))) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 'A) 'A 1) 1 ) 'A 1)
(LISTP (PROD 2 (LISTP (PROD 2 'A) 'A 2) 2 ) 'A 2)
(LISTP (PROD nil (LISTP (PROD nil 'A) 'A nil) nil ) 'A nil)
(LISTP (PROD t (LISTP (PROD t 'A) 'A t) t ) 'A t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 'B) 'B 1) 1 ) 'B 1)
(LISTP (PROD 2 (LISTP (PROD 2 'B) 'B 2) 2 ) 'B 2)
(LISTP (PROD nil (LISTP (PROD nil 'B) 'B nil) nil ) 'B nil)
(LISTP (PROD t (LISTP (PROD t 'B) 'B t) t ) 'B t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 'C) 'C 1) 1 ) 'C 1)
(LISTP (PROD 2 (LISTP (PROD 2 'C) 'C 2) 2 ) 'C 2)
(LISTP (PROD nil (LISTP (PROD nil 'C) 'C nil) nil ) 'C nil)
(LISTP (PROD t (LISTP (PROD t 'C) 'C t) t ) 'C t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 '1) '1 1) 1 ) '1 1)
(LISTP (PROD 2 (LISTP (PROD 2 '1) '1 2) 2 ) '1 2)
(LISTP (PROD nil (LISTP (PROD nil '1) '1 nil) nil ) '1 nil)
(LISTP (PROD t (LISTP (PROD t '1) '1 t) t ) '1 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 '2) '2 1) 1 ) '2 1)
(LISTP (PROD 2 (LISTP (PROD 2 '2) '2 2) 2 ) '2 2)
(LISTP (PROD nil (LISTP (PROD nil '2) '2 nil) nil ) '2 nil)
(LISTP (PROD t (LISTP (PROD t '2) '2 t) t ) '2 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 '3) '3 1) 1 ) '3 1)
(LISTP (PROD 2 (LISTP (PROD 2 '3) '3 2) 2 ) '3 2)
(LISTP (PROD nil (LISTP (PROD nil '3) '3 nil) nil ) '3 nil)
(LISTP (PROD t (LISTP (PROD t '3) '3 t) t ) '3 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 '()) '() 1) 1 ) '() 1)
(LISTP (PROD 2 (LISTP (PROD 2 '()) '() 2) 2 ) '() 2)
(LISTP (PROD nil (LISTP (PROD nil '()) '() nil) nil ) '() nil)
(LISTP (PROD t (LISTP (PROD t '()) '() t) t ) '() t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(LISTP (PROD 2 (LISTP (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(LISTP (PROD nil (LISTP (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(LISTP (PROD t (LISTP (PROD t '(())) '(()) t) t ) '(()) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LISTP (PROD 2 (LISTP (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LISTP (PROD nil (LISTP (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(LISTP (PROD t (LISTP (PROD t '((()))) '((())) t) t ) '((())) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LISTP (PROD 2 (LISTP (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LISTP (PROD nil (LISTP (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LISTP (PROD t (LISTP (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(LISTP (PROD 2 (LISTP (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(LISTP (PROD nil (LISTP (PROD nil ,A) ,A nil) nil ) ,A nil)
(LISTP (PROD t (LISTP (PROD t ,A) ,A t) t ) ,A t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(LISTP (PROD 2 (LISTP (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(LISTP (PROD nil (LISTP (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(LISTP (PROD t (LISTP (PROD t ,1) ,1 t) t ) ,1 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(LISTP (PROD 2 (LISTP (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(LISTP (PROD nil (LISTP (PROD nil ,()) ,() nil) nil ) ,() nil)
(LISTP (PROD t (LISTP (PROD t ,()) ,() t) t ) ,() t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LISTP (PROD 2 (LISTP (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LISTP (PROD nil (LISTP (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LISTP (PROD t (LISTP (PROD t ,(())) ,(()) t) t ) ,(()) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(LISTP (PROD nil (LISTP (PROD nil `'A) `'A nil) nil ) `'A nil)
(LISTP (PROD t (LISTP (PROD t `'A) `'A t) t ) `'A t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(LISTP (PROD nil (LISTP (PROD nil `'B) `'B nil) nil ) `'B nil)
(LISTP (PROD t (LISTP (PROD t `'B) `'B t) t ) `'B t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(LISTP (PROD nil (LISTP (PROD nil `'C) `'C nil) nil ) `'C nil)
(LISTP (PROD t (LISTP (PROD t `'C) `'C t) t ) `'C t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(LISTP (PROD nil (LISTP (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(LISTP (PROD t (LISTP (PROD t `'1) `'1 t) t ) `'1 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(LISTP (PROD nil (LISTP (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(LISTP (PROD t (LISTP (PROD t `'2) `'2 t) t ) `'2 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(LISTP (PROD nil (LISTP (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(LISTP (PROD t (LISTP (PROD t `'3) `'3 t) t ) `'3 t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(LISTP (PROD nil (LISTP (PROD nil `'()) `'() nil) nil ) `'() nil)
(LISTP (PROD t (LISTP (PROD t `'()) `'() t) t ) `'() t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LISTP (PROD nil (LISTP (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LISTP (PROD t (LISTP (PROD t `'(())) `'(()) t) t ) `'(()) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LISTP (PROD nil (LISTP (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LISTP (PROD t (LISTP (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LISTP (PROD 1 (LISTP (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LISTP (PROD 2 (LISTP (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LISTP (PROD nil (LISTP (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LISTP (PROD t (LISTP (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LISTP (PROD (cons t t) (LISTP (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LISTP (PROD (cons nil t) (LISTP (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LISTP (PROD (cons nil nil) (LISTP (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LISTP (PROD (cons 0 0) (LISTP (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LISTP (PROD (cons 1 1) (LISTP (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LISTP (PROD (list 1 2 3) (LISTP (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LISTP (PROD (list (cons 1 1 ) ) (LISTP (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 T) T 1) 1 ) T 1)
(MAP (PROD 2 (MAP (PROD 2 T) T 2) 2 ) T 2)
(MAP (PROD nil (MAP (PROD nil T) T nil) nil ) T nil)
(MAP (PROD t (MAP (PROD t T) T t) t ) T t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(MAP (PROD 2 (MAP (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(MAP (PROD nil (MAP (PROD nil NIL) NIL nil) nil ) NIL nil)
(MAP (PROD t (MAP (PROD t NIL) NIL t) t ) NIL t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 A) A 1) 1 ) A 1)
(MAP (PROD 2 (MAP (PROD 2 A) A 2) 2 ) A 2)
(MAP (PROD nil (MAP (PROD nil A) A nil) nil ) A nil)
(MAP (PROD t (MAP (PROD t A) A t) t ) A t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 B) B 1) 1 ) B 1)
(MAP (PROD 2 (MAP (PROD 2 B) B 2) 2 ) B 2)
(MAP (PROD nil (MAP (PROD nil B) B nil) nil ) B nil)
(MAP (PROD t (MAP (PROD t B) B t) t ) B t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 C) C 1) 1 ) C 1)
(MAP (PROD 2 (MAP (PROD 2 C) C 2) 2 ) C 2)
(MAP (PROD nil (MAP (PROD nil C) C nil) nil ) C nil)
(MAP (PROD t (MAP (PROD t C) C t) t ) C t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 1) 1 1) 1 ) 1 1)
(MAP (PROD 2 (MAP (PROD 2 1) 1 2) 2 ) 1 2)
(MAP (PROD nil (MAP (PROD nil 1) 1 nil) nil ) 1 nil)
(MAP (PROD t (MAP (PROD t 1) 1 t) t ) 1 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 2) 2 1) 1 ) 2 1)
(MAP (PROD 2 (MAP (PROD 2 2) 2 2) 2 ) 2 2)
(MAP (PROD nil (MAP (PROD nil 2) 2 nil) nil ) 2 nil)
(MAP (PROD t (MAP (PROD t 2) 2 t) t ) 2 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 3) 3 1) 1 ) 3 1)
(MAP (PROD 2 (MAP (PROD 2 3) 3 2) 2 ) 3 2)
(MAP (PROD nil (MAP (PROD nil 3) 3 nil) nil ) 3 nil)
(MAP (PROD t (MAP (PROD t 3) 3 t) t ) 3 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 ()) () 1) 1 ) () 1)
(MAP (PROD 2 (MAP (PROD 2 ()) () 2) 2 ) () 2)
(MAP (PROD nil (MAP (PROD nil ()) () nil) nil ) () nil)
(MAP (PROD t (MAP (PROD t ()) () t) t ) () t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 (())) (()) 1) 1 ) (()) 1)
(MAP (PROD 2 (MAP (PROD 2 (())) (()) 2) 2 ) (()) 2)
(MAP (PROD nil (MAP (PROD nil (())) (()) nil) nil ) (()) nil)
(MAP (PROD t (MAP (PROD t (())) (()) t) t ) (()) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(MAP (PROD 2 (MAP (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(MAP (PROD nil (MAP (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(MAP (PROD t (MAP (PROD t ((()))) ((())) t) t ) ((())) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(MAP (PROD 2 (MAP (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(MAP (PROD nil (MAP (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(MAP (PROD t (MAP (PROD t (((())))) (((()))) t) t ) (((()))) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 'A) 'A 1) 1 ) 'A 1)
(MAP (PROD 2 (MAP (PROD 2 'A) 'A 2) 2 ) 'A 2)
(MAP (PROD nil (MAP (PROD nil 'A) 'A nil) nil ) 'A nil)
(MAP (PROD t (MAP (PROD t 'A) 'A t) t ) 'A t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 'B) 'B 1) 1 ) 'B 1)
(MAP (PROD 2 (MAP (PROD 2 'B) 'B 2) 2 ) 'B 2)
(MAP (PROD nil (MAP (PROD nil 'B) 'B nil) nil ) 'B nil)
(MAP (PROD t (MAP (PROD t 'B) 'B t) t ) 'B t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 'C) 'C 1) 1 ) 'C 1)
(MAP (PROD 2 (MAP (PROD 2 'C) 'C 2) 2 ) 'C 2)
(MAP (PROD nil (MAP (PROD nil 'C) 'C nil) nil ) 'C nil)
(MAP (PROD t (MAP (PROD t 'C) 'C t) t ) 'C t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 '1) '1 1) 1 ) '1 1)
(MAP (PROD 2 (MAP (PROD 2 '1) '1 2) 2 ) '1 2)
(MAP (PROD nil (MAP (PROD nil '1) '1 nil) nil ) '1 nil)
(MAP (PROD t (MAP (PROD t '1) '1 t) t ) '1 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 '2) '2 1) 1 ) '2 1)
(MAP (PROD 2 (MAP (PROD 2 '2) '2 2) 2 ) '2 2)
(MAP (PROD nil (MAP (PROD nil '2) '2 nil) nil ) '2 nil)
(MAP (PROD t (MAP (PROD t '2) '2 t) t ) '2 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 '3) '3 1) 1 ) '3 1)
(MAP (PROD 2 (MAP (PROD 2 '3) '3 2) 2 ) '3 2)
(MAP (PROD nil (MAP (PROD nil '3) '3 nil) nil ) '3 nil)
(MAP (PROD t (MAP (PROD t '3) '3 t) t ) '3 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 '()) '() 1) 1 ) '() 1)
(MAP (PROD 2 (MAP (PROD 2 '()) '() 2) 2 ) '() 2)
(MAP (PROD nil (MAP (PROD nil '()) '() nil) nil ) '() nil)
(MAP (PROD t (MAP (PROD t '()) '() t) t ) '() t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(MAP (PROD 2 (MAP (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(MAP (PROD nil (MAP (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(MAP (PROD t (MAP (PROD t '(())) '(()) t) t ) '(()) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(MAP (PROD 2 (MAP (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(MAP (PROD nil (MAP (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(MAP (PROD t (MAP (PROD t '((()))) '((())) t) t ) '((())) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(MAP (PROD 2 (MAP (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(MAP (PROD nil (MAP (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(MAP (PROD t (MAP (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(MAP (PROD 2 (MAP (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(MAP (PROD nil (MAP (PROD nil ,A) ,A nil) nil ) ,A nil)
(MAP (PROD t (MAP (PROD t ,A) ,A t) t ) ,A t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(MAP (PROD 2 (MAP (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(MAP (PROD nil (MAP (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(MAP (PROD t (MAP (PROD t ,1) ,1 t) t ) ,1 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(MAP (PROD 2 (MAP (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(MAP (PROD nil (MAP (PROD nil ,()) ,() nil) nil ) ,() nil)
(MAP (PROD t (MAP (PROD t ,()) ,() t) t ) ,() t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(MAP (PROD 2 (MAP (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(MAP (PROD nil (MAP (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(MAP (PROD t (MAP (PROD t ,(())) ,(()) t) t ) ,(()) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(MAP (PROD 2 (MAP (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(MAP (PROD nil (MAP (PROD nil `'A) `'A nil) nil ) `'A nil)
(MAP (PROD t (MAP (PROD t `'A) `'A t) t ) `'A t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(MAP (PROD 2 (MAP (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(MAP (PROD nil (MAP (PROD nil `'B) `'B nil) nil ) `'B nil)
(MAP (PROD t (MAP (PROD t `'B) `'B t) t ) `'B t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(MAP (PROD 2 (MAP (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(MAP (PROD nil (MAP (PROD nil `'C) `'C nil) nil ) `'C nil)
(MAP (PROD t (MAP (PROD t `'C) `'C t) t ) `'C t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(MAP (PROD 2 (MAP (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(MAP (PROD nil (MAP (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(MAP (PROD t (MAP (PROD t `'1) `'1 t) t ) `'1 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(MAP (PROD 2 (MAP (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(MAP (PROD nil (MAP (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(MAP (PROD t (MAP (PROD t `'2) `'2 t) t ) `'2 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(MAP (PROD 2 (MAP (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(MAP (PROD nil (MAP (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(MAP (PROD t (MAP (PROD t `'3) `'3 t) t ) `'3 t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(MAP (PROD 2 (MAP (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(MAP (PROD nil (MAP (PROD nil `'()) `'() nil) nil ) `'() nil)
(MAP (PROD t (MAP (PROD t `'()) `'() t) t ) `'() t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(MAP (PROD 2 (MAP (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(MAP (PROD nil (MAP (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(MAP (PROD t (MAP (PROD t `'(())) `'(()) t) t ) `'(()) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(MAP (PROD 2 (MAP (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(MAP (PROD nil (MAP (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(MAP (PROD t (MAP (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(MAP (PROD 1 (MAP (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(MAP (PROD 2 (MAP (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(MAP (PROD nil (MAP (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(MAP (PROD t (MAP (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(MAP (PROD (cons t t) (MAP (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(MAP (PROD (cons nil t) (MAP (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(MAP (PROD (cons nil nil) (MAP (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(MAP (PROD (cons 0 0) (MAP (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(MAP (PROD (cons 1 1) (MAP (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(MAP (PROD (list 1 2 3) (MAP (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(MAP (PROD (list (cons 1 1 ) ) (MAP (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 T) T 1) 1 ) T 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 T) T 2) 2 ) T 2)
(MEMBER (PROD nil (MEMBER (PROD nil T) T nil) nil ) T nil)
(MEMBER (PROD t (MEMBER (PROD t T) T t) t ) T t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(MEMBER (PROD nil (MEMBER (PROD nil NIL) NIL nil) nil ) NIL nil)
(MEMBER (PROD t (MEMBER (PROD t NIL) NIL t) t ) NIL t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 A) A 1) 1 ) A 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 A) A 2) 2 ) A 2)
(MEMBER (PROD nil (MEMBER (PROD nil A) A nil) nil ) A nil)
(MEMBER (PROD t (MEMBER (PROD t A) A t) t ) A t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 B) B 1) 1 ) B 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 B) B 2) 2 ) B 2)
(MEMBER (PROD nil (MEMBER (PROD nil B) B nil) nil ) B nil)
(MEMBER (PROD t (MEMBER (PROD t B) B t) t ) B t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 C) C 1) 1 ) C 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 C) C 2) 2 ) C 2)
(MEMBER (PROD nil (MEMBER (PROD nil C) C nil) nil ) C nil)
(MEMBER (PROD t (MEMBER (PROD t C) C t) t ) C t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 1) 1 1) 1 ) 1 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 1) 1 2) 2 ) 1 2)
(MEMBER (PROD nil (MEMBER (PROD nil 1) 1 nil) nil ) 1 nil)
(MEMBER (PROD t (MEMBER (PROD t 1) 1 t) t ) 1 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 2) 2 1) 1 ) 2 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 2) 2 2) 2 ) 2 2)
(MEMBER (PROD nil (MEMBER (PROD nil 2) 2 nil) nil ) 2 nil)
(MEMBER (PROD t (MEMBER (PROD t 2) 2 t) t ) 2 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 3) 3 1) 1 ) 3 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 3) 3 2) 2 ) 3 2)
(MEMBER (PROD nil (MEMBER (PROD nil 3) 3 nil) nil ) 3 nil)
(MEMBER (PROD t (MEMBER (PROD t 3) 3 t) t ) 3 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 ()) () 1) 1 ) () 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 ()) () 2) 2 ) () 2)
(MEMBER (PROD nil (MEMBER (PROD nil ()) () nil) nil ) () nil)
(MEMBER (PROD t (MEMBER (PROD t ()) () t) t ) () t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 (())) (()) 1) 1 ) (()) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 (())) (()) 2) 2 ) (()) 2)
(MEMBER (PROD nil (MEMBER (PROD nil (())) (()) nil) nil ) (()) nil)
(MEMBER (PROD t (MEMBER (PROD t (())) (()) t) t ) (()) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(MEMBER (PROD nil (MEMBER (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(MEMBER (PROD t (MEMBER (PROD t ((()))) ((())) t) t ) ((())) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(MEMBER (PROD nil (MEMBER (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(MEMBER (PROD t (MEMBER (PROD t (((())))) (((()))) t) t ) (((()))) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 'A) 'A 1) 1 ) 'A 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 'A) 'A 2) 2 ) 'A 2)
(MEMBER (PROD nil (MEMBER (PROD nil 'A) 'A nil) nil ) 'A nil)
(MEMBER (PROD t (MEMBER (PROD t 'A) 'A t) t ) 'A t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 'B) 'B 1) 1 ) 'B 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 'B) 'B 2) 2 ) 'B 2)
(MEMBER (PROD nil (MEMBER (PROD nil 'B) 'B nil) nil ) 'B nil)
(MEMBER (PROD t (MEMBER (PROD t 'B) 'B t) t ) 'B t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 'C) 'C 1) 1 ) 'C 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 'C) 'C 2) 2 ) 'C 2)
(MEMBER (PROD nil (MEMBER (PROD nil 'C) 'C nil) nil ) 'C nil)
(MEMBER (PROD t (MEMBER (PROD t 'C) 'C t) t ) 'C t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 '1) '1 1) 1 ) '1 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 '1) '1 2) 2 ) '1 2)
(MEMBER (PROD nil (MEMBER (PROD nil '1) '1 nil) nil ) '1 nil)
(MEMBER (PROD t (MEMBER (PROD t '1) '1 t) t ) '1 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 '2) '2 1) 1 ) '2 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 '2) '2 2) 2 ) '2 2)
(MEMBER (PROD nil (MEMBER (PROD nil '2) '2 nil) nil ) '2 nil)
(MEMBER (PROD t (MEMBER (PROD t '2) '2 t) t ) '2 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 '3) '3 1) 1 ) '3 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 '3) '3 2) 2 ) '3 2)
(MEMBER (PROD nil (MEMBER (PROD nil '3) '3 nil) nil ) '3 nil)
(MEMBER (PROD t (MEMBER (PROD t '3) '3 t) t ) '3 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 '()) '() 1) 1 ) '() 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 '()) '() 2) 2 ) '() 2)
(MEMBER (PROD nil (MEMBER (PROD nil '()) '() nil) nil ) '() nil)
(MEMBER (PROD t (MEMBER (PROD t '()) '() t) t ) '() t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(MEMBER (PROD nil (MEMBER (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(MEMBER (PROD t (MEMBER (PROD t '(())) '(()) t) t ) '(()) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(MEMBER (PROD nil (MEMBER (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(MEMBER (PROD t (MEMBER (PROD t '((()))) '((())) t) t ) '((())) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(MEMBER (PROD nil (MEMBER (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(MEMBER (PROD t (MEMBER (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(MEMBER (PROD nil (MEMBER (PROD nil ,A) ,A nil) nil ) ,A nil)
(MEMBER (PROD t (MEMBER (PROD t ,A) ,A t) t ) ,A t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(MEMBER (PROD nil (MEMBER (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(MEMBER (PROD t (MEMBER (PROD t ,1) ,1 t) t ) ,1 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(MEMBER (PROD nil (MEMBER (PROD nil ,()) ,() nil) nil ) ,() nil)
(MEMBER (PROD t (MEMBER (PROD t ,()) ,() t) t ) ,() t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(MEMBER (PROD nil (MEMBER (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(MEMBER (PROD t (MEMBER (PROD t ,(())) ,(()) t) t ) ,(()) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'A) `'A nil) nil ) `'A nil)
(MEMBER (PROD t (MEMBER (PROD t `'A) `'A t) t ) `'A t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'B) `'B nil) nil ) `'B nil)
(MEMBER (PROD t (MEMBER (PROD t `'B) `'B t) t ) `'B t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'C) `'C nil) nil ) `'C nil)
(MEMBER (PROD t (MEMBER (PROD t `'C) `'C t) t ) `'C t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(MEMBER (PROD t (MEMBER (PROD t `'1) `'1 t) t ) `'1 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(MEMBER (PROD t (MEMBER (PROD t `'2) `'2 t) t ) `'2 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(MEMBER (PROD t (MEMBER (PROD t `'3) `'3 t) t ) `'3 t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'()) `'() nil) nil ) `'() nil)
(MEMBER (PROD t (MEMBER (PROD t `'()) `'() t) t ) `'() t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(MEMBER (PROD t (MEMBER (PROD t `'(())) `'(()) t) t ) `'(()) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(MEMBER (PROD t (MEMBER (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(MEMBER (PROD 1 (MEMBER (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(MEMBER (PROD 2 (MEMBER (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(MEMBER (PROD nil (MEMBER (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(MEMBER (PROD t (MEMBER (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(MEMBER (PROD (cons t t) (MEMBER (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(MEMBER (PROD (cons nil t) (MEMBER (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(MEMBER (PROD (cons nil nil) (MEMBER (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(MEMBER (PROD (cons 0 0) (MEMBER (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(MEMBER (PROD (cons 1 1) (MEMBER (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(MEMBER (PROD (list 1 2 3) (MEMBER (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(MEMBER (PROD (list (cons 1 1 ) ) (MEMBER (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 T) T 1) 1 ) T 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 T) T 2) 2 ) T 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil T) T nil) nil ) T nil)
(MEMBERP (PROD t (MEMBERP (PROD t T) T t) t ) T t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil NIL) NIL nil) nil ) NIL nil)
(MEMBERP (PROD t (MEMBERP (PROD t NIL) NIL t) t ) NIL t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 A) A 1) 1 ) A 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 A) A 2) 2 ) A 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil A) A nil) nil ) A nil)
(MEMBERP (PROD t (MEMBERP (PROD t A) A t) t ) A t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 B) B 1) 1 ) B 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 B) B 2) 2 ) B 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil B) B nil) nil ) B nil)
(MEMBERP (PROD t (MEMBERP (PROD t B) B t) t ) B t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 C) C 1) 1 ) C 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 C) C 2) 2 ) C 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil C) C nil) nil ) C nil)
(MEMBERP (PROD t (MEMBERP (PROD t C) C t) t ) C t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 1) 1 1) 1 ) 1 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 1) 1 2) 2 ) 1 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil 1) 1 nil) nil ) 1 nil)
(MEMBERP (PROD t (MEMBERP (PROD t 1) 1 t) t ) 1 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 2) 2 1) 1 ) 2 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 2) 2 2) 2 ) 2 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil 2) 2 nil) nil ) 2 nil)
(MEMBERP (PROD t (MEMBERP (PROD t 2) 2 t) t ) 2 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 3) 3 1) 1 ) 3 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 3) 3 2) 2 ) 3 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil 3) 3 nil) nil ) 3 nil)
(MEMBERP (PROD t (MEMBERP (PROD t 3) 3 t) t ) 3 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 ()) () 1) 1 ) () 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 ()) () 2) 2 ) () 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil ()) () nil) nil ) () nil)
(MEMBERP (PROD t (MEMBERP (PROD t ()) () t) t ) () t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 (())) (()) 1) 1 ) (()) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 (())) (()) 2) 2 ) (()) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil (())) (()) nil) nil ) (()) nil)
(MEMBERP (PROD t (MEMBERP (PROD t (())) (()) t) t ) (()) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(MEMBERP (PROD t (MEMBERP (PROD t ((()))) ((())) t) t ) ((())) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(MEMBERP (PROD t (MEMBERP (PROD t (((())))) (((()))) t) t ) (((()))) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 'A) 'A 1) 1 ) 'A 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 'A) 'A 2) 2 ) 'A 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil 'A) 'A nil) nil ) 'A nil)
(MEMBERP (PROD t (MEMBERP (PROD t 'A) 'A t) t ) 'A t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 'B) 'B 1) 1 ) 'B 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 'B) 'B 2) 2 ) 'B 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil 'B) 'B nil) nil ) 'B nil)
(MEMBERP (PROD t (MEMBERP (PROD t 'B) 'B t) t ) 'B t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 'C) 'C 1) 1 ) 'C 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 'C) 'C 2) 2 ) 'C 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil 'C) 'C nil) nil ) 'C nil)
(MEMBERP (PROD t (MEMBERP (PROD t 'C) 'C t) t ) 'C t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 '1) '1 1) 1 ) '1 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 '1) '1 2) 2 ) '1 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil '1) '1 nil) nil ) '1 nil)
(MEMBERP (PROD t (MEMBERP (PROD t '1) '1 t) t ) '1 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 '2) '2 1) 1 ) '2 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 '2) '2 2) 2 ) '2 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil '2) '2 nil) nil ) '2 nil)
(MEMBERP (PROD t (MEMBERP (PROD t '2) '2 t) t ) '2 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 '3) '3 1) 1 ) '3 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 '3) '3 2) 2 ) '3 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil '3) '3 nil) nil ) '3 nil)
(MEMBERP (PROD t (MEMBERP (PROD t '3) '3 t) t ) '3 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 '()) '() 1) 1 ) '() 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 '()) '() 2) 2 ) '() 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil '()) '() nil) nil ) '() nil)
(MEMBERP (PROD t (MEMBERP (PROD t '()) '() t) t ) '() t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(MEMBERP (PROD t (MEMBERP (PROD t '(())) '(()) t) t ) '(()) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(MEMBERP (PROD t (MEMBERP (PROD t '((()))) '((())) t) t ) '((())) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(MEMBERP (PROD t (MEMBERP (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil ,A) ,A nil) nil ) ,A nil)
(MEMBERP (PROD t (MEMBERP (PROD t ,A) ,A t) t ) ,A t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(MEMBERP (PROD t (MEMBERP (PROD t ,1) ,1 t) t ) ,1 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil ,()) ,() nil) nil ) ,() nil)
(MEMBERP (PROD t (MEMBERP (PROD t ,()) ,() t) t ) ,() t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(MEMBERP (PROD t (MEMBERP (PROD t ,(())) ,(()) t) t ) ,(()) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'A) `'A nil) nil ) `'A nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'A) `'A t) t ) `'A t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'B) `'B nil) nil ) `'B nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'B) `'B t) t ) `'B t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'C) `'C nil) nil ) `'C nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'C) `'C t) t ) `'C t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'1) `'1 t) t ) `'1 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'2) `'2 t) t ) `'2 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'3) `'3 t) t ) `'3 t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'()) `'() nil) nil ) `'() nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'()) `'() t) t ) `'() t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'(())) `'(()) t) t ) `'(()) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(MEMBERP (PROD 1 (MEMBERP (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(MEMBERP (PROD 2 (MEMBERP (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(MEMBERP (PROD nil (MEMBERP (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(MEMBERP (PROD t (MEMBERP (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(MEMBERP (PROD (cons t t) (MEMBERP (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(MEMBERP (PROD (cons nil t) (MEMBERP (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(MEMBERP (PROD (cons nil nil) (MEMBERP (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(MEMBERP (PROD (cons 0 0) (MEMBERP (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(MEMBERP (PROD (cons 1 1) (MEMBERP (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(MEMBERP (PROD (list 1 2 3) (MEMBERP (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(MEMBERP (PROD (list (cons 1 1 ) ) (MEMBERP (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 T) T 1) 1 ) T 1)
(NOT (PROD 2 (NOT (PROD 2 T) T 2) 2 ) T 2)
(NOT (PROD nil (NOT (PROD nil T) T nil) nil ) T nil)
(NOT (PROD t (NOT (PROD t T) T t) t ) T t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(NOT (PROD 2 (NOT (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(NOT (PROD nil (NOT (PROD nil NIL) NIL nil) nil ) NIL nil)
(NOT (PROD t (NOT (PROD t NIL) NIL t) t ) NIL t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 A) A 1) 1 ) A 1)
(NOT (PROD 2 (NOT (PROD 2 A) A 2) 2 ) A 2)
(NOT (PROD nil (NOT (PROD nil A) A nil) nil ) A nil)
(NOT (PROD t (NOT (PROD t A) A t) t ) A t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 B) B 1) 1 ) B 1)
(NOT (PROD 2 (NOT (PROD 2 B) B 2) 2 ) B 2)
(NOT (PROD nil (NOT (PROD nil B) B nil) nil ) B nil)
(NOT (PROD t (NOT (PROD t B) B t) t ) B t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 C) C 1) 1 ) C 1)
(NOT (PROD 2 (NOT (PROD 2 C) C 2) 2 ) C 2)
(NOT (PROD nil (NOT (PROD nil C) C nil) nil ) C nil)
(NOT (PROD t (NOT (PROD t C) C t) t ) C t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 1) 1 1) 1 ) 1 1)
(NOT (PROD 2 (NOT (PROD 2 1) 1 2) 2 ) 1 2)
(NOT (PROD nil (NOT (PROD nil 1) 1 nil) nil ) 1 nil)
(NOT (PROD t (NOT (PROD t 1) 1 t) t ) 1 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 2) 2 1) 1 ) 2 1)
(NOT (PROD 2 (NOT (PROD 2 2) 2 2) 2 ) 2 2)
(NOT (PROD nil (NOT (PROD nil 2) 2 nil) nil ) 2 nil)
(NOT (PROD t (NOT (PROD t 2) 2 t) t ) 2 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 3) 3 1) 1 ) 3 1)
(NOT (PROD 2 (NOT (PROD 2 3) 3 2) 2 ) 3 2)
(NOT (PROD nil (NOT (PROD nil 3) 3 nil) nil ) 3 nil)
(NOT (PROD t (NOT (PROD t 3) 3 t) t ) 3 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 ()) () 1) 1 ) () 1)
(NOT (PROD 2 (NOT (PROD 2 ()) () 2) 2 ) () 2)
(NOT (PROD nil (NOT (PROD nil ()) () nil) nil ) () nil)
(NOT (PROD t (NOT (PROD t ()) () t) t ) () t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 (())) (()) 1) 1 ) (()) 1)
(NOT (PROD 2 (NOT (PROD 2 (())) (()) 2) 2 ) (()) 2)
(NOT (PROD nil (NOT (PROD nil (())) (()) nil) nil ) (()) nil)
(NOT (PROD t (NOT (PROD t (())) (()) t) t ) (()) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(NOT (PROD 2 (NOT (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(NOT (PROD nil (NOT (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(NOT (PROD t (NOT (PROD t ((()))) ((())) t) t ) ((())) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(NOT (PROD 2 (NOT (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(NOT (PROD nil (NOT (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(NOT (PROD t (NOT (PROD t (((())))) (((()))) t) t ) (((()))) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 'A) 'A 1) 1 ) 'A 1)
(NOT (PROD 2 (NOT (PROD 2 'A) 'A 2) 2 ) 'A 2)
(NOT (PROD nil (NOT (PROD nil 'A) 'A nil) nil ) 'A nil)
(NOT (PROD t (NOT (PROD t 'A) 'A t) t ) 'A t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 'B) 'B 1) 1 ) 'B 1)
(NOT (PROD 2 (NOT (PROD 2 'B) 'B 2) 2 ) 'B 2)
(NOT (PROD nil (NOT (PROD nil 'B) 'B nil) nil ) 'B nil)
(NOT (PROD t (NOT (PROD t 'B) 'B t) t ) 'B t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 'C) 'C 1) 1 ) 'C 1)
(NOT (PROD 2 (NOT (PROD 2 'C) 'C 2) 2 ) 'C 2)
(NOT (PROD nil (NOT (PROD nil 'C) 'C nil) nil ) 'C nil)
(NOT (PROD t (NOT (PROD t 'C) 'C t) t ) 'C t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 '1) '1 1) 1 ) '1 1)
(NOT (PROD 2 (NOT (PROD 2 '1) '1 2) 2 ) '1 2)
(NOT (PROD nil (NOT (PROD nil '1) '1 nil) nil ) '1 nil)
(NOT (PROD t (NOT (PROD t '1) '1 t) t ) '1 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 '2) '2 1) 1 ) '2 1)
(NOT (PROD 2 (NOT (PROD 2 '2) '2 2) 2 ) '2 2)
(NOT (PROD nil (NOT (PROD nil '2) '2 nil) nil ) '2 nil)
(NOT (PROD t (NOT (PROD t '2) '2 t) t ) '2 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 '3) '3 1) 1 ) '3 1)
(NOT (PROD 2 (NOT (PROD 2 '3) '3 2) 2 ) '3 2)
(NOT (PROD nil (NOT (PROD nil '3) '3 nil) nil ) '3 nil)
(NOT (PROD t (NOT (PROD t '3) '3 t) t ) '3 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 '()) '() 1) 1 ) '() 1)
(NOT (PROD 2 (NOT (PROD 2 '()) '() 2) 2 ) '() 2)
(NOT (PROD nil (NOT (PROD nil '()) '() nil) nil ) '() nil)
(NOT (PROD t (NOT (PROD t '()) '() t) t ) '() t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(NOT (PROD 2 (NOT (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(NOT (PROD nil (NOT (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(NOT (PROD t (NOT (PROD t '(())) '(()) t) t ) '(()) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(NOT (PROD 2 (NOT (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(NOT (PROD nil (NOT (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(NOT (PROD t (NOT (PROD t '((()))) '((())) t) t ) '((())) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(NOT (PROD 2 (NOT (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(NOT (PROD nil (NOT (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(NOT (PROD t (NOT (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(NOT (PROD 2 (NOT (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(NOT (PROD nil (NOT (PROD nil ,A) ,A nil) nil ) ,A nil)
(NOT (PROD t (NOT (PROD t ,A) ,A t) t ) ,A t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(NOT (PROD 2 (NOT (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(NOT (PROD nil (NOT (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(NOT (PROD t (NOT (PROD t ,1) ,1 t) t ) ,1 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(NOT (PROD 2 (NOT (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(NOT (PROD nil (NOT (PROD nil ,()) ,() nil) nil ) ,() nil)
(NOT (PROD t (NOT (PROD t ,()) ,() t) t ) ,() t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(NOT (PROD 2 (NOT (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(NOT (PROD nil (NOT (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(NOT (PROD t (NOT (PROD t ,(())) ,(()) t) t ) ,(()) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(NOT (PROD 2 (NOT (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(NOT (PROD nil (NOT (PROD nil `'A) `'A nil) nil ) `'A nil)
(NOT (PROD t (NOT (PROD t `'A) `'A t) t ) `'A t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(NOT (PROD 2 (NOT (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(NOT (PROD nil (NOT (PROD nil `'B) `'B nil) nil ) `'B nil)
(NOT (PROD t (NOT (PROD t `'B) `'B t) t ) `'B t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(NOT (PROD 2 (NOT (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(NOT (PROD nil (NOT (PROD nil `'C) `'C nil) nil ) `'C nil)
(NOT (PROD t (NOT (PROD t `'C) `'C t) t ) `'C t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(NOT (PROD 2 (NOT (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(NOT (PROD nil (NOT (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(NOT (PROD t (NOT (PROD t `'1) `'1 t) t ) `'1 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(NOT (PROD 2 (NOT (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(NOT (PROD nil (NOT (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(NOT (PROD t (NOT (PROD t `'2) `'2 t) t ) `'2 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(NOT (PROD 2 (NOT (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(NOT (PROD nil (NOT (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(NOT (PROD t (NOT (PROD t `'3) `'3 t) t ) `'3 t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(NOT (PROD 2 (NOT (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(NOT (PROD nil (NOT (PROD nil `'()) `'() nil) nil ) `'() nil)
(NOT (PROD t (NOT (PROD t `'()) `'() t) t ) `'() t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(NOT (PROD 2 (NOT (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(NOT (PROD nil (NOT (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(NOT (PROD t (NOT (PROD t `'(())) `'(()) t) t ) `'(()) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(NOT (PROD 2 (NOT (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(NOT (PROD nil (NOT (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(NOT (PROD t (NOT (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(NOT (PROD 1 (NOT (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(NOT (PROD 2 (NOT (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(NOT (PROD nil (NOT (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(NOT (PROD t (NOT (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(NOT (PROD (cons t t) (NOT (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(NOT (PROD (cons nil t) (NOT (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(NOT (PROD (cons nil nil) (NOT (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(NOT (PROD (cons 0 0) (NOT (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(NOT (PROD (cons 1 1) (NOT (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(NOT (PROD (list 1 2 3) (NOT (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(NOT (PROD (list (cons 1 1 ) ) (NOT (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 T) T 1) 1 ) T 1)
(NULL (PROD 2 (NULL (PROD 2 T) T 2) 2 ) T 2)
(NULL (PROD nil (NULL (PROD nil T) T nil) nil ) T nil)
(NULL (PROD t (NULL (PROD t T) T t) t ) T t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(NULL (PROD 2 (NULL (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(NULL (PROD nil (NULL (PROD nil NIL) NIL nil) nil ) NIL nil)
(NULL (PROD t (NULL (PROD t NIL) NIL t) t ) NIL t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 A) A 1) 1 ) A 1)
(NULL (PROD 2 (NULL (PROD 2 A) A 2) 2 ) A 2)
(NULL (PROD nil (NULL (PROD nil A) A nil) nil ) A nil)
(NULL (PROD t (NULL (PROD t A) A t) t ) A t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 B) B 1) 1 ) B 1)
(NULL (PROD 2 (NULL (PROD 2 B) B 2) 2 ) B 2)
(NULL (PROD nil (NULL (PROD nil B) B nil) nil ) B nil)
(NULL (PROD t (NULL (PROD t B) B t) t ) B t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 C) C 1) 1 ) C 1)
(NULL (PROD 2 (NULL (PROD 2 C) C 2) 2 ) C 2)
(NULL (PROD nil (NULL (PROD nil C) C nil) nil ) C nil)
(NULL (PROD t (NULL (PROD t C) C t) t ) C t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 1) 1 1) 1 ) 1 1)
(NULL (PROD 2 (NULL (PROD 2 1) 1 2) 2 ) 1 2)
(NULL (PROD nil (NULL (PROD nil 1) 1 nil) nil ) 1 nil)
(NULL (PROD t (NULL (PROD t 1) 1 t) t ) 1 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 2) 2 1) 1 ) 2 1)
(NULL (PROD 2 (NULL (PROD 2 2) 2 2) 2 ) 2 2)
(NULL (PROD nil (NULL (PROD nil 2) 2 nil) nil ) 2 nil)
(NULL (PROD t (NULL (PROD t 2) 2 t) t ) 2 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 3) 3 1) 1 ) 3 1)
(NULL (PROD 2 (NULL (PROD 2 3) 3 2) 2 ) 3 2)
(NULL (PROD nil (NULL (PROD nil 3) 3 nil) nil ) 3 nil)
(NULL (PROD t (NULL (PROD t 3) 3 t) t ) 3 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 ()) () 1) 1 ) () 1)
(NULL (PROD 2 (NULL (PROD 2 ()) () 2) 2 ) () 2)
(NULL (PROD nil (NULL (PROD nil ()) () nil) nil ) () nil)
(NULL (PROD t (NULL (PROD t ()) () t) t ) () t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 (())) (()) 1) 1 ) (()) 1)
(NULL (PROD 2 (NULL (PROD 2 (())) (()) 2) 2 ) (()) 2)
(NULL (PROD nil (NULL (PROD nil (())) (()) nil) nil ) (()) nil)
(NULL (PROD t (NULL (PROD t (())) (()) t) t ) (()) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(NULL (PROD 2 (NULL (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(NULL (PROD nil (NULL (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(NULL (PROD t (NULL (PROD t ((()))) ((())) t) t ) ((())) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(NULL (PROD 2 (NULL (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(NULL (PROD nil (NULL (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(NULL (PROD t (NULL (PROD t (((())))) (((()))) t) t ) (((()))) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 'A) 'A 1) 1 ) 'A 1)
(NULL (PROD 2 (NULL (PROD 2 'A) 'A 2) 2 ) 'A 2)
(NULL (PROD nil (NULL (PROD nil 'A) 'A nil) nil ) 'A nil)
(NULL (PROD t (NULL (PROD t 'A) 'A t) t ) 'A t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 'B) 'B 1) 1 ) 'B 1)
(NULL (PROD 2 (NULL (PROD 2 'B) 'B 2) 2 ) 'B 2)
(NULL (PROD nil (NULL (PROD nil 'B) 'B nil) nil ) 'B nil)
(NULL (PROD t (NULL (PROD t 'B) 'B t) t ) 'B t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 'C) 'C 1) 1 ) 'C 1)
(NULL (PROD 2 (NULL (PROD 2 'C) 'C 2) 2 ) 'C 2)
(NULL (PROD nil (NULL (PROD nil 'C) 'C nil) nil ) 'C nil)
(NULL (PROD t (NULL (PROD t 'C) 'C t) t ) 'C t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 '1) '1 1) 1 ) '1 1)
(NULL (PROD 2 (NULL (PROD 2 '1) '1 2) 2 ) '1 2)
(NULL (PROD nil (NULL (PROD nil '1) '1 nil) nil ) '1 nil)
(NULL (PROD t (NULL (PROD t '1) '1 t) t ) '1 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 '2) '2 1) 1 ) '2 1)
(NULL (PROD 2 (NULL (PROD 2 '2) '2 2) 2 ) '2 2)
(NULL (PROD nil (NULL (PROD nil '2) '2 nil) nil ) '2 nil)
(NULL (PROD t (NULL (PROD t '2) '2 t) t ) '2 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 '3) '3 1) 1 ) '3 1)
(NULL (PROD 2 (NULL (PROD 2 '3) '3 2) 2 ) '3 2)
(NULL (PROD nil (NULL (PROD nil '3) '3 nil) nil ) '3 nil)
(NULL (PROD t (NULL (PROD t '3) '3 t) t ) '3 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 '()) '() 1) 1 ) '() 1)
(NULL (PROD 2 (NULL (PROD 2 '()) '() 2) 2 ) '() 2)
(NULL (PROD nil (NULL (PROD nil '()) '() nil) nil ) '() nil)
(NULL (PROD t (NULL (PROD t '()) '() t) t ) '() t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(NULL (PROD 2 (NULL (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(NULL (PROD nil (NULL (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(NULL (PROD t (NULL (PROD t '(())) '(()) t) t ) '(()) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(NULL (PROD 2 (NULL (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(NULL (PROD nil (NULL (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(NULL (PROD t (NULL (PROD t '((()))) '((())) t) t ) '((())) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(NULL (PROD 2 (NULL (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(NULL (PROD nil (NULL (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(NULL (PROD t (NULL (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(NULL (PROD 2 (NULL (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(NULL (PROD nil (NULL (PROD nil ,A) ,A nil) nil ) ,A nil)
(NULL (PROD t (NULL (PROD t ,A) ,A t) t ) ,A t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(NULL (PROD 2 (NULL (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(NULL (PROD nil (NULL (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(NULL (PROD t (NULL (PROD t ,1) ,1 t) t ) ,1 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(NULL (PROD 2 (NULL (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(NULL (PROD nil (NULL (PROD nil ,()) ,() nil) nil ) ,() nil)
(NULL (PROD t (NULL (PROD t ,()) ,() t) t ) ,() t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(NULL (PROD 2 (NULL (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(NULL (PROD nil (NULL (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(NULL (PROD t (NULL (PROD t ,(())) ,(()) t) t ) ,(()) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(NULL (PROD 2 (NULL (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(NULL (PROD nil (NULL (PROD nil `'A) `'A nil) nil ) `'A nil)
(NULL (PROD t (NULL (PROD t `'A) `'A t) t ) `'A t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(NULL (PROD 2 (NULL (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(NULL (PROD nil (NULL (PROD nil `'B) `'B nil) nil ) `'B nil)
(NULL (PROD t (NULL (PROD t `'B) `'B t) t ) `'B t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(NULL (PROD 2 (NULL (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(NULL (PROD nil (NULL (PROD nil `'C) `'C nil) nil ) `'C nil)
(NULL (PROD t (NULL (PROD t `'C) `'C t) t ) `'C t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(NULL (PROD 2 (NULL (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(NULL (PROD nil (NULL (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(NULL (PROD t (NULL (PROD t `'1) `'1 t) t ) `'1 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(NULL (PROD 2 (NULL (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(NULL (PROD nil (NULL (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(NULL (PROD t (NULL (PROD t `'2) `'2 t) t ) `'2 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(NULL (PROD 2 (NULL (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(NULL (PROD nil (NULL (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(NULL (PROD t (NULL (PROD t `'3) `'3 t) t ) `'3 t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(NULL (PROD 2 (NULL (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(NULL (PROD nil (NULL (PROD nil `'()) `'() nil) nil ) `'() nil)
(NULL (PROD t (NULL (PROD t `'()) `'() t) t ) `'() t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(NULL (PROD 2 (NULL (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(NULL (PROD nil (NULL (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(NULL (PROD t (NULL (PROD t `'(())) `'(()) t) t ) `'(()) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(NULL (PROD 2 (NULL (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(NULL (PROD nil (NULL (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(NULL (PROD t (NULL (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(NULL (PROD 1 (NULL (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(NULL (PROD 2 (NULL (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(NULL (PROD nil (NULL (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(NULL (PROD t (NULL (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(NULL (PROD (cons t t) (NULL (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(NULL (PROD (cons nil t) (NULL (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(NULL (PROD (cons nil nil) (NULL (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(NULL (PROD (cons 0 0) (NULL (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(NULL (PROD (cons 1 1) (NULL (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(NULL (PROD (list 1 2 3) (NULL (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(NULL (PROD (list (cons 1 1 ) ) (NULL (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 T) T 1) 1 ) T 1)
(OR (PROD 2 (OR (PROD 2 T) T 2) 2 ) T 2)
(OR (PROD nil (OR (PROD nil T) T nil) nil ) T nil)
(OR (PROD t (OR (PROD t T) T t) t ) T t)
(OR (PROD (cons t t) (OR (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(OR (PROD 2 (OR (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(OR (PROD nil (OR (PROD nil NIL) NIL nil) nil ) NIL nil)
(OR (PROD t (OR (PROD t NIL) NIL t) t ) NIL t)
(OR (PROD (cons t t) (OR (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 A) A 1) 1 ) A 1)
(OR (PROD 2 (OR (PROD 2 A) A 2) 2 ) A 2)
(OR (PROD nil (OR (PROD nil A) A nil) nil ) A nil)
(OR (PROD t (OR (PROD t A) A t) t ) A t)
(OR (PROD (cons t t) (OR (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 B) B 1) 1 ) B 1)
(OR (PROD 2 (OR (PROD 2 B) B 2) 2 ) B 2)
(OR (PROD nil (OR (PROD nil B) B nil) nil ) B nil)
(OR (PROD t (OR (PROD t B) B t) t ) B t)
(OR (PROD (cons t t) (OR (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 C) C 1) 1 ) C 1)
(OR (PROD 2 (OR (PROD 2 C) C 2) 2 ) C 2)
(OR (PROD nil (OR (PROD nil C) C nil) nil ) C nil)
(OR (PROD t (OR (PROD t C) C t) t ) C t)
(OR (PROD (cons t t) (OR (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 1) 1 1) 1 ) 1 1)
(OR (PROD 2 (OR (PROD 2 1) 1 2) 2 ) 1 2)
(OR (PROD nil (OR (PROD nil 1) 1 nil) nil ) 1 nil)
(OR (PROD t (OR (PROD t 1) 1 t) t ) 1 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 2) 2 1) 1 ) 2 1)
(OR (PROD 2 (OR (PROD 2 2) 2 2) 2 ) 2 2)
(OR (PROD nil (OR (PROD nil 2) 2 nil) nil ) 2 nil)
(OR (PROD t (OR (PROD t 2) 2 t) t ) 2 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 3) 3 1) 1 ) 3 1)
(OR (PROD 2 (OR (PROD 2 3) 3 2) 2 ) 3 2)
(OR (PROD nil (OR (PROD nil 3) 3 nil) nil ) 3 nil)
(OR (PROD t (OR (PROD t 3) 3 t) t ) 3 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 ()) () 1) 1 ) () 1)
(OR (PROD 2 (OR (PROD 2 ()) () 2) 2 ) () 2)
(OR (PROD nil (OR (PROD nil ()) () nil) nil ) () nil)
(OR (PROD t (OR (PROD t ()) () t) t ) () t)
(OR (PROD (cons t t) (OR (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 (())) (()) 1) 1 ) (()) 1)
(OR (PROD 2 (OR (PROD 2 (())) (()) 2) 2 ) (()) 2)
(OR (PROD nil (OR (PROD nil (())) (()) nil) nil ) (()) nil)
(OR (PROD t (OR (PROD t (())) (()) t) t ) (()) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(OR (PROD 2 (OR (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(OR (PROD nil (OR (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(OR (PROD t (OR (PROD t ((()))) ((())) t) t ) ((())) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(OR (PROD 2 (OR (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(OR (PROD nil (OR (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(OR (PROD t (OR (PROD t (((())))) (((()))) t) t ) (((()))) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 'A) 'A 1) 1 ) 'A 1)
(OR (PROD 2 (OR (PROD 2 'A) 'A 2) 2 ) 'A 2)
(OR (PROD nil (OR (PROD nil 'A) 'A nil) nil ) 'A nil)
(OR (PROD t (OR (PROD t 'A) 'A t) t ) 'A t)
(OR (PROD (cons t t) (OR (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 'B) 'B 1) 1 ) 'B 1)
(OR (PROD 2 (OR (PROD 2 'B) 'B 2) 2 ) 'B 2)
(OR (PROD nil (OR (PROD nil 'B) 'B nil) nil ) 'B nil)
(OR (PROD t (OR (PROD t 'B) 'B t) t ) 'B t)
(OR (PROD (cons t t) (OR (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 'C) 'C 1) 1 ) 'C 1)
(OR (PROD 2 (OR (PROD 2 'C) 'C 2) 2 ) 'C 2)
(OR (PROD nil (OR (PROD nil 'C) 'C nil) nil ) 'C nil)
(OR (PROD t (OR (PROD t 'C) 'C t) t ) 'C t)
(OR (PROD (cons t t) (OR (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 '1) '1 1) 1 ) '1 1)
(OR (PROD 2 (OR (PROD 2 '1) '1 2) 2 ) '1 2)
(OR (PROD nil (OR (PROD nil '1) '1 nil) nil ) '1 nil)
(OR (PROD t (OR (PROD t '1) '1 t) t ) '1 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 '2) '2 1) 1 ) '2 1)
(OR (PROD 2 (OR (PROD 2 '2) '2 2) 2 ) '2 2)
(OR (PROD nil (OR (PROD nil '2) '2 nil) nil ) '2 nil)
(OR (PROD t (OR (PROD t '2) '2 t) t ) '2 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 '3) '3 1) 1 ) '3 1)
(OR (PROD 2 (OR (PROD 2 '3) '3 2) 2 ) '3 2)
(OR (PROD nil (OR (PROD nil '3) '3 nil) nil ) '3 nil)
(OR (PROD t (OR (PROD t '3) '3 t) t ) '3 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 '()) '() 1) 1 ) '() 1)
(OR (PROD 2 (OR (PROD 2 '()) '() 2) 2 ) '() 2)
(OR (PROD nil (OR (PROD nil '()) '() nil) nil ) '() nil)
(OR (PROD t (OR (PROD t '()) '() t) t ) '() t)
(OR (PROD (cons t t) (OR (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(OR (PROD 2 (OR (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(OR (PROD nil (OR (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(OR (PROD t (OR (PROD t '(())) '(()) t) t ) '(()) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(OR (PROD 2 (OR (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(OR (PROD nil (OR (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(OR (PROD t (OR (PROD t '((()))) '((())) t) t ) '((())) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(OR (PROD 2 (OR (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(OR (PROD nil (OR (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(OR (PROD t (OR (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(OR (PROD 2 (OR (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(OR (PROD nil (OR (PROD nil ,A) ,A nil) nil ) ,A nil)
(OR (PROD t (OR (PROD t ,A) ,A t) t ) ,A t)
(OR (PROD (cons t t) (OR (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(OR (PROD 2 (OR (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(OR (PROD nil (OR (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(OR (PROD t (OR (PROD t ,1) ,1 t) t ) ,1 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(OR (PROD 2 (OR (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(OR (PROD nil (OR (PROD nil ,()) ,() nil) nil ) ,() nil)
(OR (PROD t (OR (PROD t ,()) ,() t) t ) ,() t)
(OR (PROD (cons t t) (OR (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(OR (PROD 2 (OR (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(OR (PROD nil (OR (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(OR (PROD t (OR (PROD t ,(())) ,(()) t) t ) ,(()) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(OR (PROD 2 (OR (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(OR (PROD nil (OR (PROD nil `'A) `'A nil) nil ) `'A nil)
(OR (PROD t (OR (PROD t `'A) `'A t) t ) `'A t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(OR (PROD 2 (OR (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(OR (PROD nil (OR (PROD nil `'B) `'B nil) nil ) `'B nil)
(OR (PROD t (OR (PROD t `'B) `'B t) t ) `'B t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(OR (PROD 2 (OR (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(OR (PROD nil (OR (PROD nil `'C) `'C nil) nil ) `'C nil)
(OR (PROD t (OR (PROD t `'C) `'C t) t ) `'C t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(OR (PROD 2 (OR (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(OR (PROD nil (OR (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(OR (PROD t (OR (PROD t `'1) `'1 t) t ) `'1 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(OR (PROD 2 (OR (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(OR (PROD nil (OR (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(OR (PROD t (OR (PROD t `'2) `'2 t) t ) `'2 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(OR (PROD 2 (OR (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(OR (PROD nil (OR (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(OR (PROD t (OR (PROD t `'3) `'3 t) t ) `'3 t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(OR (PROD 2 (OR (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(OR (PROD nil (OR (PROD nil `'()) `'() nil) nil ) `'() nil)
(OR (PROD t (OR (PROD t `'()) `'() t) t ) `'() t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(OR (PROD 2 (OR (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(OR (PROD nil (OR (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(OR (PROD t (OR (PROD t `'(())) `'(()) t) t ) `'(()) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(OR (PROD 2 (OR (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(OR (PROD nil (OR (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(OR (PROD t (OR (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(OR (PROD 1 (OR (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(OR (PROD 2 (OR (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(OR (PROD nil (OR (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(OR (PROD t (OR (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(OR (PROD (cons t t) (OR (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(OR (PROD (cons nil t) (OR (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(OR (PROD (cons nil nil) (OR (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(OR (PROD (cons 0 0) (OR (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(OR (PROD (cons 1 1) (OR (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(OR (PROD (list 1 2 3) (OR (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(OR (PROD (list (cons 1 1 ) ) (OR (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 T) T 1) 1 ) T 1)
(ORD (PROD 2 (ORD (PROD 2 T) T 2) 2 ) T 2)
(ORD (PROD nil (ORD (PROD nil T) T nil) nil ) T nil)
(ORD (PROD t (ORD (PROD t T) T t) t ) T t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(ORD (PROD 2 (ORD (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(ORD (PROD nil (ORD (PROD nil NIL) NIL nil) nil ) NIL nil)
(ORD (PROD t (ORD (PROD t NIL) NIL t) t ) NIL t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 A) A 1) 1 ) A 1)
(ORD (PROD 2 (ORD (PROD 2 A) A 2) 2 ) A 2)
(ORD (PROD nil (ORD (PROD nil A) A nil) nil ) A nil)
(ORD (PROD t (ORD (PROD t A) A t) t ) A t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 B) B 1) 1 ) B 1)
(ORD (PROD 2 (ORD (PROD 2 B) B 2) 2 ) B 2)
(ORD (PROD nil (ORD (PROD nil B) B nil) nil ) B nil)
(ORD (PROD t (ORD (PROD t B) B t) t ) B t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 C) C 1) 1 ) C 1)
(ORD (PROD 2 (ORD (PROD 2 C) C 2) 2 ) C 2)
(ORD (PROD nil (ORD (PROD nil C) C nil) nil ) C nil)
(ORD (PROD t (ORD (PROD t C) C t) t ) C t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 1) 1 1) 1 ) 1 1)
(ORD (PROD 2 (ORD (PROD 2 1) 1 2) 2 ) 1 2)
(ORD (PROD nil (ORD (PROD nil 1) 1 nil) nil ) 1 nil)
(ORD (PROD t (ORD (PROD t 1) 1 t) t ) 1 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 2) 2 1) 1 ) 2 1)
(ORD (PROD 2 (ORD (PROD 2 2) 2 2) 2 ) 2 2)
(ORD (PROD nil (ORD (PROD nil 2) 2 nil) nil ) 2 nil)
(ORD (PROD t (ORD (PROD t 2) 2 t) t ) 2 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 3) 3 1) 1 ) 3 1)
(ORD (PROD 2 (ORD (PROD 2 3) 3 2) 2 ) 3 2)
(ORD (PROD nil (ORD (PROD nil 3) 3 nil) nil ) 3 nil)
(ORD (PROD t (ORD (PROD t 3) 3 t) t ) 3 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 ()) () 1) 1 ) () 1)
(ORD (PROD 2 (ORD (PROD 2 ()) () 2) 2 ) () 2)
(ORD (PROD nil (ORD (PROD nil ()) () nil) nil ) () nil)
(ORD (PROD t (ORD (PROD t ()) () t) t ) () t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 (())) (()) 1) 1 ) (()) 1)
(ORD (PROD 2 (ORD (PROD 2 (())) (()) 2) 2 ) (()) 2)
(ORD (PROD nil (ORD (PROD nil (())) (()) nil) nil ) (()) nil)
(ORD (PROD t (ORD (PROD t (())) (()) t) t ) (()) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(ORD (PROD 2 (ORD (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(ORD (PROD nil (ORD (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(ORD (PROD t (ORD (PROD t ((()))) ((())) t) t ) ((())) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(ORD (PROD 2 (ORD (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(ORD (PROD nil (ORD (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(ORD (PROD t (ORD (PROD t (((())))) (((()))) t) t ) (((()))) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 'A) 'A 1) 1 ) 'A 1)
(ORD (PROD 2 (ORD (PROD 2 'A) 'A 2) 2 ) 'A 2)
(ORD (PROD nil (ORD (PROD nil 'A) 'A nil) nil ) 'A nil)
(ORD (PROD t (ORD (PROD t 'A) 'A t) t ) 'A t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 'B) 'B 1) 1 ) 'B 1)
(ORD (PROD 2 (ORD (PROD 2 'B) 'B 2) 2 ) 'B 2)
(ORD (PROD nil (ORD (PROD nil 'B) 'B nil) nil ) 'B nil)
(ORD (PROD t (ORD (PROD t 'B) 'B t) t ) 'B t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 'C) 'C 1) 1 ) 'C 1)
(ORD (PROD 2 (ORD (PROD 2 'C) 'C 2) 2 ) 'C 2)
(ORD (PROD nil (ORD (PROD nil 'C) 'C nil) nil ) 'C nil)
(ORD (PROD t (ORD (PROD t 'C) 'C t) t ) 'C t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 '1) '1 1) 1 ) '1 1)
(ORD (PROD 2 (ORD (PROD 2 '1) '1 2) 2 ) '1 2)
(ORD (PROD nil (ORD (PROD nil '1) '1 nil) nil ) '1 nil)
(ORD (PROD t (ORD (PROD t '1) '1 t) t ) '1 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 '2) '2 1) 1 ) '2 1)
(ORD (PROD 2 (ORD (PROD 2 '2) '2 2) 2 ) '2 2)
(ORD (PROD nil (ORD (PROD nil '2) '2 nil) nil ) '2 nil)
(ORD (PROD t (ORD (PROD t '2) '2 t) t ) '2 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 '3) '3 1) 1 ) '3 1)
(ORD (PROD 2 (ORD (PROD 2 '3) '3 2) 2 ) '3 2)
(ORD (PROD nil (ORD (PROD nil '3) '3 nil) nil ) '3 nil)
(ORD (PROD t (ORD (PROD t '3) '3 t) t ) '3 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 '()) '() 1) 1 ) '() 1)
(ORD (PROD 2 (ORD (PROD 2 '()) '() 2) 2 ) '() 2)
(ORD (PROD nil (ORD (PROD nil '()) '() nil) nil ) '() nil)
(ORD (PROD t (ORD (PROD t '()) '() t) t ) '() t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(ORD (PROD 2 (ORD (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(ORD (PROD nil (ORD (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(ORD (PROD t (ORD (PROD t '(())) '(()) t) t ) '(()) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(ORD (PROD 2 (ORD (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(ORD (PROD nil (ORD (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(ORD (PROD t (ORD (PROD t '((()))) '((())) t) t ) '((())) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(ORD (PROD 2 (ORD (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(ORD (PROD nil (ORD (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(ORD (PROD t (ORD (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(ORD (PROD 2 (ORD (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(ORD (PROD nil (ORD (PROD nil ,A) ,A nil) nil ) ,A nil)
(ORD (PROD t (ORD (PROD t ,A) ,A t) t ) ,A t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(ORD (PROD 2 (ORD (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(ORD (PROD nil (ORD (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(ORD (PROD t (ORD (PROD t ,1) ,1 t) t ) ,1 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(ORD (PROD 2 (ORD (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(ORD (PROD nil (ORD (PROD nil ,()) ,() nil) nil ) ,() nil)
(ORD (PROD t (ORD (PROD t ,()) ,() t) t ) ,() t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(ORD (PROD 2 (ORD (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(ORD (PROD nil (ORD (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(ORD (PROD t (ORD (PROD t ,(())) ,(()) t) t ) ,(()) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(ORD (PROD 2 (ORD (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(ORD (PROD nil (ORD (PROD nil `'A) `'A nil) nil ) `'A nil)
(ORD (PROD t (ORD (PROD t `'A) `'A t) t ) `'A t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(ORD (PROD 2 (ORD (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(ORD (PROD nil (ORD (PROD nil `'B) `'B nil) nil ) `'B nil)
(ORD (PROD t (ORD (PROD t `'B) `'B t) t ) `'B t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(ORD (PROD 2 (ORD (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(ORD (PROD nil (ORD (PROD nil `'C) `'C nil) nil ) `'C nil)
(ORD (PROD t (ORD (PROD t `'C) `'C t) t ) `'C t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(ORD (PROD 2 (ORD (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(ORD (PROD nil (ORD (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(ORD (PROD t (ORD (PROD t `'1) `'1 t) t ) `'1 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(ORD (PROD 2 (ORD (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(ORD (PROD nil (ORD (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(ORD (PROD t (ORD (PROD t `'2) `'2 t) t ) `'2 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(ORD (PROD 2 (ORD (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(ORD (PROD nil (ORD (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(ORD (PROD t (ORD (PROD t `'3) `'3 t) t ) `'3 t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(ORD (PROD 2 (ORD (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(ORD (PROD nil (ORD (PROD nil `'()) `'() nil) nil ) `'() nil)
(ORD (PROD t (ORD (PROD t `'()) `'() t) t ) `'() t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(ORD (PROD 2 (ORD (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(ORD (PROD nil (ORD (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(ORD (PROD t (ORD (PROD t `'(())) `'(()) t) t ) `'(()) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(ORD (PROD 2 (ORD (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(ORD (PROD nil (ORD (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(ORD (PROD t (ORD (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(ORD (PROD 1 (ORD (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(ORD (PROD 2 (ORD (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(ORD (PROD nil (ORD (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(ORD (PROD t (ORD (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(ORD (PROD (cons t t) (ORD (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(ORD (PROD (cons nil t) (ORD (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(ORD (PROD (cons nil nil) (ORD (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(ORD (PROD (cons 0 0) (ORD (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(ORD (PROD (cons 1 1) (ORD (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(ORD (PROD (list 1 2 3) (ORD (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(ORD (PROD (list (cons 1 1 ) ) (ORD (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 T) T 1) 1 ) T 1)
(PAIR (PROD 2 (PAIR (PROD 2 T) T 2) 2 ) T 2)
(PAIR (PROD nil (PAIR (PROD nil T) T nil) nil ) T nil)
(PAIR (PROD t (PAIR (PROD t T) T t) t ) T t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(PAIR (PROD 2 (PAIR (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(PAIR (PROD nil (PAIR (PROD nil NIL) NIL nil) nil ) NIL nil)
(PAIR (PROD t (PAIR (PROD t NIL) NIL t) t ) NIL t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 A) A 1) 1 ) A 1)
(PAIR (PROD 2 (PAIR (PROD 2 A) A 2) 2 ) A 2)
(PAIR (PROD nil (PAIR (PROD nil A) A nil) nil ) A nil)
(PAIR (PROD t (PAIR (PROD t A) A t) t ) A t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 B) B 1) 1 ) B 1)
(PAIR (PROD 2 (PAIR (PROD 2 B) B 2) 2 ) B 2)
(PAIR (PROD nil (PAIR (PROD nil B) B nil) nil ) B nil)
(PAIR (PROD t (PAIR (PROD t B) B t) t ) B t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 C) C 1) 1 ) C 1)
(PAIR (PROD 2 (PAIR (PROD 2 C) C 2) 2 ) C 2)
(PAIR (PROD nil (PAIR (PROD nil C) C nil) nil ) C nil)
(PAIR (PROD t (PAIR (PROD t C) C t) t ) C t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 1) 1 1) 1 ) 1 1)
(PAIR (PROD 2 (PAIR (PROD 2 1) 1 2) 2 ) 1 2)
(PAIR (PROD nil (PAIR (PROD nil 1) 1 nil) nil ) 1 nil)
(PAIR (PROD t (PAIR (PROD t 1) 1 t) t ) 1 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 2) 2 1) 1 ) 2 1)
(PAIR (PROD 2 (PAIR (PROD 2 2) 2 2) 2 ) 2 2)
(PAIR (PROD nil (PAIR (PROD nil 2) 2 nil) nil ) 2 nil)
(PAIR (PROD t (PAIR (PROD t 2) 2 t) t ) 2 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 3) 3 1) 1 ) 3 1)
(PAIR (PROD 2 (PAIR (PROD 2 3) 3 2) 2 ) 3 2)
(PAIR (PROD nil (PAIR (PROD nil 3) 3 nil) nil ) 3 nil)
(PAIR (PROD t (PAIR (PROD t 3) 3 t) t ) 3 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 ()) () 1) 1 ) () 1)
(PAIR (PROD 2 (PAIR (PROD 2 ()) () 2) 2 ) () 2)
(PAIR (PROD nil (PAIR (PROD nil ()) () nil) nil ) () nil)
(PAIR (PROD t (PAIR (PROD t ()) () t) t ) () t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 (())) (()) 1) 1 ) (()) 1)
(PAIR (PROD 2 (PAIR (PROD 2 (())) (()) 2) 2 ) (()) 2)
(PAIR (PROD nil (PAIR (PROD nil (())) (()) nil) nil ) (()) nil)
(PAIR (PROD t (PAIR (PROD t (())) (()) t) t ) (()) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PAIR (PROD 2 (PAIR (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PAIR (PROD nil (PAIR (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(PAIR (PROD t (PAIR (PROD t ((()))) ((())) t) t ) ((())) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PAIR (PROD 2 (PAIR (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PAIR (PROD nil (PAIR (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PAIR (PROD t (PAIR (PROD t (((())))) (((()))) t) t ) (((()))) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 'A) 'A 1) 1 ) 'A 1)
(PAIR (PROD 2 (PAIR (PROD 2 'A) 'A 2) 2 ) 'A 2)
(PAIR (PROD nil (PAIR (PROD nil 'A) 'A nil) nil ) 'A nil)
(PAIR (PROD t (PAIR (PROD t 'A) 'A t) t ) 'A t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 'B) 'B 1) 1 ) 'B 1)
(PAIR (PROD 2 (PAIR (PROD 2 'B) 'B 2) 2 ) 'B 2)
(PAIR (PROD nil (PAIR (PROD nil 'B) 'B nil) nil ) 'B nil)
(PAIR (PROD t (PAIR (PROD t 'B) 'B t) t ) 'B t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 'C) 'C 1) 1 ) 'C 1)
(PAIR (PROD 2 (PAIR (PROD 2 'C) 'C 2) 2 ) 'C 2)
(PAIR (PROD nil (PAIR (PROD nil 'C) 'C nil) nil ) 'C nil)
(PAIR (PROD t (PAIR (PROD t 'C) 'C t) t ) 'C t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 '1) '1 1) 1 ) '1 1)
(PAIR (PROD 2 (PAIR (PROD 2 '1) '1 2) 2 ) '1 2)
(PAIR (PROD nil (PAIR (PROD nil '1) '1 nil) nil ) '1 nil)
(PAIR (PROD t (PAIR (PROD t '1) '1 t) t ) '1 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 '2) '2 1) 1 ) '2 1)
(PAIR (PROD 2 (PAIR (PROD 2 '2) '2 2) 2 ) '2 2)
(PAIR (PROD nil (PAIR (PROD nil '2) '2 nil) nil ) '2 nil)
(PAIR (PROD t (PAIR (PROD t '2) '2 t) t ) '2 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 '3) '3 1) 1 ) '3 1)
(PAIR (PROD 2 (PAIR (PROD 2 '3) '3 2) 2 ) '3 2)
(PAIR (PROD nil (PAIR (PROD nil '3) '3 nil) nil ) '3 nil)
(PAIR (PROD t (PAIR (PROD t '3) '3 t) t ) '3 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 '()) '() 1) 1 ) '() 1)
(PAIR (PROD 2 (PAIR (PROD 2 '()) '() 2) 2 ) '() 2)
(PAIR (PROD nil (PAIR (PROD nil '()) '() nil) nil ) '() nil)
(PAIR (PROD t (PAIR (PROD t '()) '() t) t ) '() t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PAIR (PROD 2 (PAIR (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PAIR (PROD nil (PAIR (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(PAIR (PROD t (PAIR (PROD t '(())) '(()) t) t ) '(()) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PAIR (PROD 2 (PAIR (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PAIR (PROD nil (PAIR (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(PAIR (PROD t (PAIR (PROD t '((()))) '((())) t) t ) '((())) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PAIR (PROD 2 (PAIR (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PAIR (PROD nil (PAIR (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PAIR (PROD t (PAIR (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(PAIR (PROD 2 (PAIR (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(PAIR (PROD nil (PAIR (PROD nil ,A) ,A nil) nil ) ,A nil)
(PAIR (PROD t (PAIR (PROD t ,A) ,A t) t ) ,A t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(PAIR (PROD 2 (PAIR (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(PAIR (PROD nil (PAIR (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(PAIR (PROD t (PAIR (PROD t ,1) ,1 t) t ) ,1 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(PAIR (PROD 2 (PAIR (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(PAIR (PROD nil (PAIR (PROD nil ,()) ,() nil) nil ) ,() nil)
(PAIR (PROD t (PAIR (PROD t ,()) ,() t) t ) ,() t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PAIR (PROD 2 (PAIR (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PAIR (PROD nil (PAIR (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PAIR (PROD t (PAIR (PROD t ,(())) ,(()) t) t ) ,(()) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(PAIR (PROD nil (PAIR (PROD nil `'A) `'A nil) nil ) `'A nil)
(PAIR (PROD t (PAIR (PROD t `'A) `'A t) t ) `'A t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(PAIR (PROD nil (PAIR (PROD nil `'B) `'B nil) nil ) `'B nil)
(PAIR (PROD t (PAIR (PROD t `'B) `'B t) t ) `'B t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(PAIR (PROD nil (PAIR (PROD nil `'C) `'C nil) nil ) `'C nil)
(PAIR (PROD t (PAIR (PROD t `'C) `'C t) t ) `'C t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(PAIR (PROD nil (PAIR (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(PAIR (PROD t (PAIR (PROD t `'1) `'1 t) t ) `'1 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(PAIR (PROD nil (PAIR (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(PAIR (PROD t (PAIR (PROD t `'2) `'2 t) t ) `'2 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(PAIR (PROD nil (PAIR (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(PAIR (PROD t (PAIR (PROD t `'3) `'3 t) t ) `'3 t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(PAIR (PROD nil (PAIR (PROD nil `'()) `'() nil) nil ) `'() nil)
(PAIR (PROD t (PAIR (PROD t `'()) `'() t) t ) `'() t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PAIR (PROD nil (PAIR (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PAIR (PROD t (PAIR (PROD t `'(())) `'(()) t) t ) `'(()) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PAIR (PROD nil (PAIR (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PAIR (PROD t (PAIR (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PAIR (PROD 1 (PAIR (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PAIR (PROD 2 (PAIR (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PAIR (PROD nil (PAIR (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PAIR (PROD t (PAIR (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PAIR (PROD (cons t t) (PAIR (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PAIR (PROD (cons nil t) (PAIR (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PAIR (PROD (cons nil nil) (PAIR (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PAIR (PROD (cons 0 0) (PAIR (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PAIR (PROD (cons 1 1) (PAIR (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PAIR (PROD (list 1 2 3) (PAIR (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PAIR (PROD (list (cons 1 1 ) ) (PAIR (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 T) T 1) 1 ) T 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 T) T 2) 2 ) T 2)
(PAIR* (PROD nil (PAIR* (PROD nil T) T nil) nil ) T nil)
(PAIR* (PROD t (PAIR* (PROD t T) T t) t ) T t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(PAIR* (PROD nil (PAIR* (PROD nil NIL) NIL nil) nil ) NIL nil)
(PAIR* (PROD t (PAIR* (PROD t NIL) NIL t) t ) NIL t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 A) A 1) 1 ) A 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 A) A 2) 2 ) A 2)
(PAIR* (PROD nil (PAIR* (PROD nil A) A nil) nil ) A nil)
(PAIR* (PROD t (PAIR* (PROD t A) A t) t ) A t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 B) B 1) 1 ) B 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 B) B 2) 2 ) B 2)
(PAIR* (PROD nil (PAIR* (PROD nil B) B nil) nil ) B nil)
(PAIR* (PROD t (PAIR* (PROD t B) B t) t ) B t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 C) C 1) 1 ) C 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 C) C 2) 2 ) C 2)
(PAIR* (PROD nil (PAIR* (PROD nil C) C nil) nil ) C nil)
(PAIR* (PROD t (PAIR* (PROD t C) C t) t ) C t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 1) 1 1) 1 ) 1 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 1) 1 2) 2 ) 1 2)
(PAIR* (PROD nil (PAIR* (PROD nil 1) 1 nil) nil ) 1 nil)
(PAIR* (PROD t (PAIR* (PROD t 1) 1 t) t ) 1 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 2) 2 1) 1 ) 2 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 2) 2 2) 2 ) 2 2)
(PAIR* (PROD nil (PAIR* (PROD nil 2) 2 nil) nil ) 2 nil)
(PAIR* (PROD t (PAIR* (PROD t 2) 2 t) t ) 2 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 3) 3 1) 1 ) 3 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 3) 3 2) 2 ) 3 2)
(PAIR* (PROD nil (PAIR* (PROD nil 3) 3 nil) nil ) 3 nil)
(PAIR* (PROD t (PAIR* (PROD t 3) 3 t) t ) 3 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 ()) () 1) 1 ) () 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 ()) () 2) 2 ) () 2)
(PAIR* (PROD nil (PAIR* (PROD nil ()) () nil) nil ) () nil)
(PAIR* (PROD t (PAIR* (PROD t ()) () t) t ) () t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 (())) (()) 1) 1 ) (()) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 (())) (()) 2) 2 ) (()) 2)
(PAIR* (PROD nil (PAIR* (PROD nil (())) (()) nil) nil ) (()) nil)
(PAIR* (PROD t (PAIR* (PROD t (())) (()) t) t ) (()) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PAIR* (PROD nil (PAIR* (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(PAIR* (PROD t (PAIR* (PROD t ((()))) ((())) t) t ) ((())) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PAIR* (PROD nil (PAIR* (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PAIR* (PROD t (PAIR* (PROD t (((())))) (((()))) t) t ) (((()))) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 'A) 'A 1) 1 ) 'A 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 'A) 'A 2) 2 ) 'A 2)
(PAIR* (PROD nil (PAIR* (PROD nil 'A) 'A nil) nil ) 'A nil)
(PAIR* (PROD t (PAIR* (PROD t 'A) 'A t) t ) 'A t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 'B) 'B 1) 1 ) 'B 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 'B) 'B 2) 2 ) 'B 2)
(PAIR* (PROD nil (PAIR* (PROD nil 'B) 'B nil) nil ) 'B nil)
(PAIR* (PROD t (PAIR* (PROD t 'B) 'B t) t ) 'B t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 'C) 'C 1) 1 ) 'C 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 'C) 'C 2) 2 ) 'C 2)
(PAIR* (PROD nil (PAIR* (PROD nil 'C) 'C nil) nil ) 'C nil)
(PAIR* (PROD t (PAIR* (PROD t 'C) 'C t) t ) 'C t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 '1) '1 1) 1 ) '1 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 '1) '1 2) 2 ) '1 2)
(PAIR* (PROD nil (PAIR* (PROD nil '1) '1 nil) nil ) '1 nil)
(PAIR* (PROD t (PAIR* (PROD t '1) '1 t) t ) '1 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 '2) '2 1) 1 ) '2 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 '2) '2 2) 2 ) '2 2)
(PAIR* (PROD nil (PAIR* (PROD nil '2) '2 nil) nil ) '2 nil)
(PAIR* (PROD t (PAIR* (PROD t '2) '2 t) t ) '2 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 '3) '3 1) 1 ) '3 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 '3) '3 2) 2 ) '3 2)
(PAIR* (PROD nil (PAIR* (PROD nil '3) '3 nil) nil ) '3 nil)
(PAIR* (PROD t (PAIR* (PROD t '3) '3 t) t ) '3 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 '()) '() 1) 1 ) '() 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 '()) '() 2) 2 ) '() 2)
(PAIR* (PROD nil (PAIR* (PROD nil '()) '() nil) nil ) '() nil)
(PAIR* (PROD t (PAIR* (PROD t '()) '() t) t ) '() t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PAIR* (PROD nil (PAIR* (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(PAIR* (PROD t (PAIR* (PROD t '(())) '(()) t) t ) '(()) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PAIR* (PROD nil (PAIR* (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(PAIR* (PROD t (PAIR* (PROD t '((()))) '((())) t) t ) '((())) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PAIR* (PROD nil (PAIR* (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PAIR* (PROD t (PAIR* (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(PAIR* (PROD nil (PAIR* (PROD nil ,A) ,A nil) nil ) ,A nil)
(PAIR* (PROD t (PAIR* (PROD t ,A) ,A t) t ) ,A t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(PAIR* (PROD nil (PAIR* (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(PAIR* (PROD t (PAIR* (PROD t ,1) ,1 t) t ) ,1 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(PAIR* (PROD nil (PAIR* (PROD nil ,()) ,() nil) nil ) ,() nil)
(PAIR* (PROD t (PAIR* (PROD t ,()) ,() t) t ) ,() t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PAIR* (PROD nil (PAIR* (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PAIR* (PROD t (PAIR* (PROD t ,(())) ,(()) t) t ) ,(()) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'A) `'A nil) nil ) `'A nil)
(PAIR* (PROD t (PAIR* (PROD t `'A) `'A t) t ) `'A t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'B) `'B nil) nil ) `'B nil)
(PAIR* (PROD t (PAIR* (PROD t `'B) `'B t) t ) `'B t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'C) `'C nil) nil ) `'C nil)
(PAIR* (PROD t (PAIR* (PROD t `'C) `'C t) t ) `'C t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(PAIR* (PROD t (PAIR* (PROD t `'1) `'1 t) t ) `'1 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(PAIR* (PROD t (PAIR* (PROD t `'2) `'2 t) t ) `'2 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(PAIR* (PROD t (PAIR* (PROD t `'3) `'3 t) t ) `'3 t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'()) `'() nil) nil ) `'() nil)
(PAIR* (PROD t (PAIR* (PROD t `'()) `'() t) t ) `'() t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PAIR* (PROD t (PAIR* (PROD t `'(())) `'(()) t) t ) `'(()) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PAIR* (PROD t (PAIR* (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PAIR* (PROD 1 (PAIR* (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PAIR* (PROD 2 (PAIR* (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PAIR* (PROD nil (PAIR* (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PAIR* (PROD t (PAIR* (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PAIR* (PROD (cons t t) (PAIR* (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PAIR* (PROD (cons nil t) (PAIR* (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PAIR* (PROD (cons nil nil) (PAIR* (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PAIR* (PROD (cons 0 0) (PAIR* (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PAIR* (PROD (cons 1 1) (PAIR* (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PAIR* (PROD (list 1 2 3) (PAIR* (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PAIR* (PROD (list (cons 1 1 ) ) (PAIR* (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 T) T 1) 1 ) T 1)
(PROD (* 2 (PROD (* 2 T) T 2) 2 ) T 2)
(PROD (* nil (PROD (* nil T) T nil) nil ) T nil)
(PROD (* t (PROD (* t T) T t) t ) T t)
(PROD (* (cons t t) (PROD (* (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (* 2 (PROD (* 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (* nil (PROD (* nil NIL) NIL nil) nil ) NIL nil)
(PROD (* t (PROD (* t NIL) NIL t) t ) NIL t)
(PROD (* (cons t t) (PROD (* (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 A) A 1) 1 ) A 1)
(PROD (* 2 (PROD (* 2 A) A 2) 2 ) A 2)
(PROD (* nil (PROD (* nil A) A nil) nil ) A nil)
(PROD (* t (PROD (* t A) A t) t ) A t)
(PROD (* (cons t t) (PROD (* (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 B) B 1) 1 ) B 1)
(PROD (* 2 (PROD (* 2 B) B 2) 2 ) B 2)
(PROD (* nil (PROD (* nil B) B nil) nil ) B nil)
(PROD (* t (PROD (* t B) B t) t ) B t)
(PROD (* (cons t t) (PROD (* (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 C) C 1) 1 ) C 1)
(PROD (* 2 (PROD (* 2 C) C 2) 2 ) C 2)
(PROD (* nil (PROD (* nil C) C nil) nil ) C nil)
(PROD (* t (PROD (* t C) C t) t ) C t)
(PROD (* (cons t t) (PROD (* (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 1) 1 1) 1 ) 1 1)
(PROD (* 2 (PROD (* 2 1) 1 2) 2 ) 1 2)
(PROD (* nil (PROD (* nil 1) 1 nil) nil ) 1 nil)
(PROD (* t (PROD (* t 1) 1 t) t ) 1 t)
(PROD (* (cons t t) (PROD (* (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 2) 2 1) 1 ) 2 1)
(PROD (* 2 (PROD (* 2 2) 2 2) 2 ) 2 2)
(PROD (* nil (PROD (* nil 2) 2 nil) nil ) 2 nil)
(PROD (* t (PROD (* t 2) 2 t) t ) 2 t)
(PROD (* (cons t t) (PROD (* (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 3) 3 1) 1 ) 3 1)
(PROD (* 2 (PROD (* 2 3) 3 2) 2 ) 3 2)
(PROD (* nil (PROD (* nil 3) 3 nil) nil ) 3 nil)
(PROD (* t (PROD (* t 3) 3 t) t ) 3 t)
(PROD (* (cons t t) (PROD (* (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 ()) () 1) 1 ) () 1)
(PROD (* 2 (PROD (* 2 ()) () 2) 2 ) () 2)
(PROD (* nil (PROD (* nil ()) () nil) nil ) () nil)
(PROD (* t (PROD (* t ()) () t) t ) () t)
(PROD (* (cons t t) (PROD (* (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 (())) (()) 1) 1 ) (()) 1)
(PROD (* 2 (PROD (* 2 (())) (()) 2) 2 ) (()) 2)
(PROD (* nil (PROD (* nil (())) (()) nil) nil ) (()) nil)
(PROD (* t (PROD (* t (())) (()) t) t ) (()) t)
(PROD (* (cons t t) (PROD (* (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (* 2 (PROD (* 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (* nil (PROD (* nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (* t (PROD (* t ((()))) ((())) t) t ) ((())) t)
(PROD (* (cons t t) (PROD (* (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (* 2 (PROD (* 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (* nil (PROD (* nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (* t (PROD (* t (((())))) (((()))) t) t ) (((()))) t)
(PROD (* (cons t t) (PROD (* (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 'A) 'A 1) 1 ) 'A 1)
(PROD (* 2 (PROD (* 2 'A) 'A 2) 2 ) 'A 2)
(PROD (* nil (PROD (* nil 'A) 'A nil) nil ) 'A nil)
(PROD (* t (PROD (* t 'A) 'A t) t ) 'A t)
(PROD (* (cons t t) (PROD (* (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 'B) 'B 1) 1 ) 'B 1)
(PROD (* 2 (PROD (* 2 'B) 'B 2) 2 ) 'B 2)
(PROD (* nil (PROD (* nil 'B) 'B nil) nil ) 'B nil)
(PROD (* t (PROD (* t 'B) 'B t) t ) 'B t)
(PROD (* (cons t t) (PROD (* (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 'C) 'C 1) 1 ) 'C 1)
(PROD (* 2 (PROD (* 2 'C) 'C 2) 2 ) 'C 2)
(PROD (* nil (PROD (* nil 'C) 'C nil) nil ) 'C nil)
(PROD (* t (PROD (* t 'C) 'C t) t ) 'C t)
(PROD (* (cons t t) (PROD (* (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 '1) '1 1) 1 ) '1 1)
(PROD (* 2 (PROD (* 2 '1) '1 2) 2 ) '1 2)
(PROD (* nil (PROD (* nil '1) '1 nil) nil ) '1 nil)
(PROD (* t (PROD (* t '1) '1 t) t ) '1 t)
(PROD (* (cons t t) (PROD (* (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 '2) '2 1) 1 ) '2 1)
(PROD (* 2 (PROD (* 2 '2) '2 2) 2 ) '2 2)
(PROD (* nil (PROD (* nil '2) '2 nil) nil ) '2 nil)
(PROD (* t (PROD (* t '2) '2 t) t ) '2 t)
(PROD (* (cons t t) (PROD (* (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 '3) '3 1) 1 ) '3 1)
(PROD (* 2 (PROD (* 2 '3) '3 2) 2 ) '3 2)
(PROD (* nil (PROD (* nil '3) '3 nil) nil ) '3 nil)
(PROD (* t (PROD (* t '3) '3 t) t ) '3 t)
(PROD (* (cons t t) (PROD (* (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 '()) '() 1) 1 ) '() 1)
(PROD (* 2 (PROD (* 2 '()) '() 2) 2 ) '() 2)
(PROD (* nil (PROD (* nil '()) '() nil) nil ) '() nil)
(PROD (* t (PROD (* t '()) '() t) t ) '() t)
(PROD (* (cons t t) (PROD (* (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (* 2 (PROD (* 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (* nil (PROD (* nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (* t (PROD (* t '(())) '(()) t) t ) '(()) t)
(PROD (* (cons t t) (PROD (* (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (* 2 (PROD (* 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (* nil (PROD (* nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (* t (PROD (* t '((()))) '((())) t) t ) '((())) t)
(PROD (* (cons t t) (PROD (* (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (* 2 (PROD (* 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (* nil (PROD (* nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (* t (PROD (* t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (* (cons t t) (PROD (* (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (* 2 (PROD (* 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (* nil (PROD (* nil ,A) ,A nil) nil ) ,A nil)
(PROD (* t (PROD (* t ,A) ,A t) t ) ,A t)
(PROD (* (cons t t) (PROD (* (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (* 2 (PROD (* 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (* nil (PROD (* nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (* t (PROD (* t ,1) ,1 t) t ) ,1 t)
(PROD (* (cons t t) (PROD (* (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (* 2 (PROD (* 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (* nil (PROD (* nil ,()) ,() nil) nil ) ,() nil)
(PROD (* t (PROD (* t ,()) ,() t) t ) ,() t)
(PROD (* (cons t t) (PROD (* (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (* 2 (PROD (* 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (* nil (PROD (* nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (* t (PROD (* t ,(())) ,(()) t) t ) ,(()) t)
(PROD (* (cons t t) (PROD (* (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (* 2 (PROD (* 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (* nil (PROD (* nil `'A) `'A nil) nil ) `'A nil)
(PROD (* t (PROD (* t `'A) `'A t) t ) `'A t)
(PROD (* (cons t t) (PROD (* (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (* 2 (PROD (* 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (* nil (PROD (* nil `'B) `'B nil) nil ) `'B nil)
(PROD (* t (PROD (* t `'B) `'B t) t ) `'B t)
(PROD (* (cons t t) (PROD (* (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (* 2 (PROD (* 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (* nil (PROD (* nil `'C) `'C nil) nil ) `'C nil)
(PROD (* t (PROD (* t `'C) `'C t) t ) `'C t)
(PROD (* (cons t t) (PROD (* (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (* 2 (PROD (* 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (* nil (PROD (* nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (* t (PROD (* t `'1) `'1 t) t ) `'1 t)
(PROD (* (cons t t) (PROD (* (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (* 2 (PROD (* 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (* nil (PROD (* nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (* t (PROD (* t `'2) `'2 t) t ) `'2 t)
(PROD (* (cons t t) (PROD (* (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (* 2 (PROD (* 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (* nil (PROD (* nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (* t (PROD (* t `'3) `'3 t) t ) `'3 t)
(PROD (* (cons t t) (PROD (* (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (* 2 (PROD (* 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (* nil (PROD (* nil `'()) `'() nil) nil ) `'() nil)
(PROD (* t (PROD (* t `'()) `'() t) t ) `'() t)
(PROD (* (cons t t) (PROD (* (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (* 2 (PROD (* 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (* nil (PROD (* nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (* t (PROD (* t `'(())) `'(()) t) t ) `'(()) t)
(PROD (* (cons t t) (PROD (* (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (* 2 (PROD (* 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (* nil (PROD (* nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (* t (PROD (* t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (* (cons t t) (PROD (* (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (* 1 (PROD (* 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (* 2 (PROD (* 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (* nil (PROD (* nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (* t (PROD (* t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (* (cons t t) (PROD (* (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (* (cons nil t) (PROD (* (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (* (cons nil nil) (PROD (* (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (* (cons 0 0) (PROD (* (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (* (cons 1 1) (PROD (* (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (* (list 1 2 3) (PROD (* (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (* (list (cons 1 1 ) ) (PROD (* (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 T) T 1) 1 ) T 1)
(PROD (+ 2 (PROD (+ 2 T) T 2) 2 ) T 2)
(PROD (+ nil (PROD (+ nil T) T nil) nil ) T nil)
(PROD (+ t (PROD (+ t T) T t) t ) T t)
(PROD (+ (cons t t) (PROD (+ (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (+ 2 (PROD (+ 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (+ nil (PROD (+ nil NIL) NIL nil) nil ) NIL nil)
(PROD (+ t (PROD (+ t NIL) NIL t) t ) NIL t)
(PROD (+ (cons t t) (PROD (+ (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 A) A 1) 1 ) A 1)
(PROD (+ 2 (PROD (+ 2 A) A 2) 2 ) A 2)
(PROD (+ nil (PROD (+ nil A) A nil) nil ) A nil)
(PROD (+ t (PROD (+ t A) A t) t ) A t)
(PROD (+ (cons t t) (PROD (+ (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 B) B 1) 1 ) B 1)
(PROD (+ 2 (PROD (+ 2 B) B 2) 2 ) B 2)
(PROD (+ nil (PROD (+ nil B) B nil) nil ) B nil)
(PROD (+ t (PROD (+ t B) B t) t ) B t)
(PROD (+ (cons t t) (PROD (+ (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 C) C 1) 1 ) C 1)
(PROD (+ 2 (PROD (+ 2 C) C 2) 2 ) C 2)
(PROD (+ nil (PROD (+ nil C) C nil) nil ) C nil)
(PROD (+ t (PROD (+ t C) C t) t ) C t)
(PROD (+ (cons t t) (PROD (+ (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 1) 1 1) 1 ) 1 1)
(PROD (+ 2 (PROD (+ 2 1) 1 2) 2 ) 1 2)
(PROD (+ nil (PROD (+ nil 1) 1 nil) nil ) 1 nil)
(PROD (+ t (PROD (+ t 1) 1 t) t ) 1 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 2) 2 1) 1 ) 2 1)
(PROD (+ 2 (PROD (+ 2 2) 2 2) 2 ) 2 2)
(PROD (+ nil (PROD (+ nil 2) 2 nil) nil ) 2 nil)
(PROD (+ t (PROD (+ t 2) 2 t) t ) 2 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 3) 3 1) 1 ) 3 1)
(PROD (+ 2 (PROD (+ 2 3) 3 2) 2 ) 3 2)
(PROD (+ nil (PROD (+ nil 3) 3 nil) nil ) 3 nil)
(PROD (+ t (PROD (+ t 3) 3 t) t ) 3 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 ()) () 1) 1 ) () 1)
(PROD (+ 2 (PROD (+ 2 ()) () 2) 2 ) () 2)
(PROD (+ nil (PROD (+ nil ()) () nil) nil ) () nil)
(PROD (+ t (PROD (+ t ()) () t) t ) () t)
(PROD (+ (cons t t) (PROD (+ (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 (())) (()) 1) 1 ) (()) 1)
(PROD (+ 2 (PROD (+ 2 (())) (()) 2) 2 ) (()) 2)
(PROD (+ nil (PROD (+ nil (())) (()) nil) nil ) (()) nil)
(PROD (+ t (PROD (+ t (())) (()) t) t ) (()) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (+ 2 (PROD (+ 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (+ nil (PROD (+ nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (+ t (PROD (+ t ((()))) ((())) t) t ) ((())) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (+ 2 (PROD (+ 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (+ nil (PROD (+ nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (+ t (PROD (+ t (((())))) (((()))) t) t ) (((()))) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 'A) 'A 1) 1 ) 'A 1)
(PROD (+ 2 (PROD (+ 2 'A) 'A 2) 2 ) 'A 2)
(PROD (+ nil (PROD (+ nil 'A) 'A nil) nil ) 'A nil)
(PROD (+ t (PROD (+ t 'A) 'A t) t ) 'A t)
(PROD (+ (cons t t) (PROD (+ (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 'B) 'B 1) 1 ) 'B 1)
(PROD (+ 2 (PROD (+ 2 'B) 'B 2) 2 ) 'B 2)
(PROD (+ nil (PROD (+ nil 'B) 'B nil) nil ) 'B nil)
(PROD (+ t (PROD (+ t 'B) 'B t) t ) 'B t)
(PROD (+ (cons t t) (PROD (+ (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 'C) 'C 1) 1 ) 'C 1)
(PROD (+ 2 (PROD (+ 2 'C) 'C 2) 2 ) 'C 2)
(PROD (+ nil (PROD (+ nil 'C) 'C nil) nil ) 'C nil)
(PROD (+ t (PROD (+ t 'C) 'C t) t ) 'C t)
(PROD (+ (cons t t) (PROD (+ (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 '1) '1 1) 1 ) '1 1)
(PROD (+ 2 (PROD (+ 2 '1) '1 2) 2 ) '1 2)
(PROD (+ nil (PROD (+ nil '1) '1 nil) nil ) '1 nil)
(PROD (+ t (PROD (+ t '1) '1 t) t ) '1 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 '2) '2 1) 1 ) '2 1)
(PROD (+ 2 (PROD (+ 2 '2) '2 2) 2 ) '2 2)
(PROD (+ nil (PROD (+ nil '2) '2 nil) nil ) '2 nil)
(PROD (+ t (PROD (+ t '2) '2 t) t ) '2 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 '3) '3 1) 1 ) '3 1)
(PROD (+ 2 (PROD (+ 2 '3) '3 2) 2 ) '3 2)
(PROD (+ nil (PROD (+ nil '3) '3 nil) nil ) '3 nil)
(PROD (+ t (PROD (+ t '3) '3 t) t ) '3 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 '()) '() 1) 1 ) '() 1)
(PROD (+ 2 (PROD (+ 2 '()) '() 2) 2 ) '() 2)
(PROD (+ nil (PROD (+ nil '()) '() nil) nil ) '() nil)
(PROD (+ t (PROD (+ t '()) '() t) t ) '() t)
(PROD (+ (cons t t) (PROD (+ (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (+ 2 (PROD (+ 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (+ nil (PROD (+ nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (+ t (PROD (+ t '(())) '(()) t) t ) '(()) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (+ 2 (PROD (+ 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (+ nil (PROD (+ nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (+ t (PROD (+ t '((()))) '((())) t) t ) '((())) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (+ 2 (PROD (+ 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (+ nil (PROD (+ nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (+ t (PROD (+ t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (+ 2 (PROD (+ 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (+ nil (PROD (+ nil ,A) ,A nil) nil ) ,A nil)
(PROD (+ t (PROD (+ t ,A) ,A t) t ) ,A t)
(PROD (+ (cons t t) (PROD (+ (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (+ 2 (PROD (+ 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (+ nil (PROD (+ nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (+ t (PROD (+ t ,1) ,1 t) t ) ,1 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (+ 2 (PROD (+ 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (+ nil (PROD (+ nil ,()) ,() nil) nil ) ,() nil)
(PROD (+ t (PROD (+ t ,()) ,() t) t ) ,() t)
(PROD (+ (cons t t) (PROD (+ (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (+ 2 (PROD (+ 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (+ nil (PROD (+ nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (+ t (PROD (+ t ,(())) ,(()) t) t ) ,(()) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (+ 2 (PROD (+ 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (+ nil (PROD (+ nil `'A) `'A nil) nil ) `'A nil)
(PROD (+ t (PROD (+ t `'A) `'A t) t ) `'A t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (+ 2 (PROD (+ 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (+ nil (PROD (+ nil `'B) `'B nil) nil ) `'B nil)
(PROD (+ t (PROD (+ t `'B) `'B t) t ) `'B t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (+ 2 (PROD (+ 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (+ nil (PROD (+ nil `'C) `'C nil) nil ) `'C nil)
(PROD (+ t (PROD (+ t `'C) `'C t) t ) `'C t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (+ 2 (PROD (+ 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (+ nil (PROD (+ nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (+ t (PROD (+ t `'1) `'1 t) t ) `'1 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (+ 2 (PROD (+ 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (+ nil (PROD (+ nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (+ t (PROD (+ t `'2) `'2 t) t ) `'2 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (+ 2 (PROD (+ 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (+ nil (PROD (+ nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (+ t (PROD (+ t `'3) `'3 t) t ) `'3 t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (+ 2 (PROD (+ 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (+ nil (PROD (+ nil `'()) `'() nil) nil ) `'() nil)
(PROD (+ t (PROD (+ t `'()) `'() t) t ) `'() t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (+ 2 (PROD (+ 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (+ nil (PROD (+ nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (+ t (PROD (+ t `'(())) `'(()) t) t ) `'(()) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (+ 2 (PROD (+ 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (+ nil (PROD (+ nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (+ t (PROD (+ t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (+ 1 (PROD (+ 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (+ 2 (PROD (+ 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (+ nil (PROD (+ nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (+ t (PROD (+ t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (+ (cons t t) (PROD (+ (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (+ (cons nil t) (PROD (+ (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (+ (cons nil nil) (PROD (+ (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (+ (cons 0 0) (PROD (+ (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (+ (cons 1 1) (PROD (+ (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (+ (list 1 2 3) (PROD (+ (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (+ (list (cons 1 1 ) ) (PROD (+ (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 T) T 1) 1 ) T 1)
(PROD (< 2 (PROD (< 2 T) T 2) 2 ) T 2)
(PROD (< nil (PROD (< nil T) T nil) nil ) T nil)
(PROD (< t (PROD (< t T) T t) t ) T t)
(PROD (< (cons t t) (PROD (< (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (< 2 (PROD (< 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (< nil (PROD (< nil NIL) NIL nil) nil ) NIL nil)
(PROD (< t (PROD (< t NIL) NIL t) t ) NIL t)
(PROD (< (cons t t) (PROD (< (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 A) A 1) 1 ) A 1)
(PROD (< 2 (PROD (< 2 A) A 2) 2 ) A 2)
(PROD (< nil (PROD (< nil A) A nil) nil ) A nil)
(PROD (< t (PROD (< t A) A t) t ) A t)
(PROD (< (cons t t) (PROD (< (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 B) B 1) 1 ) B 1)
(PROD (< 2 (PROD (< 2 B) B 2) 2 ) B 2)
(PROD (< nil (PROD (< nil B) B nil) nil ) B nil)
(PROD (< t (PROD (< t B) B t) t ) B t)
(PROD (< (cons t t) (PROD (< (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 C) C 1) 1 ) C 1)
(PROD (< 2 (PROD (< 2 C) C 2) 2 ) C 2)
(PROD (< nil (PROD (< nil C) C nil) nil ) C nil)
(PROD (< t (PROD (< t C) C t) t ) C t)
(PROD (< (cons t t) (PROD (< (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 1) 1 1) 1 ) 1 1)
(PROD (< 2 (PROD (< 2 1) 1 2) 2 ) 1 2)
(PROD (< nil (PROD (< nil 1) 1 nil) nil ) 1 nil)
(PROD (< t (PROD (< t 1) 1 t) t ) 1 t)
(PROD (< (cons t t) (PROD (< (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 2) 2 1) 1 ) 2 1)
(PROD (< 2 (PROD (< 2 2) 2 2) 2 ) 2 2)
(PROD (< nil (PROD (< nil 2) 2 nil) nil ) 2 nil)
(PROD (< t (PROD (< t 2) 2 t) t ) 2 t)
(PROD (< (cons t t) (PROD (< (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 3) 3 1) 1 ) 3 1)
(PROD (< 2 (PROD (< 2 3) 3 2) 2 ) 3 2)
(PROD (< nil (PROD (< nil 3) 3 nil) nil ) 3 nil)
(PROD (< t (PROD (< t 3) 3 t) t ) 3 t)
(PROD (< (cons t t) (PROD (< (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 ()) () 1) 1 ) () 1)
(PROD (< 2 (PROD (< 2 ()) () 2) 2 ) () 2)
(PROD (< nil (PROD (< nil ()) () nil) nil ) () nil)
(PROD (< t (PROD (< t ()) () t) t ) () t)
(PROD (< (cons t t) (PROD (< (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 (())) (()) 1) 1 ) (()) 1)
(PROD (< 2 (PROD (< 2 (())) (()) 2) 2 ) (()) 2)
(PROD (< nil (PROD (< nil (())) (()) nil) nil ) (()) nil)
(PROD (< t (PROD (< t (())) (()) t) t ) (()) t)
(PROD (< (cons t t) (PROD (< (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (< 2 (PROD (< 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (< nil (PROD (< nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (< t (PROD (< t ((()))) ((())) t) t ) ((())) t)
(PROD (< (cons t t) (PROD (< (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (< 2 (PROD (< 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (< nil (PROD (< nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (< t (PROD (< t (((())))) (((()))) t) t ) (((()))) t)
(PROD (< (cons t t) (PROD (< (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 'A) 'A 1) 1 ) 'A 1)
(PROD (< 2 (PROD (< 2 'A) 'A 2) 2 ) 'A 2)
(PROD (< nil (PROD (< nil 'A) 'A nil) nil ) 'A nil)
(PROD (< t (PROD (< t 'A) 'A t) t ) 'A t)
(PROD (< (cons t t) (PROD (< (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 'B) 'B 1) 1 ) 'B 1)
(PROD (< 2 (PROD (< 2 'B) 'B 2) 2 ) 'B 2)
(PROD (< nil (PROD (< nil 'B) 'B nil) nil ) 'B nil)
(PROD (< t (PROD (< t 'B) 'B t) t ) 'B t)
(PROD (< (cons t t) (PROD (< (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 'C) 'C 1) 1 ) 'C 1)
(PROD (< 2 (PROD (< 2 'C) 'C 2) 2 ) 'C 2)
(PROD (< nil (PROD (< nil 'C) 'C nil) nil ) 'C nil)
(PROD (< t (PROD (< t 'C) 'C t) t ) 'C t)
(PROD (< (cons t t) (PROD (< (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 '1) '1 1) 1 ) '1 1)
(PROD (< 2 (PROD (< 2 '1) '1 2) 2 ) '1 2)
(PROD (< nil (PROD (< nil '1) '1 nil) nil ) '1 nil)
(PROD (< t (PROD (< t '1) '1 t) t ) '1 t)
(PROD (< (cons t t) (PROD (< (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 '2) '2 1) 1 ) '2 1)
(PROD (< 2 (PROD (< 2 '2) '2 2) 2 ) '2 2)
(PROD (< nil (PROD (< nil '2) '2 nil) nil ) '2 nil)
(PROD (< t (PROD (< t '2) '2 t) t ) '2 t)
(PROD (< (cons t t) (PROD (< (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 '3) '3 1) 1 ) '3 1)
(PROD (< 2 (PROD (< 2 '3) '3 2) 2 ) '3 2)
(PROD (< nil (PROD (< nil '3) '3 nil) nil ) '3 nil)
(PROD (< t (PROD (< t '3) '3 t) t ) '3 t)
(PROD (< (cons t t) (PROD (< (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 '()) '() 1) 1 ) '() 1)
(PROD (< 2 (PROD (< 2 '()) '() 2) 2 ) '() 2)
(PROD (< nil (PROD (< nil '()) '() nil) nil ) '() nil)
(PROD (< t (PROD (< t '()) '() t) t ) '() t)
(PROD (< (cons t t) (PROD (< (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (< 2 (PROD (< 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (< nil (PROD (< nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (< t (PROD (< t '(())) '(()) t) t ) '(()) t)
(PROD (< (cons t t) (PROD (< (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (< 2 (PROD (< 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (< nil (PROD (< nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (< t (PROD (< t '((()))) '((())) t) t ) '((())) t)
(PROD (< (cons t t) (PROD (< (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (< 2 (PROD (< 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (< nil (PROD (< nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (< t (PROD (< t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (< (cons t t) (PROD (< (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (< 2 (PROD (< 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (< nil (PROD (< nil ,A) ,A nil) nil ) ,A nil)
(PROD (< t (PROD (< t ,A) ,A t) t ) ,A t)
(PROD (< (cons t t) (PROD (< (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (< 2 (PROD (< 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (< nil (PROD (< nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (< t (PROD (< t ,1) ,1 t) t ) ,1 t)
(PROD (< (cons t t) (PROD (< (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (< 2 (PROD (< 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (< nil (PROD (< nil ,()) ,() nil) nil ) ,() nil)
(PROD (< t (PROD (< t ,()) ,() t) t ) ,() t)
(PROD (< (cons t t) (PROD (< (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (< 2 (PROD (< 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (< nil (PROD (< nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (< t (PROD (< t ,(())) ,(()) t) t ) ,(()) t)
(PROD (< (cons t t) (PROD (< (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (< 2 (PROD (< 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (< nil (PROD (< nil `'A) `'A nil) nil ) `'A nil)
(PROD (< t (PROD (< t `'A) `'A t) t ) `'A t)
(PROD (< (cons t t) (PROD (< (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (< 2 (PROD (< 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (< nil (PROD (< nil `'B) `'B nil) nil ) `'B nil)
(PROD (< t (PROD (< t `'B) `'B t) t ) `'B t)
(PROD (< (cons t t) (PROD (< (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (< 2 (PROD (< 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (< nil (PROD (< nil `'C) `'C nil) nil ) `'C nil)
(PROD (< t (PROD (< t `'C) `'C t) t ) `'C t)
(PROD (< (cons t t) (PROD (< (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (< 2 (PROD (< 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (< nil (PROD (< nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (< t (PROD (< t `'1) `'1 t) t ) `'1 t)
(PROD (< (cons t t) (PROD (< (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (< 2 (PROD (< 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (< nil (PROD (< nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (< t (PROD (< t `'2) `'2 t) t ) `'2 t)
(PROD (< (cons t t) (PROD (< (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (< 2 (PROD (< 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (< nil (PROD (< nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (< t (PROD (< t `'3) `'3 t) t ) `'3 t)
(PROD (< (cons t t) (PROD (< (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (< 2 (PROD (< 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (< nil (PROD (< nil `'()) `'() nil) nil ) `'() nil)
(PROD (< t (PROD (< t `'()) `'() t) t ) `'() t)
(PROD (< (cons t t) (PROD (< (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (< 2 (PROD (< 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (< nil (PROD (< nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (< t (PROD (< t `'(())) `'(()) t) t ) `'(()) t)
(PROD (< (cons t t) (PROD (< (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (< 2 (PROD (< 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (< nil (PROD (< nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (< t (PROD (< t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (< (cons t t) (PROD (< (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (< 1 (PROD (< 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (< 2 (PROD (< 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (< nil (PROD (< nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (< t (PROD (< t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (< (cons t t) (PROD (< (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (< (cons nil t) (PROD (< (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (< (cons nil nil) (PROD (< (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (< (cons 0 0) (PROD (< (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (< (cons 1 1) (PROD (< (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (< (list 1 2 3) (PROD (< (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (< (list (cons 1 1 ) ) (PROD (< (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 T) T 1) 1 ) T 1)
(PROD (<= 2 (PROD (<= 2 T) T 2) 2 ) T 2)
(PROD (<= nil (PROD (<= nil T) T nil) nil ) T nil)
(PROD (<= t (PROD (<= t T) T t) t ) T t)
(PROD (<= (cons t t) (PROD (<= (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (<= 2 (PROD (<= 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (<= nil (PROD (<= nil NIL) NIL nil) nil ) NIL nil)
(PROD (<= t (PROD (<= t NIL) NIL t) t ) NIL t)
(PROD (<= (cons t t) (PROD (<= (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 A) A 1) 1 ) A 1)
(PROD (<= 2 (PROD (<= 2 A) A 2) 2 ) A 2)
(PROD (<= nil (PROD (<= nil A) A nil) nil ) A nil)
(PROD (<= t (PROD (<= t A) A t) t ) A t)
(PROD (<= (cons t t) (PROD (<= (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 B) B 1) 1 ) B 1)
(PROD (<= 2 (PROD (<= 2 B) B 2) 2 ) B 2)
(PROD (<= nil (PROD (<= nil B) B nil) nil ) B nil)
(PROD (<= t (PROD (<= t B) B t) t ) B t)
(PROD (<= (cons t t) (PROD (<= (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 C) C 1) 1 ) C 1)
(PROD (<= 2 (PROD (<= 2 C) C 2) 2 ) C 2)
(PROD (<= nil (PROD (<= nil C) C nil) nil ) C nil)
(PROD (<= t (PROD (<= t C) C t) t ) C t)
(PROD (<= (cons t t) (PROD (<= (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 1) 1 1) 1 ) 1 1)
(PROD (<= 2 (PROD (<= 2 1) 1 2) 2 ) 1 2)
(PROD (<= nil (PROD (<= nil 1) 1 nil) nil ) 1 nil)
(PROD (<= t (PROD (<= t 1) 1 t) t ) 1 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 2) 2 1) 1 ) 2 1)
(PROD (<= 2 (PROD (<= 2 2) 2 2) 2 ) 2 2)
(PROD (<= nil (PROD (<= nil 2) 2 nil) nil ) 2 nil)
(PROD (<= t (PROD (<= t 2) 2 t) t ) 2 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 3) 3 1) 1 ) 3 1)
(PROD (<= 2 (PROD (<= 2 3) 3 2) 2 ) 3 2)
(PROD (<= nil (PROD (<= nil 3) 3 nil) nil ) 3 nil)
(PROD (<= t (PROD (<= t 3) 3 t) t ) 3 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 ()) () 1) 1 ) () 1)
(PROD (<= 2 (PROD (<= 2 ()) () 2) 2 ) () 2)
(PROD (<= nil (PROD (<= nil ()) () nil) nil ) () nil)
(PROD (<= t (PROD (<= t ()) () t) t ) () t)
(PROD (<= (cons t t) (PROD (<= (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 (())) (()) 1) 1 ) (()) 1)
(PROD (<= 2 (PROD (<= 2 (())) (()) 2) 2 ) (()) 2)
(PROD (<= nil (PROD (<= nil (())) (()) nil) nil ) (()) nil)
(PROD (<= t (PROD (<= t (())) (()) t) t ) (()) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (<= 2 (PROD (<= 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (<= nil (PROD (<= nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (<= t (PROD (<= t ((()))) ((())) t) t ) ((())) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (<= 2 (PROD (<= 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (<= nil (PROD (<= nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (<= t (PROD (<= t (((())))) (((()))) t) t ) (((()))) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 'A) 'A 1) 1 ) 'A 1)
(PROD (<= 2 (PROD (<= 2 'A) 'A 2) 2 ) 'A 2)
(PROD (<= nil (PROD (<= nil 'A) 'A nil) nil ) 'A nil)
(PROD (<= t (PROD (<= t 'A) 'A t) t ) 'A t)
(PROD (<= (cons t t) (PROD (<= (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 'B) 'B 1) 1 ) 'B 1)
(PROD (<= 2 (PROD (<= 2 'B) 'B 2) 2 ) 'B 2)
(PROD (<= nil (PROD (<= nil 'B) 'B nil) nil ) 'B nil)
(PROD (<= t (PROD (<= t 'B) 'B t) t ) 'B t)
(PROD (<= (cons t t) (PROD (<= (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 'C) 'C 1) 1 ) 'C 1)
(PROD (<= 2 (PROD (<= 2 'C) 'C 2) 2 ) 'C 2)
(PROD (<= nil (PROD (<= nil 'C) 'C nil) nil ) 'C nil)
(PROD (<= t (PROD (<= t 'C) 'C t) t ) 'C t)
(PROD (<= (cons t t) (PROD (<= (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 '1) '1 1) 1 ) '1 1)
(PROD (<= 2 (PROD (<= 2 '1) '1 2) 2 ) '1 2)
(PROD (<= nil (PROD (<= nil '1) '1 nil) nil ) '1 nil)
(PROD (<= t (PROD (<= t '1) '1 t) t ) '1 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 '2) '2 1) 1 ) '2 1)
(PROD (<= 2 (PROD (<= 2 '2) '2 2) 2 ) '2 2)
(PROD (<= nil (PROD (<= nil '2) '2 nil) nil ) '2 nil)
(PROD (<= t (PROD (<= t '2) '2 t) t ) '2 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 '3) '3 1) 1 ) '3 1)
(PROD (<= 2 (PROD (<= 2 '3) '3 2) 2 ) '3 2)
(PROD (<= nil (PROD (<= nil '3) '3 nil) nil ) '3 nil)
(PROD (<= t (PROD (<= t '3) '3 t) t ) '3 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 '()) '() 1) 1 ) '() 1)
(PROD (<= 2 (PROD (<= 2 '()) '() 2) 2 ) '() 2)
(PROD (<= nil (PROD (<= nil '()) '() nil) nil ) '() nil)
(PROD (<= t (PROD (<= t '()) '() t) t ) '() t)
(PROD (<= (cons t t) (PROD (<= (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (<= 2 (PROD (<= 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (<= nil (PROD (<= nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (<= t (PROD (<= t '(())) '(()) t) t ) '(()) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (<= 2 (PROD (<= 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (<= nil (PROD (<= nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (<= t (PROD (<= t '((()))) '((())) t) t ) '((())) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (<= 2 (PROD (<= 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (<= nil (PROD (<= nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (<= t (PROD (<= t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (<= 2 (PROD (<= 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (<= nil (PROD (<= nil ,A) ,A nil) nil ) ,A nil)
(PROD (<= t (PROD (<= t ,A) ,A t) t ) ,A t)
(PROD (<= (cons t t) (PROD (<= (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (<= 2 (PROD (<= 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (<= nil (PROD (<= nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (<= t (PROD (<= t ,1) ,1 t) t ) ,1 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (<= 2 (PROD (<= 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (<= nil (PROD (<= nil ,()) ,() nil) nil ) ,() nil)
(PROD (<= t (PROD (<= t ,()) ,() t) t ) ,() t)
(PROD (<= (cons t t) (PROD (<= (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (<= 2 (PROD (<= 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (<= nil (PROD (<= nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (<= t (PROD (<= t ,(())) ,(()) t) t ) ,(()) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (<= 2 (PROD (<= 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (<= nil (PROD (<= nil `'A) `'A nil) nil ) `'A nil)
(PROD (<= t (PROD (<= t `'A) `'A t) t ) `'A t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (<= 2 (PROD (<= 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (<= nil (PROD (<= nil `'B) `'B nil) nil ) `'B nil)
(PROD (<= t (PROD (<= t `'B) `'B t) t ) `'B t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (<= 2 (PROD (<= 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (<= nil (PROD (<= nil `'C) `'C nil) nil ) `'C nil)
(PROD (<= t (PROD (<= t `'C) `'C t) t ) `'C t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (<= 2 (PROD (<= 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (<= nil (PROD (<= nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (<= t (PROD (<= t `'1) `'1 t) t ) `'1 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (<= 2 (PROD (<= 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (<= nil (PROD (<= nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (<= t (PROD (<= t `'2) `'2 t) t ) `'2 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (<= 2 (PROD (<= 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (<= nil (PROD (<= nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (<= t (PROD (<= t `'3) `'3 t) t ) `'3 t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (<= 2 (PROD (<= 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (<= nil (PROD (<= nil `'()) `'() nil) nil ) `'() nil)
(PROD (<= t (PROD (<= t `'()) `'() t) t ) `'() t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (<= 2 (PROD (<= 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (<= nil (PROD (<= nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (<= t (PROD (<= t `'(())) `'(()) t) t ) `'(()) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (<= 2 (PROD (<= 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (<= nil (PROD (<= nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (<= t (PROD (<= t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (<= 1 (PROD (<= 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (<= 2 (PROD (<= 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (<= nil (PROD (<= nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (<= t (PROD (<= t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (<= (cons t t) (PROD (<= (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (<= (cons nil t) (PROD (<= (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (<= (cons nil nil) (PROD (<= (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (<= (cons 0 0) (PROD (<= (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (<= (cons 1 1) (PROD (<= (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (<= (list 1 2 3) (PROD (<= (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (<= (list (cons 1 1 ) ) (PROD (<= (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 T) T 1) 1 ) T 1)
(PROD (= 2 (PROD (= 2 T) T 2) 2 ) T 2)
(PROD (= nil (PROD (= nil T) T nil) nil ) T nil)
(PROD (= t (PROD (= t T) T t) t ) T t)
(PROD (= (cons t t) (PROD (= (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (= 2 (PROD (= 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (= nil (PROD (= nil NIL) NIL nil) nil ) NIL nil)
(PROD (= t (PROD (= t NIL) NIL t) t ) NIL t)
(PROD (= (cons t t) (PROD (= (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 A) A 1) 1 ) A 1)
(PROD (= 2 (PROD (= 2 A) A 2) 2 ) A 2)
(PROD (= nil (PROD (= nil A) A nil) nil ) A nil)
(PROD (= t (PROD (= t A) A t) t ) A t)
(PROD (= (cons t t) (PROD (= (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 B) B 1) 1 ) B 1)
(PROD (= 2 (PROD (= 2 B) B 2) 2 ) B 2)
(PROD (= nil (PROD (= nil B) B nil) nil ) B nil)
(PROD (= t (PROD (= t B) B t) t ) B t)
(PROD (= (cons t t) (PROD (= (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 C) C 1) 1 ) C 1)
(PROD (= 2 (PROD (= 2 C) C 2) 2 ) C 2)
(PROD (= nil (PROD (= nil C) C nil) nil ) C nil)
(PROD (= t (PROD (= t C) C t) t ) C t)
(PROD (= (cons t t) (PROD (= (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 1) 1 1) 1 ) 1 1)
(PROD (= 2 (PROD (= 2 1) 1 2) 2 ) 1 2)
(PROD (= nil (PROD (= nil 1) 1 nil) nil ) 1 nil)
(PROD (= t (PROD (= t 1) 1 t) t ) 1 t)
(PROD (= (cons t t) (PROD (= (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 2) 2 1) 1 ) 2 1)
(PROD (= 2 (PROD (= 2 2) 2 2) 2 ) 2 2)
(PROD (= nil (PROD (= nil 2) 2 nil) nil ) 2 nil)
(PROD (= t (PROD (= t 2) 2 t) t ) 2 t)
(PROD (= (cons t t) (PROD (= (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 3) 3 1) 1 ) 3 1)
(PROD (= 2 (PROD (= 2 3) 3 2) 2 ) 3 2)
(PROD (= nil (PROD (= nil 3) 3 nil) nil ) 3 nil)
(PROD (= t (PROD (= t 3) 3 t) t ) 3 t)
(PROD (= (cons t t) (PROD (= (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 ()) () 1) 1 ) () 1)
(PROD (= 2 (PROD (= 2 ()) () 2) 2 ) () 2)
(PROD (= nil (PROD (= nil ()) () nil) nil ) () nil)
(PROD (= t (PROD (= t ()) () t) t ) () t)
(PROD (= (cons t t) (PROD (= (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 (())) (()) 1) 1 ) (()) 1)
(PROD (= 2 (PROD (= 2 (())) (()) 2) 2 ) (()) 2)
(PROD (= nil (PROD (= nil (())) (()) nil) nil ) (()) nil)
(PROD (= t (PROD (= t (())) (()) t) t ) (()) t)
(PROD (= (cons t t) (PROD (= (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (= 2 (PROD (= 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (= nil (PROD (= nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (= t (PROD (= t ((()))) ((())) t) t ) ((())) t)
(PROD (= (cons t t) (PROD (= (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (= 2 (PROD (= 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (= nil (PROD (= nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (= t (PROD (= t (((())))) (((()))) t) t ) (((()))) t)
(PROD (= (cons t t) (PROD (= (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 'A) 'A 1) 1 ) 'A 1)
(PROD (= 2 (PROD (= 2 'A) 'A 2) 2 ) 'A 2)
(PROD (= nil (PROD (= nil 'A) 'A nil) nil ) 'A nil)
(PROD (= t (PROD (= t 'A) 'A t) t ) 'A t)
(PROD (= (cons t t) (PROD (= (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 'B) 'B 1) 1 ) 'B 1)
(PROD (= 2 (PROD (= 2 'B) 'B 2) 2 ) 'B 2)
(PROD (= nil (PROD (= nil 'B) 'B nil) nil ) 'B nil)
(PROD (= t (PROD (= t 'B) 'B t) t ) 'B t)
(PROD (= (cons t t) (PROD (= (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 'C) 'C 1) 1 ) 'C 1)
(PROD (= 2 (PROD (= 2 'C) 'C 2) 2 ) 'C 2)
(PROD (= nil (PROD (= nil 'C) 'C nil) nil ) 'C nil)
(PROD (= t (PROD (= t 'C) 'C t) t ) 'C t)
(PROD (= (cons t t) (PROD (= (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 '1) '1 1) 1 ) '1 1)
(PROD (= 2 (PROD (= 2 '1) '1 2) 2 ) '1 2)
(PROD (= nil (PROD (= nil '1) '1 nil) nil ) '1 nil)
(PROD (= t (PROD (= t '1) '1 t) t ) '1 t)
(PROD (= (cons t t) (PROD (= (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 '2) '2 1) 1 ) '2 1)
(PROD (= 2 (PROD (= 2 '2) '2 2) 2 ) '2 2)
(PROD (= nil (PROD (= nil '2) '2 nil) nil ) '2 nil)
(PROD (= t (PROD (= t '2) '2 t) t ) '2 t)
(PROD (= (cons t t) (PROD (= (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 '3) '3 1) 1 ) '3 1)
(PROD (= 2 (PROD (= 2 '3) '3 2) 2 ) '3 2)
(PROD (= nil (PROD (= nil '3) '3 nil) nil ) '3 nil)
(PROD (= t (PROD (= t '3) '3 t) t ) '3 t)
(PROD (= (cons t t) (PROD (= (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 '()) '() 1) 1 ) '() 1)
(PROD (= 2 (PROD (= 2 '()) '() 2) 2 ) '() 2)
(PROD (= nil (PROD (= nil '()) '() nil) nil ) '() nil)
(PROD (= t (PROD (= t '()) '() t) t ) '() t)
(PROD (= (cons t t) (PROD (= (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (= 2 (PROD (= 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (= nil (PROD (= nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (= t (PROD (= t '(())) '(()) t) t ) '(()) t)
(PROD (= (cons t t) (PROD (= (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (= 2 (PROD (= 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (= nil (PROD (= nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (= t (PROD (= t '((()))) '((())) t) t ) '((())) t)
(PROD (= (cons t t) (PROD (= (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (= 2 (PROD (= 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (= nil (PROD (= nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (= t (PROD (= t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (= (cons t t) (PROD (= (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (= 2 (PROD (= 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (= nil (PROD (= nil ,A) ,A nil) nil ) ,A nil)
(PROD (= t (PROD (= t ,A) ,A t) t ) ,A t)
(PROD (= (cons t t) (PROD (= (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (= 2 (PROD (= 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (= nil (PROD (= nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (= t (PROD (= t ,1) ,1 t) t ) ,1 t)
(PROD (= (cons t t) (PROD (= (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (= 2 (PROD (= 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (= nil (PROD (= nil ,()) ,() nil) nil ) ,() nil)
(PROD (= t (PROD (= t ,()) ,() t) t ) ,() t)
(PROD (= (cons t t) (PROD (= (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (= 2 (PROD (= 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (= nil (PROD (= nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (= t (PROD (= t ,(())) ,(()) t) t ) ,(()) t)
(PROD (= (cons t t) (PROD (= (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (= 2 (PROD (= 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (= nil (PROD (= nil `'A) `'A nil) nil ) `'A nil)
(PROD (= t (PROD (= t `'A) `'A t) t ) `'A t)
(PROD (= (cons t t) (PROD (= (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (= 2 (PROD (= 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (= nil (PROD (= nil `'B) `'B nil) nil ) `'B nil)
(PROD (= t (PROD (= t `'B) `'B t) t ) `'B t)
(PROD (= (cons t t) (PROD (= (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (= 2 (PROD (= 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (= nil (PROD (= nil `'C) `'C nil) nil ) `'C nil)
(PROD (= t (PROD (= t `'C) `'C t) t ) `'C t)
(PROD (= (cons t t) (PROD (= (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (= 2 (PROD (= 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (= nil (PROD (= nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (= t (PROD (= t `'1) `'1 t) t ) `'1 t)
(PROD (= (cons t t) (PROD (= (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (= 2 (PROD (= 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (= nil (PROD (= nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (= t (PROD (= t `'2) `'2 t) t ) `'2 t)
(PROD (= (cons t t) (PROD (= (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (= 2 (PROD (= 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (= nil (PROD (= nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (= t (PROD (= t `'3) `'3 t) t ) `'3 t)
(PROD (= (cons t t) (PROD (= (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (= 2 (PROD (= 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (= nil (PROD (= nil `'()) `'() nil) nil ) `'() nil)
(PROD (= t (PROD (= t `'()) `'() t) t ) `'() t)
(PROD (= (cons t t) (PROD (= (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (= 2 (PROD (= 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (= nil (PROD (= nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (= t (PROD (= t `'(())) `'(()) t) t ) `'(()) t)
(PROD (= (cons t t) (PROD (= (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (= 2 (PROD (= 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (= nil (PROD (= nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (= t (PROD (= t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (= (cons t t) (PROD (= (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (= 1 (PROD (= 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (= 2 (PROD (= 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (= nil (PROD (= nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (= t (PROD (= t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (= (cons t t) (PROD (= (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (= (cons nil t) (PROD (= (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (= (cons nil nil) (PROD (= (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (= (cons 0 0) (PROD (= (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (= (cons 1 1) (PROD (= (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (= (list 1 2 3) (PROD (= (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (= (list (cons 1 1 ) ) (PROD (= (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 T) T 1) 1 ) T 1)
(PROD (> 2 (PROD (> 2 T) T 2) 2 ) T 2)
(PROD (> nil (PROD (> nil T) T nil) nil ) T nil)
(PROD (> t (PROD (> t T) T t) t ) T t)
(PROD (> (cons t t) (PROD (> (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (> 2 (PROD (> 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (> nil (PROD (> nil NIL) NIL nil) nil ) NIL nil)
(PROD (> t (PROD (> t NIL) NIL t) t ) NIL t)
(PROD (> (cons t t) (PROD (> (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 A) A 1) 1 ) A 1)
(PROD (> 2 (PROD (> 2 A) A 2) 2 ) A 2)
(PROD (> nil (PROD (> nil A) A nil) nil ) A nil)
(PROD (> t (PROD (> t A) A t) t ) A t)
(PROD (> (cons t t) (PROD (> (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 B) B 1) 1 ) B 1)
(PROD (> 2 (PROD (> 2 B) B 2) 2 ) B 2)
(PROD (> nil (PROD (> nil B) B nil) nil ) B nil)
(PROD (> t (PROD (> t B) B t) t ) B t)
(PROD (> (cons t t) (PROD (> (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 C) C 1) 1 ) C 1)
(PROD (> 2 (PROD (> 2 C) C 2) 2 ) C 2)
(PROD (> nil (PROD (> nil C) C nil) nil ) C nil)
(PROD (> t (PROD (> t C) C t) t ) C t)
(PROD (> (cons t t) (PROD (> (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 1) 1 1) 1 ) 1 1)
(PROD (> 2 (PROD (> 2 1) 1 2) 2 ) 1 2)
(PROD (> nil (PROD (> nil 1) 1 nil) nil ) 1 nil)
(PROD (> t (PROD (> t 1) 1 t) t ) 1 t)
(PROD (> (cons t t) (PROD (> (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 2) 2 1) 1 ) 2 1)
(PROD (> 2 (PROD (> 2 2) 2 2) 2 ) 2 2)
(PROD (> nil (PROD (> nil 2) 2 nil) nil ) 2 nil)
(PROD (> t (PROD (> t 2) 2 t) t ) 2 t)
(PROD (> (cons t t) (PROD (> (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 3) 3 1) 1 ) 3 1)
(PROD (> 2 (PROD (> 2 3) 3 2) 2 ) 3 2)
(PROD (> nil (PROD (> nil 3) 3 nil) nil ) 3 nil)
(PROD (> t (PROD (> t 3) 3 t) t ) 3 t)
(PROD (> (cons t t) (PROD (> (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 ()) () 1) 1 ) () 1)
(PROD (> 2 (PROD (> 2 ()) () 2) 2 ) () 2)
(PROD (> nil (PROD (> nil ()) () nil) nil ) () nil)
(PROD (> t (PROD (> t ()) () t) t ) () t)
(PROD (> (cons t t) (PROD (> (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 (())) (()) 1) 1 ) (()) 1)
(PROD (> 2 (PROD (> 2 (())) (()) 2) 2 ) (()) 2)
(PROD (> nil (PROD (> nil (())) (()) nil) nil ) (()) nil)
(PROD (> t (PROD (> t (())) (()) t) t ) (()) t)
(PROD (> (cons t t) (PROD (> (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (> 2 (PROD (> 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (> nil (PROD (> nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (> t (PROD (> t ((()))) ((())) t) t ) ((())) t)
(PROD (> (cons t t) (PROD (> (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (> 2 (PROD (> 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (> nil (PROD (> nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (> t (PROD (> t (((())))) (((()))) t) t ) (((()))) t)
(PROD (> (cons t t) (PROD (> (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 'A) 'A 1) 1 ) 'A 1)
(PROD (> 2 (PROD (> 2 'A) 'A 2) 2 ) 'A 2)
(PROD (> nil (PROD (> nil 'A) 'A nil) nil ) 'A nil)
(PROD (> t (PROD (> t 'A) 'A t) t ) 'A t)
(PROD (> (cons t t) (PROD (> (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 'B) 'B 1) 1 ) 'B 1)
(PROD (> 2 (PROD (> 2 'B) 'B 2) 2 ) 'B 2)
(PROD (> nil (PROD (> nil 'B) 'B nil) nil ) 'B nil)
(PROD (> t (PROD (> t 'B) 'B t) t ) 'B t)
(PROD (> (cons t t) (PROD (> (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 'C) 'C 1) 1 ) 'C 1)
(PROD (> 2 (PROD (> 2 'C) 'C 2) 2 ) 'C 2)
(PROD (> nil (PROD (> nil 'C) 'C nil) nil ) 'C nil)
(PROD (> t (PROD (> t 'C) 'C t) t ) 'C t)
(PROD (> (cons t t) (PROD (> (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 '1) '1 1) 1 ) '1 1)
(PROD (> 2 (PROD (> 2 '1) '1 2) 2 ) '1 2)
(PROD (> nil (PROD (> nil '1) '1 nil) nil ) '1 nil)
(PROD (> t (PROD (> t '1) '1 t) t ) '1 t)
(PROD (> (cons t t) (PROD (> (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 '2) '2 1) 1 ) '2 1)
(PROD (> 2 (PROD (> 2 '2) '2 2) 2 ) '2 2)
(PROD (> nil (PROD (> nil '2) '2 nil) nil ) '2 nil)
(PROD (> t (PROD (> t '2) '2 t) t ) '2 t)
(PROD (> (cons t t) (PROD (> (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 '3) '3 1) 1 ) '3 1)
(PROD (> 2 (PROD (> 2 '3) '3 2) 2 ) '3 2)
(PROD (> nil (PROD (> nil '3) '3 nil) nil ) '3 nil)
(PROD (> t (PROD (> t '3) '3 t) t ) '3 t)
(PROD (> (cons t t) (PROD (> (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 '()) '() 1) 1 ) '() 1)
(PROD (> 2 (PROD (> 2 '()) '() 2) 2 ) '() 2)
(PROD (> nil (PROD (> nil '()) '() nil) nil ) '() nil)
(PROD (> t (PROD (> t '()) '() t) t ) '() t)
(PROD (> (cons t t) (PROD (> (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (> 2 (PROD (> 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (> nil (PROD (> nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (> t (PROD (> t '(())) '(()) t) t ) '(()) t)
(PROD (> (cons t t) (PROD (> (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (> 2 (PROD (> 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (> nil (PROD (> nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (> t (PROD (> t '((()))) '((())) t) t ) '((())) t)
(PROD (> (cons t t) (PROD (> (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (> 2 (PROD (> 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (> nil (PROD (> nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (> t (PROD (> t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (> (cons t t) (PROD (> (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (> 2 (PROD (> 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (> nil (PROD (> nil ,A) ,A nil) nil ) ,A nil)
(PROD (> t (PROD (> t ,A) ,A t) t ) ,A t)
(PROD (> (cons t t) (PROD (> (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (> 2 (PROD (> 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (> nil (PROD (> nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (> t (PROD (> t ,1) ,1 t) t ) ,1 t)
(PROD (> (cons t t) (PROD (> (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (> 2 (PROD (> 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (> nil (PROD (> nil ,()) ,() nil) nil ) ,() nil)
(PROD (> t (PROD (> t ,()) ,() t) t ) ,() t)
(PROD (> (cons t t) (PROD (> (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (> 2 (PROD (> 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (> nil (PROD (> nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (> t (PROD (> t ,(())) ,(()) t) t ) ,(()) t)
(PROD (> (cons t t) (PROD (> (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (> 2 (PROD (> 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (> nil (PROD (> nil `'A) `'A nil) nil ) `'A nil)
(PROD (> t (PROD (> t `'A) `'A t) t ) `'A t)
(PROD (> (cons t t) (PROD (> (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (> 2 (PROD (> 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (> nil (PROD (> nil `'B) `'B nil) nil ) `'B nil)
(PROD (> t (PROD (> t `'B) `'B t) t ) `'B t)
(PROD (> (cons t t) (PROD (> (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (> 2 (PROD (> 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (> nil (PROD (> nil `'C) `'C nil) nil ) `'C nil)
(PROD (> t (PROD (> t `'C) `'C t) t ) `'C t)
(PROD (> (cons t t) (PROD (> (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (> 2 (PROD (> 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (> nil (PROD (> nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (> t (PROD (> t `'1) `'1 t) t ) `'1 t)
(PROD (> (cons t t) (PROD (> (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (> 2 (PROD (> 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (> nil (PROD (> nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (> t (PROD (> t `'2) `'2 t) t ) `'2 t)
(PROD (> (cons t t) (PROD (> (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (> 2 (PROD (> 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (> nil (PROD (> nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (> t (PROD (> t `'3) `'3 t) t ) `'3 t)
(PROD (> (cons t t) (PROD (> (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (> 2 (PROD (> 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (> nil (PROD (> nil `'()) `'() nil) nil ) `'() nil)
(PROD (> t (PROD (> t `'()) `'() t) t ) `'() t)
(PROD (> (cons t t) (PROD (> (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (> 2 (PROD (> 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (> nil (PROD (> nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (> t (PROD (> t `'(())) `'(()) t) t ) `'(()) t)
(PROD (> (cons t t) (PROD (> (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (> 2 (PROD (> 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (> nil (PROD (> nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (> t (PROD (> t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (> (cons t t) (PROD (> (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (> 1 (PROD (> 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (> 2 (PROD (> 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (> nil (PROD (> nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (> t (PROD (> t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (> (cons t t) (PROD (> (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (> (cons nil t) (PROD (> (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (> (cons nil nil) (PROD (> (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (> (cons 0 0) (PROD (> (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (> (cons 1 1) (PROD (> (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (> (list 1 2 3) (PROD (> (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (> (list (cons 1 1 ) ) (PROD (> (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 T) T 1) 1 ) T 1)
(PROD (>= 2 (PROD (>= 2 T) T 2) 2 ) T 2)
(PROD (>= nil (PROD (>= nil T) T nil) nil ) T nil)
(PROD (>= t (PROD (>= t T) T t) t ) T t)
(PROD (>= (cons t t) (PROD (>= (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (>= 2 (PROD (>= 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (>= nil (PROD (>= nil NIL) NIL nil) nil ) NIL nil)
(PROD (>= t (PROD (>= t NIL) NIL t) t ) NIL t)
(PROD (>= (cons t t) (PROD (>= (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 A) A 1) 1 ) A 1)
(PROD (>= 2 (PROD (>= 2 A) A 2) 2 ) A 2)
(PROD (>= nil (PROD (>= nil A) A nil) nil ) A nil)
(PROD (>= t (PROD (>= t A) A t) t ) A t)
(PROD (>= (cons t t) (PROD (>= (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 B) B 1) 1 ) B 1)
(PROD (>= 2 (PROD (>= 2 B) B 2) 2 ) B 2)
(PROD (>= nil (PROD (>= nil B) B nil) nil ) B nil)
(PROD (>= t (PROD (>= t B) B t) t ) B t)
(PROD (>= (cons t t) (PROD (>= (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 C) C 1) 1 ) C 1)
(PROD (>= 2 (PROD (>= 2 C) C 2) 2 ) C 2)
(PROD (>= nil (PROD (>= nil C) C nil) nil ) C nil)
(PROD (>= t (PROD (>= t C) C t) t ) C t)
(PROD (>= (cons t t) (PROD (>= (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 1) 1 1) 1 ) 1 1)
(PROD (>= 2 (PROD (>= 2 1) 1 2) 2 ) 1 2)
(PROD (>= nil (PROD (>= nil 1) 1 nil) nil ) 1 nil)
(PROD (>= t (PROD (>= t 1) 1 t) t ) 1 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 2) 2 1) 1 ) 2 1)
(PROD (>= 2 (PROD (>= 2 2) 2 2) 2 ) 2 2)
(PROD (>= nil (PROD (>= nil 2) 2 nil) nil ) 2 nil)
(PROD (>= t (PROD (>= t 2) 2 t) t ) 2 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 3) 3 1) 1 ) 3 1)
(PROD (>= 2 (PROD (>= 2 3) 3 2) 2 ) 3 2)
(PROD (>= nil (PROD (>= nil 3) 3 nil) nil ) 3 nil)
(PROD (>= t (PROD (>= t 3) 3 t) t ) 3 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 ()) () 1) 1 ) () 1)
(PROD (>= 2 (PROD (>= 2 ()) () 2) 2 ) () 2)
(PROD (>= nil (PROD (>= nil ()) () nil) nil ) () nil)
(PROD (>= t (PROD (>= t ()) () t) t ) () t)
(PROD (>= (cons t t) (PROD (>= (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 (())) (()) 1) 1 ) (()) 1)
(PROD (>= 2 (PROD (>= 2 (())) (()) 2) 2 ) (()) 2)
(PROD (>= nil (PROD (>= nil (())) (()) nil) nil ) (()) nil)
(PROD (>= t (PROD (>= t (())) (()) t) t ) (()) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (>= 2 (PROD (>= 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (>= nil (PROD (>= nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (>= t (PROD (>= t ((()))) ((())) t) t ) ((())) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (>= 2 (PROD (>= 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (>= nil (PROD (>= nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (>= t (PROD (>= t (((())))) (((()))) t) t ) (((()))) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 'A) 'A 1) 1 ) 'A 1)
(PROD (>= 2 (PROD (>= 2 'A) 'A 2) 2 ) 'A 2)
(PROD (>= nil (PROD (>= nil 'A) 'A nil) nil ) 'A nil)
(PROD (>= t (PROD (>= t 'A) 'A t) t ) 'A t)
(PROD (>= (cons t t) (PROD (>= (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 'B) 'B 1) 1 ) 'B 1)
(PROD (>= 2 (PROD (>= 2 'B) 'B 2) 2 ) 'B 2)
(PROD (>= nil (PROD (>= nil 'B) 'B nil) nil ) 'B nil)
(PROD (>= t (PROD (>= t 'B) 'B t) t ) 'B t)
(PROD (>= (cons t t) (PROD (>= (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 'C) 'C 1) 1 ) 'C 1)
(PROD (>= 2 (PROD (>= 2 'C) 'C 2) 2 ) 'C 2)
(PROD (>= nil (PROD (>= nil 'C) 'C nil) nil ) 'C nil)
(PROD (>= t (PROD (>= t 'C) 'C t) t ) 'C t)
(PROD (>= (cons t t) (PROD (>= (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 '1) '1 1) 1 ) '1 1)
(PROD (>= 2 (PROD (>= 2 '1) '1 2) 2 ) '1 2)
(PROD (>= nil (PROD (>= nil '1) '1 nil) nil ) '1 nil)
(PROD (>= t (PROD (>= t '1) '1 t) t ) '1 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 '2) '2 1) 1 ) '2 1)
(PROD (>= 2 (PROD (>= 2 '2) '2 2) 2 ) '2 2)
(PROD (>= nil (PROD (>= nil '2) '2 nil) nil ) '2 nil)
(PROD (>= t (PROD (>= t '2) '2 t) t ) '2 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 '3) '3 1) 1 ) '3 1)
(PROD (>= 2 (PROD (>= 2 '3) '3 2) 2 ) '3 2)
(PROD (>= nil (PROD (>= nil '3) '3 nil) nil ) '3 nil)
(PROD (>= t (PROD (>= t '3) '3 t) t ) '3 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 '()) '() 1) 1 ) '() 1)
(PROD (>= 2 (PROD (>= 2 '()) '() 2) 2 ) '() 2)
(PROD (>= nil (PROD (>= nil '()) '() nil) nil ) '() nil)
(PROD (>= t (PROD (>= t '()) '() t) t ) '() t)
(PROD (>= (cons t t) (PROD (>= (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (>= 2 (PROD (>= 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (>= nil (PROD (>= nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (>= t (PROD (>= t '(())) '(()) t) t ) '(()) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (>= 2 (PROD (>= 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (>= nil (PROD (>= nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (>= t (PROD (>= t '((()))) '((())) t) t ) '((())) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (>= 2 (PROD (>= 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (>= nil (PROD (>= nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (>= t (PROD (>= t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (>= 2 (PROD (>= 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (>= nil (PROD (>= nil ,A) ,A nil) nil ) ,A nil)
(PROD (>= t (PROD (>= t ,A) ,A t) t ) ,A t)
(PROD (>= (cons t t) (PROD (>= (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (>= 2 (PROD (>= 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (>= nil (PROD (>= nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (>= t (PROD (>= t ,1) ,1 t) t ) ,1 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (>= 2 (PROD (>= 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (>= nil (PROD (>= nil ,()) ,() nil) nil ) ,() nil)
(PROD (>= t (PROD (>= t ,()) ,() t) t ) ,() t)
(PROD (>= (cons t t) (PROD (>= (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (>= 2 (PROD (>= 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (>= nil (PROD (>= nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (>= t (PROD (>= t ,(())) ,(()) t) t ) ,(()) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (>= 2 (PROD (>= 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (>= nil (PROD (>= nil `'A) `'A nil) nil ) `'A nil)
(PROD (>= t (PROD (>= t `'A) `'A t) t ) `'A t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (>= 2 (PROD (>= 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (>= nil (PROD (>= nil `'B) `'B nil) nil ) `'B nil)
(PROD (>= t (PROD (>= t `'B) `'B t) t ) `'B t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (>= 2 (PROD (>= 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (>= nil (PROD (>= nil `'C) `'C nil) nil ) `'C nil)
(PROD (>= t (PROD (>= t `'C) `'C t) t ) `'C t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (>= 2 (PROD (>= 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (>= nil (PROD (>= nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (>= t (PROD (>= t `'1) `'1 t) t ) `'1 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (>= 2 (PROD (>= 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (>= nil (PROD (>= nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (>= t (PROD (>= t `'2) `'2 t) t ) `'2 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (>= 2 (PROD (>= 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (>= nil (PROD (>= nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (>= t (PROD (>= t `'3) `'3 t) t ) `'3 t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (>= 2 (PROD (>= 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (>= nil (PROD (>= nil `'()) `'() nil) nil ) `'() nil)
(PROD (>= t (PROD (>= t `'()) `'() t) t ) `'() t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (>= 2 (PROD (>= 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (>= nil (PROD (>= nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (>= t (PROD (>= t `'(())) `'(()) t) t ) `'(()) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (>= 2 (PROD (>= 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (>= nil (PROD (>= nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (>= t (PROD (>= t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (>= 1 (PROD (>= 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (>= 2 (PROD (>= 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (>= nil (PROD (>= nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (>= t (PROD (>= t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (>= (cons t t) (PROD (>= (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (>= (cons nil t) (PROD (>= (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (>= (cons nil nil) (PROD (>= (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (>= (cons 0 0) (PROD (>= (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (>= (cons 1 1) (PROD (>= (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (>= (list 1 2 3) (PROD (>= (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (>= (list (cons 1 1 ) ) (PROD (>= (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 T) T 1) 1 ) T 1)
(PROD (ADD 2 (PROD (ADD 2 T) T 2) 2 ) T 2)
(PROD (ADD nil (PROD (ADD nil T) T nil) nil ) T nil)
(PROD (ADD t (PROD (ADD t T) T t) t ) T t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (ADD 2 (PROD (ADD 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (ADD nil (PROD (ADD nil NIL) NIL nil) nil ) NIL nil)
(PROD (ADD t (PROD (ADD t NIL) NIL t) t ) NIL t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 A) A 1) 1 ) A 1)
(PROD (ADD 2 (PROD (ADD 2 A) A 2) 2 ) A 2)
(PROD (ADD nil (PROD (ADD nil A) A nil) nil ) A nil)
(PROD (ADD t (PROD (ADD t A) A t) t ) A t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 B) B 1) 1 ) B 1)
(PROD (ADD 2 (PROD (ADD 2 B) B 2) 2 ) B 2)
(PROD (ADD nil (PROD (ADD nil B) B nil) nil ) B nil)
(PROD (ADD t (PROD (ADD t B) B t) t ) B t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 C) C 1) 1 ) C 1)
(PROD (ADD 2 (PROD (ADD 2 C) C 2) 2 ) C 2)
(PROD (ADD nil (PROD (ADD nil C) C nil) nil ) C nil)
(PROD (ADD t (PROD (ADD t C) C t) t ) C t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 1) 1 1) 1 ) 1 1)
(PROD (ADD 2 (PROD (ADD 2 1) 1 2) 2 ) 1 2)
(PROD (ADD nil (PROD (ADD nil 1) 1 nil) nil ) 1 nil)
(PROD (ADD t (PROD (ADD t 1) 1 t) t ) 1 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 2) 2 1) 1 ) 2 1)
(PROD (ADD 2 (PROD (ADD 2 2) 2 2) 2 ) 2 2)
(PROD (ADD nil (PROD (ADD nil 2) 2 nil) nil ) 2 nil)
(PROD (ADD t (PROD (ADD t 2) 2 t) t ) 2 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 3) 3 1) 1 ) 3 1)
(PROD (ADD 2 (PROD (ADD 2 3) 3 2) 2 ) 3 2)
(PROD (ADD nil (PROD (ADD nil 3) 3 nil) nil ) 3 nil)
(PROD (ADD t (PROD (ADD t 3) 3 t) t ) 3 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 ()) () 1) 1 ) () 1)
(PROD (ADD 2 (PROD (ADD 2 ()) () 2) 2 ) () 2)
(PROD (ADD nil (PROD (ADD nil ()) () nil) nil ) () nil)
(PROD (ADD t (PROD (ADD t ()) () t) t ) () t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 (())) (()) 1) 1 ) (()) 1)
(PROD (ADD 2 (PROD (ADD 2 (())) (()) 2) 2 ) (()) 2)
(PROD (ADD nil (PROD (ADD nil (())) (()) nil) nil ) (()) nil)
(PROD (ADD t (PROD (ADD t (())) (()) t) t ) (()) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (ADD 2 (PROD (ADD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (ADD nil (PROD (ADD nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (ADD t (PROD (ADD t ((()))) ((())) t) t ) ((())) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (ADD 2 (PROD (ADD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (ADD nil (PROD (ADD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (ADD t (PROD (ADD t (((())))) (((()))) t) t ) (((()))) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 'A) 'A 1) 1 ) 'A 1)
(PROD (ADD 2 (PROD (ADD 2 'A) 'A 2) 2 ) 'A 2)
(PROD (ADD nil (PROD (ADD nil 'A) 'A nil) nil ) 'A nil)
(PROD (ADD t (PROD (ADD t 'A) 'A t) t ) 'A t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 'B) 'B 1) 1 ) 'B 1)
(PROD (ADD 2 (PROD (ADD 2 'B) 'B 2) 2 ) 'B 2)
(PROD (ADD nil (PROD (ADD nil 'B) 'B nil) nil ) 'B nil)
(PROD (ADD t (PROD (ADD t 'B) 'B t) t ) 'B t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 'C) 'C 1) 1 ) 'C 1)
(PROD (ADD 2 (PROD (ADD 2 'C) 'C 2) 2 ) 'C 2)
(PROD (ADD nil (PROD (ADD nil 'C) 'C nil) nil ) 'C nil)
(PROD (ADD t (PROD (ADD t 'C) 'C t) t ) 'C t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 '1) '1 1) 1 ) '1 1)
(PROD (ADD 2 (PROD (ADD 2 '1) '1 2) 2 ) '1 2)
(PROD (ADD nil (PROD (ADD nil '1) '1 nil) nil ) '1 nil)
(PROD (ADD t (PROD (ADD t '1) '1 t) t ) '1 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 '2) '2 1) 1 ) '2 1)
(PROD (ADD 2 (PROD (ADD 2 '2) '2 2) 2 ) '2 2)
(PROD (ADD nil (PROD (ADD nil '2) '2 nil) nil ) '2 nil)
(PROD (ADD t (PROD (ADD t '2) '2 t) t ) '2 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 '3) '3 1) 1 ) '3 1)
(PROD (ADD 2 (PROD (ADD 2 '3) '3 2) 2 ) '3 2)
(PROD (ADD nil (PROD (ADD nil '3) '3 nil) nil ) '3 nil)
(PROD (ADD t (PROD (ADD t '3) '3 t) t ) '3 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 '()) '() 1) 1 ) '() 1)
(PROD (ADD 2 (PROD (ADD 2 '()) '() 2) 2 ) '() 2)
(PROD (ADD nil (PROD (ADD nil '()) '() nil) nil ) '() nil)
(PROD (ADD t (PROD (ADD t '()) '() t) t ) '() t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (ADD 2 (PROD (ADD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (ADD nil (PROD (ADD nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (ADD t (PROD (ADD t '(())) '(()) t) t ) '(()) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (ADD 2 (PROD (ADD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (ADD nil (PROD (ADD nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (ADD t (PROD (ADD t '((()))) '((())) t) t ) '((())) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (ADD 2 (PROD (ADD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (ADD nil (PROD (ADD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (ADD t (PROD (ADD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (ADD 2 (PROD (ADD 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (ADD nil (PROD (ADD nil ,A) ,A nil) nil ) ,A nil)
(PROD (ADD t (PROD (ADD t ,A) ,A t) t ) ,A t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (ADD 2 (PROD (ADD 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (ADD nil (PROD (ADD nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (ADD t (PROD (ADD t ,1) ,1 t) t ) ,1 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (ADD 2 (PROD (ADD 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (ADD nil (PROD (ADD nil ,()) ,() nil) nil ) ,() nil)
(PROD (ADD t (PROD (ADD t ,()) ,() t) t ) ,() t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (ADD 2 (PROD (ADD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (ADD nil (PROD (ADD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (ADD t (PROD (ADD t ,(())) ,(()) t) t ) ,(()) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (ADD 2 (PROD (ADD 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (ADD nil (PROD (ADD nil `'A) `'A nil) nil ) `'A nil)
(PROD (ADD t (PROD (ADD t `'A) `'A t) t ) `'A t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (ADD 2 (PROD (ADD 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (ADD nil (PROD (ADD nil `'B) `'B nil) nil ) `'B nil)
(PROD (ADD t (PROD (ADD t `'B) `'B t) t ) `'B t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (ADD 2 (PROD (ADD 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (ADD nil (PROD (ADD nil `'C) `'C nil) nil ) `'C nil)
(PROD (ADD t (PROD (ADD t `'C) `'C t) t ) `'C t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (ADD 2 (PROD (ADD 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (ADD nil (PROD (ADD nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (ADD t (PROD (ADD t `'1) `'1 t) t ) `'1 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (ADD 2 (PROD (ADD 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (ADD nil (PROD (ADD nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (ADD t (PROD (ADD t `'2) `'2 t) t ) `'2 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (ADD 2 (PROD (ADD 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (ADD nil (PROD (ADD nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (ADD t (PROD (ADD t `'3) `'3 t) t ) `'3 t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (ADD 2 (PROD (ADD 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (ADD nil (PROD (ADD nil `'()) `'() nil) nil ) `'() nil)
(PROD (ADD t (PROD (ADD t `'()) `'() t) t ) `'() t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (ADD 2 (PROD (ADD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (ADD nil (PROD (ADD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (ADD t (PROD (ADD t `'(())) `'(()) t) t ) `'(()) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (ADD 2 (PROD (ADD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (ADD nil (PROD (ADD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (ADD t (PROD (ADD t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (ADD 1 (PROD (ADD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (ADD 2 (PROD (ADD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (ADD nil (PROD (ADD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (ADD t (PROD (ADD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (ADD (cons t t) (PROD (ADD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (ADD (cons nil t) (PROD (ADD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (ADD (cons nil nil) (PROD (ADD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (ADD (cons 0 0) (PROD (ADD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (ADD (cons 1 1) (PROD (ADD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (ADD (list 1 2 3) (PROD (ADD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (ADD (list (cons 1 1 ) ) (PROD (ADD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 T) T 1) 1 ) T 1)
(PROD (AND 2 (PROD (AND 2 T) T 2) 2 ) T 2)
(PROD (AND nil (PROD (AND nil T) T nil) nil ) T nil)
(PROD (AND t (PROD (AND t T) T t) t ) T t)
(PROD (AND (cons t t) (PROD (AND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (AND 2 (PROD (AND 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (AND nil (PROD (AND nil NIL) NIL nil) nil ) NIL nil)
(PROD (AND t (PROD (AND t NIL) NIL t) t ) NIL t)
(PROD (AND (cons t t) (PROD (AND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 A) A 1) 1 ) A 1)
(PROD (AND 2 (PROD (AND 2 A) A 2) 2 ) A 2)
(PROD (AND nil (PROD (AND nil A) A nil) nil ) A nil)
(PROD (AND t (PROD (AND t A) A t) t ) A t)
(PROD (AND (cons t t) (PROD (AND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 B) B 1) 1 ) B 1)
(PROD (AND 2 (PROD (AND 2 B) B 2) 2 ) B 2)
(PROD (AND nil (PROD (AND nil B) B nil) nil ) B nil)
(PROD (AND t (PROD (AND t B) B t) t ) B t)
(PROD (AND (cons t t) (PROD (AND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 C) C 1) 1 ) C 1)
(PROD (AND 2 (PROD (AND 2 C) C 2) 2 ) C 2)
(PROD (AND nil (PROD (AND nil C) C nil) nil ) C nil)
(PROD (AND t (PROD (AND t C) C t) t ) C t)
(PROD (AND (cons t t) (PROD (AND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 1) 1 1) 1 ) 1 1)
(PROD (AND 2 (PROD (AND 2 1) 1 2) 2 ) 1 2)
(PROD (AND nil (PROD (AND nil 1) 1 nil) nil ) 1 nil)
(PROD (AND t (PROD (AND t 1) 1 t) t ) 1 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 2) 2 1) 1 ) 2 1)
(PROD (AND 2 (PROD (AND 2 2) 2 2) 2 ) 2 2)
(PROD (AND nil (PROD (AND nil 2) 2 nil) nil ) 2 nil)
(PROD (AND t (PROD (AND t 2) 2 t) t ) 2 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 3) 3 1) 1 ) 3 1)
(PROD (AND 2 (PROD (AND 2 3) 3 2) 2 ) 3 2)
(PROD (AND nil (PROD (AND nil 3) 3 nil) nil ) 3 nil)
(PROD (AND t (PROD (AND t 3) 3 t) t ) 3 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 ()) () 1) 1 ) () 1)
(PROD (AND 2 (PROD (AND 2 ()) () 2) 2 ) () 2)
(PROD (AND nil (PROD (AND nil ()) () nil) nil ) () nil)
(PROD (AND t (PROD (AND t ()) () t) t ) () t)
(PROD (AND (cons t t) (PROD (AND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 (())) (()) 1) 1 ) (()) 1)
(PROD (AND 2 (PROD (AND 2 (())) (()) 2) 2 ) (()) 2)
(PROD (AND nil (PROD (AND nil (())) (()) nil) nil ) (()) nil)
(PROD (AND t (PROD (AND t (())) (()) t) t ) (()) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (AND 2 (PROD (AND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (AND nil (PROD (AND nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (AND t (PROD (AND t ((()))) ((())) t) t ) ((())) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (AND 2 (PROD (AND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (AND nil (PROD (AND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (AND t (PROD (AND t (((())))) (((()))) t) t ) (((()))) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 'A) 'A 1) 1 ) 'A 1)
(PROD (AND 2 (PROD (AND 2 'A) 'A 2) 2 ) 'A 2)
(PROD (AND nil (PROD (AND nil 'A) 'A nil) nil ) 'A nil)
(PROD (AND t (PROD (AND t 'A) 'A t) t ) 'A t)
(PROD (AND (cons t t) (PROD (AND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 'B) 'B 1) 1 ) 'B 1)
(PROD (AND 2 (PROD (AND 2 'B) 'B 2) 2 ) 'B 2)
(PROD (AND nil (PROD (AND nil 'B) 'B nil) nil ) 'B nil)
(PROD (AND t (PROD (AND t 'B) 'B t) t ) 'B t)
(PROD (AND (cons t t) (PROD (AND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 'C) 'C 1) 1 ) 'C 1)
(PROD (AND 2 (PROD (AND 2 'C) 'C 2) 2 ) 'C 2)
(PROD (AND nil (PROD (AND nil 'C) 'C nil) nil ) 'C nil)
(PROD (AND t (PROD (AND t 'C) 'C t) t ) 'C t)
(PROD (AND (cons t t) (PROD (AND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 '1) '1 1) 1 ) '1 1)
(PROD (AND 2 (PROD (AND 2 '1) '1 2) 2 ) '1 2)
(PROD (AND nil (PROD (AND nil '1) '1 nil) nil ) '1 nil)
(PROD (AND t (PROD (AND t '1) '1 t) t ) '1 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 '2) '2 1) 1 ) '2 1)
(PROD (AND 2 (PROD (AND 2 '2) '2 2) 2 ) '2 2)
(PROD (AND nil (PROD (AND nil '2) '2 nil) nil ) '2 nil)
(PROD (AND t (PROD (AND t '2) '2 t) t ) '2 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 '3) '3 1) 1 ) '3 1)
(PROD (AND 2 (PROD (AND 2 '3) '3 2) 2 ) '3 2)
(PROD (AND nil (PROD (AND nil '3) '3 nil) nil ) '3 nil)
(PROD (AND t (PROD (AND t '3) '3 t) t ) '3 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 '()) '() 1) 1 ) '() 1)
(PROD (AND 2 (PROD (AND 2 '()) '() 2) 2 ) '() 2)
(PROD (AND nil (PROD (AND nil '()) '() nil) nil ) '() nil)
(PROD (AND t (PROD (AND t '()) '() t) t ) '() t)
(PROD (AND (cons t t) (PROD (AND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (AND 2 (PROD (AND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (AND nil (PROD (AND nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (AND t (PROD (AND t '(())) '(()) t) t ) '(()) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (AND 2 (PROD (AND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (AND nil (PROD (AND nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (AND t (PROD (AND t '((()))) '((())) t) t ) '((())) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (AND 2 (PROD (AND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (AND nil (PROD (AND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (AND t (PROD (AND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (AND 2 (PROD (AND 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (AND nil (PROD (AND nil ,A) ,A nil) nil ) ,A nil)
(PROD (AND t (PROD (AND t ,A) ,A t) t ) ,A t)
(PROD (AND (cons t t) (PROD (AND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (AND 2 (PROD (AND 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (AND nil (PROD (AND nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (AND t (PROD (AND t ,1) ,1 t) t ) ,1 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (AND 2 (PROD (AND 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (AND nil (PROD (AND nil ,()) ,() nil) nil ) ,() nil)
(PROD (AND t (PROD (AND t ,()) ,() t) t ) ,() t)
(PROD (AND (cons t t) (PROD (AND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (AND 2 (PROD (AND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (AND nil (PROD (AND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (AND t (PROD (AND t ,(())) ,(()) t) t ) ,(()) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (AND 2 (PROD (AND 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (AND nil (PROD (AND nil `'A) `'A nil) nil ) `'A nil)
(PROD (AND t (PROD (AND t `'A) `'A t) t ) `'A t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (AND 2 (PROD (AND 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (AND nil (PROD (AND nil `'B) `'B nil) nil ) `'B nil)
(PROD (AND t (PROD (AND t `'B) `'B t) t ) `'B t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (AND 2 (PROD (AND 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (AND nil (PROD (AND nil `'C) `'C nil) nil ) `'C nil)
(PROD (AND t (PROD (AND t `'C) `'C t) t ) `'C t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (AND 2 (PROD (AND 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (AND nil (PROD (AND nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (AND t (PROD (AND t `'1) `'1 t) t ) `'1 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (AND 2 (PROD (AND 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (AND nil (PROD (AND nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (AND t (PROD (AND t `'2) `'2 t) t ) `'2 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (AND 2 (PROD (AND 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (AND nil (PROD (AND nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (AND t (PROD (AND t `'3) `'3 t) t ) `'3 t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (AND 2 (PROD (AND 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (AND nil (PROD (AND nil `'()) `'() nil) nil ) `'() nil)
(PROD (AND t (PROD (AND t `'()) `'() t) t ) `'() t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (AND 2 (PROD (AND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (AND nil (PROD (AND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (AND t (PROD (AND t `'(())) `'(()) t) t ) `'(()) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (AND 2 (PROD (AND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (AND nil (PROD (AND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (AND t (PROD (AND t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (AND 1 (PROD (AND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (AND 2 (PROD (AND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (AND nil (PROD (AND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (AND t (PROD (AND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (AND (cons t t) (PROD (AND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (AND (cons nil t) (PROD (AND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (AND (cons nil nil) (PROD (AND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (AND (cons 0 0) (PROD (AND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (AND (cons 1 1) (PROD (AND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (AND (list 1 2 3) (PROD (AND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (AND (list (cons 1 1 ) ) (PROD (AND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 T) T 1) 1 ) T 1)
(PROD (APPEND 2 (PROD (APPEND 2 T) T 2) 2 ) T 2)
(PROD (APPEND nil (PROD (APPEND nil T) T nil) nil ) T nil)
(PROD (APPEND t (PROD (APPEND t T) T t) t ) T t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (APPEND 2 (PROD (APPEND 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (APPEND nil (PROD (APPEND nil NIL) NIL nil) nil ) NIL nil)
(PROD (APPEND t (PROD (APPEND t NIL) NIL t) t ) NIL t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 A) A 1) 1 ) A 1)
(PROD (APPEND 2 (PROD (APPEND 2 A) A 2) 2 ) A 2)
(PROD (APPEND nil (PROD (APPEND nil A) A nil) nil ) A nil)
(PROD (APPEND t (PROD (APPEND t A) A t) t ) A t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 B) B 1) 1 ) B 1)
(PROD (APPEND 2 (PROD (APPEND 2 B) B 2) 2 ) B 2)
(PROD (APPEND nil (PROD (APPEND nil B) B nil) nil ) B nil)
(PROD (APPEND t (PROD (APPEND t B) B t) t ) B t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 C) C 1) 1 ) C 1)
(PROD (APPEND 2 (PROD (APPEND 2 C) C 2) 2 ) C 2)
(PROD (APPEND nil (PROD (APPEND nil C) C nil) nil ) C nil)
(PROD (APPEND t (PROD (APPEND t C) C t) t ) C t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 1) 1 1) 1 ) 1 1)
(PROD (APPEND 2 (PROD (APPEND 2 1) 1 2) 2 ) 1 2)
(PROD (APPEND nil (PROD (APPEND nil 1) 1 nil) nil ) 1 nil)
(PROD (APPEND t (PROD (APPEND t 1) 1 t) t ) 1 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 2) 2 1) 1 ) 2 1)
(PROD (APPEND 2 (PROD (APPEND 2 2) 2 2) 2 ) 2 2)
(PROD (APPEND nil (PROD (APPEND nil 2) 2 nil) nil ) 2 nil)
(PROD (APPEND t (PROD (APPEND t 2) 2 t) t ) 2 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 3) 3 1) 1 ) 3 1)
(PROD (APPEND 2 (PROD (APPEND 2 3) 3 2) 2 ) 3 2)
(PROD (APPEND nil (PROD (APPEND nil 3) 3 nil) nil ) 3 nil)
(PROD (APPEND t (PROD (APPEND t 3) 3 t) t ) 3 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 ()) () 1) 1 ) () 1)
(PROD (APPEND 2 (PROD (APPEND 2 ()) () 2) 2 ) () 2)
(PROD (APPEND nil (PROD (APPEND nil ()) () nil) nil ) () nil)
(PROD (APPEND t (PROD (APPEND t ()) () t) t ) () t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 (())) (()) 1) 1 ) (()) 1)
(PROD (APPEND 2 (PROD (APPEND 2 (())) (()) 2) 2 ) (()) 2)
(PROD (APPEND nil (PROD (APPEND nil (())) (()) nil) nil ) (()) nil)
(PROD (APPEND t (PROD (APPEND t (())) (()) t) t ) (()) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (APPEND 2 (PROD (APPEND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (APPEND nil (PROD (APPEND nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (APPEND t (PROD (APPEND t ((()))) ((())) t) t ) ((())) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (APPEND 2 (PROD (APPEND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (APPEND nil (PROD (APPEND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (APPEND t (PROD (APPEND t (((())))) (((()))) t) t ) (((()))) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 'A) 'A 1) 1 ) 'A 1)
(PROD (APPEND 2 (PROD (APPEND 2 'A) 'A 2) 2 ) 'A 2)
(PROD (APPEND nil (PROD (APPEND nil 'A) 'A nil) nil ) 'A nil)
(PROD (APPEND t (PROD (APPEND t 'A) 'A t) t ) 'A t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 'B) 'B 1) 1 ) 'B 1)
(PROD (APPEND 2 (PROD (APPEND 2 'B) 'B 2) 2 ) 'B 2)
(PROD (APPEND nil (PROD (APPEND nil 'B) 'B nil) nil ) 'B nil)
(PROD (APPEND t (PROD (APPEND t 'B) 'B t) t ) 'B t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 'C) 'C 1) 1 ) 'C 1)
(PROD (APPEND 2 (PROD (APPEND 2 'C) 'C 2) 2 ) 'C 2)
(PROD (APPEND nil (PROD (APPEND nil 'C) 'C nil) nil ) 'C nil)
(PROD (APPEND t (PROD (APPEND t 'C) 'C t) t ) 'C t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 '1) '1 1) 1 ) '1 1)
(PROD (APPEND 2 (PROD (APPEND 2 '1) '1 2) 2 ) '1 2)
(PROD (APPEND nil (PROD (APPEND nil '1) '1 nil) nil ) '1 nil)
(PROD (APPEND t (PROD (APPEND t '1) '1 t) t ) '1 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 '2) '2 1) 1 ) '2 1)
(PROD (APPEND 2 (PROD (APPEND 2 '2) '2 2) 2 ) '2 2)
(PROD (APPEND nil (PROD (APPEND nil '2) '2 nil) nil ) '2 nil)
(PROD (APPEND t (PROD (APPEND t '2) '2 t) t ) '2 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 '3) '3 1) 1 ) '3 1)
(PROD (APPEND 2 (PROD (APPEND 2 '3) '3 2) 2 ) '3 2)
(PROD (APPEND nil (PROD (APPEND nil '3) '3 nil) nil ) '3 nil)
(PROD (APPEND t (PROD (APPEND t '3) '3 t) t ) '3 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 '()) '() 1) 1 ) '() 1)
(PROD (APPEND 2 (PROD (APPEND 2 '()) '() 2) 2 ) '() 2)
(PROD (APPEND nil (PROD (APPEND nil '()) '() nil) nil ) '() nil)
(PROD (APPEND t (PROD (APPEND t '()) '() t) t ) '() t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (APPEND 2 (PROD (APPEND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (APPEND nil (PROD (APPEND nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (APPEND t (PROD (APPEND t '(())) '(()) t) t ) '(()) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (APPEND 2 (PROD (APPEND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (APPEND nil (PROD (APPEND nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (APPEND t (PROD (APPEND t '((()))) '((())) t) t ) '((())) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (APPEND 2 (PROD (APPEND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (APPEND nil (PROD (APPEND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (APPEND t (PROD (APPEND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (APPEND 2 (PROD (APPEND 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (APPEND nil (PROD (APPEND nil ,A) ,A nil) nil ) ,A nil)
(PROD (APPEND t (PROD (APPEND t ,A) ,A t) t ) ,A t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (APPEND 2 (PROD (APPEND 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (APPEND nil (PROD (APPEND nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (APPEND t (PROD (APPEND t ,1) ,1 t) t ) ,1 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (APPEND 2 (PROD (APPEND 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (APPEND nil (PROD (APPEND nil ,()) ,() nil) nil ) ,() nil)
(PROD (APPEND t (PROD (APPEND t ,()) ,() t) t ) ,() t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (APPEND 2 (PROD (APPEND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (APPEND nil (PROD (APPEND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (APPEND t (PROD (APPEND t ,(())) ,(()) t) t ) ,(()) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (APPEND nil (PROD (APPEND nil `'A) `'A nil) nil ) `'A nil)
(PROD (APPEND t (PROD (APPEND t `'A) `'A t) t ) `'A t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (APPEND nil (PROD (APPEND nil `'B) `'B nil) nil ) `'B nil)
(PROD (APPEND t (PROD (APPEND t `'B) `'B t) t ) `'B t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (APPEND nil (PROD (APPEND nil `'C) `'C nil) nil ) `'C nil)
(PROD (APPEND t (PROD (APPEND t `'C) `'C t) t ) `'C t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (APPEND nil (PROD (APPEND nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (APPEND t (PROD (APPEND t `'1) `'1 t) t ) `'1 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (APPEND nil (PROD (APPEND nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (APPEND t (PROD (APPEND t `'2) `'2 t) t ) `'2 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (APPEND nil (PROD (APPEND nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (APPEND t (PROD (APPEND t `'3) `'3 t) t ) `'3 t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (APPEND nil (PROD (APPEND nil `'()) `'() nil) nil ) `'() nil)
(PROD (APPEND t (PROD (APPEND t `'()) `'() t) t ) `'() t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (APPEND nil (PROD (APPEND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (APPEND t (PROD (APPEND t `'(())) `'(()) t) t ) `'(()) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (APPEND nil (PROD (APPEND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (APPEND t (PROD (APPEND t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (APPEND 1 (PROD (APPEND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (APPEND 2 (PROD (APPEND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (APPEND nil (PROD (APPEND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (APPEND t (PROD (APPEND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (APPEND (cons t t) (PROD (APPEND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (APPEND (cons nil t) (PROD (APPEND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (APPEND (cons nil nil) (PROD (APPEND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (APPEND (cons 0 0) (PROD (APPEND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (APPEND (cons 1 1) (PROD (APPEND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (APPEND (list 1 2 3) (PROD (APPEND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (APPEND (list (cons 1 1 ) ) (PROD (APPEND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 T) T 1) 1 ) T 1)
(PROD (ATOM 2 (PROD (ATOM 2 T) T 2) 2 ) T 2)
(PROD (ATOM nil (PROD (ATOM nil T) T nil) nil ) T nil)
(PROD (ATOM t (PROD (ATOM t T) T t) t ) T t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (ATOM 2 (PROD (ATOM 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (ATOM nil (PROD (ATOM nil NIL) NIL nil) nil ) NIL nil)
(PROD (ATOM t (PROD (ATOM t NIL) NIL t) t ) NIL t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 A) A 1) 1 ) A 1)
(PROD (ATOM 2 (PROD (ATOM 2 A) A 2) 2 ) A 2)
(PROD (ATOM nil (PROD (ATOM nil A) A nil) nil ) A nil)
(PROD (ATOM t (PROD (ATOM t A) A t) t ) A t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 B) B 1) 1 ) B 1)
(PROD (ATOM 2 (PROD (ATOM 2 B) B 2) 2 ) B 2)
(PROD (ATOM nil (PROD (ATOM nil B) B nil) nil ) B nil)
(PROD (ATOM t (PROD (ATOM t B) B t) t ) B t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 C) C 1) 1 ) C 1)
(PROD (ATOM 2 (PROD (ATOM 2 C) C 2) 2 ) C 2)
(PROD (ATOM nil (PROD (ATOM nil C) C nil) nil ) C nil)
(PROD (ATOM t (PROD (ATOM t C) C t) t ) C t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 1) 1 1) 1 ) 1 1)
(PROD (ATOM 2 (PROD (ATOM 2 1) 1 2) 2 ) 1 2)
(PROD (ATOM nil (PROD (ATOM nil 1) 1 nil) nil ) 1 nil)
(PROD (ATOM t (PROD (ATOM t 1) 1 t) t ) 1 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 2) 2 1) 1 ) 2 1)
(PROD (ATOM 2 (PROD (ATOM 2 2) 2 2) 2 ) 2 2)
(PROD (ATOM nil (PROD (ATOM nil 2) 2 nil) nil ) 2 nil)
(PROD (ATOM t (PROD (ATOM t 2) 2 t) t ) 2 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 3) 3 1) 1 ) 3 1)
(PROD (ATOM 2 (PROD (ATOM 2 3) 3 2) 2 ) 3 2)
(PROD (ATOM nil (PROD (ATOM nil 3) 3 nil) nil ) 3 nil)
(PROD (ATOM t (PROD (ATOM t 3) 3 t) t ) 3 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 ()) () 1) 1 ) () 1)
(PROD (ATOM 2 (PROD (ATOM 2 ()) () 2) 2 ) () 2)
(PROD (ATOM nil (PROD (ATOM nil ()) () nil) nil ) () nil)
(PROD (ATOM t (PROD (ATOM t ()) () t) t ) () t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 (())) (()) 1) 1 ) (()) 1)
(PROD (ATOM 2 (PROD (ATOM 2 (())) (()) 2) 2 ) (()) 2)
(PROD (ATOM nil (PROD (ATOM nil (())) (()) nil) nil ) (()) nil)
(PROD (ATOM t (PROD (ATOM t (())) (()) t) t ) (()) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (ATOM 2 (PROD (ATOM 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (ATOM nil (PROD (ATOM nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (ATOM t (PROD (ATOM t ((()))) ((())) t) t ) ((())) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (ATOM 2 (PROD (ATOM 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (ATOM nil (PROD (ATOM nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (ATOM t (PROD (ATOM t (((())))) (((()))) t) t ) (((()))) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 'A) 'A 1) 1 ) 'A 1)
(PROD (ATOM 2 (PROD (ATOM 2 'A) 'A 2) 2 ) 'A 2)
(PROD (ATOM nil (PROD (ATOM nil 'A) 'A nil) nil ) 'A nil)
(PROD (ATOM t (PROD (ATOM t 'A) 'A t) t ) 'A t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 'B) 'B 1) 1 ) 'B 1)
(PROD (ATOM 2 (PROD (ATOM 2 'B) 'B 2) 2 ) 'B 2)
(PROD (ATOM nil (PROD (ATOM nil 'B) 'B nil) nil ) 'B nil)
(PROD (ATOM t (PROD (ATOM t 'B) 'B t) t ) 'B t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 'C) 'C 1) 1 ) 'C 1)
(PROD (ATOM 2 (PROD (ATOM 2 'C) 'C 2) 2 ) 'C 2)
(PROD (ATOM nil (PROD (ATOM nil 'C) 'C nil) nil ) 'C nil)
(PROD (ATOM t (PROD (ATOM t 'C) 'C t) t ) 'C t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 '1) '1 1) 1 ) '1 1)
(PROD (ATOM 2 (PROD (ATOM 2 '1) '1 2) 2 ) '1 2)
(PROD (ATOM nil (PROD (ATOM nil '1) '1 nil) nil ) '1 nil)
(PROD (ATOM t (PROD (ATOM t '1) '1 t) t ) '1 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 '2) '2 1) 1 ) '2 1)
(PROD (ATOM 2 (PROD (ATOM 2 '2) '2 2) 2 ) '2 2)
(PROD (ATOM nil (PROD (ATOM nil '2) '2 nil) nil ) '2 nil)
(PROD (ATOM t (PROD (ATOM t '2) '2 t) t ) '2 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 '3) '3 1) 1 ) '3 1)
(PROD (ATOM 2 (PROD (ATOM 2 '3) '3 2) 2 ) '3 2)
(PROD (ATOM nil (PROD (ATOM nil '3) '3 nil) nil ) '3 nil)
(PROD (ATOM t (PROD (ATOM t '3) '3 t) t ) '3 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 '()) '() 1) 1 ) '() 1)
(PROD (ATOM 2 (PROD (ATOM 2 '()) '() 2) 2 ) '() 2)
(PROD (ATOM nil (PROD (ATOM nil '()) '() nil) nil ) '() nil)
(PROD (ATOM t (PROD (ATOM t '()) '() t) t ) '() t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (ATOM 2 (PROD (ATOM 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (ATOM nil (PROD (ATOM nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (ATOM t (PROD (ATOM t '(())) '(()) t) t ) '(()) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (ATOM 2 (PROD (ATOM 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (ATOM nil (PROD (ATOM nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (ATOM t (PROD (ATOM t '((()))) '((())) t) t ) '((())) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (ATOM 2 (PROD (ATOM 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (ATOM nil (PROD (ATOM nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (ATOM t (PROD (ATOM t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (ATOM 2 (PROD (ATOM 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (ATOM nil (PROD (ATOM nil ,A) ,A nil) nil ) ,A nil)
(PROD (ATOM t (PROD (ATOM t ,A) ,A t) t ) ,A t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (ATOM 2 (PROD (ATOM 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (ATOM nil (PROD (ATOM nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (ATOM t (PROD (ATOM t ,1) ,1 t) t ) ,1 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (ATOM 2 (PROD (ATOM 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (ATOM nil (PROD (ATOM nil ,()) ,() nil) nil ) ,() nil)
(PROD (ATOM t (PROD (ATOM t ,()) ,() t) t ) ,() t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (ATOM 2 (PROD (ATOM 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (ATOM nil (PROD (ATOM nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (ATOM t (PROD (ATOM t ,(())) ,(()) t) t ) ,(()) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (ATOM nil (PROD (ATOM nil `'A) `'A nil) nil ) `'A nil)
(PROD (ATOM t (PROD (ATOM t `'A) `'A t) t ) `'A t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (ATOM nil (PROD (ATOM nil `'B) `'B nil) nil ) `'B nil)
(PROD (ATOM t (PROD (ATOM t `'B) `'B t) t ) `'B t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (ATOM nil (PROD (ATOM nil `'C) `'C nil) nil ) `'C nil)
(PROD (ATOM t (PROD (ATOM t `'C) `'C t) t ) `'C t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (ATOM nil (PROD (ATOM nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (ATOM t (PROD (ATOM t `'1) `'1 t) t ) `'1 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (ATOM nil (PROD (ATOM nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (ATOM t (PROD (ATOM t `'2) `'2 t) t ) `'2 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (ATOM nil (PROD (ATOM nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (ATOM t (PROD (ATOM t `'3) `'3 t) t ) `'3 t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (ATOM nil (PROD (ATOM nil `'()) `'() nil) nil ) `'() nil)
(PROD (ATOM t (PROD (ATOM t `'()) `'() t) t ) `'() t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (ATOM nil (PROD (ATOM nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (ATOM t (PROD (ATOM t `'(())) `'(()) t) t ) `'(()) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (ATOM nil (PROD (ATOM nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (ATOM t (PROD (ATOM t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (ATOM 1 (PROD (ATOM 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (ATOM 2 (PROD (ATOM 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (ATOM nil (PROD (ATOM nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (ATOM t (PROD (ATOM t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (ATOM (cons t t) (PROD (ATOM (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (ATOM (cons nil t) (PROD (ATOM (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (ATOM (cons nil nil) (PROD (ATOM (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (ATOM (cons 0 0) (PROD (ATOM (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (ATOM (cons 1 1) (PROD (ATOM (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (ATOM (list 1 2 3) (PROD (ATOM (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (ATOM (list (cons 1 1 ) ) (PROD (ATOM (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 T) T 1) 1 ) T 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 T) T 2) 2 ) T 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil T) T nil) nil ) T nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t T) T t) t ) T t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil NIL) NIL nil) nil ) NIL nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t NIL) NIL t) t ) NIL t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 A) A 1) 1 ) A 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 A) A 2) 2 ) A 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil A) A nil) nil ) A nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t A) A t) t ) A t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 B) B 1) 1 ) B 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 B) B 2) 2 ) B 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil B) B nil) nil ) B nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t B) B t) t ) B t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 C) C 1) 1 ) C 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 C) C 2) 2 ) C 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil C) C nil) nil ) C nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t C) C t) t ) C t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 1) 1 1) 1 ) 1 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 1) 1 2) 2 ) 1 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil 1) 1 nil) nil ) 1 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t 1) 1 t) t ) 1 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 2) 2 1) 1 ) 2 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 2) 2 2) 2 ) 2 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil 2) 2 nil) nil ) 2 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t 2) 2 t) t ) 2 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 3) 3 1) 1 ) 3 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 3) 3 2) 2 ) 3 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil 3) 3 nil) nil ) 3 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t 3) 3 t) t ) 3 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 ()) () 1) 1 ) () 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 ()) () 2) 2 ) () 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil ()) () nil) nil ) () nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t ()) () t) t ) () t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 (())) (()) 1) 1 ) (()) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 (())) (()) 2) 2 ) (()) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil (())) (()) nil) nil ) (()) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t (())) (()) t) t ) (()) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t ((()))) ((())) t) t ) ((())) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t (((())))) (((()))) t) t ) (((()))) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 'A) 'A 1) 1 ) 'A 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 'A) 'A 2) 2 ) 'A 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil 'A) 'A nil) nil ) 'A nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t 'A) 'A t) t ) 'A t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 'B) 'B 1) 1 ) 'B 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 'B) 'B 2) 2 ) 'B 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil 'B) 'B nil) nil ) 'B nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t 'B) 'B t) t ) 'B t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 'C) 'C 1) 1 ) 'C 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 'C) 'C 2) 2 ) 'C 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil 'C) 'C nil) nil ) 'C nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t 'C) 'C t) t ) 'C t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 '1) '1 1) 1 ) '1 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 '1) '1 2) 2 ) '1 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil '1) '1 nil) nil ) '1 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t '1) '1 t) t ) '1 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 '2) '2 1) 1 ) '2 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 '2) '2 2) 2 ) '2 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil '2) '2 nil) nil ) '2 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t '2) '2 t) t ) '2 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 '3) '3 1) 1 ) '3 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 '3) '3 2) 2 ) '3 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil '3) '3 nil) nil ) '3 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t '3) '3 t) t ) '3 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 '()) '() 1) 1 ) '() 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 '()) '() 2) 2 ) '() 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil '()) '() nil) nil ) '() nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t '()) '() t) t ) '() t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t '(())) '(()) t) t ) '(()) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t '((()))) '((())) t) t ) '((())) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil ,A) ,A nil) nil ) ,A nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t ,A) ,A t) t ) ,A t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t ,1) ,1 t) t ) ,1 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil ,()) ,() nil) nil ) ,() nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t ,()) ,() t) t ) ,() t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t ,(())) ,(()) t) t ) ,(()) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'A) `'A nil) nil ) `'A nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'A) `'A t) t ) `'A t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'B) `'B nil) nil ) `'B nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'B) `'B t) t ) `'B t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'C) `'C nil) nil ) `'C nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'C) `'C t) t ) `'C t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'1) `'1 t) t ) `'1 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'2) `'2 t) t ) `'2 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'3) `'3 t) t ) `'3 t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'()) `'() nil) nil ) `'() nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'()) `'() t) t ) `'() t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'(())) `'(()) t) t ) `'(()) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (BACKQUOTE 1 (PROD (BACKQUOTE 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (BACKQUOTE 2 (PROD (BACKQUOTE 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (BACKQUOTE nil (PROD (BACKQUOTE nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (BACKQUOTE t (PROD (BACKQUOTE t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (BACKQUOTE (cons t t) (PROD (BACKQUOTE (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (BACKQUOTE (cons nil t) (PROD (BACKQUOTE (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (BACKQUOTE (cons nil nil) (PROD (BACKQUOTE (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (BACKQUOTE (cons 0 0) (PROD (BACKQUOTE (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (BACKQUOTE (cons 1 1) (PROD (BACKQUOTE (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (BACKQUOTE (list 1 2 3) (PROD (BACKQUOTE (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (BACKQUOTE (list (cons 1 1 ) ) (PROD (BACKQUOTE (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 T) T 1) 1 ) T 1)
(PROD (CAR 2 (PROD (CAR 2 T) T 2) 2 ) T 2)
(PROD (CAR nil (PROD (CAR nil T) T nil) nil ) T nil)
(PROD (CAR t (PROD (CAR t T) T t) t ) T t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (CAR 2 (PROD (CAR 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (CAR nil (PROD (CAR nil NIL) NIL nil) nil ) NIL nil)
(PROD (CAR t (PROD (CAR t NIL) NIL t) t ) NIL t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 A) A 1) 1 ) A 1)
(PROD (CAR 2 (PROD (CAR 2 A) A 2) 2 ) A 2)
(PROD (CAR nil (PROD (CAR nil A) A nil) nil ) A nil)
(PROD (CAR t (PROD (CAR t A) A t) t ) A t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 B) B 1) 1 ) B 1)
(PROD (CAR 2 (PROD (CAR 2 B) B 2) 2 ) B 2)
(PROD (CAR nil (PROD (CAR nil B) B nil) nil ) B nil)
(PROD (CAR t (PROD (CAR t B) B t) t ) B t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 C) C 1) 1 ) C 1)
(PROD (CAR 2 (PROD (CAR 2 C) C 2) 2 ) C 2)
(PROD (CAR nil (PROD (CAR nil C) C nil) nil ) C nil)
(PROD (CAR t (PROD (CAR t C) C t) t ) C t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 1) 1 1) 1 ) 1 1)
(PROD (CAR 2 (PROD (CAR 2 1) 1 2) 2 ) 1 2)
(PROD (CAR nil (PROD (CAR nil 1) 1 nil) nil ) 1 nil)
(PROD (CAR t (PROD (CAR t 1) 1 t) t ) 1 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 2) 2 1) 1 ) 2 1)
(PROD (CAR 2 (PROD (CAR 2 2) 2 2) 2 ) 2 2)
(PROD (CAR nil (PROD (CAR nil 2) 2 nil) nil ) 2 nil)
(PROD (CAR t (PROD (CAR t 2) 2 t) t ) 2 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 3) 3 1) 1 ) 3 1)
(PROD (CAR 2 (PROD (CAR 2 3) 3 2) 2 ) 3 2)
(PROD (CAR nil (PROD (CAR nil 3) 3 nil) nil ) 3 nil)
(PROD (CAR t (PROD (CAR t 3) 3 t) t ) 3 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 ()) () 1) 1 ) () 1)
(PROD (CAR 2 (PROD (CAR 2 ()) () 2) 2 ) () 2)
(PROD (CAR nil (PROD (CAR nil ()) () nil) nil ) () nil)
(PROD (CAR t (PROD (CAR t ()) () t) t ) () t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 (())) (()) 1) 1 ) (()) 1)
(PROD (CAR 2 (PROD (CAR 2 (())) (()) 2) 2 ) (()) 2)
(PROD (CAR nil (PROD (CAR nil (())) (()) nil) nil ) (()) nil)
(PROD (CAR t (PROD (CAR t (())) (()) t) t ) (()) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (CAR 2 (PROD (CAR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (CAR nil (PROD (CAR nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (CAR t (PROD (CAR t ((()))) ((())) t) t ) ((())) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (CAR 2 (PROD (CAR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (CAR nil (PROD (CAR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (CAR t (PROD (CAR t (((())))) (((()))) t) t ) (((()))) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 'A) 'A 1) 1 ) 'A 1)
(PROD (CAR 2 (PROD (CAR 2 'A) 'A 2) 2 ) 'A 2)
(PROD (CAR nil (PROD (CAR nil 'A) 'A nil) nil ) 'A nil)
(PROD (CAR t (PROD (CAR t 'A) 'A t) t ) 'A t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 'B) 'B 1) 1 ) 'B 1)
(PROD (CAR 2 (PROD (CAR 2 'B) 'B 2) 2 ) 'B 2)
(PROD (CAR nil (PROD (CAR nil 'B) 'B nil) nil ) 'B nil)
(PROD (CAR t (PROD (CAR t 'B) 'B t) t ) 'B t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 'C) 'C 1) 1 ) 'C 1)
(PROD (CAR 2 (PROD (CAR 2 'C) 'C 2) 2 ) 'C 2)
(PROD (CAR nil (PROD (CAR nil 'C) 'C nil) nil ) 'C nil)
(PROD (CAR t (PROD (CAR t 'C) 'C t) t ) 'C t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 '1) '1 1) 1 ) '1 1)
(PROD (CAR 2 (PROD (CAR 2 '1) '1 2) 2 ) '1 2)
(PROD (CAR nil (PROD (CAR nil '1) '1 nil) nil ) '1 nil)
(PROD (CAR t (PROD (CAR t '1) '1 t) t ) '1 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 '2) '2 1) 1 ) '2 1)
(PROD (CAR 2 (PROD (CAR 2 '2) '2 2) 2 ) '2 2)
(PROD (CAR nil (PROD (CAR nil '2) '2 nil) nil ) '2 nil)
(PROD (CAR t (PROD (CAR t '2) '2 t) t ) '2 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 '3) '3 1) 1 ) '3 1)
(PROD (CAR 2 (PROD (CAR 2 '3) '3 2) 2 ) '3 2)
(PROD (CAR nil (PROD (CAR nil '3) '3 nil) nil ) '3 nil)
(PROD (CAR t (PROD (CAR t '3) '3 t) t ) '3 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 '()) '() 1) 1 ) '() 1)
(PROD (CAR 2 (PROD (CAR 2 '()) '() 2) 2 ) '() 2)
(PROD (CAR nil (PROD (CAR nil '()) '() nil) nil ) '() nil)
(PROD (CAR t (PROD (CAR t '()) '() t) t ) '() t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (CAR 2 (PROD (CAR 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (CAR nil (PROD (CAR nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (CAR t (PROD (CAR t '(())) '(()) t) t ) '(()) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (CAR 2 (PROD (CAR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (CAR nil (PROD (CAR nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (CAR t (PROD (CAR t '((()))) '((())) t) t ) '((())) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (CAR 2 (PROD (CAR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (CAR nil (PROD (CAR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (CAR t (PROD (CAR t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (CAR 2 (PROD (CAR 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (CAR nil (PROD (CAR nil ,A) ,A nil) nil ) ,A nil)
(PROD (CAR t (PROD (CAR t ,A) ,A t) t ) ,A t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (CAR 2 (PROD (CAR 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (CAR nil (PROD (CAR nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (CAR t (PROD (CAR t ,1) ,1 t) t ) ,1 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (CAR 2 (PROD (CAR 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (CAR nil (PROD (CAR nil ,()) ,() nil) nil ) ,() nil)
(PROD (CAR t (PROD (CAR t ,()) ,() t) t ) ,() t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (CAR 2 (PROD (CAR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (CAR nil (PROD (CAR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (CAR t (PROD (CAR t ,(())) ,(()) t) t ) ,(()) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (CAR 2 (PROD (CAR 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (CAR nil (PROD (CAR nil `'A) `'A nil) nil ) `'A nil)
(PROD (CAR t (PROD (CAR t `'A) `'A t) t ) `'A t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (CAR 2 (PROD (CAR 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (CAR nil (PROD (CAR nil `'B) `'B nil) nil ) `'B nil)
(PROD (CAR t (PROD (CAR t `'B) `'B t) t ) `'B t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (CAR 2 (PROD (CAR 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (CAR nil (PROD (CAR nil `'C) `'C nil) nil ) `'C nil)
(PROD (CAR t (PROD (CAR t `'C) `'C t) t ) `'C t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (CAR 2 (PROD (CAR 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (CAR nil (PROD (CAR nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (CAR t (PROD (CAR t `'1) `'1 t) t ) `'1 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (CAR 2 (PROD (CAR 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (CAR nil (PROD (CAR nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (CAR t (PROD (CAR t `'2) `'2 t) t ) `'2 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (CAR 2 (PROD (CAR 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (CAR nil (PROD (CAR nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (CAR t (PROD (CAR t `'3) `'3 t) t ) `'3 t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (CAR 2 (PROD (CAR 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (CAR nil (PROD (CAR nil `'()) `'() nil) nil ) `'() nil)
(PROD (CAR t (PROD (CAR t `'()) `'() t) t ) `'() t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (CAR 2 (PROD (CAR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (CAR nil (PROD (CAR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (CAR t (PROD (CAR t `'(())) `'(()) t) t ) `'(()) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (CAR 2 (PROD (CAR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (CAR nil (PROD (CAR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (CAR t (PROD (CAR t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (CAR 1 (PROD (CAR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (CAR 2 (PROD (CAR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (CAR nil (PROD (CAR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (CAR t (PROD (CAR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (CAR (cons t t) (PROD (CAR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (CAR (cons nil t) (PROD (CAR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (CAR (cons nil nil) (PROD (CAR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (CAR (cons 0 0) (PROD (CAR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (CAR (cons 1 1) (PROD (CAR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (CAR (list 1 2 3) (PROD (CAR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (CAR (list (cons 1 1 ) ) (PROD (CAR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 T) T 1) 1 ) T 1)
(PROD (CDR 2 (PROD (CDR 2 T) T 2) 2 ) T 2)
(PROD (CDR nil (PROD (CDR nil T) T nil) nil ) T nil)
(PROD (CDR t (PROD (CDR t T) T t) t ) T t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (CDR 2 (PROD (CDR 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (CDR nil (PROD (CDR nil NIL) NIL nil) nil ) NIL nil)
(PROD (CDR t (PROD (CDR t NIL) NIL t) t ) NIL t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 A) A 1) 1 ) A 1)
(PROD (CDR 2 (PROD (CDR 2 A) A 2) 2 ) A 2)
(PROD (CDR nil (PROD (CDR nil A) A nil) nil ) A nil)
(PROD (CDR t (PROD (CDR t A) A t) t ) A t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 B) B 1) 1 ) B 1)
(PROD (CDR 2 (PROD (CDR 2 B) B 2) 2 ) B 2)
(PROD (CDR nil (PROD (CDR nil B) B nil) nil ) B nil)
(PROD (CDR t (PROD (CDR t B) B t) t ) B t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 C) C 1) 1 ) C 1)
(PROD (CDR 2 (PROD (CDR 2 C) C 2) 2 ) C 2)
(PROD (CDR nil (PROD (CDR nil C) C nil) nil ) C nil)
(PROD (CDR t (PROD (CDR t C) C t) t ) C t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 1) 1 1) 1 ) 1 1)
(PROD (CDR 2 (PROD (CDR 2 1) 1 2) 2 ) 1 2)
(PROD (CDR nil (PROD (CDR nil 1) 1 nil) nil ) 1 nil)
(PROD (CDR t (PROD (CDR t 1) 1 t) t ) 1 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 2) 2 1) 1 ) 2 1)
(PROD (CDR 2 (PROD (CDR 2 2) 2 2) 2 ) 2 2)
(PROD (CDR nil (PROD (CDR nil 2) 2 nil) nil ) 2 nil)
(PROD (CDR t (PROD (CDR t 2) 2 t) t ) 2 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 3) 3 1) 1 ) 3 1)
(PROD (CDR 2 (PROD (CDR 2 3) 3 2) 2 ) 3 2)
(PROD (CDR nil (PROD (CDR nil 3) 3 nil) nil ) 3 nil)
(PROD (CDR t (PROD (CDR t 3) 3 t) t ) 3 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 ()) () 1) 1 ) () 1)
(PROD (CDR 2 (PROD (CDR 2 ()) () 2) 2 ) () 2)
(PROD (CDR nil (PROD (CDR nil ()) () nil) nil ) () nil)
(PROD (CDR t (PROD (CDR t ()) () t) t ) () t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 (())) (()) 1) 1 ) (()) 1)
(PROD (CDR 2 (PROD (CDR 2 (())) (()) 2) 2 ) (()) 2)
(PROD (CDR nil (PROD (CDR nil (())) (()) nil) nil ) (()) nil)
(PROD (CDR t (PROD (CDR t (())) (()) t) t ) (()) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (CDR 2 (PROD (CDR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (CDR nil (PROD (CDR nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (CDR t (PROD (CDR t ((()))) ((())) t) t ) ((())) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (CDR 2 (PROD (CDR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (CDR nil (PROD (CDR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (CDR t (PROD (CDR t (((())))) (((()))) t) t ) (((()))) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 'A) 'A 1) 1 ) 'A 1)
(PROD (CDR 2 (PROD (CDR 2 'A) 'A 2) 2 ) 'A 2)
(PROD (CDR nil (PROD (CDR nil 'A) 'A nil) nil ) 'A nil)
(PROD (CDR t (PROD (CDR t 'A) 'A t) t ) 'A t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 'B) 'B 1) 1 ) 'B 1)
(PROD (CDR 2 (PROD (CDR 2 'B) 'B 2) 2 ) 'B 2)
(PROD (CDR nil (PROD (CDR nil 'B) 'B nil) nil ) 'B nil)
(PROD (CDR t (PROD (CDR t 'B) 'B t) t ) 'B t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 'C) 'C 1) 1 ) 'C 1)
(PROD (CDR 2 (PROD (CDR 2 'C) 'C 2) 2 ) 'C 2)
(PROD (CDR nil (PROD (CDR nil 'C) 'C nil) nil ) 'C nil)
(PROD (CDR t (PROD (CDR t 'C) 'C t) t ) 'C t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 '1) '1 1) 1 ) '1 1)
(PROD (CDR 2 (PROD (CDR 2 '1) '1 2) 2 ) '1 2)
(PROD (CDR nil (PROD (CDR nil '1) '1 nil) nil ) '1 nil)
(PROD (CDR t (PROD (CDR t '1) '1 t) t ) '1 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 '2) '2 1) 1 ) '2 1)
(PROD (CDR 2 (PROD (CDR 2 '2) '2 2) 2 ) '2 2)
(PROD (CDR nil (PROD (CDR nil '2) '2 nil) nil ) '2 nil)
(PROD (CDR t (PROD (CDR t '2) '2 t) t ) '2 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 '3) '3 1) 1 ) '3 1)
(PROD (CDR 2 (PROD (CDR 2 '3) '3 2) 2 ) '3 2)
(PROD (CDR nil (PROD (CDR nil '3) '3 nil) nil ) '3 nil)
(PROD (CDR t (PROD (CDR t '3) '3 t) t ) '3 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 '()) '() 1) 1 ) '() 1)
(PROD (CDR 2 (PROD (CDR 2 '()) '() 2) 2 ) '() 2)
(PROD (CDR nil (PROD (CDR nil '()) '() nil) nil ) '() nil)
(PROD (CDR t (PROD (CDR t '()) '() t) t ) '() t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (CDR 2 (PROD (CDR 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (CDR nil (PROD (CDR nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (CDR t (PROD (CDR t '(())) '(()) t) t ) '(()) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (CDR 2 (PROD (CDR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (CDR nil (PROD (CDR nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (CDR t (PROD (CDR t '((()))) '((())) t) t ) '((())) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (CDR 2 (PROD (CDR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (CDR nil (PROD (CDR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (CDR t (PROD (CDR t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (CDR 2 (PROD (CDR 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (CDR nil (PROD (CDR nil ,A) ,A nil) nil ) ,A nil)
(PROD (CDR t (PROD (CDR t ,A) ,A t) t ) ,A t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (CDR 2 (PROD (CDR 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (CDR nil (PROD (CDR nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (CDR t (PROD (CDR t ,1) ,1 t) t ) ,1 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (CDR 2 (PROD (CDR 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (CDR nil (PROD (CDR nil ,()) ,() nil) nil ) ,() nil)
(PROD (CDR t (PROD (CDR t ,()) ,() t) t ) ,() t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (CDR 2 (PROD (CDR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (CDR nil (PROD (CDR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (CDR t (PROD (CDR t ,(())) ,(()) t) t ) ,(()) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (CDR 2 (PROD (CDR 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (CDR nil (PROD (CDR nil `'A) `'A nil) nil ) `'A nil)
(PROD (CDR t (PROD (CDR t `'A) `'A t) t ) `'A t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (CDR 2 (PROD (CDR 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (CDR nil (PROD (CDR nil `'B) `'B nil) nil ) `'B nil)
(PROD (CDR t (PROD (CDR t `'B) `'B t) t ) `'B t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (CDR 2 (PROD (CDR 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (CDR nil (PROD (CDR nil `'C) `'C nil) nil ) `'C nil)
(PROD (CDR t (PROD (CDR t `'C) `'C t) t ) `'C t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (CDR 2 (PROD (CDR 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (CDR nil (PROD (CDR nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (CDR t (PROD (CDR t `'1) `'1 t) t ) `'1 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (CDR 2 (PROD (CDR 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (CDR nil (PROD (CDR nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (CDR t (PROD (CDR t `'2) `'2 t) t ) `'2 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (CDR 2 (PROD (CDR 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (CDR nil (PROD (CDR nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (CDR t (PROD (CDR t `'3) `'3 t) t ) `'3 t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (CDR 2 (PROD (CDR 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (CDR nil (PROD (CDR nil `'()) `'() nil) nil ) `'() nil)
(PROD (CDR t (PROD (CDR t `'()) `'() t) t ) `'() t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (CDR 2 (PROD (CDR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (CDR nil (PROD (CDR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (CDR t (PROD (CDR t `'(())) `'(()) t) t ) `'(()) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (CDR 2 (PROD (CDR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (CDR nil (PROD (CDR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (CDR t (PROD (CDR t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (CDR 1 (PROD (CDR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (CDR 2 (PROD (CDR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (CDR nil (PROD (CDR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (CDR t (PROD (CDR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (CDR (cons t t) (PROD (CDR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (CDR (cons nil t) (PROD (CDR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (CDR (cons nil nil) (PROD (CDR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (CDR (cons 0 0) (PROD (CDR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (CDR (cons 1 1) (PROD (CDR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (CDR (list 1 2 3) (PROD (CDR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (CDR (list (cons 1 1 ) ) (PROD (CDR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 T) T 1) 1 ) T 1)
(PROD (COMMA 2 (PROD (COMMA 2 T) T 2) 2 ) T 2)
(PROD (COMMA nil (PROD (COMMA nil T) T nil) nil ) T nil)
(PROD (COMMA t (PROD (COMMA t T) T t) t ) T t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (COMMA 2 (PROD (COMMA 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (COMMA nil (PROD (COMMA nil NIL) NIL nil) nil ) NIL nil)
(PROD (COMMA t (PROD (COMMA t NIL) NIL t) t ) NIL t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 A) A 1) 1 ) A 1)
(PROD (COMMA 2 (PROD (COMMA 2 A) A 2) 2 ) A 2)
(PROD (COMMA nil (PROD (COMMA nil A) A nil) nil ) A nil)
(PROD (COMMA t (PROD (COMMA t A) A t) t ) A t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 B) B 1) 1 ) B 1)
(PROD (COMMA 2 (PROD (COMMA 2 B) B 2) 2 ) B 2)
(PROD (COMMA nil (PROD (COMMA nil B) B nil) nil ) B nil)
(PROD (COMMA t (PROD (COMMA t B) B t) t ) B t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 C) C 1) 1 ) C 1)
(PROD (COMMA 2 (PROD (COMMA 2 C) C 2) 2 ) C 2)
(PROD (COMMA nil (PROD (COMMA nil C) C nil) nil ) C nil)
(PROD (COMMA t (PROD (COMMA t C) C t) t ) C t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 1) 1 1) 1 ) 1 1)
(PROD (COMMA 2 (PROD (COMMA 2 1) 1 2) 2 ) 1 2)
(PROD (COMMA nil (PROD (COMMA nil 1) 1 nil) nil ) 1 nil)
(PROD (COMMA t (PROD (COMMA t 1) 1 t) t ) 1 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 2) 2 1) 1 ) 2 1)
(PROD (COMMA 2 (PROD (COMMA 2 2) 2 2) 2 ) 2 2)
(PROD (COMMA nil (PROD (COMMA nil 2) 2 nil) nil ) 2 nil)
(PROD (COMMA t (PROD (COMMA t 2) 2 t) t ) 2 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 3) 3 1) 1 ) 3 1)
(PROD (COMMA 2 (PROD (COMMA 2 3) 3 2) 2 ) 3 2)
(PROD (COMMA nil (PROD (COMMA nil 3) 3 nil) nil ) 3 nil)
(PROD (COMMA t (PROD (COMMA t 3) 3 t) t ) 3 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 ()) () 1) 1 ) () 1)
(PROD (COMMA 2 (PROD (COMMA 2 ()) () 2) 2 ) () 2)
(PROD (COMMA nil (PROD (COMMA nil ()) () nil) nil ) () nil)
(PROD (COMMA t (PROD (COMMA t ()) () t) t ) () t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 (())) (()) 1) 1 ) (()) 1)
(PROD (COMMA 2 (PROD (COMMA 2 (())) (()) 2) 2 ) (()) 2)
(PROD (COMMA nil (PROD (COMMA nil (())) (()) nil) nil ) (()) nil)
(PROD (COMMA t (PROD (COMMA t (())) (()) t) t ) (()) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (COMMA 2 (PROD (COMMA 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (COMMA nil (PROD (COMMA nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (COMMA t (PROD (COMMA t ((()))) ((())) t) t ) ((())) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (COMMA 2 (PROD (COMMA 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (COMMA nil (PROD (COMMA nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (COMMA t (PROD (COMMA t (((())))) (((()))) t) t ) (((()))) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 'A) 'A 1) 1 ) 'A 1)
(PROD (COMMA 2 (PROD (COMMA 2 'A) 'A 2) 2 ) 'A 2)
(PROD (COMMA nil (PROD (COMMA nil 'A) 'A nil) nil ) 'A nil)
(PROD (COMMA t (PROD (COMMA t 'A) 'A t) t ) 'A t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 'B) 'B 1) 1 ) 'B 1)
(PROD (COMMA 2 (PROD (COMMA 2 'B) 'B 2) 2 ) 'B 2)
(PROD (COMMA nil (PROD (COMMA nil 'B) 'B nil) nil ) 'B nil)
(PROD (COMMA t (PROD (COMMA t 'B) 'B t) t ) 'B t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 'C) 'C 1) 1 ) 'C 1)
(PROD (COMMA 2 (PROD (COMMA 2 'C) 'C 2) 2 ) 'C 2)
(PROD (COMMA nil (PROD (COMMA nil 'C) 'C nil) nil ) 'C nil)
(PROD (COMMA t (PROD (COMMA t 'C) 'C t) t ) 'C t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 '1) '1 1) 1 ) '1 1)
(PROD (COMMA 2 (PROD (COMMA 2 '1) '1 2) 2 ) '1 2)
(PROD (COMMA nil (PROD (COMMA nil '1) '1 nil) nil ) '1 nil)
(PROD (COMMA t (PROD (COMMA t '1) '1 t) t ) '1 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 '2) '2 1) 1 ) '2 1)
(PROD (COMMA 2 (PROD (COMMA 2 '2) '2 2) 2 ) '2 2)
(PROD (COMMA nil (PROD (COMMA nil '2) '2 nil) nil ) '2 nil)
(PROD (COMMA t (PROD (COMMA t '2) '2 t) t ) '2 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 '3) '3 1) 1 ) '3 1)
(PROD (COMMA 2 (PROD (COMMA 2 '3) '3 2) 2 ) '3 2)
(PROD (COMMA nil (PROD (COMMA nil '3) '3 nil) nil ) '3 nil)
(PROD (COMMA t (PROD (COMMA t '3) '3 t) t ) '3 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 '()) '() 1) 1 ) '() 1)
(PROD (COMMA 2 (PROD (COMMA 2 '()) '() 2) 2 ) '() 2)
(PROD (COMMA nil (PROD (COMMA nil '()) '() nil) nil ) '() nil)
(PROD (COMMA t (PROD (COMMA t '()) '() t) t ) '() t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (COMMA 2 (PROD (COMMA 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (COMMA nil (PROD (COMMA nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (COMMA t (PROD (COMMA t '(())) '(()) t) t ) '(()) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (COMMA 2 (PROD (COMMA 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (COMMA nil (PROD (COMMA nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (COMMA t (PROD (COMMA t '((()))) '((())) t) t ) '((())) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (COMMA 2 (PROD (COMMA 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (COMMA nil (PROD (COMMA nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (COMMA t (PROD (COMMA t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (COMMA 2 (PROD (COMMA 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (COMMA nil (PROD (COMMA nil ,A) ,A nil) nil ) ,A nil)
(PROD (COMMA t (PROD (COMMA t ,A) ,A t) t ) ,A t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (COMMA 2 (PROD (COMMA 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (COMMA nil (PROD (COMMA nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (COMMA t (PROD (COMMA t ,1) ,1 t) t ) ,1 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (COMMA 2 (PROD (COMMA 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (COMMA nil (PROD (COMMA nil ,()) ,() nil) nil ) ,() nil)
(PROD (COMMA t (PROD (COMMA t ,()) ,() t) t ) ,() t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (COMMA 2 (PROD (COMMA 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (COMMA nil (PROD (COMMA nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (COMMA t (PROD (COMMA t ,(())) ,(()) t) t ) ,(()) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (COMMA nil (PROD (COMMA nil `'A) `'A nil) nil ) `'A nil)
(PROD (COMMA t (PROD (COMMA t `'A) `'A t) t ) `'A t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (COMMA nil (PROD (COMMA nil `'B) `'B nil) nil ) `'B nil)
(PROD (COMMA t (PROD (COMMA t `'B) `'B t) t ) `'B t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (COMMA nil (PROD (COMMA nil `'C) `'C nil) nil ) `'C nil)
(PROD (COMMA t (PROD (COMMA t `'C) `'C t) t ) `'C t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (COMMA nil (PROD (COMMA nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (COMMA t (PROD (COMMA t `'1) `'1 t) t ) `'1 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (COMMA nil (PROD (COMMA nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (COMMA t (PROD (COMMA t `'2) `'2 t) t ) `'2 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (COMMA nil (PROD (COMMA nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (COMMA t (PROD (COMMA t `'3) `'3 t) t ) `'3 t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (COMMA nil (PROD (COMMA nil `'()) `'() nil) nil ) `'() nil)
(PROD (COMMA t (PROD (COMMA t `'()) `'() t) t ) `'() t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (COMMA nil (PROD (COMMA nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (COMMA t (PROD (COMMA t `'(())) `'(()) t) t ) `'(()) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (COMMA nil (PROD (COMMA nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (COMMA t (PROD (COMMA t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (COMMA 1 (PROD (COMMA 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (COMMA 2 (PROD (COMMA 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (COMMA nil (PROD (COMMA nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (COMMA t (PROD (COMMA t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (COMMA (cons t t) (PROD (COMMA (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (COMMA (cons nil t) (PROD (COMMA (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (COMMA (cons nil nil) (PROD (COMMA (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (COMMA (cons 0 0) (PROD (COMMA (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (COMMA (cons 1 1) (PROD (COMMA (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (COMMA (list 1 2 3) (PROD (COMMA (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (COMMA (list (cons 1 1 ) ) (PROD (COMMA (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 T) T 1) 1 ) T 1)
(PROD (COND 2 (PROD (COND 2 T) T 2) 2 ) T 2)
(PROD (COND nil (PROD (COND nil T) T nil) nil ) T nil)
(PROD (COND t (PROD (COND t T) T t) t ) T t)
(PROD (COND (cons t t) (PROD (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (COND 2 (PROD (COND 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (COND nil (PROD (COND nil NIL) NIL nil) nil ) NIL nil)
(PROD (COND t (PROD (COND t NIL) NIL t) t ) NIL t)
(PROD (COND (cons t t) (PROD (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 A) A 1) 1 ) A 1)
(PROD (COND 2 (PROD (COND 2 A) A 2) 2 ) A 2)
(PROD (COND nil (PROD (COND nil A) A nil) nil ) A nil)
(PROD (COND t (PROD (COND t A) A t) t ) A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 B) B 1) 1 ) B 1)
(PROD (COND 2 (PROD (COND 2 B) B 2) 2 ) B 2)
(PROD (COND nil (PROD (COND nil B) B nil) nil ) B nil)
(PROD (COND t (PROD (COND t B) B t) t ) B t)
(PROD (COND (cons t t) (PROD (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 C) C 1) 1 ) C 1)
(PROD (COND 2 (PROD (COND 2 C) C 2) 2 ) C 2)
(PROD (COND nil (PROD (COND nil C) C nil) nil ) C nil)
(PROD (COND t (PROD (COND t C) C t) t ) C t)
(PROD (COND (cons t t) (PROD (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 1) 1 1) 1 ) 1 1)
(PROD (COND 2 (PROD (COND 2 1) 1 2) 2 ) 1 2)
(PROD (COND nil (PROD (COND nil 1) 1 nil) nil ) 1 nil)
(PROD (COND t (PROD (COND t 1) 1 t) t ) 1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 2) 2 1) 1 ) 2 1)
(PROD (COND 2 (PROD (COND 2 2) 2 2) 2 ) 2 2)
(PROD (COND nil (PROD (COND nil 2) 2 nil) nil ) 2 nil)
(PROD (COND t (PROD (COND t 2) 2 t) t ) 2 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 3) 3 1) 1 ) 3 1)
(PROD (COND 2 (PROD (COND 2 3) 3 2) 2 ) 3 2)
(PROD (COND nil (PROD (COND nil 3) 3 nil) nil ) 3 nil)
(PROD (COND t (PROD (COND t 3) 3 t) t ) 3 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ()) () 1) 1 ) () 1)
(PROD (COND 2 (PROD (COND 2 ()) () 2) 2 ) () 2)
(PROD (COND nil (PROD (COND nil ()) () nil) nil ) () nil)
(PROD (COND t (PROD (COND t ()) () t) t ) () t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 (())) (()) 1) 1 ) (()) 1)
(PROD (COND 2 (PROD (COND 2 (())) (()) 2) 2 ) (()) 2)
(PROD (COND nil (PROD (COND nil (())) (()) nil) nil ) (()) nil)
(PROD (COND t (PROD (COND t (())) (()) t) t ) (()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (COND 2 (PROD (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (COND nil (PROD (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (COND t (PROD (COND t ((()))) ((())) t) t ) ((())) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (COND 2 (PROD (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (COND nil (PROD (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (COND t (PROD (COND t (((())))) (((()))) t) t ) (((()))) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 'A) 'A 1) 1 ) 'A 1)
(PROD (COND 2 (PROD (COND 2 'A) 'A 2) 2 ) 'A 2)
(PROD (COND nil (PROD (COND nil 'A) 'A nil) nil ) 'A nil)
(PROD (COND t (PROD (COND t 'A) 'A t) t ) 'A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 'B) 'B 1) 1 ) 'B 1)
(PROD (COND 2 (PROD (COND 2 'B) 'B 2) 2 ) 'B 2)
(PROD (COND nil (PROD (COND nil 'B) 'B nil) nil ) 'B nil)
(PROD (COND t (PROD (COND t 'B) 'B t) t ) 'B t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 'C) 'C 1) 1 ) 'C 1)
(PROD (COND 2 (PROD (COND 2 'C) 'C 2) 2 ) 'C 2)
(PROD (COND nil (PROD (COND nil 'C) 'C nil) nil ) 'C nil)
(PROD (COND t (PROD (COND t 'C) 'C t) t ) 'C t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '1) '1 1) 1 ) '1 1)
(PROD (COND 2 (PROD (COND 2 '1) '1 2) 2 ) '1 2)
(PROD (COND nil (PROD (COND nil '1) '1 nil) nil ) '1 nil)
(PROD (COND t (PROD (COND t '1) '1 t) t ) '1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '2) '2 1) 1 ) '2 1)
(PROD (COND 2 (PROD (COND 2 '2) '2 2) 2 ) '2 2)
(PROD (COND nil (PROD (COND nil '2) '2 nil) nil ) '2 nil)
(PROD (COND t (PROD (COND t '2) '2 t) t ) '2 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '3) '3 1) 1 ) '3 1)
(PROD (COND 2 (PROD (COND 2 '3) '3 2) 2 ) '3 2)
(PROD (COND nil (PROD (COND nil '3) '3 nil) nil ) '3 nil)
(PROD (COND t (PROD (COND t '3) '3 t) t ) '3 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '()) '() 1) 1 ) '() 1)
(PROD (COND 2 (PROD (COND 2 '()) '() 2) 2 ) '() 2)
(PROD (COND nil (PROD (COND nil '()) '() nil) nil ) '() nil)
(PROD (COND t (PROD (COND t '()) '() t) t ) '() t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (COND 2 (PROD (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (COND nil (PROD (COND nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (COND t (PROD (COND t '(())) '(()) t) t ) '(()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (COND 2 (PROD (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (COND nil (PROD (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (COND t (PROD (COND t '((()))) '((())) t) t ) '((())) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (COND 2 (PROD (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (COND nil (PROD (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (COND t (PROD (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (COND 2 (PROD (COND 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (COND nil (PROD (COND nil ,A) ,A nil) nil ) ,A nil)
(PROD (COND t (PROD (COND t ,A) ,A t) t ) ,A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (COND 2 (PROD (COND 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (COND nil (PROD (COND nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (COND t (PROD (COND t ,1) ,1 t) t ) ,1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (COND 2 (PROD (COND 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (COND nil (PROD (COND nil ,()) ,() nil) nil ) ,() nil)
(PROD (COND t (PROD (COND t ,()) ,() t) t ) ,() t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (COND 2 (PROD (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (COND nil (PROD (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (COND t (PROD (COND t ,(())) ,(()) t) t ) ,(()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (COND 2 (PROD (COND 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (COND nil (PROD (COND nil `'A) `'A nil) nil ) `'A nil)
(PROD (COND t (PROD (COND t `'A) `'A t) t ) `'A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (COND 2 (PROD (COND 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (COND nil (PROD (COND nil `'B) `'B nil) nil ) `'B nil)
(PROD (COND t (PROD (COND t `'B) `'B t) t ) `'B t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (COND 2 (PROD (COND 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (COND nil (PROD (COND nil `'C) `'C nil) nil ) `'C nil)
(PROD (COND t (PROD (COND t `'C) `'C t) t ) `'C t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (COND 2 (PROD (COND 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (COND nil (PROD (COND nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (COND t (PROD (COND t `'1) `'1 t) t ) `'1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (COND 2 (PROD (COND 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (COND nil (PROD (COND nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (COND t (PROD (COND t `'2) `'2 t) t ) `'2 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (COND 2 (PROD (COND 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (COND nil (PROD (COND nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (COND t (PROD (COND t `'3) `'3 t) t ) `'3 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (COND 2 (PROD (COND 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (COND nil (PROD (COND nil `'()) `'() nil) nil ) `'() nil)
(PROD (COND t (PROD (COND t `'()) `'() t) t ) `'() t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (COND 2 (PROD (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (COND nil (PROD (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (COND t (PROD (COND t `'(())) `'(()) t) t ) `'(()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (COND 2 (PROD (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (COND nil (PROD (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (COND t (PROD (COND t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (COND 2 (PROD (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (COND nil (PROD (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (COND t (PROD (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 T) T 1) 1 ) T 1)
(PROD (CONS 2 (PROD (CONS 2 T) T 2) 2 ) T 2)
(PROD (CONS nil (PROD (CONS nil T) T nil) nil ) T nil)
(PROD (CONS t (PROD (CONS t T) T t) t ) T t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (CONS 2 (PROD (CONS 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (CONS nil (PROD (CONS nil NIL) NIL nil) nil ) NIL nil)
(PROD (CONS t (PROD (CONS t NIL) NIL t) t ) NIL t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 A) A 1) 1 ) A 1)
(PROD (CONS 2 (PROD (CONS 2 A) A 2) 2 ) A 2)
(PROD (CONS nil (PROD (CONS nil A) A nil) nil ) A nil)
(PROD (CONS t (PROD (CONS t A) A t) t ) A t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 B) B 1) 1 ) B 1)
(PROD (CONS 2 (PROD (CONS 2 B) B 2) 2 ) B 2)
(PROD (CONS nil (PROD (CONS nil B) B nil) nil ) B nil)
(PROD (CONS t (PROD (CONS t B) B t) t ) B t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 C) C 1) 1 ) C 1)
(PROD (CONS 2 (PROD (CONS 2 C) C 2) 2 ) C 2)
(PROD (CONS nil (PROD (CONS nil C) C nil) nil ) C nil)
(PROD (CONS t (PROD (CONS t C) C t) t ) C t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 1) 1 1) 1 ) 1 1)
(PROD (CONS 2 (PROD (CONS 2 1) 1 2) 2 ) 1 2)
(PROD (CONS nil (PROD (CONS nil 1) 1 nil) nil ) 1 nil)
(PROD (CONS t (PROD (CONS t 1) 1 t) t ) 1 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 2) 2 1) 1 ) 2 1)
(PROD (CONS 2 (PROD (CONS 2 2) 2 2) 2 ) 2 2)
(PROD (CONS nil (PROD (CONS nil 2) 2 nil) nil ) 2 nil)
(PROD (CONS t (PROD (CONS t 2) 2 t) t ) 2 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 3) 3 1) 1 ) 3 1)
(PROD (CONS 2 (PROD (CONS 2 3) 3 2) 2 ) 3 2)
(PROD (CONS nil (PROD (CONS nil 3) 3 nil) nil ) 3 nil)
(PROD (CONS t (PROD (CONS t 3) 3 t) t ) 3 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 ()) () 1) 1 ) () 1)
(PROD (CONS 2 (PROD (CONS 2 ()) () 2) 2 ) () 2)
(PROD (CONS nil (PROD (CONS nil ()) () nil) nil ) () nil)
(PROD (CONS t (PROD (CONS t ()) () t) t ) () t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 (())) (()) 1) 1 ) (()) 1)
(PROD (CONS 2 (PROD (CONS 2 (())) (()) 2) 2 ) (()) 2)
(PROD (CONS nil (PROD (CONS nil (())) (()) nil) nil ) (()) nil)
(PROD (CONS t (PROD (CONS t (())) (()) t) t ) (()) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (CONS 2 (PROD (CONS 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (CONS nil (PROD (CONS nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (CONS t (PROD (CONS t ((()))) ((())) t) t ) ((())) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (CONS 2 (PROD (CONS 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (CONS nil (PROD (CONS nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (CONS t (PROD (CONS t (((())))) (((()))) t) t ) (((()))) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 'A) 'A 1) 1 ) 'A 1)
(PROD (CONS 2 (PROD (CONS 2 'A) 'A 2) 2 ) 'A 2)
(PROD (CONS nil (PROD (CONS nil 'A) 'A nil) nil ) 'A nil)
(PROD (CONS t (PROD (CONS t 'A) 'A t) t ) 'A t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 'B) 'B 1) 1 ) 'B 1)
(PROD (CONS 2 (PROD (CONS 2 'B) 'B 2) 2 ) 'B 2)
(PROD (CONS nil (PROD (CONS nil 'B) 'B nil) nil ) 'B nil)
(PROD (CONS t (PROD (CONS t 'B) 'B t) t ) 'B t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 'C) 'C 1) 1 ) 'C 1)
(PROD (CONS 2 (PROD (CONS 2 'C) 'C 2) 2 ) 'C 2)
(PROD (CONS nil (PROD (CONS nil 'C) 'C nil) nil ) 'C nil)
(PROD (CONS t (PROD (CONS t 'C) 'C t) t ) 'C t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 '1) '1 1) 1 ) '1 1)
(PROD (CONS 2 (PROD (CONS 2 '1) '1 2) 2 ) '1 2)
(PROD (CONS nil (PROD (CONS nil '1) '1 nil) nil ) '1 nil)
(PROD (CONS t (PROD (CONS t '1) '1 t) t ) '1 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 '2) '2 1) 1 ) '2 1)
(PROD (CONS 2 (PROD (CONS 2 '2) '2 2) 2 ) '2 2)
(PROD (CONS nil (PROD (CONS nil '2) '2 nil) nil ) '2 nil)
(PROD (CONS t (PROD (CONS t '2) '2 t) t ) '2 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 '3) '3 1) 1 ) '3 1)
(PROD (CONS 2 (PROD (CONS 2 '3) '3 2) 2 ) '3 2)
(PROD (CONS nil (PROD (CONS nil '3) '3 nil) nil ) '3 nil)
(PROD (CONS t (PROD (CONS t '3) '3 t) t ) '3 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 '()) '() 1) 1 ) '() 1)
(PROD (CONS 2 (PROD (CONS 2 '()) '() 2) 2 ) '() 2)
(PROD (CONS nil (PROD (CONS nil '()) '() nil) nil ) '() nil)
(PROD (CONS t (PROD (CONS t '()) '() t) t ) '() t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (CONS 2 (PROD (CONS 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (CONS nil (PROD (CONS nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (CONS t (PROD (CONS t '(())) '(()) t) t ) '(()) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (CONS 2 (PROD (CONS 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (CONS nil (PROD (CONS nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (CONS t (PROD (CONS t '((()))) '((())) t) t ) '((())) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (CONS 2 (PROD (CONS 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (CONS nil (PROD (CONS nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (CONS t (PROD (CONS t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (CONS 2 (PROD (CONS 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (CONS nil (PROD (CONS nil ,A) ,A nil) nil ) ,A nil)
(PROD (CONS t (PROD (CONS t ,A) ,A t) t ) ,A t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (CONS 2 (PROD (CONS 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (CONS nil (PROD (CONS nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (CONS t (PROD (CONS t ,1) ,1 t) t ) ,1 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (CONS 2 (PROD (CONS 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (CONS nil (PROD (CONS nil ,()) ,() nil) nil ) ,() nil)
(PROD (CONS t (PROD (CONS t ,()) ,() t) t ) ,() t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (CONS 2 (PROD (CONS 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (CONS nil (PROD (CONS nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (CONS t (PROD (CONS t ,(())) ,(()) t) t ) ,(()) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (CONS 2 (PROD (CONS 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (CONS nil (PROD (CONS nil `'A) `'A nil) nil ) `'A nil)
(PROD (CONS t (PROD (CONS t `'A) `'A t) t ) `'A t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (CONS 2 (PROD (CONS 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (CONS nil (PROD (CONS nil `'B) `'B nil) nil ) `'B nil)
(PROD (CONS t (PROD (CONS t `'B) `'B t) t ) `'B t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (CONS 2 (PROD (CONS 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (CONS nil (PROD (CONS nil `'C) `'C nil) nil ) `'C nil)
(PROD (CONS t (PROD (CONS t `'C) `'C t) t ) `'C t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (CONS 2 (PROD (CONS 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (CONS nil (PROD (CONS nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (CONS t (PROD (CONS t `'1) `'1 t) t ) `'1 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (CONS 2 (PROD (CONS 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (CONS nil (PROD (CONS nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (CONS t (PROD (CONS t `'2) `'2 t) t ) `'2 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (CONS 2 (PROD (CONS 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (CONS nil (PROD (CONS nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (CONS t (PROD (CONS t `'3) `'3 t) t ) `'3 t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (CONS 2 (PROD (CONS 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (CONS nil (PROD (CONS nil `'()) `'() nil) nil ) `'() nil)
(PROD (CONS t (PROD (CONS t `'()) `'() t) t ) `'() t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (CONS 2 (PROD (CONS 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (CONS nil (PROD (CONS nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (CONS t (PROD (CONS t `'(())) `'(()) t) t ) `'(()) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (CONS 2 (PROD (CONS 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (CONS nil (PROD (CONS nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (CONS t (PROD (CONS t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (CONS 1 (PROD (CONS 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (CONS 2 (PROD (CONS 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (CONS nil (PROD (CONS nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (CONS t (PROD (CONS t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (CONS (cons t t) (PROD (CONS (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (CONS (cons nil t) (PROD (CONS (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (CONS (cons nil nil) (PROD (CONS (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (CONS (cons 0 0) (PROD (CONS (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (CONS (cons 1 1) (PROD (CONS (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (CONS (list 1 2 3) (PROD (CONS (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (CONS (list (cons 1 1 ) ) (PROD (CONS (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 T) T 1) 1 ) T 1)
(PROD (CONSP 2 (PROD (CONSP 2 T) T 2) 2 ) T 2)
(PROD (CONSP nil (PROD (CONSP nil T) T nil) nil ) T nil)
(PROD (CONSP t (PROD (CONSP t T) T t) t ) T t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (CONSP 2 (PROD (CONSP 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (CONSP nil (PROD (CONSP nil NIL) NIL nil) nil ) NIL nil)
(PROD (CONSP t (PROD (CONSP t NIL) NIL t) t ) NIL t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 A) A 1) 1 ) A 1)
(PROD (CONSP 2 (PROD (CONSP 2 A) A 2) 2 ) A 2)
(PROD (CONSP nil (PROD (CONSP nil A) A nil) nil ) A nil)
(PROD (CONSP t (PROD (CONSP t A) A t) t ) A t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 B) B 1) 1 ) B 1)
(PROD (CONSP 2 (PROD (CONSP 2 B) B 2) 2 ) B 2)
(PROD (CONSP nil (PROD (CONSP nil B) B nil) nil ) B nil)
(PROD (CONSP t (PROD (CONSP t B) B t) t ) B t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 C) C 1) 1 ) C 1)
(PROD (CONSP 2 (PROD (CONSP 2 C) C 2) 2 ) C 2)
(PROD (CONSP nil (PROD (CONSP nil C) C nil) nil ) C nil)
(PROD (CONSP t (PROD (CONSP t C) C t) t ) C t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 1) 1 1) 1 ) 1 1)
(PROD (CONSP 2 (PROD (CONSP 2 1) 1 2) 2 ) 1 2)
(PROD (CONSP nil (PROD (CONSP nil 1) 1 nil) nil ) 1 nil)
(PROD (CONSP t (PROD (CONSP t 1) 1 t) t ) 1 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 2) 2 1) 1 ) 2 1)
(PROD (CONSP 2 (PROD (CONSP 2 2) 2 2) 2 ) 2 2)
(PROD (CONSP nil (PROD (CONSP nil 2) 2 nil) nil ) 2 nil)
(PROD (CONSP t (PROD (CONSP t 2) 2 t) t ) 2 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 3) 3 1) 1 ) 3 1)
(PROD (CONSP 2 (PROD (CONSP 2 3) 3 2) 2 ) 3 2)
(PROD (CONSP nil (PROD (CONSP nil 3) 3 nil) nil ) 3 nil)
(PROD (CONSP t (PROD (CONSP t 3) 3 t) t ) 3 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 ()) () 1) 1 ) () 1)
(PROD (CONSP 2 (PROD (CONSP 2 ()) () 2) 2 ) () 2)
(PROD (CONSP nil (PROD (CONSP nil ()) () nil) nil ) () nil)
(PROD (CONSP t (PROD (CONSP t ()) () t) t ) () t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 (())) (()) 1) 1 ) (()) 1)
(PROD (CONSP 2 (PROD (CONSP 2 (())) (()) 2) 2 ) (()) 2)
(PROD (CONSP nil (PROD (CONSP nil (())) (()) nil) nil ) (()) nil)
(PROD (CONSP t (PROD (CONSP t (())) (()) t) t ) (()) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (CONSP 2 (PROD (CONSP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (CONSP nil (PROD (CONSP nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (CONSP t (PROD (CONSP t ((()))) ((())) t) t ) ((())) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (CONSP 2 (PROD (CONSP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (CONSP nil (PROD (CONSP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (CONSP t (PROD (CONSP t (((())))) (((()))) t) t ) (((()))) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 'A) 'A 1) 1 ) 'A 1)
(PROD (CONSP 2 (PROD (CONSP 2 'A) 'A 2) 2 ) 'A 2)
(PROD (CONSP nil (PROD (CONSP nil 'A) 'A nil) nil ) 'A nil)
(PROD (CONSP t (PROD (CONSP t 'A) 'A t) t ) 'A t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 'B) 'B 1) 1 ) 'B 1)
(PROD (CONSP 2 (PROD (CONSP 2 'B) 'B 2) 2 ) 'B 2)
(PROD (CONSP nil (PROD (CONSP nil 'B) 'B nil) nil ) 'B nil)
(PROD (CONSP t (PROD (CONSP t 'B) 'B t) t ) 'B t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 'C) 'C 1) 1 ) 'C 1)
(PROD (CONSP 2 (PROD (CONSP 2 'C) 'C 2) 2 ) 'C 2)
(PROD (CONSP nil (PROD (CONSP nil 'C) 'C nil) nil ) 'C nil)
(PROD (CONSP t (PROD (CONSP t 'C) 'C t) t ) 'C t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 '1) '1 1) 1 ) '1 1)
(PROD (CONSP 2 (PROD (CONSP 2 '1) '1 2) 2 ) '1 2)
(PROD (CONSP nil (PROD (CONSP nil '1) '1 nil) nil ) '1 nil)
(PROD (CONSP t (PROD (CONSP t '1) '1 t) t ) '1 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 '2) '2 1) 1 ) '2 1)
(PROD (CONSP 2 (PROD (CONSP 2 '2) '2 2) 2 ) '2 2)
(PROD (CONSP nil (PROD (CONSP nil '2) '2 nil) nil ) '2 nil)
(PROD (CONSP t (PROD (CONSP t '2) '2 t) t ) '2 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 '3) '3 1) 1 ) '3 1)
(PROD (CONSP 2 (PROD (CONSP 2 '3) '3 2) 2 ) '3 2)
(PROD (CONSP nil (PROD (CONSP nil '3) '3 nil) nil ) '3 nil)
(PROD (CONSP t (PROD (CONSP t '3) '3 t) t ) '3 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 '()) '() 1) 1 ) '() 1)
(PROD (CONSP 2 (PROD (CONSP 2 '()) '() 2) 2 ) '() 2)
(PROD (CONSP nil (PROD (CONSP nil '()) '() nil) nil ) '() nil)
(PROD (CONSP t (PROD (CONSP t '()) '() t) t ) '() t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (CONSP 2 (PROD (CONSP 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (CONSP nil (PROD (CONSP nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (CONSP t (PROD (CONSP t '(())) '(()) t) t ) '(()) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (CONSP 2 (PROD (CONSP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (CONSP nil (PROD (CONSP nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (CONSP t (PROD (CONSP t '((()))) '((())) t) t ) '((())) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (CONSP 2 (PROD (CONSP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (CONSP nil (PROD (CONSP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (CONSP t (PROD (CONSP t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (CONSP 2 (PROD (CONSP 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (CONSP nil (PROD (CONSP nil ,A) ,A nil) nil ) ,A nil)
(PROD (CONSP t (PROD (CONSP t ,A) ,A t) t ) ,A t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (CONSP 2 (PROD (CONSP 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (CONSP nil (PROD (CONSP nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (CONSP t (PROD (CONSP t ,1) ,1 t) t ) ,1 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (CONSP 2 (PROD (CONSP 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (CONSP nil (PROD (CONSP nil ,()) ,() nil) nil ) ,() nil)
(PROD (CONSP t (PROD (CONSP t ,()) ,() t) t ) ,() t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (CONSP 2 (PROD (CONSP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (CONSP nil (PROD (CONSP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (CONSP t (PROD (CONSP t ,(())) ,(()) t) t ) ,(()) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (CONSP nil (PROD (CONSP nil `'A) `'A nil) nil ) `'A nil)
(PROD (CONSP t (PROD (CONSP t `'A) `'A t) t ) `'A t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (CONSP nil (PROD (CONSP nil `'B) `'B nil) nil ) `'B nil)
(PROD (CONSP t (PROD (CONSP t `'B) `'B t) t ) `'B t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (CONSP nil (PROD (CONSP nil `'C) `'C nil) nil ) `'C nil)
(PROD (CONSP t (PROD (CONSP t `'C) `'C t) t ) `'C t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (CONSP nil (PROD (CONSP nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (CONSP t (PROD (CONSP t `'1) `'1 t) t ) `'1 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (CONSP nil (PROD (CONSP nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (CONSP t (PROD (CONSP t `'2) `'2 t) t ) `'2 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (CONSP nil (PROD (CONSP nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (CONSP t (PROD (CONSP t `'3) `'3 t) t ) `'3 t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (CONSP nil (PROD (CONSP nil `'()) `'() nil) nil ) `'() nil)
(PROD (CONSP t (PROD (CONSP t `'()) `'() t) t ) `'() t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (CONSP nil (PROD (CONSP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (CONSP t (PROD (CONSP t `'(())) `'(()) t) t ) `'(()) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (CONSP nil (PROD (CONSP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (CONSP t (PROD (CONSP t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (CONSP 1 (PROD (CONSP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (CONSP 2 (PROD (CONSP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (CONSP nil (PROD (CONSP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (CONSP t (PROD (CONSP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (CONSP (cons t t) (PROD (CONSP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (CONSP (cons nil t) (PROD (CONSP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (CONSP (cons nil nil) (PROD (CONSP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (CONSP (cons 0 0) (PROD (CONSP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (CONSP (cons 1 1) (PROD (CONSP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (CONSP (list 1 2 3) (PROD (CONSP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (CONSP (list (cons 1 1 ) ) (PROD (CONSP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 T) T 1) 1 ) T 1)
(PROD (EQ 2 (PROD (EQ 2 T) T 2) 2 ) T 2)
(PROD (EQ nil (PROD (EQ nil T) T nil) nil ) T nil)
(PROD (EQ t (PROD (EQ t T) T t) t ) T t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (EQ 2 (PROD (EQ 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (EQ nil (PROD (EQ nil NIL) NIL nil) nil ) NIL nil)
(PROD (EQ t (PROD (EQ t NIL) NIL t) t ) NIL t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 A) A 1) 1 ) A 1)
(PROD (EQ 2 (PROD (EQ 2 A) A 2) 2 ) A 2)
(PROD (EQ nil (PROD (EQ nil A) A nil) nil ) A nil)
(PROD (EQ t (PROD (EQ t A) A t) t ) A t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 B) B 1) 1 ) B 1)
(PROD (EQ 2 (PROD (EQ 2 B) B 2) 2 ) B 2)
(PROD (EQ nil (PROD (EQ nil B) B nil) nil ) B nil)
(PROD (EQ t (PROD (EQ t B) B t) t ) B t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 C) C 1) 1 ) C 1)
(PROD (EQ 2 (PROD (EQ 2 C) C 2) 2 ) C 2)
(PROD (EQ nil (PROD (EQ nil C) C nil) nil ) C nil)
(PROD (EQ t (PROD (EQ t C) C t) t ) C t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 1) 1 1) 1 ) 1 1)
(PROD (EQ 2 (PROD (EQ 2 1) 1 2) 2 ) 1 2)
(PROD (EQ nil (PROD (EQ nil 1) 1 nil) nil ) 1 nil)
(PROD (EQ t (PROD (EQ t 1) 1 t) t ) 1 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 2) 2 1) 1 ) 2 1)
(PROD (EQ 2 (PROD (EQ 2 2) 2 2) 2 ) 2 2)
(PROD (EQ nil (PROD (EQ nil 2) 2 nil) nil ) 2 nil)
(PROD (EQ t (PROD (EQ t 2) 2 t) t ) 2 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 3) 3 1) 1 ) 3 1)
(PROD (EQ 2 (PROD (EQ 2 3) 3 2) 2 ) 3 2)
(PROD (EQ nil (PROD (EQ nil 3) 3 nil) nil ) 3 nil)
(PROD (EQ t (PROD (EQ t 3) 3 t) t ) 3 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 ()) () 1) 1 ) () 1)
(PROD (EQ 2 (PROD (EQ 2 ()) () 2) 2 ) () 2)
(PROD (EQ nil (PROD (EQ nil ()) () nil) nil ) () nil)
(PROD (EQ t (PROD (EQ t ()) () t) t ) () t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 (())) (()) 1) 1 ) (()) 1)
(PROD (EQ 2 (PROD (EQ 2 (())) (()) 2) 2 ) (()) 2)
(PROD (EQ nil (PROD (EQ nil (())) (()) nil) nil ) (()) nil)
(PROD (EQ t (PROD (EQ t (())) (()) t) t ) (()) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (EQ 2 (PROD (EQ 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (EQ nil (PROD (EQ nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (EQ t (PROD (EQ t ((()))) ((())) t) t ) ((())) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (EQ 2 (PROD (EQ 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (EQ nil (PROD (EQ nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (EQ t (PROD (EQ t (((())))) (((()))) t) t ) (((()))) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 'A) 'A 1) 1 ) 'A 1)
(PROD (EQ 2 (PROD (EQ 2 'A) 'A 2) 2 ) 'A 2)
(PROD (EQ nil (PROD (EQ nil 'A) 'A nil) nil ) 'A nil)
(PROD (EQ t (PROD (EQ t 'A) 'A t) t ) 'A t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 'B) 'B 1) 1 ) 'B 1)
(PROD (EQ 2 (PROD (EQ 2 'B) 'B 2) 2 ) 'B 2)
(PROD (EQ nil (PROD (EQ nil 'B) 'B nil) nil ) 'B nil)
(PROD (EQ t (PROD (EQ t 'B) 'B t) t ) 'B t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 'C) 'C 1) 1 ) 'C 1)
(PROD (EQ 2 (PROD (EQ 2 'C) 'C 2) 2 ) 'C 2)
(PROD (EQ nil (PROD (EQ nil 'C) 'C nil) nil ) 'C nil)
(PROD (EQ t (PROD (EQ t 'C) 'C t) t ) 'C t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 '1) '1 1) 1 ) '1 1)
(PROD (EQ 2 (PROD (EQ 2 '1) '1 2) 2 ) '1 2)
(PROD (EQ nil (PROD (EQ nil '1) '1 nil) nil ) '1 nil)
(PROD (EQ t (PROD (EQ t '1) '1 t) t ) '1 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 '2) '2 1) 1 ) '2 1)
(PROD (EQ 2 (PROD (EQ 2 '2) '2 2) 2 ) '2 2)
(PROD (EQ nil (PROD (EQ nil '2) '2 nil) nil ) '2 nil)
(PROD (EQ t (PROD (EQ t '2) '2 t) t ) '2 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 '3) '3 1) 1 ) '3 1)
(PROD (EQ 2 (PROD (EQ 2 '3) '3 2) 2 ) '3 2)
(PROD (EQ nil (PROD (EQ nil '3) '3 nil) nil ) '3 nil)
(PROD (EQ t (PROD (EQ t '3) '3 t) t ) '3 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 '()) '() 1) 1 ) '() 1)
(PROD (EQ 2 (PROD (EQ 2 '()) '() 2) 2 ) '() 2)
(PROD (EQ nil (PROD (EQ nil '()) '() nil) nil ) '() nil)
(PROD (EQ t (PROD (EQ t '()) '() t) t ) '() t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (EQ 2 (PROD (EQ 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (EQ nil (PROD (EQ nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (EQ t (PROD (EQ t '(())) '(()) t) t ) '(()) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (EQ 2 (PROD (EQ 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (EQ nil (PROD (EQ nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (EQ t (PROD (EQ t '((()))) '((())) t) t ) '((())) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (EQ 2 (PROD (EQ 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (EQ nil (PROD (EQ nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (EQ t (PROD (EQ t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (EQ 2 (PROD (EQ 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (EQ nil (PROD (EQ nil ,A) ,A nil) nil ) ,A nil)
(PROD (EQ t (PROD (EQ t ,A) ,A t) t ) ,A t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (EQ 2 (PROD (EQ 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (EQ nil (PROD (EQ nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (EQ t (PROD (EQ t ,1) ,1 t) t ) ,1 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (EQ 2 (PROD (EQ 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (EQ nil (PROD (EQ nil ,()) ,() nil) nil ) ,() nil)
(PROD (EQ t (PROD (EQ t ,()) ,() t) t ) ,() t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (EQ 2 (PROD (EQ 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (EQ nil (PROD (EQ nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (EQ t (PROD (EQ t ,(())) ,(()) t) t ) ,(()) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (EQ 2 (PROD (EQ 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (EQ nil (PROD (EQ nil `'A) `'A nil) nil ) `'A nil)
(PROD (EQ t (PROD (EQ t `'A) `'A t) t ) `'A t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (EQ 2 (PROD (EQ 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (EQ nil (PROD (EQ nil `'B) `'B nil) nil ) `'B nil)
(PROD (EQ t (PROD (EQ t `'B) `'B t) t ) `'B t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (EQ 2 (PROD (EQ 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (EQ nil (PROD (EQ nil `'C) `'C nil) nil ) `'C nil)
(PROD (EQ t (PROD (EQ t `'C) `'C t) t ) `'C t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (EQ 2 (PROD (EQ 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (EQ nil (PROD (EQ nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (EQ t (PROD (EQ t `'1) `'1 t) t ) `'1 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (EQ 2 (PROD (EQ 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (EQ nil (PROD (EQ nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (EQ t (PROD (EQ t `'2) `'2 t) t ) `'2 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (EQ 2 (PROD (EQ 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (EQ nil (PROD (EQ nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (EQ t (PROD (EQ t `'3) `'3 t) t ) `'3 t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (EQ 2 (PROD (EQ 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (EQ nil (PROD (EQ nil `'()) `'() nil) nil ) `'() nil)
(PROD (EQ t (PROD (EQ t `'()) `'() t) t ) `'() t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (EQ 2 (PROD (EQ 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (EQ nil (PROD (EQ nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (EQ t (PROD (EQ t `'(())) `'(()) t) t ) `'(()) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (EQ 2 (PROD (EQ 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (EQ nil (PROD (EQ nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (EQ t (PROD (EQ t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (EQ 1 (PROD (EQ 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (EQ 2 (PROD (EQ 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (EQ nil (PROD (EQ nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (EQ t (PROD (EQ t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (EQ (cons t t) (PROD (EQ (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (EQ (cons nil t) (PROD (EQ (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (EQ (cons nil nil) (PROD (EQ (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (EQ (cons 0 0) (PROD (EQ (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (EQ (cons 1 1) (PROD (EQ (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (EQ (list 1 2 3) (PROD (EQ (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (EQ (list (cons 1 1 ) ) (PROD (EQ (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 T) T 1) 1 ) T 1)
(PROD (EQL 2 (PROD (EQL 2 T) T 2) 2 ) T 2)
(PROD (EQL nil (PROD (EQL nil T) T nil) nil ) T nil)
(PROD (EQL t (PROD (EQL t T) T t) t ) T t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (EQL 2 (PROD (EQL 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (EQL nil (PROD (EQL nil NIL) NIL nil) nil ) NIL nil)
(PROD (EQL t (PROD (EQL t NIL) NIL t) t ) NIL t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 A) A 1) 1 ) A 1)
(PROD (EQL 2 (PROD (EQL 2 A) A 2) 2 ) A 2)
(PROD (EQL nil (PROD (EQL nil A) A nil) nil ) A nil)
(PROD (EQL t (PROD (EQL t A) A t) t ) A t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 B) B 1) 1 ) B 1)
(PROD (EQL 2 (PROD (EQL 2 B) B 2) 2 ) B 2)
(PROD (EQL nil (PROD (EQL nil B) B nil) nil ) B nil)
(PROD (EQL t (PROD (EQL t B) B t) t ) B t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 C) C 1) 1 ) C 1)
(PROD (EQL 2 (PROD (EQL 2 C) C 2) 2 ) C 2)
(PROD (EQL nil (PROD (EQL nil C) C nil) nil ) C nil)
(PROD (EQL t (PROD (EQL t C) C t) t ) C t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 1) 1 1) 1 ) 1 1)
(PROD (EQL 2 (PROD (EQL 2 1) 1 2) 2 ) 1 2)
(PROD (EQL nil (PROD (EQL nil 1) 1 nil) nil ) 1 nil)
(PROD (EQL t (PROD (EQL t 1) 1 t) t ) 1 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 2) 2 1) 1 ) 2 1)
(PROD (EQL 2 (PROD (EQL 2 2) 2 2) 2 ) 2 2)
(PROD (EQL nil (PROD (EQL nil 2) 2 nil) nil ) 2 nil)
(PROD (EQL t (PROD (EQL t 2) 2 t) t ) 2 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 3) 3 1) 1 ) 3 1)
(PROD (EQL 2 (PROD (EQL 2 3) 3 2) 2 ) 3 2)
(PROD (EQL nil (PROD (EQL nil 3) 3 nil) nil ) 3 nil)
(PROD (EQL t (PROD (EQL t 3) 3 t) t ) 3 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 ()) () 1) 1 ) () 1)
(PROD (EQL 2 (PROD (EQL 2 ()) () 2) 2 ) () 2)
(PROD (EQL nil (PROD (EQL nil ()) () nil) nil ) () nil)
(PROD (EQL t (PROD (EQL t ()) () t) t ) () t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 (())) (()) 1) 1 ) (()) 1)
(PROD (EQL 2 (PROD (EQL 2 (())) (()) 2) 2 ) (()) 2)
(PROD (EQL nil (PROD (EQL nil (())) (()) nil) nil ) (()) nil)
(PROD (EQL t (PROD (EQL t (())) (()) t) t ) (()) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (EQL 2 (PROD (EQL 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (EQL nil (PROD (EQL nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (EQL t (PROD (EQL t ((()))) ((())) t) t ) ((())) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (EQL 2 (PROD (EQL 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (EQL nil (PROD (EQL nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (EQL t (PROD (EQL t (((())))) (((()))) t) t ) (((()))) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 'A) 'A 1) 1 ) 'A 1)
(PROD (EQL 2 (PROD (EQL 2 'A) 'A 2) 2 ) 'A 2)
(PROD (EQL nil (PROD (EQL nil 'A) 'A nil) nil ) 'A nil)
(PROD (EQL t (PROD (EQL t 'A) 'A t) t ) 'A t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 'B) 'B 1) 1 ) 'B 1)
(PROD (EQL 2 (PROD (EQL 2 'B) 'B 2) 2 ) 'B 2)
(PROD (EQL nil (PROD (EQL nil 'B) 'B nil) nil ) 'B nil)
(PROD (EQL t (PROD (EQL t 'B) 'B t) t ) 'B t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 'C) 'C 1) 1 ) 'C 1)
(PROD (EQL 2 (PROD (EQL 2 'C) 'C 2) 2 ) 'C 2)
(PROD (EQL nil (PROD (EQL nil 'C) 'C nil) nil ) 'C nil)
(PROD (EQL t (PROD (EQL t 'C) 'C t) t ) 'C t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 '1) '1 1) 1 ) '1 1)
(PROD (EQL 2 (PROD (EQL 2 '1) '1 2) 2 ) '1 2)
(PROD (EQL nil (PROD (EQL nil '1) '1 nil) nil ) '1 nil)
(PROD (EQL t (PROD (EQL t '1) '1 t) t ) '1 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 '2) '2 1) 1 ) '2 1)
(PROD (EQL 2 (PROD (EQL 2 '2) '2 2) 2 ) '2 2)
(PROD (EQL nil (PROD (EQL nil '2) '2 nil) nil ) '2 nil)
(PROD (EQL t (PROD (EQL t '2) '2 t) t ) '2 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 '3) '3 1) 1 ) '3 1)
(PROD (EQL 2 (PROD (EQL 2 '3) '3 2) 2 ) '3 2)
(PROD (EQL nil (PROD (EQL nil '3) '3 nil) nil ) '3 nil)
(PROD (EQL t (PROD (EQL t '3) '3 t) t ) '3 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 '()) '() 1) 1 ) '() 1)
(PROD (EQL 2 (PROD (EQL 2 '()) '() 2) 2 ) '() 2)
(PROD (EQL nil (PROD (EQL nil '()) '() nil) nil ) '() nil)
(PROD (EQL t (PROD (EQL t '()) '() t) t ) '() t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (EQL 2 (PROD (EQL 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (EQL nil (PROD (EQL nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (EQL t (PROD (EQL t '(())) '(()) t) t ) '(()) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (EQL 2 (PROD (EQL 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (EQL nil (PROD (EQL nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (EQL t (PROD (EQL t '((()))) '((())) t) t ) '((())) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (EQL 2 (PROD (EQL 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (EQL nil (PROD (EQL nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (EQL t (PROD (EQL t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (EQL 2 (PROD (EQL 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (EQL nil (PROD (EQL nil ,A) ,A nil) nil ) ,A nil)
(PROD (EQL t (PROD (EQL t ,A) ,A t) t ) ,A t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (EQL 2 (PROD (EQL 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (EQL nil (PROD (EQL nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (EQL t (PROD (EQL t ,1) ,1 t) t ) ,1 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (EQL 2 (PROD (EQL 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (EQL nil (PROD (EQL nil ,()) ,() nil) nil ) ,() nil)
(PROD (EQL t (PROD (EQL t ,()) ,() t) t ) ,() t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (EQL 2 (PROD (EQL 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (EQL nil (PROD (EQL nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (EQL t (PROD (EQL t ,(())) ,(()) t) t ) ,(()) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (EQL 2 (PROD (EQL 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (EQL nil (PROD (EQL nil `'A) `'A nil) nil ) `'A nil)
(PROD (EQL t (PROD (EQL t `'A) `'A t) t ) `'A t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (EQL 2 (PROD (EQL 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (EQL nil (PROD (EQL nil `'B) `'B nil) nil ) `'B nil)
(PROD (EQL t (PROD (EQL t `'B) `'B t) t ) `'B t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (EQL 2 (PROD (EQL 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (EQL nil (PROD (EQL nil `'C) `'C nil) nil ) `'C nil)
(PROD (EQL t (PROD (EQL t `'C) `'C t) t ) `'C t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (EQL 2 (PROD (EQL 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (EQL nil (PROD (EQL nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (EQL t (PROD (EQL t `'1) `'1 t) t ) `'1 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (EQL 2 (PROD (EQL 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (EQL nil (PROD (EQL nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (EQL t (PROD (EQL t `'2) `'2 t) t ) `'2 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (EQL 2 (PROD (EQL 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (EQL nil (PROD (EQL nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (EQL t (PROD (EQL t `'3) `'3 t) t ) `'3 t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (EQL 2 (PROD (EQL 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (EQL nil (PROD (EQL nil `'()) `'() nil) nil ) `'() nil)
(PROD (EQL t (PROD (EQL t `'()) `'() t) t ) `'() t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (EQL 2 (PROD (EQL 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (EQL nil (PROD (EQL nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (EQL t (PROD (EQL t `'(())) `'(()) t) t ) `'(()) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (EQL 2 (PROD (EQL 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (EQL nil (PROD (EQL nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (EQL t (PROD (EQL t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (EQL 1 (PROD (EQL 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (EQL 2 (PROD (EQL 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (EQL nil (PROD (EQL nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (EQL t (PROD (EQL t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (EQL (cons t t) (PROD (EQL (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (EQL (cons nil t) (PROD (EQL (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (EQL (cons nil nil) (PROD (EQL (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (EQL (cons 0 0) (PROD (EQL (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (EQL (cons 1 1) (PROD (EQL (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (EQL (list 1 2 3) (PROD (EQL (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (EQL (list (cons 1 1 ) ) (PROD (EQL (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 T) T 1) 1 ) T 1)
(PROD (EVAL 2 (PROD (EVAL 2 T) T 2) 2 ) T 2)
(PROD (EVAL nil (PROD (EVAL nil T) T nil) nil ) T nil)
(PROD (EVAL t (PROD (EVAL t T) T t) t ) T t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (EVAL 2 (PROD (EVAL 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (EVAL nil (PROD (EVAL nil NIL) NIL nil) nil ) NIL nil)
(PROD (EVAL t (PROD (EVAL t NIL) NIL t) t ) NIL t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 A) A 1) 1 ) A 1)
(PROD (EVAL 2 (PROD (EVAL 2 A) A 2) 2 ) A 2)
(PROD (EVAL nil (PROD (EVAL nil A) A nil) nil ) A nil)
(PROD (EVAL t (PROD (EVAL t A) A t) t ) A t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 B) B 1) 1 ) B 1)
(PROD (EVAL 2 (PROD (EVAL 2 B) B 2) 2 ) B 2)
(PROD (EVAL nil (PROD (EVAL nil B) B nil) nil ) B nil)
(PROD (EVAL t (PROD (EVAL t B) B t) t ) B t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 C) C 1) 1 ) C 1)
(PROD (EVAL 2 (PROD (EVAL 2 C) C 2) 2 ) C 2)
(PROD (EVAL nil (PROD (EVAL nil C) C nil) nil ) C nil)
(PROD (EVAL t (PROD (EVAL t C) C t) t ) C t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 1) 1 1) 1 ) 1 1)
(PROD (EVAL 2 (PROD (EVAL 2 1) 1 2) 2 ) 1 2)
(PROD (EVAL nil (PROD (EVAL nil 1) 1 nil) nil ) 1 nil)
(PROD (EVAL t (PROD (EVAL t 1) 1 t) t ) 1 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 2) 2 1) 1 ) 2 1)
(PROD (EVAL 2 (PROD (EVAL 2 2) 2 2) 2 ) 2 2)
(PROD (EVAL nil (PROD (EVAL nil 2) 2 nil) nil ) 2 nil)
(PROD (EVAL t (PROD (EVAL t 2) 2 t) t ) 2 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 3) 3 1) 1 ) 3 1)
(PROD (EVAL 2 (PROD (EVAL 2 3) 3 2) 2 ) 3 2)
(PROD (EVAL nil (PROD (EVAL nil 3) 3 nil) nil ) 3 nil)
(PROD (EVAL t (PROD (EVAL t 3) 3 t) t ) 3 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 ()) () 1) 1 ) () 1)
(PROD (EVAL 2 (PROD (EVAL 2 ()) () 2) 2 ) () 2)
(PROD (EVAL nil (PROD (EVAL nil ()) () nil) nil ) () nil)
(PROD (EVAL t (PROD (EVAL t ()) () t) t ) () t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 (())) (()) 1) 1 ) (()) 1)
(PROD (EVAL 2 (PROD (EVAL 2 (())) (()) 2) 2 ) (()) 2)
(PROD (EVAL nil (PROD (EVAL nil (())) (()) nil) nil ) (()) nil)
(PROD (EVAL t (PROD (EVAL t (())) (()) t) t ) (()) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (EVAL 2 (PROD (EVAL 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (EVAL nil (PROD (EVAL nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (EVAL t (PROD (EVAL t ((()))) ((())) t) t ) ((())) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (EVAL 2 (PROD (EVAL 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (EVAL nil (PROD (EVAL nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (EVAL t (PROD (EVAL t (((())))) (((()))) t) t ) (((()))) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 'A) 'A 1) 1 ) 'A 1)
(PROD (EVAL 2 (PROD (EVAL 2 'A) 'A 2) 2 ) 'A 2)
(PROD (EVAL nil (PROD (EVAL nil 'A) 'A nil) nil ) 'A nil)
(PROD (EVAL t (PROD (EVAL t 'A) 'A t) t ) 'A t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 'B) 'B 1) 1 ) 'B 1)
(PROD (EVAL 2 (PROD (EVAL 2 'B) 'B 2) 2 ) 'B 2)
(PROD (EVAL nil (PROD (EVAL nil 'B) 'B nil) nil ) 'B nil)
(PROD (EVAL t (PROD (EVAL t 'B) 'B t) t ) 'B t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 'C) 'C 1) 1 ) 'C 1)
(PROD (EVAL 2 (PROD (EVAL 2 'C) 'C 2) 2 ) 'C 2)
(PROD (EVAL nil (PROD (EVAL nil 'C) 'C nil) nil ) 'C nil)
(PROD (EVAL t (PROD (EVAL t 'C) 'C t) t ) 'C t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 '1) '1 1) 1 ) '1 1)
(PROD (EVAL 2 (PROD (EVAL 2 '1) '1 2) 2 ) '1 2)
(PROD (EVAL nil (PROD (EVAL nil '1) '1 nil) nil ) '1 nil)
(PROD (EVAL t (PROD (EVAL t '1) '1 t) t ) '1 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 '2) '2 1) 1 ) '2 1)
(PROD (EVAL 2 (PROD (EVAL 2 '2) '2 2) 2 ) '2 2)
(PROD (EVAL nil (PROD (EVAL nil '2) '2 nil) nil ) '2 nil)
(PROD (EVAL t (PROD (EVAL t '2) '2 t) t ) '2 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 '3) '3 1) 1 ) '3 1)
(PROD (EVAL 2 (PROD (EVAL 2 '3) '3 2) 2 ) '3 2)
(PROD (EVAL nil (PROD (EVAL nil '3) '3 nil) nil ) '3 nil)
(PROD (EVAL t (PROD (EVAL t '3) '3 t) t ) '3 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 '()) '() 1) 1 ) '() 1)
(PROD (EVAL 2 (PROD (EVAL 2 '()) '() 2) 2 ) '() 2)
(PROD (EVAL nil (PROD (EVAL nil '()) '() nil) nil ) '() nil)
(PROD (EVAL t (PROD (EVAL t '()) '() t) t ) '() t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (EVAL 2 (PROD (EVAL 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (EVAL nil (PROD (EVAL nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (EVAL t (PROD (EVAL t '(())) '(()) t) t ) '(()) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (EVAL 2 (PROD (EVAL 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (EVAL nil (PROD (EVAL nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (EVAL t (PROD (EVAL t '((()))) '((())) t) t ) '((())) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (EVAL 2 (PROD (EVAL 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (EVAL nil (PROD (EVAL nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (EVAL t (PROD (EVAL t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (EVAL 2 (PROD (EVAL 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (EVAL nil (PROD (EVAL nil ,A) ,A nil) nil ) ,A nil)
(PROD (EVAL t (PROD (EVAL t ,A) ,A t) t ) ,A t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (EVAL 2 (PROD (EVAL 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (EVAL nil (PROD (EVAL nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (EVAL t (PROD (EVAL t ,1) ,1 t) t ) ,1 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (EVAL 2 (PROD (EVAL 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (EVAL nil (PROD (EVAL nil ,()) ,() nil) nil ) ,() nil)
(PROD (EVAL t (PROD (EVAL t ,()) ,() t) t ) ,() t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (EVAL 2 (PROD (EVAL 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (EVAL nil (PROD (EVAL nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (EVAL t (PROD (EVAL t ,(())) ,(()) t) t ) ,(()) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (EVAL nil (PROD (EVAL nil `'A) `'A nil) nil ) `'A nil)
(PROD (EVAL t (PROD (EVAL t `'A) `'A t) t ) `'A t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (EVAL nil (PROD (EVAL nil `'B) `'B nil) nil ) `'B nil)
(PROD (EVAL t (PROD (EVAL t `'B) `'B t) t ) `'B t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (EVAL nil (PROD (EVAL nil `'C) `'C nil) nil ) `'C nil)
(PROD (EVAL t (PROD (EVAL t `'C) `'C t) t ) `'C t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (EVAL nil (PROD (EVAL nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (EVAL t (PROD (EVAL t `'1) `'1 t) t ) `'1 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (EVAL nil (PROD (EVAL nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (EVAL t (PROD (EVAL t `'2) `'2 t) t ) `'2 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (EVAL nil (PROD (EVAL nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (EVAL t (PROD (EVAL t `'3) `'3 t) t ) `'3 t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (EVAL nil (PROD (EVAL nil `'()) `'() nil) nil ) `'() nil)
(PROD (EVAL t (PROD (EVAL t `'()) `'() t) t ) `'() t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (EVAL nil (PROD (EVAL nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (EVAL t (PROD (EVAL t `'(())) `'(()) t) t ) `'(()) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (EVAL nil (PROD (EVAL nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (EVAL t (PROD (EVAL t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (EVAL 1 (PROD (EVAL 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (EVAL 2 (PROD (EVAL 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (EVAL nil (PROD (EVAL nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (EVAL t (PROD (EVAL t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (EVAL (cons t t) (PROD (EVAL (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (EVAL (cons nil t) (PROD (EVAL (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (EVAL (cons nil nil) (PROD (EVAL (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (EVAL (cons 0 0) (PROD (EVAL (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (EVAL (cons 1 1) (PROD (EVAL (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (EVAL (list 1 2 3) (PROD (EVAL (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (EVAL (list (cons 1 1 ) ) (PROD (EVAL (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 T) T 1) 1 ) T 1)
(PROD (IF 2 (PROD (IF 2 T) T 2) 2 ) T 2)
(PROD (IF nil (PROD (IF nil T) T nil) nil ) T nil)
(PROD (IF t (PROD (IF t T) T t) t ) T t)
(PROD (IF (cons t t) (PROD (IF (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (IF 2 (PROD (IF 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (IF nil (PROD (IF nil NIL) NIL nil) nil ) NIL nil)
(PROD (IF t (PROD (IF t NIL) NIL t) t ) NIL t)
(PROD (IF (cons t t) (PROD (IF (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 A) A 1) 1 ) A 1)
(PROD (IF 2 (PROD (IF 2 A) A 2) 2 ) A 2)
(PROD (IF nil (PROD (IF nil A) A nil) nil ) A nil)
(PROD (IF t (PROD (IF t A) A t) t ) A t)
(PROD (IF (cons t t) (PROD (IF (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 B) B 1) 1 ) B 1)
(PROD (IF 2 (PROD (IF 2 B) B 2) 2 ) B 2)
(PROD (IF nil (PROD (IF nil B) B nil) nil ) B nil)
(PROD (IF t (PROD (IF t B) B t) t ) B t)
(PROD (IF (cons t t) (PROD (IF (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 C) C 1) 1 ) C 1)
(PROD (IF 2 (PROD (IF 2 C) C 2) 2 ) C 2)
(PROD (IF nil (PROD (IF nil C) C nil) nil ) C nil)
(PROD (IF t (PROD (IF t C) C t) t ) C t)
(PROD (IF (cons t t) (PROD (IF (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 1) 1 1) 1 ) 1 1)
(PROD (IF 2 (PROD (IF 2 1) 1 2) 2 ) 1 2)
(PROD (IF nil (PROD (IF nil 1) 1 nil) nil ) 1 nil)
(PROD (IF t (PROD (IF t 1) 1 t) t ) 1 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 2) 2 1) 1 ) 2 1)
(PROD (IF 2 (PROD (IF 2 2) 2 2) 2 ) 2 2)
(PROD (IF nil (PROD (IF nil 2) 2 nil) nil ) 2 nil)
(PROD (IF t (PROD (IF t 2) 2 t) t ) 2 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 3) 3 1) 1 ) 3 1)
(PROD (IF 2 (PROD (IF 2 3) 3 2) 2 ) 3 2)
(PROD (IF nil (PROD (IF nil 3) 3 nil) nil ) 3 nil)
(PROD (IF t (PROD (IF t 3) 3 t) t ) 3 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 ()) () 1) 1 ) () 1)
(PROD (IF 2 (PROD (IF 2 ()) () 2) 2 ) () 2)
(PROD (IF nil (PROD (IF nil ()) () nil) nil ) () nil)
(PROD (IF t (PROD (IF t ()) () t) t ) () t)
(PROD (IF (cons t t) (PROD (IF (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 (())) (()) 1) 1 ) (()) 1)
(PROD (IF 2 (PROD (IF 2 (())) (()) 2) 2 ) (()) 2)
(PROD (IF nil (PROD (IF nil (())) (()) nil) nil ) (()) nil)
(PROD (IF t (PROD (IF t (())) (()) t) t ) (()) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (IF 2 (PROD (IF 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (IF nil (PROD (IF nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (IF t (PROD (IF t ((()))) ((())) t) t ) ((())) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (IF 2 (PROD (IF 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (IF nil (PROD (IF nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (IF t (PROD (IF t (((())))) (((()))) t) t ) (((()))) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 'A) 'A 1) 1 ) 'A 1)
(PROD (IF 2 (PROD (IF 2 'A) 'A 2) 2 ) 'A 2)
(PROD (IF nil (PROD (IF nil 'A) 'A nil) nil ) 'A nil)
(PROD (IF t (PROD (IF t 'A) 'A t) t ) 'A t)
(PROD (IF (cons t t) (PROD (IF (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 'B) 'B 1) 1 ) 'B 1)
(PROD (IF 2 (PROD (IF 2 'B) 'B 2) 2 ) 'B 2)
(PROD (IF nil (PROD (IF nil 'B) 'B nil) nil ) 'B nil)
(PROD (IF t (PROD (IF t 'B) 'B t) t ) 'B t)
(PROD (IF (cons t t) (PROD (IF (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 'C) 'C 1) 1 ) 'C 1)
(PROD (IF 2 (PROD (IF 2 'C) 'C 2) 2 ) 'C 2)
(PROD (IF nil (PROD (IF nil 'C) 'C nil) nil ) 'C nil)
(PROD (IF t (PROD (IF t 'C) 'C t) t ) 'C t)
(PROD (IF (cons t t) (PROD (IF (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 '1) '1 1) 1 ) '1 1)
(PROD (IF 2 (PROD (IF 2 '1) '1 2) 2 ) '1 2)
(PROD (IF nil (PROD (IF nil '1) '1 nil) nil ) '1 nil)
(PROD (IF t (PROD (IF t '1) '1 t) t ) '1 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 '2) '2 1) 1 ) '2 1)
(PROD (IF 2 (PROD (IF 2 '2) '2 2) 2 ) '2 2)
(PROD (IF nil (PROD (IF nil '2) '2 nil) nil ) '2 nil)
(PROD (IF t (PROD (IF t '2) '2 t) t ) '2 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 '3) '3 1) 1 ) '3 1)
(PROD (IF 2 (PROD (IF 2 '3) '3 2) 2 ) '3 2)
(PROD (IF nil (PROD (IF nil '3) '3 nil) nil ) '3 nil)
(PROD (IF t (PROD (IF t '3) '3 t) t ) '3 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 '()) '() 1) 1 ) '() 1)
(PROD (IF 2 (PROD (IF 2 '()) '() 2) 2 ) '() 2)
(PROD (IF nil (PROD (IF nil '()) '() nil) nil ) '() nil)
(PROD (IF t (PROD (IF t '()) '() t) t ) '() t)
(PROD (IF (cons t t) (PROD (IF (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (IF 2 (PROD (IF 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (IF nil (PROD (IF nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (IF t (PROD (IF t '(())) '(()) t) t ) '(()) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (IF 2 (PROD (IF 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (IF nil (PROD (IF nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (IF t (PROD (IF t '((()))) '((())) t) t ) '((())) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (IF 2 (PROD (IF 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (IF nil (PROD (IF nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (IF t (PROD (IF t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (IF 2 (PROD (IF 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (IF nil (PROD (IF nil ,A) ,A nil) nil ) ,A nil)
(PROD (IF t (PROD (IF t ,A) ,A t) t ) ,A t)
(PROD (IF (cons t t) (PROD (IF (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (IF 2 (PROD (IF 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (IF nil (PROD (IF nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (IF t (PROD (IF t ,1) ,1 t) t ) ,1 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (IF 2 (PROD (IF 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (IF nil (PROD (IF nil ,()) ,() nil) nil ) ,() nil)
(PROD (IF t (PROD (IF t ,()) ,() t) t ) ,() t)
(PROD (IF (cons t t) (PROD (IF (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (IF 2 (PROD (IF 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (IF nil (PROD (IF nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (IF t (PROD (IF t ,(())) ,(()) t) t ) ,(()) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (IF 2 (PROD (IF 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (IF nil (PROD (IF nil `'A) `'A nil) nil ) `'A nil)
(PROD (IF t (PROD (IF t `'A) `'A t) t ) `'A t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (IF 2 (PROD (IF 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (IF nil (PROD (IF nil `'B) `'B nil) nil ) `'B nil)
(PROD (IF t (PROD (IF t `'B) `'B t) t ) `'B t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (IF 2 (PROD (IF 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (IF nil (PROD (IF nil `'C) `'C nil) nil ) `'C nil)
(PROD (IF t (PROD (IF t `'C) `'C t) t ) `'C t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (IF 2 (PROD (IF 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (IF nil (PROD (IF nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (IF t (PROD (IF t `'1) `'1 t) t ) `'1 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (IF 2 (PROD (IF 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (IF nil (PROD (IF nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (IF t (PROD (IF t `'2) `'2 t) t ) `'2 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (IF 2 (PROD (IF 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (IF nil (PROD (IF nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (IF t (PROD (IF t `'3) `'3 t) t ) `'3 t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (IF 2 (PROD (IF 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (IF nil (PROD (IF nil `'()) `'() nil) nil ) `'() nil)
(PROD (IF t (PROD (IF t `'()) `'() t) t ) `'() t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (IF 2 (PROD (IF 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (IF nil (PROD (IF nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (IF t (PROD (IF t `'(())) `'(()) t) t ) `'(()) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (IF 2 (PROD (IF 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (IF nil (PROD (IF nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (IF t (PROD (IF t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (IF 1 (PROD (IF 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (IF 2 (PROD (IF 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (IF nil (PROD (IF nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (IF t (PROD (IF t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (IF (cons t t) (PROD (IF (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (IF (cons nil t) (PROD (IF (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (IF (cons nil nil) (PROD (IF (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (IF (cons 0 0) (PROD (IF (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (IF (cons 1 1) (PROD (IF (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (IF (list 1 2 3) (PROD (IF (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (IF (list (cons 1 1 ) ) (PROD (IF (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 T) T 1) 1 ) T 1)
(PROD (LABELS 2 (PROD (LABELS 2 T) T 2) 2 ) T 2)
(PROD (LABELS nil (PROD (LABELS nil T) T nil) nil ) T nil)
(PROD (LABELS t (PROD (LABELS t T) T t) t ) T t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (LABELS 2 (PROD (LABELS 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (LABELS nil (PROD (LABELS nil NIL) NIL nil) nil ) NIL nil)
(PROD (LABELS t (PROD (LABELS t NIL) NIL t) t ) NIL t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 A) A 1) 1 ) A 1)
(PROD (LABELS 2 (PROD (LABELS 2 A) A 2) 2 ) A 2)
(PROD (LABELS nil (PROD (LABELS nil A) A nil) nil ) A nil)
(PROD (LABELS t (PROD (LABELS t A) A t) t ) A t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 B) B 1) 1 ) B 1)
(PROD (LABELS 2 (PROD (LABELS 2 B) B 2) 2 ) B 2)
(PROD (LABELS nil (PROD (LABELS nil B) B nil) nil ) B nil)
(PROD (LABELS t (PROD (LABELS t B) B t) t ) B t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 C) C 1) 1 ) C 1)
(PROD (LABELS 2 (PROD (LABELS 2 C) C 2) 2 ) C 2)
(PROD (LABELS nil (PROD (LABELS nil C) C nil) nil ) C nil)
(PROD (LABELS t (PROD (LABELS t C) C t) t ) C t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 1) 1 1) 1 ) 1 1)
(PROD (LABELS 2 (PROD (LABELS 2 1) 1 2) 2 ) 1 2)
(PROD (LABELS nil (PROD (LABELS nil 1) 1 nil) nil ) 1 nil)
(PROD (LABELS t (PROD (LABELS t 1) 1 t) t ) 1 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 2) 2 1) 1 ) 2 1)
(PROD (LABELS 2 (PROD (LABELS 2 2) 2 2) 2 ) 2 2)
(PROD (LABELS nil (PROD (LABELS nil 2) 2 nil) nil ) 2 nil)
(PROD (LABELS t (PROD (LABELS t 2) 2 t) t ) 2 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 3) 3 1) 1 ) 3 1)
(PROD (LABELS 2 (PROD (LABELS 2 3) 3 2) 2 ) 3 2)
(PROD (LABELS nil (PROD (LABELS nil 3) 3 nil) nil ) 3 nil)
(PROD (LABELS t (PROD (LABELS t 3) 3 t) t ) 3 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 ()) () 1) 1 ) () 1)
(PROD (LABELS 2 (PROD (LABELS 2 ()) () 2) 2 ) () 2)
(PROD (LABELS nil (PROD (LABELS nil ()) () nil) nil ) () nil)
(PROD (LABELS t (PROD (LABELS t ()) () t) t ) () t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 (())) (()) 1) 1 ) (()) 1)
(PROD (LABELS 2 (PROD (LABELS 2 (())) (()) 2) 2 ) (()) 2)
(PROD (LABELS nil (PROD (LABELS nil (())) (()) nil) nil ) (()) nil)
(PROD (LABELS t (PROD (LABELS t (())) (()) t) t ) (()) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (LABELS 2 (PROD (LABELS 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (LABELS nil (PROD (LABELS nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (LABELS t (PROD (LABELS t ((()))) ((())) t) t ) ((())) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (LABELS 2 (PROD (LABELS 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (LABELS nil (PROD (LABELS nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (LABELS t (PROD (LABELS t (((())))) (((()))) t) t ) (((()))) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 'A) 'A 1) 1 ) 'A 1)
(PROD (LABELS 2 (PROD (LABELS 2 'A) 'A 2) 2 ) 'A 2)
(PROD (LABELS nil (PROD (LABELS nil 'A) 'A nil) nil ) 'A nil)
(PROD (LABELS t (PROD (LABELS t 'A) 'A t) t ) 'A t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 'B) 'B 1) 1 ) 'B 1)
(PROD (LABELS 2 (PROD (LABELS 2 'B) 'B 2) 2 ) 'B 2)
(PROD (LABELS nil (PROD (LABELS nil 'B) 'B nil) nil ) 'B nil)
(PROD (LABELS t (PROD (LABELS t 'B) 'B t) t ) 'B t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 'C) 'C 1) 1 ) 'C 1)
(PROD (LABELS 2 (PROD (LABELS 2 'C) 'C 2) 2 ) 'C 2)
(PROD (LABELS nil (PROD (LABELS nil 'C) 'C nil) nil ) 'C nil)
(PROD (LABELS t (PROD (LABELS t 'C) 'C t) t ) 'C t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 '1) '1 1) 1 ) '1 1)
(PROD (LABELS 2 (PROD (LABELS 2 '1) '1 2) 2 ) '1 2)
(PROD (LABELS nil (PROD (LABELS nil '1) '1 nil) nil ) '1 nil)
(PROD (LABELS t (PROD (LABELS t '1) '1 t) t ) '1 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 '2) '2 1) 1 ) '2 1)
(PROD (LABELS 2 (PROD (LABELS 2 '2) '2 2) 2 ) '2 2)
(PROD (LABELS nil (PROD (LABELS nil '2) '2 nil) nil ) '2 nil)
(PROD (LABELS t (PROD (LABELS t '2) '2 t) t ) '2 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 '3) '3 1) 1 ) '3 1)
(PROD (LABELS 2 (PROD (LABELS 2 '3) '3 2) 2 ) '3 2)
(PROD (LABELS nil (PROD (LABELS nil '3) '3 nil) nil ) '3 nil)
(PROD (LABELS t (PROD (LABELS t '3) '3 t) t ) '3 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 '()) '() 1) 1 ) '() 1)
(PROD (LABELS 2 (PROD (LABELS 2 '()) '() 2) 2 ) '() 2)
(PROD (LABELS nil (PROD (LABELS nil '()) '() nil) nil ) '() nil)
(PROD (LABELS t (PROD (LABELS t '()) '() t) t ) '() t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (LABELS 2 (PROD (LABELS 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (LABELS nil (PROD (LABELS nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (LABELS t (PROD (LABELS t '(())) '(()) t) t ) '(()) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (LABELS 2 (PROD (LABELS 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (LABELS nil (PROD (LABELS nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (LABELS t (PROD (LABELS t '((()))) '((())) t) t ) '((())) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (LABELS 2 (PROD (LABELS 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (LABELS nil (PROD (LABELS nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (LABELS t (PROD (LABELS t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (LABELS 2 (PROD (LABELS 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (LABELS nil (PROD (LABELS nil ,A) ,A nil) nil ) ,A nil)
(PROD (LABELS t (PROD (LABELS t ,A) ,A t) t ) ,A t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (LABELS 2 (PROD (LABELS 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (LABELS nil (PROD (LABELS nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (LABELS t (PROD (LABELS t ,1) ,1 t) t ) ,1 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (LABELS 2 (PROD (LABELS 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (LABELS nil (PROD (LABELS nil ,()) ,() nil) nil ) ,() nil)
(PROD (LABELS t (PROD (LABELS t ,()) ,() t) t ) ,() t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (LABELS 2 (PROD (LABELS 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (LABELS nil (PROD (LABELS nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (LABELS t (PROD (LABELS t ,(())) ,(()) t) t ) ,(()) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (LABELS nil (PROD (LABELS nil `'A) `'A nil) nil ) `'A nil)
(PROD (LABELS t (PROD (LABELS t `'A) `'A t) t ) `'A t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (LABELS nil (PROD (LABELS nil `'B) `'B nil) nil ) `'B nil)
(PROD (LABELS t (PROD (LABELS t `'B) `'B t) t ) `'B t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (LABELS nil (PROD (LABELS nil `'C) `'C nil) nil ) `'C nil)
(PROD (LABELS t (PROD (LABELS t `'C) `'C t) t ) `'C t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (LABELS nil (PROD (LABELS nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (LABELS t (PROD (LABELS t `'1) `'1 t) t ) `'1 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (LABELS nil (PROD (LABELS nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (LABELS t (PROD (LABELS t `'2) `'2 t) t ) `'2 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (LABELS nil (PROD (LABELS nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (LABELS t (PROD (LABELS t `'3) `'3 t) t ) `'3 t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (LABELS nil (PROD (LABELS nil `'()) `'() nil) nil ) `'() nil)
(PROD (LABELS t (PROD (LABELS t `'()) `'() t) t ) `'() t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (LABELS nil (PROD (LABELS nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (LABELS t (PROD (LABELS t `'(())) `'(()) t) t ) `'(()) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (LABELS nil (PROD (LABELS nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (LABELS t (PROD (LABELS t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (LABELS 1 (PROD (LABELS 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (LABELS 2 (PROD (LABELS 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (LABELS nil (PROD (LABELS nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (LABELS t (PROD (LABELS t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (LABELS (cons t t) (PROD (LABELS (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (LABELS (cons nil t) (PROD (LABELS (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (LABELS (cons nil nil) (PROD (LABELS (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (LABELS (cons 0 0) (PROD (LABELS (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (LABELS (cons 1 1) (PROD (LABELS (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (LABELS (list 1 2 3) (PROD (LABELS (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (LABELS (list (cons 1 1 ) ) (PROD (LABELS (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 T) T 1) 1 ) T 1)
(PROD (LET 2 (PROD (LET 2 T) T 2) 2 ) T 2)
(PROD (LET nil (PROD (LET nil T) T nil) nil ) T nil)
(PROD (LET t (PROD (LET t T) T t) t ) T t)
(PROD (LET (cons t t) (PROD (LET (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (LET 2 (PROD (LET 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (LET nil (PROD (LET nil NIL) NIL nil) nil ) NIL nil)
(PROD (LET t (PROD (LET t NIL) NIL t) t ) NIL t)
(PROD (LET (cons t t) (PROD (LET (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 A) A 1) 1 ) A 1)
(PROD (LET 2 (PROD (LET 2 A) A 2) 2 ) A 2)
(PROD (LET nil (PROD (LET nil A) A nil) nil ) A nil)
(PROD (LET t (PROD (LET t A) A t) t ) A t)
(PROD (LET (cons t t) (PROD (LET (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 B) B 1) 1 ) B 1)
(PROD (LET 2 (PROD (LET 2 B) B 2) 2 ) B 2)
(PROD (LET nil (PROD (LET nil B) B nil) nil ) B nil)
(PROD (LET t (PROD (LET t B) B t) t ) B t)
(PROD (LET (cons t t) (PROD (LET (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 C) C 1) 1 ) C 1)
(PROD (LET 2 (PROD (LET 2 C) C 2) 2 ) C 2)
(PROD (LET nil (PROD (LET nil C) C nil) nil ) C nil)
(PROD (LET t (PROD (LET t C) C t) t ) C t)
(PROD (LET (cons t t) (PROD (LET (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 1) 1 1) 1 ) 1 1)
(PROD (LET 2 (PROD (LET 2 1) 1 2) 2 ) 1 2)
(PROD (LET nil (PROD (LET nil 1) 1 nil) nil ) 1 nil)
(PROD (LET t (PROD (LET t 1) 1 t) t ) 1 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 2) 2 1) 1 ) 2 1)
(PROD (LET 2 (PROD (LET 2 2) 2 2) 2 ) 2 2)
(PROD (LET nil (PROD (LET nil 2) 2 nil) nil ) 2 nil)
(PROD (LET t (PROD (LET t 2) 2 t) t ) 2 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 3) 3 1) 1 ) 3 1)
(PROD (LET 2 (PROD (LET 2 3) 3 2) 2 ) 3 2)
(PROD (LET nil (PROD (LET nil 3) 3 nil) nil ) 3 nil)
(PROD (LET t (PROD (LET t 3) 3 t) t ) 3 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 ()) () 1) 1 ) () 1)
(PROD (LET 2 (PROD (LET 2 ()) () 2) 2 ) () 2)
(PROD (LET nil (PROD (LET nil ()) () nil) nil ) () nil)
(PROD (LET t (PROD (LET t ()) () t) t ) () t)
(PROD (LET (cons t t) (PROD (LET (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 (())) (()) 1) 1 ) (()) 1)
(PROD (LET 2 (PROD (LET 2 (())) (()) 2) 2 ) (()) 2)
(PROD (LET nil (PROD (LET nil (())) (()) nil) nil ) (()) nil)
(PROD (LET t (PROD (LET t (())) (()) t) t ) (()) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (LET 2 (PROD (LET 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (LET nil (PROD (LET nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (LET t (PROD (LET t ((()))) ((())) t) t ) ((())) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (LET 2 (PROD (LET 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (LET nil (PROD (LET nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (LET t (PROD (LET t (((())))) (((()))) t) t ) (((()))) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 'A) 'A 1) 1 ) 'A 1)
(PROD (LET 2 (PROD (LET 2 'A) 'A 2) 2 ) 'A 2)
(PROD (LET nil (PROD (LET nil 'A) 'A nil) nil ) 'A nil)
(PROD (LET t (PROD (LET t 'A) 'A t) t ) 'A t)
(PROD (LET (cons t t) (PROD (LET (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 'B) 'B 1) 1 ) 'B 1)
(PROD (LET 2 (PROD (LET 2 'B) 'B 2) 2 ) 'B 2)
(PROD (LET nil (PROD (LET nil 'B) 'B nil) nil ) 'B nil)
(PROD (LET t (PROD (LET t 'B) 'B t) t ) 'B t)
(PROD (LET (cons t t) (PROD (LET (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 'C) 'C 1) 1 ) 'C 1)
(PROD (LET 2 (PROD (LET 2 'C) 'C 2) 2 ) 'C 2)
(PROD (LET nil (PROD (LET nil 'C) 'C nil) nil ) 'C nil)
(PROD (LET t (PROD (LET t 'C) 'C t) t ) 'C t)
(PROD (LET (cons t t) (PROD (LET (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 '1) '1 1) 1 ) '1 1)
(PROD (LET 2 (PROD (LET 2 '1) '1 2) 2 ) '1 2)
(PROD (LET nil (PROD (LET nil '1) '1 nil) nil ) '1 nil)
(PROD (LET t (PROD (LET t '1) '1 t) t ) '1 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 '2) '2 1) 1 ) '2 1)
(PROD (LET 2 (PROD (LET 2 '2) '2 2) 2 ) '2 2)
(PROD (LET nil (PROD (LET nil '2) '2 nil) nil ) '2 nil)
(PROD (LET t (PROD (LET t '2) '2 t) t ) '2 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 '3) '3 1) 1 ) '3 1)
(PROD (LET 2 (PROD (LET 2 '3) '3 2) 2 ) '3 2)
(PROD (LET nil (PROD (LET nil '3) '3 nil) nil ) '3 nil)
(PROD (LET t (PROD (LET t '3) '3 t) t ) '3 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 '()) '() 1) 1 ) '() 1)
(PROD (LET 2 (PROD (LET 2 '()) '() 2) 2 ) '() 2)
(PROD (LET nil (PROD (LET nil '()) '() nil) nil ) '() nil)
(PROD (LET t (PROD (LET t '()) '() t) t ) '() t)
(PROD (LET (cons t t) (PROD (LET (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (LET 2 (PROD (LET 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (LET nil (PROD (LET nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (LET t (PROD (LET t '(())) '(()) t) t ) '(()) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (LET 2 (PROD (LET 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (LET nil (PROD (LET nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (LET t (PROD (LET t '((()))) '((())) t) t ) '((())) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (LET 2 (PROD (LET 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (LET nil (PROD (LET nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (LET t (PROD (LET t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (LET 2 (PROD (LET 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (LET nil (PROD (LET nil ,A) ,A nil) nil ) ,A nil)
(PROD (LET t (PROD (LET t ,A) ,A t) t ) ,A t)
(PROD (LET (cons t t) (PROD (LET (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (LET 2 (PROD (LET 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (LET nil (PROD (LET nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (LET t (PROD (LET t ,1) ,1 t) t ) ,1 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (LET 2 (PROD (LET 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (LET nil (PROD (LET nil ,()) ,() nil) nil ) ,() nil)
(PROD (LET t (PROD (LET t ,()) ,() t) t ) ,() t)
(PROD (LET (cons t t) (PROD (LET (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (LET 2 (PROD (LET 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (LET nil (PROD (LET nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (LET t (PROD (LET t ,(())) ,(()) t) t ) ,(()) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (LET 2 (PROD (LET 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (LET nil (PROD (LET nil `'A) `'A nil) nil ) `'A nil)
(PROD (LET t (PROD (LET t `'A) `'A t) t ) `'A t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (LET 2 (PROD (LET 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (LET nil (PROD (LET nil `'B) `'B nil) nil ) `'B nil)
(PROD (LET t (PROD (LET t `'B) `'B t) t ) `'B t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (LET 2 (PROD (LET 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (LET nil (PROD (LET nil `'C) `'C nil) nil ) `'C nil)
(PROD (LET t (PROD (LET t `'C) `'C t) t ) `'C t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (LET 2 (PROD (LET 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (LET nil (PROD (LET nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (LET t (PROD (LET t `'1) `'1 t) t ) `'1 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (LET 2 (PROD (LET 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (LET nil (PROD (LET nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (LET t (PROD (LET t `'2) `'2 t) t ) `'2 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (LET 2 (PROD (LET 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (LET nil (PROD (LET nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (LET t (PROD (LET t `'3) `'3 t) t ) `'3 t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (LET 2 (PROD (LET 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (LET nil (PROD (LET nil `'()) `'() nil) nil ) `'() nil)
(PROD (LET t (PROD (LET t `'()) `'() t) t ) `'() t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (LET 2 (PROD (LET 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (LET nil (PROD (LET nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (LET t (PROD (LET t `'(())) `'(()) t) t ) `'(()) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (LET 2 (PROD (LET 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (LET nil (PROD (LET nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (LET t (PROD (LET t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (LET 1 (PROD (LET 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (LET 2 (PROD (LET 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (LET nil (PROD (LET nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (LET t (PROD (LET t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (LET (cons t t) (PROD (LET (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (LET (cons nil t) (PROD (LET (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (LET (cons nil nil) (PROD (LET (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (LET (cons 0 0) (PROD (LET (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (LET (cons 1 1) (PROD (LET (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (LET (list 1 2 3) (PROD (LET (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (LET (list (cons 1 1 ) ) (PROD (LET (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 T) T 1) 1 ) T 1)
(PROD (LIST 2 (PROD (LIST 2 T) T 2) 2 ) T 2)
(PROD (LIST nil (PROD (LIST nil T) T nil) nil ) T nil)
(PROD (LIST t (PROD (LIST t T) T t) t ) T t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (LIST 2 (PROD (LIST 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (LIST nil (PROD (LIST nil NIL) NIL nil) nil ) NIL nil)
(PROD (LIST t (PROD (LIST t NIL) NIL t) t ) NIL t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 A) A 1) 1 ) A 1)
(PROD (LIST 2 (PROD (LIST 2 A) A 2) 2 ) A 2)
(PROD (LIST nil (PROD (LIST nil A) A nil) nil ) A nil)
(PROD (LIST t (PROD (LIST t A) A t) t ) A t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 B) B 1) 1 ) B 1)
(PROD (LIST 2 (PROD (LIST 2 B) B 2) 2 ) B 2)
(PROD (LIST nil (PROD (LIST nil B) B nil) nil ) B nil)
(PROD (LIST t (PROD (LIST t B) B t) t ) B t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 C) C 1) 1 ) C 1)
(PROD (LIST 2 (PROD (LIST 2 C) C 2) 2 ) C 2)
(PROD (LIST nil (PROD (LIST nil C) C nil) nil ) C nil)
(PROD (LIST t (PROD (LIST t C) C t) t ) C t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 1) 1 1) 1 ) 1 1)
(PROD (LIST 2 (PROD (LIST 2 1) 1 2) 2 ) 1 2)
(PROD (LIST nil (PROD (LIST nil 1) 1 nil) nil ) 1 nil)
(PROD (LIST t (PROD (LIST t 1) 1 t) t ) 1 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 2) 2 1) 1 ) 2 1)
(PROD (LIST 2 (PROD (LIST 2 2) 2 2) 2 ) 2 2)
(PROD (LIST nil (PROD (LIST nil 2) 2 nil) nil ) 2 nil)
(PROD (LIST t (PROD (LIST t 2) 2 t) t ) 2 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 3) 3 1) 1 ) 3 1)
(PROD (LIST 2 (PROD (LIST 2 3) 3 2) 2 ) 3 2)
(PROD (LIST nil (PROD (LIST nil 3) 3 nil) nil ) 3 nil)
(PROD (LIST t (PROD (LIST t 3) 3 t) t ) 3 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 ()) () 1) 1 ) () 1)
(PROD (LIST 2 (PROD (LIST 2 ()) () 2) 2 ) () 2)
(PROD (LIST nil (PROD (LIST nil ()) () nil) nil ) () nil)
(PROD (LIST t (PROD (LIST t ()) () t) t ) () t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 (())) (()) 1) 1 ) (()) 1)
(PROD (LIST 2 (PROD (LIST 2 (())) (()) 2) 2 ) (()) 2)
(PROD (LIST nil (PROD (LIST nil (())) (()) nil) nil ) (()) nil)
(PROD (LIST t (PROD (LIST t (())) (()) t) t ) (()) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (LIST 2 (PROD (LIST 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (LIST nil (PROD (LIST nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (LIST t (PROD (LIST t ((()))) ((())) t) t ) ((())) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (LIST 2 (PROD (LIST 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (LIST nil (PROD (LIST nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (LIST t (PROD (LIST t (((())))) (((()))) t) t ) (((()))) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 'A) 'A 1) 1 ) 'A 1)
(PROD (LIST 2 (PROD (LIST 2 'A) 'A 2) 2 ) 'A 2)
(PROD (LIST nil (PROD (LIST nil 'A) 'A nil) nil ) 'A nil)
(PROD (LIST t (PROD (LIST t 'A) 'A t) t ) 'A t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 'B) 'B 1) 1 ) 'B 1)
(PROD (LIST 2 (PROD (LIST 2 'B) 'B 2) 2 ) 'B 2)
(PROD (LIST nil (PROD (LIST nil 'B) 'B nil) nil ) 'B nil)
(PROD (LIST t (PROD (LIST t 'B) 'B t) t ) 'B t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 'C) 'C 1) 1 ) 'C 1)
(PROD (LIST 2 (PROD (LIST 2 'C) 'C 2) 2 ) 'C 2)
(PROD (LIST nil (PROD (LIST nil 'C) 'C nil) nil ) 'C nil)
(PROD (LIST t (PROD (LIST t 'C) 'C t) t ) 'C t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 '1) '1 1) 1 ) '1 1)
(PROD (LIST 2 (PROD (LIST 2 '1) '1 2) 2 ) '1 2)
(PROD (LIST nil (PROD (LIST nil '1) '1 nil) nil ) '1 nil)
(PROD (LIST t (PROD (LIST t '1) '1 t) t ) '1 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 '2) '2 1) 1 ) '2 1)
(PROD (LIST 2 (PROD (LIST 2 '2) '2 2) 2 ) '2 2)
(PROD (LIST nil (PROD (LIST nil '2) '2 nil) nil ) '2 nil)
(PROD (LIST t (PROD (LIST t '2) '2 t) t ) '2 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 '3) '3 1) 1 ) '3 1)
(PROD (LIST 2 (PROD (LIST 2 '3) '3 2) 2 ) '3 2)
(PROD (LIST nil (PROD (LIST nil '3) '3 nil) nil ) '3 nil)
(PROD (LIST t (PROD (LIST t '3) '3 t) t ) '3 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 '()) '() 1) 1 ) '() 1)
(PROD (LIST 2 (PROD (LIST 2 '()) '() 2) 2 ) '() 2)
(PROD (LIST nil (PROD (LIST nil '()) '() nil) nil ) '() nil)
(PROD (LIST t (PROD (LIST t '()) '() t) t ) '() t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (LIST 2 (PROD (LIST 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (LIST nil (PROD (LIST nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (LIST t (PROD (LIST t '(())) '(()) t) t ) '(()) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (LIST 2 (PROD (LIST 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (LIST nil (PROD (LIST nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (LIST t (PROD (LIST t '((()))) '((())) t) t ) '((())) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (LIST 2 (PROD (LIST 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (LIST nil (PROD (LIST nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (LIST t (PROD (LIST t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (LIST 2 (PROD (LIST 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (LIST nil (PROD (LIST nil ,A) ,A nil) nil ) ,A nil)
(PROD (LIST t (PROD (LIST t ,A) ,A t) t ) ,A t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (LIST 2 (PROD (LIST 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (LIST nil (PROD (LIST nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (LIST t (PROD (LIST t ,1) ,1 t) t ) ,1 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (LIST 2 (PROD (LIST 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (LIST nil (PROD (LIST nil ,()) ,() nil) nil ) ,() nil)
(PROD (LIST t (PROD (LIST t ,()) ,() t) t ) ,() t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (LIST 2 (PROD (LIST 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (LIST nil (PROD (LIST nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (LIST t (PROD (LIST t ,(())) ,(()) t) t ) ,(()) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (LIST 2 (PROD (LIST 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (LIST nil (PROD (LIST nil `'A) `'A nil) nil ) `'A nil)
(PROD (LIST t (PROD (LIST t `'A) `'A t) t ) `'A t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (LIST 2 (PROD (LIST 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (LIST nil (PROD (LIST nil `'B) `'B nil) nil ) `'B nil)
(PROD (LIST t (PROD (LIST t `'B) `'B t) t ) `'B t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (LIST 2 (PROD (LIST 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (LIST nil (PROD (LIST nil `'C) `'C nil) nil ) `'C nil)
(PROD (LIST t (PROD (LIST t `'C) `'C t) t ) `'C t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (LIST 2 (PROD (LIST 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (LIST nil (PROD (LIST nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (LIST t (PROD (LIST t `'1) `'1 t) t ) `'1 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (LIST 2 (PROD (LIST 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (LIST nil (PROD (LIST nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (LIST t (PROD (LIST t `'2) `'2 t) t ) `'2 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (LIST 2 (PROD (LIST 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (LIST nil (PROD (LIST nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (LIST t (PROD (LIST t `'3) `'3 t) t ) `'3 t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (LIST 2 (PROD (LIST 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (LIST nil (PROD (LIST nil `'()) `'() nil) nil ) `'() nil)
(PROD (LIST t (PROD (LIST t `'()) `'() t) t ) `'() t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (LIST 2 (PROD (LIST 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (LIST nil (PROD (LIST nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (LIST t (PROD (LIST t `'(())) `'(()) t) t ) `'(()) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (LIST 2 (PROD (LIST 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (LIST nil (PROD (LIST nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (LIST t (PROD (LIST t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (LIST 1 (PROD (LIST 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (LIST 2 (PROD (LIST 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (LIST nil (PROD (LIST nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (LIST t (PROD (LIST t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (LIST (cons t t) (PROD (LIST (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (LIST (cons nil t) (PROD (LIST (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (LIST (cons nil nil) (PROD (LIST (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (LIST (cons 0 0) (PROD (LIST (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (LIST (cons 1 1) (PROD (LIST (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (LIST (list 1 2 3) (PROD (LIST (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (LIST (list (cons 1 1 ) ) (PROD (LIST (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 T) T 1) 1 ) T 1)
(PROD (LISTP 2 (PROD (LISTP 2 T) T 2) 2 ) T 2)
(PROD (LISTP nil (PROD (LISTP nil T) T nil) nil ) T nil)
(PROD (LISTP t (PROD (LISTP t T) T t) t ) T t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (LISTP 2 (PROD (LISTP 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (LISTP nil (PROD (LISTP nil NIL) NIL nil) nil ) NIL nil)
(PROD (LISTP t (PROD (LISTP t NIL) NIL t) t ) NIL t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 A) A 1) 1 ) A 1)
(PROD (LISTP 2 (PROD (LISTP 2 A) A 2) 2 ) A 2)
(PROD (LISTP nil (PROD (LISTP nil A) A nil) nil ) A nil)
(PROD (LISTP t (PROD (LISTP t A) A t) t ) A t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 B) B 1) 1 ) B 1)
(PROD (LISTP 2 (PROD (LISTP 2 B) B 2) 2 ) B 2)
(PROD (LISTP nil (PROD (LISTP nil B) B nil) nil ) B nil)
(PROD (LISTP t (PROD (LISTP t B) B t) t ) B t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 C) C 1) 1 ) C 1)
(PROD (LISTP 2 (PROD (LISTP 2 C) C 2) 2 ) C 2)
(PROD (LISTP nil (PROD (LISTP nil C) C nil) nil ) C nil)
(PROD (LISTP t (PROD (LISTP t C) C t) t ) C t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 1) 1 1) 1 ) 1 1)
(PROD (LISTP 2 (PROD (LISTP 2 1) 1 2) 2 ) 1 2)
(PROD (LISTP nil (PROD (LISTP nil 1) 1 nil) nil ) 1 nil)
(PROD (LISTP t (PROD (LISTP t 1) 1 t) t ) 1 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 2) 2 1) 1 ) 2 1)
(PROD (LISTP 2 (PROD (LISTP 2 2) 2 2) 2 ) 2 2)
(PROD (LISTP nil (PROD (LISTP nil 2) 2 nil) nil ) 2 nil)
(PROD (LISTP t (PROD (LISTP t 2) 2 t) t ) 2 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 3) 3 1) 1 ) 3 1)
(PROD (LISTP 2 (PROD (LISTP 2 3) 3 2) 2 ) 3 2)
(PROD (LISTP nil (PROD (LISTP nil 3) 3 nil) nil ) 3 nil)
(PROD (LISTP t (PROD (LISTP t 3) 3 t) t ) 3 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 ()) () 1) 1 ) () 1)
(PROD (LISTP 2 (PROD (LISTP 2 ()) () 2) 2 ) () 2)
(PROD (LISTP nil (PROD (LISTP nil ()) () nil) nil ) () nil)
(PROD (LISTP t (PROD (LISTP t ()) () t) t ) () t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 (())) (()) 1) 1 ) (()) 1)
(PROD (LISTP 2 (PROD (LISTP 2 (())) (()) 2) 2 ) (()) 2)
(PROD (LISTP nil (PROD (LISTP nil (())) (()) nil) nil ) (()) nil)
(PROD (LISTP t (PROD (LISTP t (())) (()) t) t ) (()) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (LISTP 2 (PROD (LISTP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (LISTP nil (PROD (LISTP nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (LISTP t (PROD (LISTP t ((()))) ((())) t) t ) ((())) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (LISTP 2 (PROD (LISTP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (LISTP nil (PROD (LISTP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (LISTP t (PROD (LISTP t (((())))) (((()))) t) t ) (((()))) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 'A) 'A 1) 1 ) 'A 1)
(PROD (LISTP 2 (PROD (LISTP 2 'A) 'A 2) 2 ) 'A 2)
(PROD (LISTP nil (PROD (LISTP nil 'A) 'A nil) nil ) 'A nil)
(PROD (LISTP t (PROD (LISTP t 'A) 'A t) t ) 'A t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 'B) 'B 1) 1 ) 'B 1)
(PROD (LISTP 2 (PROD (LISTP 2 'B) 'B 2) 2 ) 'B 2)
(PROD (LISTP nil (PROD (LISTP nil 'B) 'B nil) nil ) 'B nil)
(PROD (LISTP t (PROD (LISTP t 'B) 'B t) t ) 'B t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 'C) 'C 1) 1 ) 'C 1)
(PROD (LISTP 2 (PROD (LISTP 2 'C) 'C 2) 2 ) 'C 2)
(PROD (LISTP nil (PROD (LISTP nil 'C) 'C nil) nil ) 'C nil)
(PROD (LISTP t (PROD (LISTP t 'C) 'C t) t ) 'C t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 '1) '1 1) 1 ) '1 1)
(PROD (LISTP 2 (PROD (LISTP 2 '1) '1 2) 2 ) '1 2)
(PROD (LISTP nil (PROD (LISTP nil '1) '1 nil) nil ) '1 nil)
(PROD (LISTP t (PROD (LISTP t '1) '1 t) t ) '1 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 '2) '2 1) 1 ) '2 1)
(PROD (LISTP 2 (PROD (LISTP 2 '2) '2 2) 2 ) '2 2)
(PROD (LISTP nil (PROD (LISTP nil '2) '2 nil) nil ) '2 nil)
(PROD (LISTP t (PROD (LISTP t '2) '2 t) t ) '2 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 '3) '3 1) 1 ) '3 1)
(PROD (LISTP 2 (PROD (LISTP 2 '3) '3 2) 2 ) '3 2)
(PROD (LISTP nil (PROD (LISTP nil '3) '3 nil) nil ) '3 nil)
(PROD (LISTP t (PROD (LISTP t '3) '3 t) t ) '3 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 '()) '() 1) 1 ) '() 1)
(PROD (LISTP 2 (PROD (LISTP 2 '()) '() 2) 2 ) '() 2)
(PROD (LISTP nil (PROD (LISTP nil '()) '() nil) nil ) '() nil)
(PROD (LISTP t (PROD (LISTP t '()) '() t) t ) '() t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (LISTP 2 (PROD (LISTP 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (LISTP nil (PROD (LISTP nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (LISTP t (PROD (LISTP t '(())) '(()) t) t ) '(()) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (LISTP 2 (PROD (LISTP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (LISTP nil (PROD (LISTP nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (LISTP t (PROD (LISTP t '((()))) '((())) t) t ) '((())) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (LISTP 2 (PROD (LISTP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (LISTP nil (PROD (LISTP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (LISTP t (PROD (LISTP t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (LISTP 2 (PROD (LISTP 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (LISTP nil (PROD (LISTP nil ,A) ,A nil) nil ) ,A nil)
(PROD (LISTP t (PROD (LISTP t ,A) ,A t) t ) ,A t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (LISTP 2 (PROD (LISTP 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (LISTP nil (PROD (LISTP nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (LISTP t (PROD (LISTP t ,1) ,1 t) t ) ,1 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (LISTP 2 (PROD (LISTP 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (LISTP nil (PROD (LISTP nil ,()) ,() nil) nil ) ,() nil)
(PROD (LISTP t (PROD (LISTP t ,()) ,() t) t ) ,() t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (LISTP 2 (PROD (LISTP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (LISTP nil (PROD (LISTP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (LISTP t (PROD (LISTP t ,(())) ,(()) t) t ) ,(()) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (LISTP nil (PROD (LISTP nil `'A) `'A nil) nil ) `'A nil)
(PROD (LISTP t (PROD (LISTP t `'A) `'A t) t ) `'A t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (LISTP nil (PROD (LISTP nil `'B) `'B nil) nil ) `'B nil)
(PROD (LISTP t (PROD (LISTP t `'B) `'B t) t ) `'B t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (LISTP nil (PROD (LISTP nil `'C) `'C nil) nil ) `'C nil)
(PROD (LISTP t (PROD (LISTP t `'C) `'C t) t ) `'C t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (LISTP nil (PROD (LISTP nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (LISTP t (PROD (LISTP t `'1) `'1 t) t ) `'1 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (LISTP nil (PROD (LISTP nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (LISTP t (PROD (LISTP t `'2) `'2 t) t ) `'2 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (LISTP nil (PROD (LISTP nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (LISTP t (PROD (LISTP t `'3) `'3 t) t ) `'3 t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (LISTP nil (PROD (LISTP nil `'()) `'() nil) nil ) `'() nil)
(PROD (LISTP t (PROD (LISTP t `'()) `'() t) t ) `'() t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (LISTP nil (PROD (LISTP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (LISTP t (PROD (LISTP t `'(())) `'(()) t) t ) `'(()) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (LISTP nil (PROD (LISTP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (LISTP t (PROD (LISTP t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (LISTP 1 (PROD (LISTP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (LISTP 2 (PROD (LISTP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (LISTP nil (PROD (LISTP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (LISTP t (PROD (LISTP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (LISTP (cons t t) (PROD (LISTP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (LISTP (cons nil t) (PROD (LISTP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (LISTP (cons nil nil) (PROD (LISTP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (LISTP (cons 0 0) (PROD (LISTP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (LISTP (cons 1 1) (PROD (LISTP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (LISTP (list 1 2 3) (PROD (LISTP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (LISTP (list (cons 1 1 ) ) (PROD (LISTP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 T) T 1) 1 ) T 1)
(PROD (MAP 2 (PROD (MAP 2 T) T 2) 2 ) T 2)
(PROD (MAP nil (PROD (MAP nil T) T nil) nil ) T nil)
(PROD (MAP t (PROD (MAP t T) T t) t ) T t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (MAP 2 (PROD (MAP 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (MAP nil (PROD (MAP nil NIL) NIL nil) nil ) NIL nil)
(PROD (MAP t (PROD (MAP t NIL) NIL t) t ) NIL t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 A) A 1) 1 ) A 1)
(PROD (MAP 2 (PROD (MAP 2 A) A 2) 2 ) A 2)
(PROD (MAP nil (PROD (MAP nil A) A nil) nil ) A nil)
(PROD (MAP t (PROD (MAP t A) A t) t ) A t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 B) B 1) 1 ) B 1)
(PROD (MAP 2 (PROD (MAP 2 B) B 2) 2 ) B 2)
(PROD (MAP nil (PROD (MAP nil B) B nil) nil ) B nil)
(PROD (MAP t (PROD (MAP t B) B t) t ) B t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 C) C 1) 1 ) C 1)
(PROD (MAP 2 (PROD (MAP 2 C) C 2) 2 ) C 2)
(PROD (MAP nil (PROD (MAP nil C) C nil) nil ) C nil)
(PROD (MAP t (PROD (MAP t C) C t) t ) C t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 1) 1 1) 1 ) 1 1)
(PROD (MAP 2 (PROD (MAP 2 1) 1 2) 2 ) 1 2)
(PROD (MAP nil (PROD (MAP nil 1) 1 nil) nil ) 1 nil)
(PROD (MAP t (PROD (MAP t 1) 1 t) t ) 1 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 2) 2 1) 1 ) 2 1)
(PROD (MAP 2 (PROD (MAP 2 2) 2 2) 2 ) 2 2)
(PROD (MAP nil (PROD (MAP nil 2) 2 nil) nil ) 2 nil)
(PROD (MAP t (PROD (MAP t 2) 2 t) t ) 2 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 3) 3 1) 1 ) 3 1)
(PROD (MAP 2 (PROD (MAP 2 3) 3 2) 2 ) 3 2)
(PROD (MAP nil (PROD (MAP nil 3) 3 nil) nil ) 3 nil)
(PROD (MAP t (PROD (MAP t 3) 3 t) t ) 3 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 ()) () 1) 1 ) () 1)
(PROD (MAP 2 (PROD (MAP 2 ()) () 2) 2 ) () 2)
(PROD (MAP nil (PROD (MAP nil ()) () nil) nil ) () nil)
(PROD (MAP t (PROD (MAP t ()) () t) t ) () t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 (())) (()) 1) 1 ) (()) 1)
(PROD (MAP 2 (PROD (MAP 2 (())) (()) 2) 2 ) (()) 2)
(PROD (MAP nil (PROD (MAP nil (())) (()) nil) nil ) (()) nil)
(PROD (MAP t (PROD (MAP t (())) (()) t) t ) (()) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (MAP 2 (PROD (MAP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (MAP nil (PROD (MAP nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (MAP t (PROD (MAP t ((()))) ((())) t) t ) ((())) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (MAP 2 (PROD (MAP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (MAP nil (PROD (MAP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (MAP t (PROD (MAP t (((())))) (((()))) t) t ) (((()))) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 'A) 'A 1) 1 ) 'A 1)
(PROD (MAP 2 (PROD (MAP 2 'A) 'A 2) 2 ) 'A 2)
(PROD (MAP nil (PROD (MAP nil 'A) 'A nil) nil ) 'A nil)
(PROD (MAP t (PROD (MAP t 'A) 'A t) t ) 'A t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 'B) 'B 1) 1 ) 'B 1)
(PROD (MAP 2 (PROD (MAP 2 'B) 'B 2) 2 ) 'B 2)
(PROD (MAP nil (PROD (MAP nil 'B) 'B nil) nil ) 'B nil)
(PROD (MAP t (PROD (MAP t 'B) 'B t) t ) 'B t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 'C) 'C 1) 1 ) 'C 1)
(PROD (MAP 2 (PROD (MAP 2 'C) 'C 2) 2 ) 'C 2)
(PROD (MAP nil (PROD (MAP nil 'C) 'C nil) nil ) 'C nil)
(PROD (MAP t (PROD (MAP t 'C) 'C t) t ) 'C t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 '1) '1 1) 1 ) '1 1)
(PROD (MAP 2 (PROD (MAP 2 '1) '1 2) 2 ) '1 2)
(PROD (MAP nil (PROD (MAP nil '1) '1 nil) nil ) '1 nil)
(PROD (MAP t (PROD (MAP t '1) '1 t) t ) '1 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 '2) '2 1) 1 ) '2 1)
(PROD (MAP 2 (PROD (MAP 2 '2) '2 2) 2 ) '2 2)
(PROD (MAP nil (PROD (MAP nil '2) '2 nil) nil ) '2 nil)
(PROD (MAP t (PROD (MAP t '2) '2 t) t ) '2 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 '3) '3 1) 1 ) '3 1)
(PROD (MAP 2 (PROD (MAP 2 '3) '3 2) 2 ) '3 2)
(PROD (MAP nil (PROD (MAP nil '3) '3 nil) nil ) '3 nil)
(PROD (MAP t (PROD (MAP t '3) '3 t) t ) '3 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 '()) '() 1) 1 ) '() 1)
(PROD (MAP 2 (PROD (MAP 2 '()) '() 2) 2 ) '() 2)
(PROD (MAP nil (PROD (MAP nil '()) '() nil) nil ) '() nil)
(PROD (MAP t (PROD (MAP t '()) '() t) t ) '() t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (MAP 2 (PROD (MAP 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (MAP nil (PROD (MAP nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (MAP t (PROD (MAP t '(())) '(()) t) t ) '(()) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (MAP 2 (PROD (MAP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (MAP nil (PROD (MAP nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (MAP t (PROD (MAP t '((()))) '((())) t) t ) '((())) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (MAP 2 (PROD (MAP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (MAP nil (PROD (MAP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (MAP t (PROD (MAP t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (MAP 2 (PROD (MAP 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (MAP nil (PROD (MAP nil ,A) ,A nil) nil ) ,A nil)
(PROD (MAP t (PROD (MAP t ,A) ,A t) t ) ,A t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (MAP 2 (PROD (MAP 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (MAP nil (PROD (MAP nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (MAP t (PROD (MAP t ,1) ,1 t) t ) ,1 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (MAP 2 (PROD (MAP 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (MAP nil (PROD (MAP nil ,()) ,() nil) nil ) ,() nil)
(PROD (MAP t (PROD (MAP t ,()) ,() t) t ) ,() t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (MAP 2 (PROD (MAP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (MAP nil (PROD (MAP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (MAP t (PROD (MAP t ,(())) ,(()) t) t ) ,(()) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (MAP 2 (PROD (MAP 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (MAP nil (PROD (MAP nil `'A) `'A nil) nil ) `'A nil)
(PROD (MAP t (PROD (MAP t `'A) `'A t) t ) `'A t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (MAP 2 (PROD (MAP 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (MAP nil (PROD (MAP nil `'B) `'B nil) nil ) `'B nil)
(PROD (MAP t (PROD (MAP t `'B) `'B t) t ) `'B t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (MAP 2 (PROD (MAP 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (MAP nil (PROD (MAP nil `'C) `'C nil) nil ) `'C nil)
(PROD (MAP t (PROD (MAP t `'C) `'C t) t ) `'C t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (MAP 2 (PROD (MAP 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (MAP nil (PROD (MAP nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (MAP t (PROD (MAP t `'1) `'1 t) t ) `'1 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (MAP 2 (PROD (MAP 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (MAP nil (PROD (MAP nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (MAP t (PROD (MAP t `'2) `'2 t) t ) `'2 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (MAP 2 (PROD (MAP 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (MAP nil (PROD (MAP nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (MAP t (PROD (MAP t `'3) `'3 t) t ) `'3 t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (MAP 2 (PROD (MAP 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (MAP nil (PROD (MAP nil `'()) `'() nil) nil ) `'() nil)
(PROD (MAP t (PROD (MAP t `'()) `'() t) t ) `'() t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (MAP 2 (PROD (MAP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (MAP nil (PROD (MAP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (MAP t (PROD (MAP t `'(())) `'(()) t) t ) `'(()) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (MAP 2 (PROD (MAP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (MAP nil (PROD (MAP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (MAP t (PROD (MAP t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (MAP 1 (PROD (MAP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (MAP 2 (PROD (MAP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (MAP nil (PROD (MAP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (MAP t (PROD (MAP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (MAP (cons t t) (PROD (MAP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (MAP (cons nil t) (PROD (MAP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (MAP (cons nil nil) (PROD (MAP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (MAP (cons 0 0) (PROD (MAP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (MAP (cons 1 1) (PROD (MAP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (MAP (list 1 2 3) (PROD (MAP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (MAP (list (cons 1 1 ) ) (PROD (MAP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 T) T 1) 1 ) T 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 T) T 2) 2 ) T 2)
(PROD (MEMBER nil (PROD (MEMBER nil T) T nil) nil ) T nil)
(PROD (MEMBER t (PROD (MEMBER t T) T t) t ) T t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (MEMBER nil (PROD (MEMBER nil NIL) NIL nil) nil ) NIL nil)
(PROD (MEMBER t (PROD (MEMBER t NIL) NIL t) t ) NIL t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 A) A 1) 1 ) A 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 A) A 2) 2 ) A 2)
(PROD (MEMBER nil (PROD (MEMBER nil A) A nil) nil ) A nil)
(PROD (MEMBER t (PROD (MEMBER t A) A t) t ) A t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 B) B 1) 1 ) B 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 B) B 2) 2 ) B 2)
(PROD (MEMBER nil (PROD (MEMBER nil B) B nil) nil ) B nil)
(PROD (MEMBER t (PROD (MEMBER t B) B t) t ) B t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 C) C 1) 1 ) C 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 C) C 2) 2 ) C 2)
(PROD (MEMBER nil (PROD (MEMBER nil C) C nil) nil ) C nil)
(PROD (MEMBER t (PROD (MEMBER t C) C t) t ) C t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 1) 1 1) 1 ) 1 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 1) 1 2) 2 ) 1 2)
(PROD (MEMBER nil (PROD (MEMBER nil 1) 1 nil) nil ) 1 nil)
(PROD (MEMBER t (PROD (MEMBER t 1) 1 t) t ) 1 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 2) 2 1) 1 ) 2 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 2) 2 2) 2 ) 2 2)
(PROD (MEMBER nil (PROD (MEMBER nil 2) 2 nil) nil ) 2 nil)
(PROD (MEMBER t (PROD (MEMBER t 2) 2 t) t ) 2 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 3) 3 1) 1 ) 3 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 3) 3 2) 2 ) 3 2)
(PROD (MEMBER nil (PROD (MEMBER nil 3) 3 nil) nil ) 3 nil)
(PROD (MEMBER t (PROD (MEMBER t 3) 3 t) t ) 3 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 ()) () 1) 1 ) () 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 ()) () 2) 2 ) () 2)
(PROD (MEMBER nil (PROD (MEMBER nil ()) () nil) nil ) () nil)
(PROD (MEMBER t (PROD (MEMBER t ()) () t) t ) () t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 (())) (()) 1) 1 ) (()) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 (())) (()) 2) 2 ) (()) 2)
(PROD (MEMBER nil (PROD (MEMBER nil (())) (()) nil) nil ) (()) nil)
(PROD (MEMBER t (PROD (MEMBER t (())) (()) t) t ) (()) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (MEMBER nil (PROD (MEMBER nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (MEMBER t (PROD (MEMBER t ((()))) ((())) t) t ) ((())) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (MEMBER nil (PROD (MEMBER nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (MEMBER t (PROD (MEMBER t (((())))) (((()))) t) t ) (((()))) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 'A) 'A 1) 1 ) 'A 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 'A) 'A 2) 2 ) 'A 2)
(PROD (MEMBER nil (PROD (MEMBER nil 'A) 'A nil) nil ) 'A nil)
(PROD (MEMBER t (PROD (MEMBER t 'A) 'A t) t ) 'A t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 'B) 'B 1) 1 ) 'B 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 'B) 'B 2) 2 ) 'B 2)
(PROD (MEMBER nil (PROD (MEMBER nil 'B) 'B nil) nil ) 'B nil)
(PROD (MEMBER t (PROD (MEMBER t 'B) 'B t) t ) 'B t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 'C) 'C 1) 1 ) 'C 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 'C) 'C 2) 2 ) 'C 2)
(PROD (MEMBER nil (PROD (MEMBER nil 'C) 'C nil) nil ) 'C nil)
(PROD (MEMBER t (PROD (MEMBER t 'C) 'C t) t ) 'C t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 '1) '1 1) 1 ) '1 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 '1) '1 2) 2 ) '1 2)
(PROD (MEMBER nil (PROD (MEMBER nil '1) '1 nil) nil ) '1 nil)
(PROD (MEMBER t (PROD (MEMBER t '1) '1 t) t ) '1 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 '2) '2 1) 1 ) '2 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 '2) '2 2) 2 ) '2 2)
(PROD (MEMBER nil (PROD (MEMBER nil '2) '2 nil) nil ) '2 nil)
(PROD (MEMBER t (PROD (MEMBER t '2) '2 t) t ) '2 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 '3) '3 1) 1 ) '3 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 '3) '3 2) 2 ) '3 2)
(PROD (MEMBER nil (PROD (MEMBER nil '3) '3 nil) nil ) '3 nil)
(PROD (MEMBER t (PROD (MEMBER t '3) '3 t) t ) '3 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 '()) '() 1) 1 ) '() 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 '()) '() 2) 2 ) '() 2)
(PROD (MEMBER nil (PROD (MEMBER nil '()) '() nil) nil ) '() nil)
(PROD (MEMBER t (PROD (MEMBER t '()) '() t) t ) '() t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (MEMBER nil (PROD (MEMBER nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (MEMBER t (PROD (MEMBER t '(())) '(()) t) t ) '(()) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (MEMBER nil (PROD (MEMBER nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (MEMBER t (PROD (MEMBER t '((()))) '((())) t) t ) '((())) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (MEMBER nil (PROD (MEMBER nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (MEMBER t (PROD (MEMBER t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (MEMBER nil (PROD (MEMBER nil ,A) ,A nil) nil ) ,A nil)
(PROD (MEMBER t (PROD (MEMBER t ,A) ,A t) t ) ,A t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (MEMBER nil (PROD (MEMBER nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (MEMBER t (PROD (MEMBER t ,1) ,1 t) t ) ,1 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (MEMBER nil (PROD (MEMBER nil ,()) ,() nil) nil ) ,() nil)
(PROD (MEMBER t (PROD (MEMBER t ,()) ,() t) t ) ,() t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (MEMBER nil (PROD (MEMBER nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (MEMBER t (PROD (MEMBER t ,(())) ,(()) t) t ) ,(()) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'A) `'A nil) nil ) `'A nil)
(PROD (MEMBER t (PROD (MEMBER t `'A) `'A t) t ) `'A t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'B) `'B nil) nil ) `'B nil)
(PROD (MEMBER t (PROD (MEMBER t `'B) `'B t) t ) `'B t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'C) `'C nil) nil ) `'C nil)
(PROD (MEMBER t (PROD (MEMBER t `'C) `'C t) t ) `'C t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (MEMBER t (PROD (MEMBER t `'1) `'1 t) t ) `'1 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (MEMBER t (PROD (MEMBER t `'2) `'2 t) t ) `'2 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (MEMBER t (PROD (MEMBER t `'3) `'3 t) t ) `'3 t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'()) `'() nil) nil ) `'() nil)
(PROD (MEMBER t (PROD (MEMBER t `'()) `'() t) t ) `'() t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (MEMBER t (PROD (MEMBER t `'(())) `'(()) t) t ) `'(()) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (MEMBER t (PROD (MEMBER t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (MEMBER 1 (PROD (MEMBER 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (MEMBER 2 (PROD (MEMBER 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (MEMBER nil (PROD (MEMBER nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (MEMBER t (PROD (MEMBER t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (MEMBER (cons t t) (PROD (MEMBER (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (MEMBER (cons nil t) (PROD (MEMBER (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (MEMBER (cons nil nil) (PROD (MEMBER (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (MEMBER (cons 0 0) (PROD (MEMBER (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (MEMBER (cons 1 1) (PROD (MEMBER (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (MEMBER (list 1 2 3) (PROD (MEMBER (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (MEMBER (list (cons 1 1 ) ) (PROD (MEMBER (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 T) T 1) 1 ) T 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 T) T 2) 2 ) T 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil T) T nil) nil ) T nil)
(PROD (MEMBERP t (PROD (MEMBERP t T) T t) t ) T t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil NIL) NIL nil) nil ) NIL nil)
(PROD (MEMBERP t (PROD (MEMBERP t NIL) NIL t) t ) NIL t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 A) A 1) 1 ) A 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 A) A 2) 2 ) A 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil A) A nil) nil ) A nil)
(PROD (MEMBERP t (PROD (MEMBERP t A) A t) t ) A t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 B) B 1) 1 ) B 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 B) B 2) 2 ) B 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil B) B nil) nil ) B nil)
(PROD (MEMBERP t (PROD (MEMBERP t B) B t) t ) B t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 C) C 1) 1 ) C 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 C) C 2) 2 ) C 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil C) C nil) nil ) C nil)
(PROD (MEMBERP t (PROD (MEMBERP t C) C t) t ) C t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 1) 1 1) 1 ) 1 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 1) 1 2) 2 ) 1 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil 1) 1 nil) nil ) 1 nil)
(PROD (MEMBERP t (PROD (MEMBERP t 1) 1 t) t ) 1 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 2) 2 1) 1 ) 2 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 2) 2 2) 2 ) 2 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil 2) 2 nil) nil ) 2 nil)
(PROD (MEMBERP t (PROD (MEMBERP t 2) 2 t) t ) 2 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 3) 3 1) 1 ) 3 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 3) 3 2) 2 ) 3 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil 3) 3 nil) nil ) 3 nil)
(PROD (MEMBERP t (PROD (MEMBERP t 3) 3 t) t ) 3 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 ()) () 1) 1 ) () 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 ()) () 2) 2 ) () 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil ()) () nil) nil ) () nil)
(PROD (MEMBERP t (PROD (MEMBERP t ()) () t) t ) () t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 (())) (()) 1) 1 ) (()) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 (())) (()) 2) 2 ) (()) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil (())) (()) nil) nil ) (()) nil)
(PROD (MEMBERP t (PROD (MEMBERP t (())) (()) t) t ) (()) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (MEMBERP t (PROD (MEMBERP t ((()))) ((())) t) t ) ((())) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (MEMBERP t (PROD (MEMBERP t (((())))) (((()))) t) t ) (((()))) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 'A) 'A 1) 1 ) 'A 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 'A) 'A 2) 2 ) 'A 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil 'A) 'A nil) nil ) 'A nil)
(PROD (MEMBERP t (PROD (MEMBERP t 'A) 'A t) t ) 'A t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 'B) 'B 1) 1 ) 'B 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 'B) 'B 2) 2 ) 'B 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil 'B) 'B nil) nil ) 'B nil)
(PROD (MEMBERP t (PROD (MEMBERP t 'B) 'B t) t ) 'B t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 'C) 'C 1) 1 ) 'C 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 'C) 'C 2) 2 ) 'C 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil 'C) 'C nil) nil ) 'C nil)
(PROD (MEMBERP t (PROD (MEMBERP t 'C) 'C t) t ) 'C t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 '1) '1 1) 1 ) '1 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 '1) '1 2) 2 ) '1 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil '1) '1 nil) nil ) '1 nil)
(PROD (MEMBERP t (PROD (MEMBERP t '1) '1 t) t ) '1 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 '2) '2 1) 1 ) '2 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 '2) '2 2) 2 ) '2 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil '2) '2 nil) nil ) '2 nil)
(PROD (MEMBERP t (PROD (MEMBERP t '2) '2 t) t ) '2 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 '3) '3 1) 1 ) '3 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 '3) '3 2) 2 ) '3 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil '3) '3 nil) nil ) '3 nil)
(PROD (MEMBERP t (PROD (MEMBERP t '3) '3 t) t ) '3 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 '()) '() 1) 1 ) '() 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 '()) '() 2) 2 ) '() 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil '()) '() nil) nil ) '() nil)
(PROD (MEMBERP t (PROD (MEMBERP t '()) '() t) t ) '() t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (MEMBERP t (PROD (MEMBERP t '(())) '(()) t) t ) '(()) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (MEMBERP t (PROD (MEMBERP t '((()))) '((())) t) t ) '((())) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (MEMBERP t (PROD (MEMBERP t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil ,A) ,A nil) nil ) ,A nil)
(PROD (MEMBERP t (PROD (MEMBERP t ,A) ,A t) t ) ,A t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (MEMBERP t (PROD (MEMBERP t ,1) ,1 t) t ) ,1 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil ,()) ,() nil) nil ) ,() nil)
(PROD (MEMBERP t (PROD (MEMBERP t ,()) ,() t) t ) ,() t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (MEMBERP t (PROD (MEMBERP t ,(())) ,(()) t) t ) ,(()) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'A) `'A nil) nil ) `'A nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'A) `'A t) t ) `'A t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'B) `'B nil) nil ) `'B nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'B) `'B t) t ) `'B t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'C) `'C nil) nil ) `'C nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'C) `'C t) t ) `'C t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'1) `'1 t) t ) `'1 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'2) `'2 t) t ) `'2 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'3) `'3 t) t ) `'3 t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'()) `'() nil) nil ) `'() nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'()) `'() t) t ) `'() t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'(())) `'(()) t) t ) `'(()) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (MEMBERP 1 (PROD (MEMBERP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (MEMBERP 2 (PROD (MEMBERP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (MEMBERP nil (PROD (MEMBERP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (MEMBERP t (PROD (MEMBERP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (MEMBERP (cons t t) (PROD (MEMBERP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (MEMBERP (cons nil t) (PROD (MEMBERP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (MEMBERP (cons nil nil) (PROD (MEMBERP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (MEMBERP (cons 0 0) (PROD (MEMBERP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (MEMBERP (cons 1 1) (PROD (MEMBERP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (MEMBERP (list 1 2 3) (PROD (MEMBERP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (MEMBERP (list (cons 1 1 ) ) (PROD (MEMBERP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 T) T 1) 1 ) T 1)
(PROD (NOT 2 (PROD (NOT 2 T) T 2) 2 ) T 2)
(PROD (NOT nil (PROD (NOT nil T) T nil) nil ) T nil)
(PROD (NOT t (PROD (NOT t T) T t) t ) T t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (NOT 2 (PROD (NOT 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (NOT nil (PROD (NOT nil NIL) NIL nil) nil ) NIL nil)
(PROD (NOT t (PROD (NOT t NIL) NIL t) t ) NIL t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 A) A 1) 1 ) A 1)
(PROD (NOT 2 (PROD (NOT 2 A) A 2) 2 ) A 2)
(PROD (NOT nil (PROD (NOT nil A) A nil) nil ) A nil)
(PROD (NOT t (PROD (NOT t A) A t) t ) A t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 B) B 1) 1 ) B 1)
(PROD (NOT 2 (PROD (NOT 2 B) B 2) 2 ) B 2)
(PROD (NOT nil (PROD (NOT nil B) B nil) nil ) B nil)
(PROD (NOT t (PROD (NOT t B) B t) t ) B t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 C) C 1) 1 ) C 1)
(PROD (NOT 2 (PROD (NOT 2 C) C 2) 2 ) C 2)
(PROD (NOT nil (PROD (NOT nil C) C nil) nil ) C nil)
(PROD (NOT t (PROD (NOT t C) C t) t ) C t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 1) 1 1) 1 ) 1 1)
(PROD (NOT 2 (PROD (NOT 2 1) 1 2) 2 ) 1 2)
(PROD (NOT nil (PROD (NOT nil 1) 1 nil) nil ) 1 nil)
(PROD (NOT t (PROD (NOT t 1) 1 t) t ) 1 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 2) 2 1) 1 ) 2 1)
(PROD (NOT 2 (PROD (NOT 2 2) 2 2) 2 ) 2 2)
(PROD (NOT nil (PROD (NOT nil 2) 2 nil) nil ) 2 nil)
(PROD (NOT t (PROD (NOT t 2) 2 t) t ) 2 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 3) 3 1) 1 ) 3 1)
(PROD (NOT 2 (PROD (NOT 2 3) 3 2) 2 ) 3 2)
(PROD (NOT nil (PROD (NOT nil 3) 3 nil) nil ) 3 nil)
(PROD (NOT t (PROD (NOT t 3) 3 t) t ) 3 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 ()) () 1) 1 ) () 1)
(PROD (NOT 2 (PROD (NOT 2 ()) () 2) 2 ) () 2)
(PROD (NOT nil (PROD (NOT nil ()) () nil) nil ) () nil)
(PROD (NOT t (PROD (NOT t ()) () t) t ) () t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 (())) (()) 1) 1 ) (()) 1)
(PROD (NOT 2 (PROD (NOT 2 (())) (()) 2) 2 ) (()) 2)
(PROD (NOT nil (PROD (NOT nil (())) (()) nil) nil ) (()) nil)
(PROD (NOT t (PROD (NOT t (())) (()) t) t ) (()) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (NOT 2 (PROD (NOT 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (NOT nil (PROD (NOT nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (NOT t (PROD (NOT t ((()))) ((())) t) t ) ((())) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (NOT 2 (PROD (NOT 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (NOT nil (PROD (NOT nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (NOT t (PROD (NOT t (((())))) (((()))) t) t ) (((()))) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 'A) 'A 1) 1 ) 'A 1)
(PROD (NOT 2 (PROD (NOT 2 'A) 'A 2) 2 ) 'A 2)
(PROD (NOT nil (PROD (NOT nil 'A) 'A nil) nil ) 'A nil)
(PROD (NOT t (PROD (NOT t 'A) 'A t) t ) 'A t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 'B) 'B 1) 1 ) 'B 1)
(PROD (NOT 2 (PROD (NOT 2 'B) 'B 2) 2 ) 'B 2)
(PROD (NOT nil (PROD (NOT nil 'B) 'B nil) nil ) 'B nil)
(PROD (NOT t (PROD (NOT t 'B) 'B t) t ) 'B t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 'C) 'C 1) 1 ) 'C 1)
(PROD (NOT 2 (PROD (NOT 2 'C) 'C 2) 2 ) 'C 2)
(PROD (NOT nil (PROD (NOT nil 'C) 'C nil) nil ) 'C nil)
(PROD (NOT t (PROD (NOT t 'C) 'C t) t ) 'C t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 '1) '1 1) 1 ) '1 1)
(PROD (NOT 2 (PROD (NOT 2 '1) '1 2) 2 ) '1 2)
(PROD (NOT nil (PROD (NOT nil '1) '1 nil) nil ) '1 nil)
(PROD (NOT t (PROD (NOT t '1) '1 t) t ) '1 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 '2) '2 1) 1 ) '2 1)
(PROD (NOT 2 (PROD (NOT 2 '2) '2 2) 2 ) '2 2)
(PROD (NOT nil (PROD (NOT nil '2) '2 nil) nil ) '2 nil)
(PROD (NOT t (PROD (NOT t '2) '2 t) t ) '2 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 '3) '3 1) 1 ) '3 1)
(PROD (NOT 2 (PROD (NOT 2 '3) '3 2) 2 ) '3 2)
(PROD (NOT nil (PROD (NOT nil '3) '3 nil) nil ) '3 nil)
(PROD (NOT t (PROD (NOT t '3) '3 t) t ) '3 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 '()) '() 1) 1 ) '() 1)
(PROD (NOT 2 (PROD (NOT 2 '()) '() 2) 2 ) '() 2)
(PROD (NOT nil (PROD (NOT nil '()) '() nil) nil ) '() nil)
(PROD (NOT t (PROD (NOT t '()) '() t) t ) '() t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (NOT 2 (PROD (NOT 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (NOT nil (PROD (NOT nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (NOT t (PROD (NOT t '(())) '(()) t) t ) '(()) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (NOT 2 (PROD (NOT 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (NOT nil (PROD (NOT nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (NOT t (PROD (NOT t '((()))) '((())) t) t ) '((())) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (NOT 2 (PROD (NOT 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (NOT nil (PROD (NOT nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (NOT t (PROD (NOT t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (NOT 2 (PROD (NOT 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (NOT nil (PROD (NOT nil ,A) ,A nil) nil ) ,A nil)
(PROD (NOT t (PROD (NOT t ,A) ,A t) t ) ,A t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (NOT 2 (PROD (NOT 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (NOT nil (PROD (NOT nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (NOT t (PROD (NOT t ,1) ,1 t) t ) ,1 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (NOT 2 (PROD (NOT 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (NOT nil (PROD (NOT nil ,()) ,() nil) nil ) ,() nil)
(PROD (NOT t (PROD (NOT t ,()) ,() t) t ) ,() t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (NOT 2 (PROD (NOT 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (NOT nil (PROD (NOT nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (NOT t (PROD (NOT t ,(())) ,(()) t) t ) ,(()) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (NOT 2 (PROD (NOT 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (NOT nil (PROD (NOT nil `'A) `'A nil) nil ) `'A nil)
(PROD (NOT t (PROD (NOT t `'A) `'A t) t ) `'A t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (NOT 2 (PROD (NOT 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (NOT nil (PROD (NOT nil `'B) `'B nil) nil ) `'B nil)
(PROD (NOT t (PROD (NOT t `'B) `'B t) t ) `'B t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (NOT 2 (PROD (NOT 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (NOT nil (PROD (NOT nil `'C) `'C nil) nil ) `'C nil)
(PROD (NOT t (PROD (NOT t `'C) `'C t) t ) `'C t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (NOT 2 (PROD (NOT 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (NOT nil (PROD (NOT nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (NOT t (PROD (NOT t `'1) `'1 t) t ) `'1 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (NOT 2 (PROD (NOT 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (NOT nil (PROD (NOT nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (NOT t (PROD (NOT t `'2) `'2 t) t ) `'2 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (NOT 2 (PROD (NOT 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (NOT nil (PROD (NOT nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (NOT t (PROD (NOT t `'3) `'3 t) t ) `'3 t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (NOT 2 (PROD (NOT 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (NOT nil (PROD (NOT nil `'()) `'() nil) nil ) `'() nil)
(PROD (NOT t (PROD (NOT t `'()) `'() t) t ) `'() t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (NOT 2 (PROD (NOT 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (NOT nil (PROD (NOT nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (NOT t (PROD (NOT t `'(())) `'(()) t) t ) `'(()) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (NOT 2 (PROD (NOT 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (NOT nil (PROD (NOT nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (NOT t (PROD (NOT t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (NOT 1 (PROD (NOT 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (NOT 2 (PROD (NOT 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (NOT nil (PROD (NOT nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (NOT t (PROD (NOT t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (NOT (cons t t) (PROD (NOT (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (NOT (cons nil t) (PROD (NOT (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (NOT (cons nil nil) (PROD (NOT (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (NOT (cons 0 0) (PROD (NOT (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (NOT (cons 1 1) (PROD (NOT (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (NOT (list 1 2 3) (PROD (NOT (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (NOT (list (cons 1 1 ) ) (PROD (NOT (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 T) T 1) 1 ) T 1)
(PROD (NULL 2 (PROD (NULL 2 T) T 2) 2 ) T 2)
(PROD (NULL nil (PROD (NULL nil T) T nil) nil ) T nil)
(PROD (NULL t (PROD (NULL t T) T t) t ) T t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (NULL 2 (PROD (NULL 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (NULL nil (PROD (NULL nil NIL) NIL nil) nil ) NIL nil)
(PROD (NULL t (PROD (NULL t NIL) NIL t) t ) NIL t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 A) A 1) 1 ) A 1)
(PROD (NULL 2 (PROD (NULL 2 A) A 2) 2 ) A 2)
(PROD (NULL nil (PROD (NULL nil A) A nil) nil ) A nil)
(PROD (NULL t (PROD (NULL t A) A t) t ) A t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 B) B 1) 1 ) B 1)
(PROD (NULL 2 (PROD (NULL 2 B) B 2) 2 ) B 2)
(PROD (NULL nil (PROD (NULL nil B) B nil) nil ) B nil)
(PROD (NULL t (PROD (NULL t B) B t) t ) B t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 C) C 1) 1 ) C 1)
(PROD (NULL 2 (PROD (NULL 2 C) C 2) 2 ) C 2)
(PROD (NULL nil (PROD (NULL nil C) C nil) nil ) C nil)
(PROD (NULL t (PROD (NULL t C) C t) t ) C t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 1) 1 1) 1 ) 1 1)
(PROD (NULL 2 (PROD (NULL 2 1) 1 2) 2 ) 1 2)
(PROD (NULL nil (PROD (NULL nil 1) 1 nil) nil ) 1 nil)
(PROD (NULL t (PROD (NULL t 1) 1 t) t ) 1 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 2) 2 1) 1 ) 2 1)
(PROD (NULL 2 (PROD (NULL 2 2) 2 2) 2 ) 2 2)
(PROD (NULL nil (PROD (NULL nil 2) 2 nil) nil ) 2 nil)
(PROD (NULL t (PROD (NULL t 2) 2 t) t ) 2 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 3) 3 1) 1 ) 3 1)
(PROD (NULL 2 (PROD (NULL 2 3) 3 2) 2 ) 3 2)
(PROD (NULL nil (PROD (NULL nil 3) 3 nil) nil ) 3 nil)
(PROD (NULL t (PROD (NULL t 3) 3 t) t ) 3 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 ()) () 1) 1 ) () 1)
(PROD (NULL 2 (PROD (NULL 2 ()) () 2) 2 ) () 2)
(PROD (NULL nil (PROD (NULL nil ()) () nil) nil ) () nil)
(PROD (NULL t (PROD (NULL t ()) () t) t ) () t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 (())) (()) 1) 1 ) (()) 1)
(PROD (NULL 2 (PROD (NULL 2 (())) (()) 2) 2 ) (()) 2)
(PROD (NULL nil (PROD (NULL nil (())) (()) nil) nil ) (()) nil)
(PROD (NULL t (PROD (NULL t (())) (()) t) t ) (()) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (NULL 2 (PROD (NULL 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (NULL nil (PROD (NULL nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (NULL t (PROD (NULL t ((()))) ((())) t) t ) ((())) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (NULL 2 (PROD (NULL 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (NULL nil (PROD (NULL nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (NULL t (PROD (NULL t (((())))) (((()))) t) t ) (((()))) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 'A) 'A 1) 1 ) 'A 1)
(PROD (NULL 2 (PROD (NULL 2 'A) 'A 2) 2 ) 'A 2)
(PROD (NULL nil (PROD (NULL nil 'A) 'A nil) nil ) 'A nil)
(PROD (NULL t (PROD (NULL t 'A) 'A t) t ) 'A t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 'B) 'B 1) 1 ) 'B 1)
(PROD (NULL 2 (PROD (NULL 2 'B) 'B 2) 2 ) 'B 2)
(PROD (NULL nil (PROD (NULL nil 'B) 'B nil) nil ) 'B nil)
(PROD (NULL t (PROD (NULL t 'B) 'B t) t ) 'B t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 'C) 'C 1) 1 ) 'C 1)
(PROD (NULL 2 (PROD (NULL 2 'C) 'C 2) 2 ) 'C 2)
(PROD (NULL nil (PROD (NULL nil 'C) 'C nil) nil ) 'C nil)
(PROD (NULL t (PROD (NULL t 'C) 'C t) t ) 'C t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 '1) '1 1) 1 ) '1 1)
(PROD (NULL 2 (PROD (NULL 2 '1) '1 2) 2 ) '1 2)
(PROD (NULL nil (PROD (NULL nil '1) '1 nil) nil ) '1 nil)
(PROD (NULL t (PROD (NULL t '1) '1 t) t ) '1 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 '2) '2 1) 1 ) '2 1)
(PROD (NULL 2 (PROD (NULL 2 '2) '2 2) 2 ) '2 2)
(PROD (NULL nil (PROD (NULL nil '2) '2 nil) nil ) '2 nil)
(PROD (NULL t (PROD (NULL t '2) '2 t) t ) '2 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 '3) '3 1) 1 ) '3 1)
(PROD (NULL 2 (PROD (NULL 2 '3) '3 2) 2 ) '3 2)
(PROD (NULL nil (PROD (NULL nil '3) '3 nil) nil ) '3 nil)
(PROD (NULL t (PROD (NULL t '3) '3 t) t ) '3 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 '()) '() 1) 1 ) '() 1)
(PROD (NULL 2 (PROD (NULL 2 '()) '() 2) 2 ) '() 2)
(PROD (NULL nil (PROD (NULL nil '()) '() nil) nil ) '() nil)
(PROD (NULL t (PROD (NULL t '()) '() t) t ) '() t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (NULL 2 (PROD (NULL 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (NULL nil (PROD (NULL nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (NULL t (PROD (NULL t '(())) '(()) t) t ) '(()) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (NULL 2 (PROD (NULL 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (NULL nil (PROD (NULL nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (NULL t (PROD (NULL t '((()))) '((())) t) t ) '((())) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (NULL 2 (PROD (NULL 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (NULL nil (PROD (NULL nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (NULL t (PROD (NULL t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (NULL 2 (PROD (NULL 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (NULL nil (PROD (NULL nil ,A) ,A nil) nil ) ,A nil)
(PROD (NULL t (PROD (NULL t ,A) ,A t) t ) ,A t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (NULL 2 (PROD (NULL 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (NULL nil (PROD (NULL nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (NULL t (PROD (NULL t ,1) ,1 t) t ) ,1 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (NULL 2 (PROD (NULL 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (NULL nil (PROD (NULL nil ,()) ,() nil) nil ) ,() nil)
(PROD (NULL t (PROD (NULL t ,()) ,() t) t ) ,() t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (NULL 2 (PROD (NULL 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (NULL nil (PROD (NULL nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (NULL t (PROD (NULL t ,(())) ,(()) t) t ) ,(()) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (NULL 2 (PROD (NULL 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (NULL nil (PROD (NULL nil `'A) `'A nil) nil ) `'A nil)
(PROD (NULL t (PROD (NULL t `'A) `'A t) t ) `'A t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (NULL 2 (PROD (NULL 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (NULL nil (PROD (NULL nil `'B) `'B nil) nil ) `'B nil)
(PROD (NULL t (PROD (NULL t `'B) `'B t) t ) `'B t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (NULL 2 (PROD (NULL 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (NULL nil (PROD (NULL nil `'C) `'C nil) nil ) `'C nil)
(PROD (NULL t (PROD (NULL t `'C) `'C t) t ) `'C t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (NULL 2 (PROD (NULL 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (NULL nil (PROD (NULL nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (NULL t (PROD (NULL t `'1) `'1 t) t ) `'1 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (NULL 2 (PROD (NULL 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (NULL nil (PROD (NULL nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (NULL t (PROD (NULL t `'2) `'2 t) t ) `'2 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (NULL 2 (PROD (NULL 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (NULL nil (PROD (NULL nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (NULL t (PROD (NULL t `'3) `'3 t) t ) `'3 t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (NULL 2 (PROD (NULL 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (NULL nil (PROD (NULL nil `'()) `'() nil) nil ) `'() nil)
(PROD (NULL t (PROD (NULL t `'()) `'() t) t ) `'() t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (NULL 2 (PROD (NULL 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (NULL nil (PROD (NULL nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (NULL t (PROD (NULL t `'(())) `'(()) t) t ) `'(()) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (NULL 2 (PROD (NULL 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (NULL nil (PROD (NULL nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (NULL t (PROD (NULL t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (NULL 1 (PROD (NULL 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (NULL 2 (PROD (NULL 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (NULL nil (PROD (NULL nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (NULL t (PROD (NULL t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (NULL (cons t t) (PROD (NULL (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (NULL (cons nil t) (PROD (NULL (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (NULL (cons nil nil) (PROD (NULL (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (NULL (cons 0 0) (PROD (NULL (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (NULL (cons 1 1) (PROD (NULL (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (NULL (list 1 2 3) (PROD (NULL (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (NULL (list (cons 1 1 ) ) (PROD (NULL (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 T) T 1) 1 ) T 1)
(PROD (OR 2 (PROD (OR 2 T) T 2) 2 ) T 2)
(PROD (OR nil (PROD (OR nil T) T nil) nil ) T nil)
(PROD (OR t (PROD (OR t T) T t) t ) T t)
(PROD (OR (cons t t) (PROD (OR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (OR 2 (PROD (OR 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (OR nil (PROD (OR nil NIL) NIL nil) nil ) NIL nil)
(PROD (OR t (PROD (OR t NIL) NIL t) t ) NIL t)
(PROD (OR (cons t t) (PROD (OR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 A) A 1) 1 ) A 1)
(PROD (OR 2 (PROD (OR 2 A) A 2) 2 ) A 2)
(PROD (OR nil (PROD (OR nil A) A nil) nil ) A nil)
(PROD (OR t (PROD (OR t A) A t) t ) A t)
(PROD (OR (cons t t) (PROD (OR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 B) B 1) 1 ) B 1)
(PROD (OR 2 (PROD (OR 2 B) B 2) 2 ) B 2)
(PROD (OR nil (PROD (OR nil B) B nil) nil ) B nil)
(PROD (OR t (PROD (OR t B) B t) t ) B t)
(PROD (OR (cons t t) (PROD (OR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 C) C 1) 1 ) C 1)
(PROD (OR 2 (PROD (OR 2 C) C 2) 2 ) C 2)
(PROD (OR nil (PROD (OR nil C) C nil) nil ) C nil)
(PROD (OR t (PROD (OR t C) C t) t ) C t)
(PROD (OR (cons t t) (PROD (OR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 1) 1 1) 1 ) 1 1)
(PROD (OR 2 (PROD (OR 2 1) 1 2) 2 ) 1 2)
(PROD (OR nil (PROD (OR nil 1) 1 nil) nil ) 1 nil)
(PROD (OR t (PROD (OR t 1) 1 t) t ) 1 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 2) 2 1) 1 ) 2 1)
(PROD (OR 2 (PROD (OR 2 2) 2 2) 2 ) 2 2)
(PROD (OR nil (PROD (OR nil 2) 2 nil) nil ) 2 nil)
(PROD (OR t (PROD (OR t 2) 2 t) t ) 2 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 3) 3 1) 1 ) 3 1)
(PROD (OR 2 (PROD (OR 2 3) 3 2) 2 ) 3 2)
(PROD (OR nil (PROD (OR nil 3) 3 nil) nil ) 3 nil)
(PROD (OR t (PROD (OR t 3) 3 t) t ) 3 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 ()) () 1) 1 ) () 1)
(PROD (OR 2 (PROD (OR 2 ()) () 2) 2 ) () 2)
(PROD (OR nil (PROD (OR nil ()) () nil) nil ) () nil)
(PROD (OR t (PROD (OR t ()) () t) t ) () t)
(PROD (OR (cons t t) (PROD (OR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 (())) (()) 1) 1 ) (()) 1)
(PROD (OR 2 (PROD (OR 2 (())) (()) 2) 2 ) (()) 2)
(PROD (OR nil (PROD (OR nil (())) (()) nil) nil ) (()) nil)
(PROD (OR t (PROD (OR t (())) (()) t) t ) (()) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (OR 2 (PROD (OR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (OR nil (PROD (OR nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (OR t (PROD (OR t ((()))) ((())) t) t ) ((())) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (OR 2 (PROD (OR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (OR nil (PROD (OR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (OR t (PROD (OR t (((())))) (((()))) t) t ) (((()))) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 'A) 'A 1) 1 ) 'A 1)
(PROD (OR 2 (PROD (OR 2 'A) 'A 2) 2 ) 'A 2)
(PROD (OR nil (PROD (OR nil 'A) 'A nil) nil ) 'A nil)
(PROD (OR t (PROD (OR t 'A) 'A t) t ) 'A t)
(PROD (OR (cons t t) (PROD (OR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 'B) 'B 1) 1 ) 'B 1)
(PROD (OR 2 (PROD (OR 2 'B) 'B 2) 2 ) 'B 2)
(PROD (OR nil (PROD (OR nil 'B) 'B nil) nil ) 'B nil)
(PROD (OR t (PROD (OR t 'B) 'B t) t ) 'B t)
(PROD (OR (cons t t) (PROD (OR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 'C) 'C 1) 1 ) 'C 1)
(PROD (OR 2 (PROD (OR 2 'C) 'C 2) 2 ) 'C 2)
(PROD (OR nil (PROD (OR nil 'C) 'C nil) nil ) 'C nil)
(PROD (OR t (PROD (OR t 'C) 'C t) t ) 'C t)
(PROD (OR (cons t t) (PROD (OR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 '1) '1 1) 1 ) '1 1)
(PROD (OR 2 (PROD (OR 2 '1) '1 2) 2 ) '1 2)
(PROD (OR nil (PROD (OR nil '1) '1 nil) nil ) '1 nil)
(PROD (OR t (PROD (OR t '1) '1 t) t ) '1 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 '2) '2 1) 1 ) '2 1)
(PROD (OR 2 (PROD (OR 2 '2) '2 2) 2 ) '2 2)
(PROD (OR nil (PROD (OR nil '2) '2 nil) nil ) '2 nil)
(PROD (OR t (PROD (OR t '2) '2 t) t ) '2 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 '3) '3 1) 1 ) '3 1)
(PROD (OR 2 (PROD (OR 2 '3) '3 2) 2 ) '3 2)
(PROD (OR nil (PROD (OR nil '3) '3 nil) nil ) '3 nil)
(PROD (OR t (PROD (OR t '3) '3 t) t ) '3 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 '()) '() 1) 1 ) '() 1)
(PROD (OR 2 (PROD (OR 2 '()) '() 2) 2 ) '() 2)
(PROD (OR nil (PROD (OR nil '()) '() nil) nil ) '() nil)
(PROD (OR t (PROD (OR t '()) '() t) t ) '() t)
(PROD (OR (cons t t) (PROD (OR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (OR 2 (PROD (OR 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (OR nil (PROD (OR nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (OR t (PROD (OR t '(())) '(()) t) t ) '(()) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (OR 2 (PROD (OR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (OR nil (PROD (OR nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (OR t (PROD (OR t '((()))) '((())) t) t ) '((())) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (OR 2 (PROD (OR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (OR nil (PROD (OR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (OR t (PROD (OR t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (OR 2 (PROD (OR 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (OR nil (PROD (OR nil ,A) ,A nil) nil ) ,A nil)
(PROD (OR t (PROD (OR t ,A) ,A t) t ) ,A t)
(PROD (OR (cons t t) (PROD (OR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (OR 2 (PROD (OR 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (OR nil (PROD (OR nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (OR t (PROD (OR t ,1) ,1 t) t ) ,1 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (OR 2 (PROD (OR 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (OR nil (PROD (OR nil ,()) ,() nil) nil ) ,() nil)
(PROD (OR t (PROD (OR t ,()) ,() t) t ) ,() t)
(PROD (OR (cons t t) (PROD (OR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (OR 2 (PROD (OR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (OR nil (PROD (OR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (OR t (PROD (OR t ,(())) ,(()) t) t ) ,(()) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (OR 2 (PROD (OR 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (OR nil (PROD (OR nil `'A) `'A nil) nil ) `'A nil)
(PROD (OR t (PROD (OR t `'A) `'A t) t ) `'A t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (OR 2 (PROD (OR 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (OR nil (PROD (OR nil `'B) `'B nil) nil ) `'B nil)
(PROD (OR t (PROD (OR t `'B) `'B t) t ) `'B t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (OR 2 (PROD (OR 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (OR nil (PROD (OR nil `'C) `'C nil) nil ) `'C nil)
(PROD (OR t (PROD (OR t `'C) `'C t) t ) `'C t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (OR 2 (PROD (OR 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (OR nil (PROD (OR nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (OR t (PROD (OR t `'1) `'1 t) t ) `'1 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (OR 2 (PROD (OR 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (OR nil (PROD (OR nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (OR t (PROD (OR t `'2) `'2 t) t ) `'2 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (OR 2 (PROD (OR 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (OR nil (PROD (OR nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (OR t (PROD (OR t `'3) `'3 t) t ) `'3 t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (OR 2 (PROD (OR 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (OR nil (PROD (OR nil `'()) `'() nil) nil ) `'() nil)
(PROD (OR t (PROD (OR t `'()) `'() t) t ) `'() t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (OR 2 (PROD (OR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (OR nil (PROD (OR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (OR t (PROD (OR t `'(())) `'(()) t) t ) `'(()) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (OR 2 (PROD (OR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (OR nil (PROD (OR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (OR t (PROD (OR t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (OR 1 (PROD (OR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (OR 2 (PROD (OR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (OR nil (PROD (OR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (OR t (PROD (OR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (OR (cons t t) (PROD (OR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (OR (cons nil t) (PROD (OR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (OR (cons nil nil) (PROD (OR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (OR (cons 0 0) (PROD (OR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (OR (cons 1 1) (PROD (OR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (OR (list 1 2 3) (PROD (OR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (OR (list (cons 1 1 ) ) (PROD (OR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 T) T 1) 1 ) T 1)
(PROD (ORD 2 (PROD (ORD 2 T) T 2) 2 ) T 2)
(PROD (ORD nil (PROD (ORD nil T) T nil) nil ) T nil)
(PROD (ORD t (PROD (ORD t T) T t) t ) T t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (ORD 2 (PROD (ORD 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (ORD nil (PROD (ORD nil NIL) NIL nil) nil ) NIL nil)
(PROD (ORD t (PROD (ORD t NIL) NIL t) t ) NIL t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 A) A 1) 1 ) A 1)
(PROD (ORD 2 (PROD (ORD 2 A) A 2) 2 ) A 2)
(PROD (ORD nil (PROD (ORD nil A) A nil) nil ) A nil)
(PROD (ORD t (PROD (ORD t A) A t) t ) A t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 B) B 1) 1 ) B 1)
(PROD (ORD 2 (PROD (ORD 2 B) B 2) 2 ) B 2)
(PROD (ORD nil (PROD (ORD nil B) B nil) nil ) B nil)
(PROD (ORD t (PROD (ORD t B) B t) t ) B t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 C) C 1) 1 ) C 1)
(PROD (ORD 2 (PROD (ORD 2 C) C 2) 2 ) C 2)
(PROD (ORD nil (PROD (ORD nil C) C nil) nil ) C nil)
(PROD (ORD t (PROD (ORD t C) C t) t ) C t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 1) 1 1) 1 ) 1 1)
(PROD (ORD 2 (PROD (ORD 2 1) 1 2) 2 ) 1 2)
(PROD (ORD nil (PROD (ORD nil 1) 1 nil) nil ) 1 nil)
(PROD (ORD t (PROD (ORD t 1) 1 t) t ) 1 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 2) 2 1) 1 ) 2 1)
(PROD (ORD 2 (PROD (ORD 2 2) 2 2) 2 ) 2 2)
(PROD (ORD nil (PROD (ORD nil 2) 2 nil) nil ) 2 nil)
(PROD (ORD t (PROD (ORD t 2) 2 t) t ) 2 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 3) 3 1) 1 ) 3 1)
(PROD (ORD 2 (PROD (ORD 2 3) 3 2) 2 ) 3 2)
(PROD (ORD nil (PROD (ORD nil 3) 3 nil) nil ) 3 nil)
(PROD (ORD t (PROD (ORD t 3) 3 t) t ) 3 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 ()) () 1) 1 ) () 1)
(PROD (ORD 2 (PROD (ORD 2 ()) () 2) 2 ) () 2)
(PROD (ORD nil (PROD (ORD nil ()) () nil) nil ) () nil)
(PROD (ORD t (PROD (ORD t ()) () t) t ) () t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 (())) (()) 1) 1 ) (()) 1)
(PROD (ORD 2 (PROD (ORD 2 (())) (()) 2) 2 ) (()) 2)
(PROD (ORD nil (PROD (ORD nil (())) (()) nil) nil ) (()) nil)
(PROD (ORD t (PROD (ORD t (())) (()) t) t ) (()) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (ORD 2 (PROD (ORD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (ORD nil (PROD (ORD nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (ORD t (PROD (ORD t ((()))) ((())) t) t ) ((())) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (ORD 2 (PROD (ORD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (ORD nil (PROD (ORD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (ORD t (PROD (ORD t (((())))) (((()))) t) t ) (((()))) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 'A) 'A 1) 1 ) 'A 1)
(PROD (ORD 2 (PROD (ORD 2 'A) 'A 2) 2 ) 'A 2)
(PROD (ORD nil (PROD (ORD nil 'A) 'A nil) nil ) 'A nil)
(PROD (ORD t (PROD (ORD t 'A) 'A t) t ) 'A t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 'B) 'B 1) 1 ) 'B 1)
(PROD (ORD 2 (PROD (ORD 2 'B) 'B 2) 2 ) 'B 2)
(PROD (ORD nil (PROD (ORD nil 'B) 'B nil) nil ) 'B nil)
(PROD (ORD t (PROD (ORD t 'B) 'B t) t ) 'B t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 'C) 'C 1) 1 ) 'C 1)
(PROD (ORD 2 (PROD (ORD 2 'C) 'C 2) 2 ) 'C 2)
(PROD (ORD nil (PROD (ORD nil 'C) 'C nil) nil ) 'C nil)
(PROD (ORD t (PROD (ORD t 'C) 'C t) t ) 'C t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 '1) '1 1) 1 ) '1 1)
(PROD (ORD 2 (PROD (ORD 2 '1) '1 2) 2 ) '1 2)
(PROD (ORD nil (PROD (ORD nil '1) '1 nil) nil ) '1 nil)
(PROD (ORD t (PROD (ORD t '1) '1 t) t ) '1 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 '2) '2 1) 1 ) '2 1)
(PROD (ORD 2 (PROD (ORD 2 '2) '2 2) 2 ) '2 2)
(PROD (ORD nil (PROD (ORD nil '2) '2 nil) nil ) '2 nil)
(PROD (ORD t (PROD (ORD t '2) '2 t) t ) '2 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 '3) '3 1) 1 ) '3 1)
(PROD (ORD 2 (PROD (ORD 2 '3) '3 2) 2 ) '3 2)
(PROD (ORD nil (PROD (ORD nil '3) '3 nil) nil ) '3 nil)
(PROD (ORD t (PROD (ORD t '3) '3 t) t ) '3 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 '()) '() 1) 1 ) '() 1)
(PROD (ORD 2 (PROD (ORD 2 '()) '() 2) 2 ) '() 2)
(PROD (ORD nil (PROD (ORD nil '()) '() nil) nil ) '() nil)
(PROD (ORD t (PROD (ORD t '()) '() t) t ) '() t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (ORD 2 (PROD (ORD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (ORD nil (PROD (ORD nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (ORD t (PROD (ORD t '(())) '(()) t) t ) '(()) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (ORD 2 (PROD (ORD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (ORD nil (PROD (ORD nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (ORD t (PROD (ORD t '((()))) '((())) t) t ) '((())) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (ORD 2 (PROD (ORD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (ORD nil (PROD (ORD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (ORD t (PROD (ORD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (ORD 2 (PROD (ORD 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (ORD nil (PROD (ORD nil ,A) ,A nil) nil ) ,A nil)
(PROD (ORD t (PROD (ORD t ,A) ,A t) t ) ,A t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (ORD 2 (PROD (ORD 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (ORD nil (PROD (ORD nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (ORD t (PROD (ORD t ,1) ,1 t) t ) ,1 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (ORD 2 (PROD (ORD 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (ORD nil (PROD (ORD nil ,()) ,() nil) nil ) ,() nil)
(PROD (ORD t (PROD (ORD t ,()) ,() t) t ) ,() t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (ORD 2 (PROD (ORD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (ORD nil (PROD (ORD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (ORD t (PROD (ORD t ,(())) ,(()) t) t ) ,(()) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (ORD 2 (PROD (ORD 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (ORD nil (PROD (ORD nil `'A) `'A nil) nil ) `'A nil)
(PROD (ORD t (PROD (ORD t `'A) `'A t) t ) `'A t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (ORD 2 (PROD (ORD 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (ORD nil (PROD (ORD nil `'B) `'B nil) nil ) `'B nil)
(PROD (ORD t (PROD (ORD t `'B) `'B t) t ) `'B t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (ORD 2 (PROD (ORD 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (ORD nil (PROD (ORD nil `'C) `'C nil) nil ) `'C nil)
(PROD (ORD t (PROD (ORD t `'C) `'C t) t ) `'C t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (ORD 2 (PROD (ORD 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (ORD nil (PROD (ORD nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (ORD t (PROD (ORD t `'1) `'1 t) t ) `'1 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (ORD 2 (PROD (ORD 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (ORD nil (PROD (ORD nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (ORD t (PROD (ORD t `'2) `'2 t) t ) `'2 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (ORD 2 (PROD (ORD 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (ORD nil (PROD (ORD nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (ORD t (PROD (ORD t `'3) `'3 t) t ) `'3 t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (ORD 2 (PROD (ORD 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (ORD nil (PROD (ORD nil `'()) `'() nil) nil ) `'() nil)
(PROD (ORD t (PROD (ORD t `'()) `'() t) t ) `'() t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (ORD 2 (PROD (ORD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (ORD nil (PROD (ORD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (ORD t (PROD (ORD t `'(())) `'(()) t) t ) `'(()) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (ORD 2 (PROD (ORD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (ORD nil (PROD (ORD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (ORD t (PROD (ORD t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (ORD 1 (PROD (ORD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (ORD 2 (PROD (ORD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (ORD nil (PROD (ORD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (ORD t (PROD (ORD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (ORD (cons t t) (PROD (ORD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (ORD (cons nil t) (PROD (ORD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (ORD (cons nil nil) (PROD (ORD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (ORD (cons 0 0) (PROD (ORD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (ORD (cons 1 1) (PROD (ORD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (ORD (list 1 2 3) (PROD (ORD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (ORD (list (cons 1 1 ) ) (PROD (ORD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 T) T 1) 1 ) T 1)
(PROD (PAIR 2 (PROD (PAIR 2 T) T 2) 2 ) T 2)
(PROD (PAIR nil (PROD (PAIR nil T) T nil) nil ) T nil)
(PROD (PAIR t (PROD (PAIR t T) T t) t ) T t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (PAIR 2 (PROD (PAIR 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (PAIR nil (PROD (PAIR nil NIL) NIL nil) nil ) NIL nil)
(PROD (PAIR t (PROD (PAIR t NIL) NIL t) t ) NIL t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 A) A 1) 1 ) A 1)
(PROD (PAIR 2 (PROD (PAIR 2 A) A 2) 2 ) A 2)
(PROD (PAIR nil (PROD (PAIR nil A) A nil) nil ) A nil)
(PROD (PAIR t (PROD (PAIR t A) A t) t ) A t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 B) B 1) 1 ) B 1)
(PROD (PAIR 2 (PROD (PAIR 2 B) B 2) 2 ) B 2)
(PROD (PAIR nil (PROD (PAIR nil B) B nil) nil ) B nil)
(PROD (PAIR t (PROD (PAIR t B) B t) t ) B t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 C) C 1) 1 ) C 1)
(PROD (PAIR 2 (PROD (PAIR 2 C) C 2) 2 ) C 2)
(PROD (PAIR nil (PROD (PAIR nil C) C nil) nil ) C nil)
(PROD (PAIR t (PROD (PAIR t C) C t) t ) C t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 1) 1 1) 1 ) 1 1)
(PROD (PAIR 2 (PROD (PAIR 2 1) 1 2) 2 ) 1 2)
(PROD (PAIR nil (PROD (PAIR nil 1) 1 nil) nil ) 1 nil)
(PROD (PAIR t (PROD (PAIR t 1) 1 t) t ) 1 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 2) 2 1) 1 ) 2 1)
(PROD (PAIR 2 (PROD (PAIR 2 2) 2 2) 2 ) 2 2)
(PROD (PAIR nil (PROD (PAIR nil 2) 2 nil) nil ) 2 nil)
(PROD (PAIR t (PROD (PAIR t 2) 2 t) t ) 2 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 3) 3 1) 1 ) 3 1)
(PROD (PAIR 2 (PROD (PAIR 2 3) 3 2) 2 ) 3 2)
(PROD (PAIR nil (PROD (PAIR nil 3) 3 nil) nil ) 3 nil)
(PROD (PAIR t (PROD (PAIR t 3) 3 t) t ) 3 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 ()) () 1) 1 ) () 1)
(PROD (PAIR 2 (PROD (PAIR 2 ()) () 2) 2 ) () 2)
(PROD (PAIR nil (PROD (PAIR nil ()) () nil) nil ) () nil)
(PROD (PAIR t (PROD (PAIR t ()) () t) t ) () t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 (())) (()) 1) 1 ) (()) 1)
(PROD (PAIR 2 (PROD (PAIR 2 (())) (()) 2) 2 ) (()) 2)
(PROD (PAIR nil (PROD (PAIR nil (())) (()) nil) nil ) (()) nil)
(PROD (PAIR t (PROD (PAIR t (())) (()) t) t ) (()) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (PAIR 2 (PROD (PAIR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (PAIR nil (PROD (PAIR nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (PAIR t (PROD (PAIR t ((()))) ((())) t) t ) ((())) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (PAIR 2 (PROD (PAIR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (PAIR nil (PROD (PAIR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (PAIR t (PROD (PAIR t (((())))) (((()))) t) t ) (((()))) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 'A) 'A 1) 1 ) 'A 1)
(PROD (PAIR 2 (PROD (PAIR 2 'A) 'A 2) 2 ) 'A 2)
(PROD (PAIR nil (PROD (PAIR nil 'A) 'A nil) nil ) 'A nil)
(PROD (PAIR t (PROD (PAIR t 'A) 'A t) t ) 'A t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 'B) 'B 1) 1 ) 'B 1)
(PROD (PAIR 2 (PROD (PAIR 2 'B) 'B 2) 2 ) 'B 2)
(PROD (PAIR nil (PROD (PAIR nil 'B) 'B nil) nil ) 'B nil)
(PROD (PAIR t (PROD (PAIR t 'B) 'B t) t ) 'B t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 'C) 'C 1) 1 ) 'C 1)
(PROD (PAIR 2 (PROD (PAIR 2 'C) 'C 2) 2 ) 'C 2)
(PROD (PAIR nil (PROD (PAIR nil 'C) 'C nil) nil ) 'C nil)
(PROD (PAIR t (PROD (PAIR t 'C) 'C t) t ) 'C t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 '1) '1 1) 1 ) '1 1)
(PROD (PAIR 2 (PROD (PAIR 2 '1) '1 2) 2 ) '1 2)
(PROD (PAIR nil (PROD (PAIR nil '1) '1 nil) nil ) '1 nil)
(PROD (PAIR t (PROD (PAIR t '1) '1 t) t ) '1 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 '2) '2 1) 1 ) '2 1)
(PROD (PAIR 2 (PROD (PAIR 2 '2) '2 2) 2 ) '2 2)
(PROD (PAIR nil (PROD (PAIR nil '2) '2 nil) nil ) '2 nil)
(PROD (PAIR t (PROD (PAIR t '2) '2 t) t ) '2 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 '3) '3 1) 1 ) '3 1)
(PROD (PAIR 2 (PROD (PAIR 2 '3) '3 2) 2 ) '3 2)
(PROD (PAIR nil (PROD (PAIR nil '3) '3 nil) nil ) '3 nil)
(PROD (PAIR t (PROD (PAIR t '3) '3 t) t ) '3 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 '()) '() 1) 1 ) '() 1)
(PROD (PAIR 2 (PROD (PAIR 2 '()) '() 2) 2 ) '() 2)
(PROD (PAIR nil (PROD (PAIR nil '()) '() nil) nil ) '() nil)
(PROD (PAIR t (PROD (PAIR t '()) '() t) t ) '() t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (PAIR 2 (PROD (PAIR 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (PAIR nil (PROD (PAIR nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (PAIR t (PROD (PAIR t '(())) '(()) t) t ) '(()) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (PAIR 2 (PROD (PAIR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (PAIR nil (PROD (PAIR nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (PAIR t (PROD (PAIR t '((()))) '((())) t) t ) '((())) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (PAIR 2 (PROD (PAIR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (PAIR nil (PROD (PAIR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (PAIR t (PROD (PAIR t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (PAIR 2 (PROD (PAIR 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (PAIR nil (PROD (PAIR nil ,A) ,A nil) nil ) ,A nil)
(PROD (PAIR t (PROD (PAIR t ,A) ,A t) t ) ,A t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (PAIR 2 (PROD (PAIR 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (PAIR nil (PROD (PAIR nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (PAIR t (PROD (PAIR t ,1) ,1 t) t ) ,1 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (PAIR 2 (PROD (PAIR 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (PAIR nil (PROD (PAIR nil ,()) ,() nil) nil ) ,() nil)
(PROD (PAIR t (PROD (PAIR t ,()) ,() t) t ) ,() t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (PAIR 2 (PROD (PAIR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (PAIR nil (PROD (PAIR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (PAIR t (PROD (PAIR t ,(())) ,(()) t) t ) ,(()) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (PAIR nil (PROD (PAIR nil `'A) `'A nil) nil ) `'A nil)
(PROD (PAIR t (PROD (PAIR t `'A) `'A t) t ) `'A t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (PAIR nil (PROD (PAIR nil `'B) `'B nil) nil ) `'B nil)
(PROD (PAIR t (PROD (PAIR t `'B) `'B t) t ) `'B t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (PAIR nil (PROD (PAIR nil `'C) `'C nil) nil ) `'C nil)
(PROD (PAIR t (PROD (PAIR t `'C) `'C t) t ) `'C t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (PAIR nil (PROD (PAIR nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (PAIR t (PROD (PAIR t `'1) `'1 t) t ) `'1 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (PAIR nil (PROD (PAIR nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (PAIR t (PROD (PAIR t `'2) `'2 t) t ) `'2 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (PAIR nil (PROD (PAIR nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (PAIR t (PROD (PAIR t `'3) `'3 t) t ) `'3 t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (PAIR nil (PROD (PAIR nil `'()) `'() nil) nil ) `'() nil)
(PROD (PAIR t (PROD (PAIR t `'()) `'() t) t ) `'() t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (PAIR nil (PROD (PAIR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (PAIR t (PROD (PAIR t `'(())) `'(()) t) t ) `'(()) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (PAIR nil (PROD (PAIR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (PAIR t (PROD (PAIR t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (PAIR 1 (PROD (PAIR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (PAIR 2 (PROD (PAIR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (PAIR nil (PROD (PAIR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (PAIR t (PROD (PAIR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (PAIR (cons t t) (PROD (PAIR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (PAIR (cons nil t) (PROD (PAIR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (PAIR (cons nil nil) (PROD (PAIR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (PAIR (cons 0 0) (PROD (PAIR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (PAIR (cons 1 1) (PROD (PAIR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (PAIR (list 1 2 3) (PROD (PAIR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (PAIR (list (cons 1 1 ) ) (PROD (PAIR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 T) T 1) 1 ) T 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 T) T 2) 2 ) T 2)
(PROD (PAIR* nil (PROD (PAIR* nil T) T nil) nil ) T nil)
(PROD (PAIR* t (PROD (PAIR* t T) T t) t ) T t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (PAIR* nil (PROD (PAIR* nil NIL) NIL nil) nil ) NIL nil)
(PROD (PAIR* t (PROD (PAIR* t NIL) NIL t) t ) NIL t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 A) A 1) 1 ) A 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 A) A 2) 2 ) A 2)
(PROD (PAIR* nil (PROD (PAIR* nil A) A nil) nil ) A nil)
(PROD (PAIR* t (PROD (PAIR* t A) A t) t ) A t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 B) B 1) 1 ) B 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 B) B 2) 2 ) B 2)
(PROD (PAIR* nil (PROD (PAIR* nil B) B nil) nil ) B nil)
(PROD (PAIR* t (PROD (PAIR* t B) B t) t ) B t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 C) C 1) 1 ) C 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 C) C 2) 2 ) C 2)
(PROD (PAIR* nil (PROD (PAIR* nil C) C nil) nil ) C nil)
(PROD (PAIR* t (PROD (PAIR* t C) C t) t ) C t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 1) 1 1) 1 ) 1 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 1) 1 2) 2 ) 1 2)
(PROD (PAIR* nil (PROD (PAIR* nil 1) 1 nil) nil ) 1 nil)
(PROD (PAIR* t (PROD (PAIR* t 1) 1 t) t ) 1 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 2) 2 1) 1 ) 2 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 2) 2 2) 2 ) 2 2)
(PROD (PAIR* nil (PROD (PAIR* nil 2) 2 nil) nil ) 2 nil)
(PROD (PAIR* t (PROD (PAIR* t 2) 2 t) t ) 2 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 3) 3 1) 1 ) 3 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 3) 3 2) 2 ) 3 2)
(PROD (PAIR* nil (PROD (PAIR* nil 3) 3 nil) nil ) 3 nil)
(PROD (PAIR* t (PROD (PAIR* t 3) 3 t) t ) 3 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 ()) () 1) 1 ) () 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 ()) () 2) 2 ) () 2)
(PROD (PAIR* nil (PROD (PAIR* nil ()) () nil) nil ) () nil)
(PROD (PAIR* t (PROD (PAIR* t ()) () t) t ) () t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 (())) (()) 1) 1 ) (()) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 (())) (()) 2) 2 ) (()) 2)
(PROD (PAIR* nil (PROD (PAIR* nil (())) (()) nil) nil ) (()) nil)
(PROD (PAIR* t (PROD (PAIR* t (())) (()) t) t ) (()) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (PAIR* nil (PROD (PAIR* nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (PAIR* t (PROD (PAIR* t ((()))) ((())) t) t ) ((())) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (PAIR* nil (PROD (PAIR* nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (PAIR* t (PROD (PAIR* t (((())))) (((()))) t) t ) (((()))) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 'A) 'A 1) 1 ) 'A 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 'A) 'A 2) 2 ) 'A 2)
(PROD (PAIR* nil (PROD (PAIR* nil 'A) 'A nil) nil ) 'A nil)
(PROD (PAIR* t (PROD (PAIR* t 'A) 'A t) t ) 'A t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 'B) 'B 1) 1 ) 'B 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 'B) 'B 2) 2 ) 'B 2)
(PROD (PAIR* nil (PROD (PAIR* nil 'B) 'B nil) nil ) 'B nil)
(PROD (PAIR* t (PROD (PAIR* t 'B) 'B t) t ) 'B t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 'C) 'C 1) 1 ) 'C 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 'C) 'C 2) 2 ) 'C 2)
(PROD (PAIR* nil (PROD (PAIR* nil 'C) 'C nil) nil ) 'C nil)
(PROD (PAIR* t (PROD (PAIR* t 'C) 'C t) t ) 'C t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 '1) '1 1) 1 ) '1 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 '1) '1 2) 2 ) '1 2)
(PROD (PAIR* nil (PROD (PAIR* nil '1) '1 nil) nil ) '1 nil)
(PROD (PAIR* t (PROD (PAIR* t '1) '1 t) t ) '1 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 '2) '2 1) 1 ) '2 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 '2) '2 2) 2 ) '2 2)
(PROD (PAIR* nil (PROD (PAIR* nil '2) '2 nil) nil ) '2 nil)
(PROD (PAIR* t (PROD (PAIR* t '2) '2 t) t ) '2 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 '3) '3 1) 1 ) '3 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 '3) '3 2) 2 ) '3 2)
(PROD (PAIR* nil (PROD (PAIR* nil '3) '3 nil) nil ) '3 nil)
(PROD (PAIR* t (PROD (PAIR* t '3) '3 t) t ) '3 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 '()) '() 1) 1 ) '() 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 '()) '() 2) 2 ) '() 2)
(PROD (PAIR* nil (PROD (PAIR* nil '()) '() nil) nil ) '() nil)
(PROD (PAIR* t (PROD (PAIR* t '()) '() t) t ) '() t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (PAIR* nil (PROD (PAIR* nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (PAIR* t (PROD (PAIR* t '(())) '(()) t) t ) '(()) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (PAIR* nil (PROD (PAIR* nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (PAIR* t (PROD (PAIR* t '((()))) '((())) t) t ) '((())) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (PAIR* nil (PROD (PAIR* nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (PAIR* t (PROD (PAIR* t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (PAIR* nil (PROD (PAIR* nil ,A) ,A nil) nil ) ,A nil)
(PROD (PAIR* t (PROD (PAIR* t ,A) ,A t) t ) ,A t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (PAIR* nil (PROD (PAIR* nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (PAIR* t (PROD (PAIR* t ,1) ,1 t) t ) ,1 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (PAIR* nil (PROD (PAIR* nil ,()) ,() nil) nil ) ,() nil)
(PROD (PAIR* t (PROD (PAIR* t ,()) ,() t) t ) ,() t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (PAIR* nil (PROD (PAIR* nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (PAIR* t (PROD (PAIR* t ,(())) ,(()) t) t ) ,(()) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'A) `'A nil) nil ) `'A nil)
(PROD (PAIR* t (PROD (PAIR* t `'A) `'A t) t ) `'A t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'B) `'B nil) nil ) `'B nil)
(PROD (PAIR* t (PROD (PAIR* t `'B) `'B t) t ) `'B t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'C) `'C nil) nil ) `'C nil)
(PROD (PAIR* t (PROD (PAIR* t `'C) `'C t) t ) `'C t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (PAIR* t (PROD (PAIR* t `'1) `'1 t) t ) `'1 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (PAIR* t (PROD (PAIR* t `'2) `'2 t) t ) `'2 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (PAIR* t (PROD (PAIR* t `'3) `'3 t) t ) `'3 t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'()) `'() nil) nil ) `'() nil)
(PROD (PAIR* t (PROD (PAIR* t `'()) `'() t) t ) `'() t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (PAIR* t (PROD (PAIR* t `'(())) `'(()) t) t ) `'(()) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (PAIR* t (PROD (PAIR* t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (PAIR* 1 (PROD (PAIR* 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (PAIR* 2 (PROD (PAIR* 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (PAIR* nil (PROD (PAIR* nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (PAIR* t (PROD (PAIR* t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (PAIR* (cons t t) (PROD (PAIR* (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (PAIR* (cons nil t) (PROD (PAIR* (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (PAIR* (cons nil nil) (PROD (PAIR* (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (PAIR* (cons 0 0) (PROD (PAIR* (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (PAIR* (cons 1 1) (PROD (PAIR* (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (PAIR* (list 1 2 3) (PROD (PAIR* (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (PAIR* (list (cons 1 1 ) ) (PROD (PAIR* (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 T) T 1) 1 ) T 1)
(PROD (PROD 2 (PROD (PROD 2 T) T 2) 2 ) T 2)
(PROD (PROD nil (PROD (PROD nil T) T nil) nil ) T nil)
(PROD (PROD t (PROD (PROD t T) T t) t ) T t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (PROD 2 (PROD (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (PROD nil (PROD (PROD nil NIL) NIL nil) nil ) NIL nil)
(PROD (PROD t (PROD (PROD t NIL) NIL t) t ) NIL t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 A) A 1) 1 ) A 1)
(PROD (PROD 2 (PROD (PROD 2 A) A 2) 2 ) A 2)
(PROD (PROD nil (PROD (PROD nil A) A nil) nil ) A nil)
(PROD (PROD t (PROD (PROD t A) A t) t ) A t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 B) B 1) 1 ) B 1)
(PROD (PROD 2 (PROD (PROD 2 B) B 2) 2 ) B 2)
(PROD (PROD nil (PROD (PROD nil B) B nil) nil ) B nil)
(PROD (PROD t (PROD (PROD t B) B t) t ) B t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 C) C 1) 1 ) C 1)
(PROD (PROD 2 (PROD (PROD 2 C) C 2) 2 ) C 2)
(PROD (PROD nil (PROD (PROD nil C) C nil) nil ) C nil)
(PROD (PROD t (PROD (PROD t C) C t) t ) C t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 1) 1 1) 1 ) 1 1)
(PROD (PROD 2 (PROD (PROD 2 1) 1 2) 2 ) 1 2)
(PROD (PROD nil (PROD (PROD nil 1) 1 nil) nil ) 1 nil)
(PROD (PROD t (PROD (PROD t 1) 1 t) t ) 1 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 2) 2 1) 1 ) 2 1)
(PROD (PROD 2 (PROD (PROD 2 2) 2 2) 2 ) 2 2)
(PROD (PROD nil (PROD (PROD nil 2) 2 nil) nil ) 2 nil)
(PROD (PROD t (PROD (PROD t 2) 2 t) t ) 2 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 3) 3 1) 1 ) 3 1)
(PROD (PROD 2 (PROD (PROD 2 3) 3 2) 2 ) 3 2)
(PROD (PROD nil (PROD (PROD nil 3) 3 nil) nil ) 3 nil)
(PROD (PROD t (PROD (PROD t 3) 3 t) t ) 3 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 ()) () 1) 1 ) () 1)
(PROD (PROD 2 (PROD (PROD 2 ()) () 2) 2 ) () 2)
(PROD (PROD nil (PROD (PROD nil ()) () nil) nil ) () nil)
(PROD (PROD t (PROD (PROD t ()) () t) t ) () t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 (())) (()) 1) 1 ) (()) 1)
(PROD (PROD 2 (PROD (PROD 2 (())) (()) 2) 2 ) (()) 2)
(PROD (PROD nil (PROD (PROD nil (())) (()) nil) nil ) (()) nil)
(PROD (PROD t (PROD (PROD t (())) (()) t) t ) (()) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (PROD 2 (PROD (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (PROD nil (PROD (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (PROD t (PROD (PROD t ((()))) ((())) t) t ) ((())) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (PROD 2 (PROD (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (PROD nil (PROD (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (PROD t (PROD (PROD t (((())))) (((()))) t) t ) (((()))) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 'A) 'A 1) 1 ) 'A 1)
(PROD (PROD 2 (PROD (PROD 2 'A) 'A 2) 2 ) 'A 2)
(PROD (PROD nil (PROD (PROD nil 'A) 'A nil) nil ) 'A nil)
(PROD (PROD t (PROD (PROD t 'A) 'A t) t ) 'A t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 'B) 'B 1) 1 ) 'B 1)
(PROD (PROD 2 (PROD (PROD 2 'B) 'B 2) 2 ) 'B 2)
(PROD (PROD nil (PROD (PROD nil 'B) 'B nil) nil ) 'B nil)
(PROD (PROD t (PROD (PROD t 'B) 'B t) t ) 'B t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 'C) 'C 1) 1 ) 'C 1)
(PROD (PROD 2 (PROD (PROD 2 'C) 'C 2) 2 ) 'C 2)
(PROD (PROD nil (PROD (PROD nil 'C) 'C nil) nil ) 'C nil)
(PROD (PROD t (PROD (PROD t 'C) 'C t) t ) 'C t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 '1) '1 1) 1 ) '1 1)
(PROD (PROD 2 (PROD (PROD 2 '1) '1 2) 2 ) '1 2)
(PROD (PROD nil (PROD (PROD nil '1) '1 nil) nil ) '1 nil)
(PROD (PROD t (PROD (PROD t '1) '1 t) t ) '1 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 '2) '2 1) 1 ) '2 1)
(PROD (PROD 2 (PROD (PROD 2 '2) '2 2) 2 ) '2 2)
(PROD (PROD nil (PROD (PROD nil '2) '2 nil) nil ) '2 nil)
(PROD (PROD t (PROD (PROD t '2) '2 t) t ) '2 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 '3) '3 1) 1 ) '3 1)
(PROD (PROD 2 (PROD (PROD 2 '3) '3 2) 2 ) '3 2)
(PROD (PROD nil (PROD (PROD nil '3) '3 nil) nil ) '3 nil)
(PROD (PROD t (PROD (PROD t '3) '3 t) t ) '3 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 '()) '() 1) 1 ) '() 1)
(PROD (PROD 2 (PROD (PROD 2 '()) '() 2) 2 ) '() 2)
(PROD (PROD nil (PROD (PROD nil '()) '() nil) nil ) '() nil)
(PROD (PROD t (PROD (PROD t '()) '() t) t ) '() t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (PROD 2 (PROD (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (PROD nil (PROD (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (PROD t (PROD (PROD t '(())) '(()) t) t ) '(()) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (PROD 2 (PROD (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (PROD nil (PROD (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (PROD t (PROD (PROD t '((()))) '((())) t) t ) '((())) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (PROD 2 (PROD (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (PROD nil (PROD (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (PROD t (PROD (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (PROD 2 (PROD (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (PROD nil (PROD (PROD nil ,A) ,A nil) nil ) ,A nil)
(PROD (PROD t (PROD (PROD t ,A) ,A t) t ) ,A t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (PROD 2 (PROD (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (PROD nil (PROD (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (PROD t (PROD (PROD t ,1) ,1 t) t ) ,1 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (PROD 2 (PROD (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (PROD nil (PROD (PROD nil ,()) ,() nil) nil ) ,() nil)
(PROD (PROD t (PROD (PROD t ,()) ,() t) t ) ,() t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (PROD 2 (PROD (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (PROD nil (PROD (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (PROD t (PROD (PROD t ,(())) ,(()) t) t ) ,(()) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (PROD 2 (PROD (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (PROD nil (PROD (PROD nil `'A) `'A nil) nil ) `'A nil)
(PROD (PROD t (PROD (PROD t `'A) `'A t) t ) `'A t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (PROD 2 (PROD (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (PROD nil (PROD (PROD nil `'B) `'B nil) nil ) `'B nil)
(PROD (PROD t (PROD (PROD t `'B) `'B t) t ) `'B t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (PROD 2 (PROD (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (PROD nil (PROD (PROD nil `'C) `'C nil) nil ) `'C nil)
(PROD (PROD t (PROD (PROD t `'C) `'C t) t ) `'C t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (PROD 2 (PROD (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (PROD nil (PROD (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (PROD t (PROD (PROD t `'1) `'1 t) t ) `'1 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (PROD 2 (PROD (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (PROD nil (PROD (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (PROD t (PROD (PROD t `'2) `'2 t) t ) `'2 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (PROD 2 (PROD (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (PROD nil (PROD (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (PROD t (PROD (PROD t `'3) `'3 t) t ) `'3 t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (PROD 2 (PROD (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (PROD nil (PROD (PROD nil `'()) `'() nil) nil ) `'() nil)
(PROD (PROD t (PROD (PROD t `'()) `'() t) t ) `'() t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (PROD 2 (PROD (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (PROD nil (PROD (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (PROD t (PROD (PROD t `'(())) `'(()) t) t ) `'(()) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (PROD 2 (PROD (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (PROD nil (PROD (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (PROD t (PROD (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (PROD 1 (PROD (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (PROD 2 (PROD (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (PROD nil (PROD (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (PROD t (PROD (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (PROD (cons t t) (PROD (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (PROD (cons nil t) (PROD (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (PROD (cons nil nil) (PROD (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (PROD (cons 0 0) (PROD (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (PROD (cons 1 1) (PROD (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (PROD (list 1 2 3) (PROD (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (PROD (list (cons 1 1 ) ) (PROD (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 T) T 1) 1 ) T 1)
(PROD (PROG1 2 (PROD (PROG1 2 T) T 2) 2 ) T 2)
(PROD (PROG1 nil (PROD (PROG1 nil T) T nil) nil ) T nil)
(PROD (PROG1 t (PROD (PROG1 t T) T t) t ) T t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (PROG1 2 (PROD (PROG1 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (PROG1 nil (PROD (PROG1 nil NIL) NIL nil) nil ) NIL nil)
(PROD (PROG1 t (PROD (PROG1 t NIL) NIL t) t ) NIL t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 A) A 1) 1 ) A 1)
(PROD (PROG1 2 (PROD (PROG1 2 A) A 2) 2 ) A 2)
(PROD (PROG1 nil (PROD (PROG1 nil A) A nil) nil ) A nil)
(PROD (PROG1 t (PROD (PROG1 t A) A t) t ) A t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 B) B 1) 1 ) B 1)
(PROD (PROG1 2 (PROD (PROG1 2 B) B 2) 2 ) B 2)
(PROD (PROG1 nil (PROD (PROG1 nil B) B nil) nil ) B nil)
(PROD (PROG1 t (PROD (PROG1 t B) B t) t ) B t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 C) C 1) 1 ) C 1)
(PROD (PROG1 2 (PROD (PROG1 2 C) C 2) 2 ) C 2)
(PROD (PROG1 nil (PROD (PROG1 nil C) C nil) nil ) C nil)
(PROD (PROG1 t (PROD (PROG1 t C) C t) t ) C t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 1) 1 1) 1 ) 1 1)
(PROD (PROG1 2 (PROD (PROG1 2 1) 1 2) 2 ) 1 2)
(PROD (PROG1 nil (PROD (PROG1 nil 1) 1 nil) nil ) 1 nil)
(PROD (PROG1 t (PROD (PROG1 t 1) 1 t) t ) 1 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 2) 2 1) 1 ) 2 1)
(PROD (PROG1 2 (PROD (PROG1 2 2) 2 2) 2 ) 2 2)
(PROD (PROG1 nil (PROD (PROG1 nil 2) 2 nil) nil ) 2 nil)
(PROD (PROG1 t (PROD (PROG1 t 2) 2 t) t ) 2 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 3) 3 1) 1 ) 3 1)
(PROD (PROG1 2 (PROD (PROG1 2 3) 3 2) 2 ) 3 2)
(PROD (PROG1 nil (PROD (PROG1 nil 3) 3 nil) nil ) 3 nil)
(PROD (PROG1 t (PROD (PROG1 t 3) 3 t) t ) 3 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 ()) () 1) 1 ) () 1)
(PROD (PROG1 2 (PROD (PROG1 2 ()) () 2) 2 ) () 2)
(PROD (PROG1 nil (PROD (PROG1 nil ()) () nil) nil ) () nil)
(PROD (PROG1 t (PROD (PROG1 t ()) () t) t ) () t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 (())) (()) 1) 1 ) (()) 1)
(PROD (PROG1 2 (PROD (PROG1 2 (())) (()) 2) 2 ) (()) 2)
(PROD (PROG1 nil (PROD (PROG1 nil (())) (()) nil) nil ) (()) nil)
(PROD (PROG1 t (PROD (PROG1 t (())) (()) t) t ) (()) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (PROG1 2 (PROD (PROG1 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (PROG1 nil (PROD (PROG1 nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (PROG1 t (PROD (PROG1 t ((()))) ((())) t) t ) ((())) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (PROG1 2 (PROD (PROG1 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (PROG1 nil (PROD (PROG1 nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (PROG1 t (PROD (PROG1 t (((())))) (((()))) t) t ) (((()))) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 'A) 'A 1) 1 ) 'A 1)
(PROD (PROG1 2 (PROD (PROG1 2 'A) 'A 2) 2 ) 'A 2)
(PROD (PROG1 nil (PROD (PROG1 nil 'A) 'A nil) nil ) 'A nil)
(PROD (PROG1 t (PROD (PROG1 t 'A) 'A t) t ) 'A t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 'B) 'B 1) 1 ) 'B 1)
(PROD (PROG1 2 (PROD (PROG1 2 'B) 'B 2) 2 ) 'B 2)
(PROD (PROG1 nil (PROD (PROG1 nil 'B) 'B nil) nil ) 'B nil)
(PROD (PROG1 t (PROD (PROG1 t 'B) 'B t) t ) 'B t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 'C) 'C 1) 1 ) 'C 1)
(PROD (PROG1 2 (PROD (PROG1 2 'C) 'C 2) 2 ) 'C 2)
(PROD (PROG1 nil (PROD (PROG1 nil 'C) 'C nil) nil ) 'C nil)
(PROD (PROG1 t (PROD (PROG1 t 'C) 'C t) t ) 'C t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 '1) '1 1) 1 ) '1 1)
(PROD (PROG1 2 (PROD (PROG1 2 '1) '1 2) 2 ) '1 2)
(PROD (PROG1 nil (PROD (PROG1 nil '1) '1 nil) nil ) '1 nil)
(PROD (PROG1 t (PROD (PROG1 t '1) '1 t) t ) '1 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 '2) '2 1) 1 ) '2 1)
(PROD (PROG1 2 (PROD (PROG1 2 '2) '2 2) 2 ) '2 2)
(PROD (PROG1 nil (PROD (PROG1 nil '2) '2 nil) nil ) '2 nil)
(PROD (PROG1 t (PROD (PROG1 t '2) '2 t) t ) '2 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 '3) '3 1) 1 ) '3 1)
(PROD (PROG1 2 (PROD (PROG1 2 '3) '3 2) 2 ) '3 2)
(PROD (PROG1 nil (PROD (PROG1 nil '3) '3 nil) nil ) '3 nil)
(PROD (PROG1 t (PROD (PROG1 t '3) '3 t) t ) '3 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 '()) '() 1) 1 ) '() 1)
(PROD (PROG1 2 (PROD (PROG1 2 '()) '() 2) 2 ) '() 2)
(PROD (PROG1 nil (PROD (PROG1 nil '()) '() nil) nil ) '() nil)
(PROD (PROG1 t (PROD (PROG1 t '()) '() t) t ) '() t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (PROG1 2 (PROD (PROG1 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (PROG1 nil (PROD (PROG1 nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (PROG1 t (PROD (PROG1 t '(())) '(()) t) t ) '(()) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (PROG1 2 (PROD (PROG1 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (PROG1 nil (PROD (PROG1 nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (PROG1 t (PROD (PROG1 t '((()))) '((())) t) t ) '((())) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (PROG1 2 (PROD (PROG1 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (PROG1 nil (PROD (PROG1 nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (PROG1 t (PROD (PROG1 t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (PROG1 2 (PROD (PROG1 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (PROG1 nil (PROD (PROG1 nil ,A) ,A nil) nil ) ,A nil)
(PROD (PROG1 t (PROD (PROG1 t ,A) ,A t) t ) ,A t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (PROG1 2 (PROD (PROG1 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (PROG1 nil (PROD (PROG1 nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (PROG1 t (PROD (PROG1 t ,1) ,1 t) t ) ,1 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (PROG1 2 (PROD (PROG1 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (PROG1 nil (PROD (PROG1 nil ,()) ,() nil) nil ) ,() nil)
(PROD (PROG1 t (PROD (PROG1 t ,()) ,() t) t ) ,() t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (PROG1 2 (PROD (PROG1 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (PROG1 nil (PROD (PROG1 nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (PROG1 t (PROD (PROG1 t ,(())) ,(()) t) t ) ,(()) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'A) `'A nil) nil ) `'A nil)
(PROD (PROG1 t (PROD (PROG1 t `'A) `'A t) t ) `'A t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'B) `'B nil) nil ) `'B nil)
(PROD (PROG1 t (PROD (PROG1 t `'B) `'B t) t ) `'B t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'C) `'C nil) nil ) `'C nil)
(PROD (PROG1 t (PROD (PROG1 t `'C) `'C t) t ) `'C t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (PROG1 t (PROD (PROG1 t `'1) `'1 t) t ) `'1 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (PROG1 t (PROD (PROG1 t `'2) `'2 t) t ) `'2 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (PROG1 t (PROD (PROG1 t `'3) `'3 t) t ) `'3 t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'()) `'() nil) nil ) `'() nil)
(PROD (PROG1 t (PROD (PROG1 t `'()) `'() t) t ) `'() t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (PROG1 t (PROD (PROG1 t `'(())) `'(()) t) t ) `'(()) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (PROG1 t (PROD (PROG1 t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (PROG1 1 (PROD (PROG1 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (PROG1 2 (PROD (PROG1 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (PROG1 nil (PROD (PROG1 nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (PROG1 t (PROD (PROG1 t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (PROG1 (cons t t) (PROD (PROG1 (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (PROG1 (cons nil t) (PROD (PROG1 (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (PROG1 (cons nil nil) (PROD (PROG1 (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (PROG1 (cons 0 0) (PROD (PROG1 (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (PROG1 (cons 1 1) (PROD (PROG1 (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (PROG1 (list 1 2 3) (PROD (PROG1 (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (PROG1 (list (cons 1 1 ) ) (PROD (PROG1 (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 T) T 1) 1 ) T 1)
(PROD (PROG2 2 (PROD (PROG2 2 T) T 2) 2 ) T 2)
(PROD (PROG2 nil (PROD (PROG2 nil T) T nil) nil ) T nil)
(PROD (PROG2 t (PROD (PROG2 t T) T t) t ) T t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (PROG2 2 (PROD (PROG2 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (PROG2 nil (PROD (PROG2 nil NIL) NIL nil) nil ) NIL nil)
(PROD (PROG2 t (PROD (PROG2 t NIL) NIL t) t ) NIL t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 A) A 1) 1 ) A 1)
(PROD (PROG2 2 (PROD (PROG2 2 A) A 2) 2 ) A 2)
(PROD (PROG2 nil (PROD (PROG2 nil A) A nil) nil ) A nil)
(PROD (PROG2 t (PROD (PROG2 t A) A t) t ) A t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 B) B 1) 1 ) B 1)
(PROD (PROG2 2 (PROD (PROG2 2 B) B 2) 2 ) B 2)
(PROD (PROG2 nil (PROD (PROG2 nil B) B nil) nil ) B nil)
(PROD (PROG2 t (PROD (PROG2 t B) B t) t ) B t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 C) C 1) 1 ) C 1)
(PROD (PROG2 2 (PROD (PROG2 2 C) C 2) 2 ) C 2)
(PROD (PROG2 nil (PROD (PROG2 nil C) C nil) nil ) C nil)
(PROD (PROG2 t (PROD (PROG2 t C) C t) t ) C t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 1) 1 1) 1 ) 1 1)
(PROD (PROG2 2 (PROD (PROG2 2 1) 1 2) 2 ) 1 2)
(PROD (PROG2 nil (PROD (PROG2 nil 1) 1 nil) nil ) 1 nil)
(PROD (PROG2 t (PROD (PROG2 t 1) 1 t) t ) 1 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 2) 2 1) 1 ) 2 1)
(PROD (PROG2 2 (PROD (PROG2 2 2) 2 2) 2 ) 2 2)
(PROD (PROG2 nil (PROD (PROG2 nil 2) 2 nil) nil ) 2 nil)
(PROD (PROG2 t (PROD (PROG2 t 2) 2 t) t ) 2 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 3) 3 1) 1 ) 3 1)
(PROD (PROG2 2 (PROD (PROG2 2 3) 3 2) 2 ) 3 2)
(PROD (PROG2 nil (PROD (PROG2 nil 3) 3 nil) nil ) 3 nil)
(PROD (PROG2 t (PROD (PROG2 t 3) 3 t) t ) 3 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 ()) () 1) 1 ) () 1)
(PROD (PROG2 2 (PROD (PROG2 2 ()) () 2) 2 ) () 2)
(PROD (PROG2 nil (PROD (PROG2 nil ()) () nil) nil ) () nil)
(PROD (PROG2 t (PROD (PROG2 t ()) () t) t ) () t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 (())) (()) 1) 1 ) (()) 1)
(PROD (PROG2 2 (PROD (PROG2 2 (())) (()) 2) 2 ) (()) 2)
(PROD (PROG2 nil (PROD (PROG2 nil (())) (()) nil) nil ) (()) nil)
(PROD (PROG2 t (PROD (PROG2 t (())) (()) t) t ) (()) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (PROG2 2 (PROD (PROG2 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (PROG2 nil (PROD (PROG2 nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (PROG2 t (PROD (PROG2 t ((()))) ((())) t) t ) ((())) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (PROG2 2 (PROD (PROG2 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (PROG2 nil (PROD (PROG2 nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (PROG2 t (PROD (PROG2 t (((())))) (((()))) t) t ) (((()))) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 'A) 'A 1) 1 ) 'A 1)
(PROD (PROG2 2 (PROD (PROG2 2 'A) 'A 2) 2 ) 'A 2)
(PROD (PROG2 nil (PROD (PROG2 nil 'A) 'A nil) nil ) 'A nil)
(PROD (PROG2 t (PROD (PROG2 t 'A) 'A t) t ) 'A t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 'B) 'B 1) 1 ) 'B 1)
(PROD (PROG2 2 (PROD (PROG2 2 'B) 'B 2) 2 ) 'B 2)
(PROD (PROG2 nil (PROD (PROG2 nil 'B) 'B nil) nil ) 'B nil)
(PROD (PROG2 t (PROD (PROG2 t 'B) 'B t) t ) 'B t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 'C) 'C 1) 1 ) 'C 1)
(PROD (PROG2 2 (PROD (PROG2 2 'C) 'C 2) 2 ) 'C 2)
(PROD (PROG2 nil (PROD (PROG2 nil 'C) 'C nil) nil ) 'C nil)
(PROD (PROG2 t (PROD (PROG2 t 'C) 'C t) t ) 'C t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 '1) '1 1) 1 ) '1 1)
(PROD (PROG2 2 (PROD (PROG2 2 '1) '1 2) 2 ) '1 2)
(PROD (PROG2 nil (PROD (PROG2 nil '1) '1 nil) nil ) '1 nil)
(PROD (PROG2 t (PROD (PROG2 t '1) '1 t) t ) '1 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 '2) '2 1) 1 ) '2 1)
(PROD (PROG2 2 (PROD (PROG2 2 '2) '2 2) 2 ) '2 2)
(PROD (PROG2 nil (PROD (PROG2 nil '2) '2 nil) nil ) '2 nil)
(PROD (PROG2 t (PROD (PROG2 t '2) '2 t) t ) '2 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 '3) '3 1) 1 ) '3 1)
(PROD (PROG2 2 (PROD (PROG2 2 '3) '3 2) 2 ) '3 2)
(PROD (PROG2 nil (PROD (PROG2 nil '3) '3 nil) nil ) '3 nil)
(PROD (PROG2 t (PROD (PROG2 t '3) '3 t) t ) '3 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 '()) '() 1) 1 ) '() 1)
(PROD (PROG2 2 (PROD (PROG2 2 '()) '() 2) 2 ) '() 2)
(PROD (PROG2 nil (PROD (PROG2 nil '()) '() nil) nil ) '() nil)
(PROD (PROG2 t (PROD (PROG2 t '()) '() t) t ) '() t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (PROG2 2 (PROD (PROG2 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (PROG2 nil (PROD (PROG2 nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (PROG2 t (PROD (PROG2 t '(())) '(()) t) t ) '(()) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (PROG2 2 (PROD (PROG2 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (PROG2 nil (PROD (PROG2 nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (PROG2 t (PROD (PROG2 t '((()))) '((())) t) t ) '((())) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (PROG2 2 (PROD (PROG2 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (PROG2 nil (PROD (PROG2 nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (PROG2 t (PROD (PROG2 t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (PROG2 2 (PROD (PROG2 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (PROG2 nil (PROD (PROG2 nil ,A) ,A nil) nil ) ,A nil)
(PROD (PROG2 t (PROD (PROG2 t ,A) ,A t) t ) ,A t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (PROG2 2 (PROD (PROG2 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (PROG2 nil (PROD (PROG2 nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (PROG2 t (PROD (PROG2 t ,1) ,1 t) t ) ,1 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (PROG2 2 (PROD (PROG2 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (PROG2 nil (PROD (PROG2 nil ,()) ,() nil) nil ) ,() nil)
(PROD (PROG2 t (PROD (PROG2 t ,()) ,() t) t ) ,() t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (PROG2 2 (PROD (PROG2 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (PROG2 nil (PROD (PROG2 nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (PROG2 t (PROD (PROG2 t ,(())) ,(()) t) t ) ,(()) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'A) `'A nil) nil ) `'A nil)
(PROD (PROG2 t (PROD (PROG2 t `'A) `'A t) t ) `'A t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'B) `'B nil) nil ) `'B nil)
(PROD (PROG2 t (PROD (PROG2 t `'B) `'B t) t ) `'B t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'C) `'C nil) nil ) `'C nil)
(PROD (PROG2 t (PROD (PROG2 t `'C) `'C t) t ) `'C t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (PROG2 t (PROD (PROG2 t `'1) `'1 t) t ) `'1 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (PROG2 t (PROD (PROG2 t `'2) `'2 t) t ) `'2 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (PROG2 t (PROD (PROG2 t `'3) `'3 t) t ) `'3 t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'()) `'() nil) nil ) `'() nil)
(PROD (PROG2 t (PROD (PROG2 t `'()) `'() t) t ) `'() t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (PROG2 t (PROD (PROG2 t `'(())) `'(()) t) t ) `'(()) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (PROG2 t (PROD (PROG2 t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (PROG2 1 (PROD (PROG2 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (PROG2 2 (PROD (PROG2 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (PROG2 nil (PROD (PROG2 nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (PROG2 t (PROD (PROG2 t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (PROG2 (cons t t) (PROD (PROG2 (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (PROG2 (cons nil t) (PROD (PROG2 (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (PROG2 (cons nil nil) (PROD (PROG2 (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (PROG2 (cons 0 0) (PROD (PROG2 (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (PROG2 (cons 1 1) (PROD (PROG2 (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (PROG2 (list 1 2 3) (PROD (PROG2 (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (PROG2 (list (cons 1 1 ) ) (PROD (PROG2 (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 T) T 1) 1 ) T 1)
(PROD (PROGN 2 (PROD (PROGN 2 T) T 2) 2 ) T 2)
(PROD (PROGN nil (PROD (PROGN nil T) T nil) nil ) T nil)
(PROD (PROGN t (PROD (PROGN t T) T t) t ) T t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (PROGN 2 (PROD (PROGN 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (PROGN nil (PROD (PROGN nil NIL) NIL nil) nil ) NIL nil)
(PROD (PROGN t (PROD (PROGN t NIL) NIL t) t ) NIL t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 A) A 1) 1 ) A 1)
(PROD (PROGN 2 (PROD (PROGN 2 A) A 2) 2 ) A 2)
(PROD (PROGN nil (PROD (PROGN nil A) A nil) nil ) A nil)
(PROD (PROGN t (PROD (PROGN t A) A t) t ) A t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 B) B 1) 1 ) B 1)
(PROD (PROGN 2 (PROD (PROGN 2 B) B 2) 2 ) B 2)
(PROD (PROGN nil (PROD (PROGN nil B) B nil) nil ) B nil)
(PROD (PROGN t (PROD (PROGN t B) B t) t ) B t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 C) C 1) 1 ) C 1)
(PROD (PROGN 2 (PROD (PROGN 2 C) C 2) 2 ) C 2)
(PROD (PROGN nil (PROD (PROGN nil C) C nil) nil ) C nil)
(PROD (PROGN t (PROD (PROGN t C) C t) t ) C t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 1) 1 1) 1 ) 1 1)
(PROD (PROGN 2 (PROD (PROGN 2 1) 1 2) 2 ) 1 2)
(PROD (PROGN nil (PROD (PROGN nil 1) 1 nil) nil ) 1 nil)
(PROD (PROGN t (PROD (PROGN t 1) 1 t) t ) 1 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 2) 2 1) 1 ) 2 1)
(PROD (PROGN 2 (PROD (PROGN 2 2) 2 2) 2 ) 2 2)
(PROD (PROGN nil (PROD (PROGN nil 2) 2 nil) nil ) 2 nil)
(PROD (PROGN t (PROD (PROGN t 2) 2 t) t ) 2 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 3) 3 1) 1 ) 3 1)
(PROD (PROGN 2 (PROD (PROGN 2 3) 3 2) 2 ) 3 2)
(PROD (PROGN nil (PROD (PROGN nil 3) 3 nil) nil ) 3 nil)
(PROD (PROGN t (PROD (PROGN t 3) 3 t) t ) 3 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 ()) () 1) 1 ) () 1)
(PROD (PROGN 2 (PROD (PROGN 2 ()) () 2) 2 ) () 2)
(PROD (PROGN nil (PROD (PROGN nil ()) () nil) nil ) () nil)
(PROD (PROGN t (PROD (PROGN t ()) () t) t ) () t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 (())) (()) 1) 1 ) (()) 1)
(PROD (PROGN 2 (PROD (PROGN 2 (())) (()) 2) 2 ) (()) 2)
(PROD (PROGN nil (PROD (PROGN nil (())) (()) nil) nil ) (()) nil)
(PROD (PROGN t (PROD (PROGN t (())) (()) t) t ) (()) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (PROGN 2 (PROD (PROGN 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (PROGN nil (PROD (PROGN nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (PROGN t (PROD (PROGN t ((()))) ((())) t) t ) ((())) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (PROGN 2 (PROD (PROGN 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (PROGN nil (PROD (PROGN nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (PROGN t (PROD (PROGN t (((())))) (((()))) t) t ) (((()))) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 'A) 'A 1) 1 ) 'A 1)
(PROD (PROGN 2 (PROD (PROGN 2 'A) 'A 2) 2 ) 'A 2)
(PROD (PROGN nil (PROD (PROGN nil 'A) 'A nil) nil ) 'A nil)
(PROD (PROGN t (PROD (PROGN t 'A) 'A t) t ) 'A t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 'B) 'B 1) 1 ) 'B 1)
(PROD (PROGN 2 (PROD (PROGN 2 'B) 'B 2) 2 ) 'B 2)
(PROD (PROGN nil (PROD (PROGN nil 'B) 'B nil) nil ) 'B nil)
(PROD (PROGN t (PROD (PROGN t 'B) 'B t) t ) 'B t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 'C) 'C 1) 1 ) 'C 1)
(PROD (PROGN 2 (PROD (PROGN 2 'C) 'C 2) 2 ) 'C 2)
(PROD (PROGN nil (PROD (PROGN nil 'C) 'C nil) nil ) 'C nil)
(PROD (PROGN t (PROD (PROGN t 'C) 'C t) t ) 'C t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 '1) '1 1) 1 ) '1 1)
(PROD (PROGN 2 (PROD (PROGN 2 '1) '1 2) 2 ) '1 2)
(PROD (PROGN nil (PROD (PROGN nil '1) '1 nil) nil ) '1 nil)
(PROD (PROGN t (PROD (PROGN t '1) '1 t) t ) '1 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 '2) '2 1) 1 ) '2 1)
(PROD (PROGN 2 (PROD (PROGN 2 '2) '2 2) 2 ) '2 2)
(PROD (PROGN nil (PROD (PROGN nil '2) '2 nil) nil ) '2 nil)
(PROD (PROGN t (PROD (PROGN t '2) '2 t) t ) '2 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 '3) '3 1) 1 ) '3 1)
(PROD (PROGN 2 (PROD (PROGN 2 '3) '3 2) 2 ) '3 2)
(PROD (PROGN nil (PROD (PROGN nil '3) '3 nil) nil ) '3 nil)
(PROD (PROGN t (PROD (PROGN t '3) '3 t) t ) '3 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 '()) '() 1) 1 ) '() 1)
(PROD (PROGN 2 (PROD (PROGN 2 '()) '() 2) 2 ) '() 2)
(PROD (PROGN nil (PROD (PROGN nil '()) '() nil) nil ) '() nil)
(PROD (PROGN t (PROD (PROGN t '()) '() t) t ) '() t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (PROGN 2 (PROD (PROGN 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (PROGN nil (PROD (PROGN nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (PROGN t (PROD (PROGN t '(())) '(()) t) t ) '(()) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (PROGN 2 (PROD (PROGN 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (PROGN nil (PROD (PROGN nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (PROGN t (PROD (PROGN t '((()))) '((())) t) t ) '((())) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (PROGN 2 (PROD (PROGN 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (PROGN nil (PROD (PROGN nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (PROGN t (PROD (PROGN t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (PROGN 2 (PROD (PROGN 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (PROGN nil (PROD (PROGN nil ,A) ,A nil) nil ) ,A nil)
(PROD (PROGN t (PROD (PROGN t ,A) ,A t) t ) ,A t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (PROGN 2 (PROD (PROGN 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (PROGN nil (PROD (PROGN nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (PROGN t (PROD (PROGN t ,1) ,1 t) t ) ,1 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (PROGN 2 (PROD (PROGN 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (PROGN nil (PROD (PROGN nil ,()) ,() nil) nil ) ,() nil)
(PROD (PROGN t (PROD (PROGN t ,()) ,() t) t ) ,() t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (PROGN 2 (PROD (PROGN 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (PROGN nil (PROD (PROGN nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (PROGN t (PROD (PROGN t ,(())) ,(()) t) t ) ,(()) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (PROGN nil (PROD (PROGN nil `'A) `'A nil) nil ) `'A nil)
(PROD (PROGN t (PROD (PROGN t `'A) `'A t) t ) `'A t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (PROGN nil (PROD (PROGN nil `'B) `'B nil) nil ) `'B nil)
(PROD (PROGN t (PROD (PROGN t `'B) `'B t) t ) `'B t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (PROGN nil (PROD (PROGN nil `'C) `'C nil) nil ) `'C nil)
(PROD (PROGN t (PROD (PROGN t `'C) `'C t) t ) `'C t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (PROGN nil (PROD (PROGN nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (PROGN t (PROD (PROGN t `'1) `'1 t) t ) `'1 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (PROGN nil (PROD (PROGN nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (PROGN t (PROD (PROGN t `'2) `'2 t) t ) `'2 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (PROGN nil (PROD (PROGN nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (PROGN t (PROD (PROGN t `'3) `'3 t) t ) `'3 t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (PROGN nil (PROD (PROGN nil `'()) `'() nil) nil ) `'() nil)
(PROD (PROGN t (PROD (PROGN t `'()) `'() t) t ) `'() t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (PROGN nil (PROD (PROGN nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (PROGN t (PROD (PROGN t `'(())) `'(()) t) t ) `'(()) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (PROGN nil (PROD (PROGN nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (PROGN t (PROD (PROGN t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (PROGN 1 (PROD (PROGN 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (PROGN 2 (PROD (PROGN 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (PROGN nil (PROD (PROGN nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (PROGN t (PROD (PROGN t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (PROGN (cons t t) (PROD (PROGN (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (PROGN (cons nil t) (PROD (PROGN (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (PROGN (cons nil nil) (PROD (PROGN (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (PROGN (cons 0 0) (PROD (PROGN (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (PROGN (cons 1 1) (PROD (PROGN (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (PROGN (list 1 2 3) (PROD (PROGN (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (PROGN (list (cons 1 1 ) ) (PROD (PROGN (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 T) T 1) 1 ) T 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 T) T 2) 2 ) T 2)
(PROD (QUOTE nil (PROD (QUOTE nil T) T nil) nil ) T nil)
(PROD (QUOTE t (PROD (QUOTE t T) T t) t ) T t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (QUOTE nil (PROD (QUOTE nil NIL) NIL nil) nil ) NIL nil)
(PROD (QUOTE t (PROD (QUOTE t NIL) NIL t) t ) NIL t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 A) A 1) 1 ) A 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 A) A 2) 2 ) A 2)
(PROD (QUOTE nil (PROD (QUOTE nil A) A nil) nil ) A nil)
(PROD (QUOTE t (PROD (QUOTE t A) A t) t ) A t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 B) B 1) 1 ) B 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 B) B 2) 2 ) B 2)
(PROD (QUOTE nil (PROD (QUOTE nil B) B nil) nil ) B nil)
(PROD (QUOTE t (PROD (QUOTE t B) B t) t ) B t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 C) C 1) 1 ) C 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 C) C 2) 2 ) C 2)
(PROD (QUOTE nil (PROD (QUOTE nil C) C nil) nil ) C nil)
(PROD (QUOTE t (PROD (QUOTE t C) C t) t ) C t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 1) 1 1) 1 ) 1 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 1) 1 2) 2 ) 1 2)
(PROD (QUOTE nil (PROD (QUOTE nil 1) 1 nil) nil ) 1 nil)
(PROD (QUOTE t (PROD (QUOTE t 1) 1 t) t ) 1 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 2) 2 1) 1 ) 2 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 2) 2 2) 2 ) 2 2)
(PROD (QUOTE nil (PROD (QUOTE nil 2) 2 nil) nil ) 2 nil)
(PROD (QUOTE t (PROD (QUOTE t 2) 2 t) t ) 2 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 3) 3 1) 1 ) 3 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 3) 3 2) 2 ) 3 2)
(PROD (QUOTE nil (PROD (QUOTE nil 3) 3 nil) nil ) 3 nil)
(PROD (QUOTE t (PROD (QUOTE t 3) 3 t) t ) 3 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 ()) () 1) 1 ) () 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 ()) () 2) 2 ) () 2)
(PROD (QUOTE nil (PROD (QUOTE nil ()) () nil) nil ) () nil)
(PROD (QUOTE t (PROD (QUOTE t ()) () t) t ) () t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 (())) (()) 1) 1 ) (()) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 (())) (()) 2) 2 ) (()) 2)
(PROD (QUOTE nil (PROD (QUOTE nil (())) (()) nil) nil ) (()) nil)
(PROD (QUOTE t (PROD (QUOTE t (())) (()) t) t ) (()) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (QUOTE nil (PROD (QUOTE nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (QUOTE t (PROD (QUOTE t ((()))) ((())) t) t ) ((())) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (QUOTE nil (PROD (QUOTE nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (QUOTE t (PROD (QUOTE t (((())))) (((()))) t) t ) (((()))) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 'A) 'A 1) 1 ) 'A 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 'A) 'A 2) 2 ) 'A 2)
(PROD (QUOTE nil (PROD (QUOTE nil 'A) 'A nil) nil ) 'A nil)
(PROD (QUOTE t (PROD (QUOTE t 'A) 'A t) t ) 'A t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 'B) 'B 1) 1 ) 'B 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 'B) 'B 2) 2 ) 'B 2)
(PROD (QUOTE nil (PROD (QUOTE nil 'B) 'B nil) nil ) 'B nil)
(PROD (QUOTE t (PROD (QUOTE t 'B) 'B t) t ) 'B t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 'C) 'C 1) 1 ) 'C 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 'C) 'C 2) 2 ) 'C 2)
(PROD (QUOTE nil (PROD (QUOTE nil 'C) 'C nil) nil ) 'C nil)
(PROD (QUOTE t (PROD (QUOTE t 'C) 'C t) t ) 'C t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 '1) '1 1) 1 ) '1 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 '1) '1 2) 2 ) '1 2)
(PROD (QUOTE nil (PROD (QUOTE nil '1) '1 nil) nil ) '1 nil)
(PROD (QUOTE t (PROD (QUOTE t '1) '1 t) t ) '1 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 '2) '2 1) 1 ) '2 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 '2) '2 2) 2 ) '2 2)
(PROD (QUOTE nil (PROD (QUOTE nil '2) '2 nil) nil ) '2 nil)
(PROD (QUOTE t (PROD (QUOTE t '2) '2 t) t ) '2 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 '3) '3 1) 1 ) '3 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 '3) '3 2) 2 ) '3 2)
(PROD (QUOTE nil (PROD (QUOTE nil '3) '3 nil) nil ) '3 nil)
(PROD (QUOTE t (PROD (QUOTE t '3) '3 t) t ) '3 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 '()) '() 1) 1 ) '() 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 '()) '() 2) 2 ) '() 2)
(PROD (QUOTE nil (PROD (QUOTE nil '()) '() nil) nil ) '() nil)
(PROD (QUOTE t (PROD (QUOTE t '()) '() t) t ) '() t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (QUOTE nil (PROD (QUOTE nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (QUOTE t (PROD (QUOTE t '(())) '(()) t) t ) '(()) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (QUOTE nil (PROD (QUOTE nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (QUOTE t (PROD (QUOTE t '((()))) '((())) t) t ) '((())) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (QUOTE nil (PROD (QUOTE nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (QUOTE t (PROD (QUOTE t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (QUOTE nil (PROD (QUOTE nil ,A) ,A nil) nil ) ,A nil)
(PROD (QUOTE t (PROD (QUOTE t ,A) ,A t) t ) ,A t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (QUOTE nil (PROD (QUOTE nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (QUOTE t (PROD (QUOTE t ,1) ,1 t) t ) ,1 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (QUOTE nil (PROD (QUOTE nil ,()) ,() nil) nil ) ,() nil)
(PROD (QUOTE t (PROD (QUOTE t ,()) ,() t) t ) ,() t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (QUOTE nil (PROD (QUOTE nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (QUOTE t (PROD (QUOTE t ,(())) ,(()) t) t ) ,(()) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'A) `'A nil) nil ) `'A nil)
(PROD (QUOTE t (PROD (QUOTE t `'A) `'A t) t ) `'A t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'B) `'B nil) nil ) `'B nil)
(PROD (QUOTE t (PROD (QUOTE t `'B) `'B t) t ) `'B t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'C) `'C nil) nil ) `'C nil)
(PROD (QUOTE t (PROD (QUOTE t `'C) `'C t) t ) `'C t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (QUOTE t (PROD (QUOTE t `'1) `'1 t) t ) `'1 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (QUOTE t (PROD (QUOTE t `'2) `'2 t) t ) `'2 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (QUOTE t (PROD (QUOTE t `'3) `'3 t) t ) `'3 t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'()) `'() nil) nil ) `'() nil)
(PROD (QUOTE t (PROD (QUOTE t `'()) `'() t) t ) `'() t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (QUOTE t (PROD (QUOTE t `'(())) `'(()) t) t ) `'(()) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (QUOTE t (PROD (QUOTE t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (QUOTE 1 (PROD (QUOTE 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (QUOTE 2 (PROD (QUOTE 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (QUOTE nil (PROD (QUOTE nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (QUOTE t (PROD (QUOTE t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (QUOTE (cons t t) (PROD (QUOTE (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (QUOTE (cons nil t) (PROD (QUOTE (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (QUOTE (cons nil nil) (PROD (QUOTE (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (QUOTE (cons 0 0) (PROD (QUOTE (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (QUOTE (cons 1 1) (PROD (QUOTE (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (QUOTE (list 1 2 3) (PROD (QUOTE (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (QUOTE (list (cons 1 1 ) ) (PROD (QUOTE (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 T) T 1) 1 ) T 1)
(PROD (SUBST 2 (PROD (SUBST 2 T) T 2) 2 ) T 2)
(PROD (SUBST nil (PROD (SUBST nil T) T nil) nil ) T nil)
(PROD (SUBST t (PROD (SUBST t T) T t) t ) T t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (SUBST 2 (PROD (SUBST 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (SUBST nil (PROD (SUBST nil NIL) NIL nil) nil ) NIL nil)
(PROD (SUBST t (PROD (SUBST t NIL) NIL t) t ) NIL t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 A) A 1) 1 ) A 1)
(PROD (SUBST 2 (PROD (SUBST 2 A) A 2) 2 ) A 2)
(PROD (SUBST nil (PROD (SUBST nil A) A nil) nil ) A nil)
(PROD (SUBST t (PROD (SUBST t A) A t) t ) A t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 B) B 1) 1 ) B 1)
(PROD (SUBST 2 (PROD (SUBST 2 B) B 2) 2 ) B 2)
(PROD (SUBST nil (PROD (SUBST nil B) B nil) nil ) B nil)
(PROD (SUBST t (PROD (SUBST t B) B t) t ) B t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 C) C 1) 1 ) C 1)
(PROD (SUBST 2 (PROD (SUBST 2 C) C 2) 2 ) C 2)
(PROD (SUBST nil (PROD (SUBST nil C) C nil) nil ) C nil)
(PROD (SUBST t (PROD (SUBST t C) C t) t ) C t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 1) 1 1) 1 ) 1 1)
(PROD (SUBST 2 (PROD (SUBST 2 1) 1 2) 2 ) 1 2)
(PROD (SUBST nil (PROD (SUBST nil 1) 1 nil) nil ) 1 nil)
(PROD (SUBST t (PROD (SUBST t 1) 1 t) t ) 1 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 2) 2 1) 1 ) 2 1)
(PROD (SUBST 2 (PROD (SUBST 2 2) 2 2) 2 ) 2 2)
(PROD (SUBST nil (PROD (SUBST nil 2) 2 nil) nil ) 2 nil)
(PROD (SUBST t (PROD (SUBST t 2) 2 t) t ) 2 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 3) 3 1) 1 ) 3 1)
(PROD (SUBST 2 (PROD (SUBST 2 3) 3 2) 2 ) 3 2)
(PROD (SUBST nil (PROD (SUBST nil 3) 3 nil) nil ) 3 nil)
(PROD (SUBST t (PROD (SUBST t 3) 3 t) t ) 3 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 ()) () 1) 1 ) () 1)
(PROD (SUBST 2 (PROD (SUBST 2 ()) () 2) 2 ) () 2)
(PROD (SUBST nil (PROD (SUBST nil ()) () nil) nil ) () nil)
(PROD (SUBST t (PROD (SUBST t ()) () t) t ) () t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 (())) (()) 1) 1 ) (()) 1)
(PROD (SUBST 2 (PROD (SUBST 2 (())) (()) 2) 2 ) (()) 2)
(PROD (SUBST nil (PROD (SUBST nil (())) (()) nil) nil ) (()) nil)
(PROD (SUBST t (PROD (SUBST t (())) (()) t) t ) (()) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (SUBST 2 (PROD (SUBST 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (SUBST nil (PROD (SUBST nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (SUBST t (PROD (SUBST t ((()))) ((())) t) t ) ((())) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (SUBST 2 (PROD (SUBST 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (SUBST nil (PROD (SUBST nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (SUBST t (PROD (SUBST t (((())))) (((()))) t) t ) (((()))) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 'A) 'A 1) 1 ) 'A 1)
(PROD (SUBST 2 (PROD (SUBST 2 'A) 'A 2) 2 ) 'A 2)
(PROD (SUBST nil (PROD (SUBST nil 'A) 'A nil) nil ) 'A nil)
(PROD (SUBST t (PROD (SUBST t 'A) 'A t) t ) 'A t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 'B) 'B 1) 1 ) 'B 1)
(PROD (SUBST 2 (PROD (SUBST 2 'B) 'B 2) 2 ) 'B 2)
(PROD (SUBST nil (PROD (SUBST nil 'B) 'B nil) nil ) 'B nil)
(PROD (SUBST t (PROD (SUBST t 'B) 'B t) t ) 'B t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 'C) 'C 1) 1 ) 'C 1)
(PROD (SUBST 2 (PROD (SUBST 2 'C) 'C 2) 2 ) 'C 2)
(PROD (SUBST nil (PROD (SUBST nil 'C) 'C nil) nil ) 'C nil)
(PROD (SUBST t (PROD (SUBST t 'C) 'C t) t ) 'C t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 '1) '1 1) 1 ) '1 1)
(PROD (SUBST 2 (PROD (SUBST 2 '1) '1 2) 2 ) '1 2)
(PROD (SUBST nil (PROD (SUBST nil '1) '1 nil) nil ) '1 nil)
(PROD (SUBST t (PROD (SUBST t '1) '1 t) t ) '1 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 '2) '2 1) 1 ) '2 1)
(PROD (SUBST 2 (PROD (SUBST 2 '2) '2 2) 2 ) '2 2)
(PROD (SUBST nil (PROD (SUBST nil '2) '2 nil) nil ) '2 nil)
(PROD (SUBST t (PROD (SUBST t '2) '2 t) t ) '2 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 '3) '3 1) 1 ) '3 1)
(PROD (SUBST 2 (PROD (SUBST 2 '3) '3 2) 2 ) '3 2)
(PROD (SUBST nil (PROD (SUBST nil '3) '3 nil) nil ) '3 nil)
(PROD (SUBST t (PROD (SUBST t '3) '3 t) t ) '3 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 '()) '() 1) 1 ) '() 1)
(PROD (SUBST 2 (PROD (SUBST 2 '()) '() 2) 2 ) '() 2)
(PROD (SUBST nil (PROD (SUBST nil '()) '() nil) nil ) '() nil)
(PROD (SUBST t (PROD (SUBST t '()) '() t) t ) '() t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (SUBST 2 (PROD (SUBST 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (SUBST nil (PROD (SUBST nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (SUBST t (PROD (SUBST t '(())) '(()) t) t ) '(()) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (SUBST 2 (PROD (SUBST 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (SUBST nil (PROD (SUBST nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (SUBST t (PROD (SUBST t '((()))) '((())) t) t ) '((())) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (SUBST 2 (PROD (SUBST 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (SUBST nil (PROD (SUBST nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (SUBST t (PROD (SUBST t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (SUBST 2 (PROD (SUBST 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (SUBST nil (PROD (SUBST nil ,A) ,A nil) nil ) ,A nil)
(PROD (SUBST t (PROD (SUBST t ,A) ,A t) t ) ,A t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (SUBST 2 (PROD (SUBST 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (SUBST nil (PROD (SUBST nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (SUBST t (PROD (SUBST t ,1) ,1 t) t ) ,1 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (SUBST 2 (PROD (SUBST 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (SUBST nil (PROD (SUBST nil ,()) ,() nil) nil ) ,() nil)
(PROD (SUBST t (PROD (SUBST t ,()) ,() t) t ) ,() t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (SUBST 2 (PROD (SUBST 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (SUBST nil (PROD (SUBST nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (SUBST t (PROD (SUBST t ,(())) ,(()) t) t ) ,(()) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (SUBST nil (PROD (SUBST nil `'A) `'A nil) nil ) `'A nil)
(PROD (SUBST t (PROD (SUBST t `'A) `'A t) t ) `'A t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (SUBST nil (PROD (SUBST nil `'B) `'B nil) nil ) `'B nil)
(PROD (SUBST t (PROD (SUBST t `'B) `'B t) t ) `'B t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (SUBST nil (PROD (SUBST nil `'C) `'C nil) nil ) `'C nil)
(PROD (SUBST t (PROD (SUBST t `'C) `'C t) t ) `'C t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (SUBST nil (PROD (SUBST nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (SUBST t (PROD (SUBST t `'1) `'1 t) t ) `'1 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (SUBST nil (PROD (SUBST nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (SUBST t (PROD (SUBST t `'2) `'2 t) t ) `'2 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (SUBST nil (PROD (SUBST nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (SUBST t (PROD (SUBST t `'3) `'3 t) t ) `'3 t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (SUBST nil (PROD (SUBST nil `'()) `'() nil) nil ) `'() nil)
(PROD (SUBST t (PROD (SUBST t `'()) `'() t) t ) `'() t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (SUBST nil (PROD (SUBST nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (SUBST t (PROD (SUBST t `'(())) `'(()) t) t ) `'(()) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (SUBST nil (PROD (SUBST nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (SUBST t (PROD (SUBST t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (SUBST 1 (PROD (SUBST 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (SUBST 2 (PROD (SUBST 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (SUBST nil (PROD (SUBST nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (SUBST t (PROD (SUBST t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (SUBST (cons t t) (PROD (SUBST (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (SUBST (cons nil t) (PROD (SUBST (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (SUBST (cons nil nil) (PROD (SUBST (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (SUBST (cons 0 0) (PROD (SUBST (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (SUBST (cons 1 1) (PROD (SUBST (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (SUBST (list 1 2 3) (PROD (SUBST (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (SUBST (list (cons 1 1 ) ) (PROD (SUBST (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 T) T 1) 1 ) T 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 T) T 2) 2 ) T 2)
(PROD (UNLESS nil (PROD (UNLESS nil T) T nil) nil ) T nil)
(PROD (UNLESS t (PROD (UNLESS t T) T t) t ) T t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (UNLESS nil (PROD (UNLESS nil NIL) NIL nil) nil ) NIL nil)
(PROD (UNLESS t (PROD (UNLESS t NIL) NIL t) t ) NIL t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 A) A 1) 1 ) A 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 A) A 2) 2 ) A 2)
(PROD (UNLESS nil (PROD (UNLESS nil A) A nil) nil ) A nil)
(PROD (UNLESS t (PROD (UNLESS t A) A t) t ) A t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 B) B 1) 1 ) B 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 B) B 2) 2 ) B 2)
(PROD (UNLESS nil (PROD (UNLESS nil B) B nil) nil ) B nil)
(PROD (UNLESS t (PROD (UNLESS t B) B t) t ) B t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 C) C 1) 1 ) C 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 C) C 2) 2 ) C 2)
(PROD (UNLESS nil (PROD (UNLESS nil C) C nil) nil ) C nil)
(PROD (UNLESS t (PROD (UNLESS t C) C t) t ) C t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 1) 1 1) 1 ) 1 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 1) 1 2) 2 ) 1 2)
(PROD (UNLESS nil (PROD (UNLESS nil 1) 1 nil) nil ) 1 nil)
(PROD (UNLESS t (PROD (UNLESS t 1) 1 t) t ) 1 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 2) 2 1) 1 ) 2 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 2) 2 2) 2 ) 2 2)
(PROD (UNLESS nil (PROD (UNLESS nil 2) 2 nil) nil ) 2 nil)
(PROD (UNLESS t (PROD (UNLESS t 2) 2 t) t ) 2 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 3) 3 1) 1 ) 3 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 3) 3 2) 2 ) 3 2)
(PROD (UNLESS nil (PROD (UNLESS nil 3) 3 nil) nil ) 3 nil)
(PROD (UNLESS t (PROD (UNLESS t 3) 3 t) t ) 3 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 ()) () 1) 1 ) () 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 ()) () 2) 2 ) () 2)
(PROD (UNLESS nil (PROD (UNLESS nil ()) () nil) nil ) () nil)
(PROD (UNLESS t (PROD (UNLESS t ()) () t) t ) () t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 (())) (()) 1) 1 ) (()) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 (())) (()) 2) 2 ) (()) 2)
(PROD (UNLESS nil (PROD (UNLESS nil (())) (()) nil) nil ) (()) nil)
(PROD (UNLESS t (PROD (UNLESS t (())) (()) t) t ) (()) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (UNLESS nil (PROD (UNLESS nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (UNLESS t (PROD (UNLESS t ((()))) ((())) t) t ) ((())) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (UNLESS nil (PROD (UNLESS nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (UNLESS t (PROD (UNLESS t (((())))) (((()))) t) t ) (((()))) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 'A) 'A 1) 1 ) 'A 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 'A) 'A 2) 2 ) 'A 2)
(PROD (UNLESS nil (PROD (UNLESS nil 'A) 'A nil) nil ) 'A nil)
(PROD (UNLESS t (PROD (UNLESS t 'A) 'A t) t ) 'A t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 'B) 'B 1) 1 ) 'B 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 'B) 'B 2) 2 ) 'B 2)
(PROD (UNLESS nil (PROD (UNLESS nil 'B) 'B nil) nil ) 'B nil)
(PROD (UNLESS t (PROD (UNLESS t 'B) 'B t) t ) 'B t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 'C) 'C 1) 1 ) 'C 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 'C) 'C 2) 2 ) 'C 2)
(PROD (UNLESS nil (PROD (UNLESS nil 'C) 'C nil) nil ) 'C nil)
(PROD (UNLESS t (PROD (UNLESS t 'C) 'C t) t ) 'C t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 '1) '1 1) 1 ) '1 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 '1) '1 2) 2 ) '1 2)
(PROD (UNLESS nil (PROD (UNLESS nil '1) '1 nil) nil ) '1 nil)
(PROD (UNLESS t (PROD (UNLESS t '1) '1 t) t ) '1 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 '2) '2 1) 1 ) '2 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 '2) '2 2) 2 ) '2 2)
(PROD (UNLESS nil (PROD (UNLESS nil '2) '2 nil) nil ) '2 nil)
(PROD (UNLESS t (PROD (UNLESS t '2) '2 t) t ) '2 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 '3) '3 1) 1 ) '3 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 '3) '3 2) 2 ) '3 2)
(PROD (UNLESS nil (PROD (UNLESS nil '3) '3 nil) nil ) '3 nil)
(PROD (UNLESS t (PROD (UNLESS t '3) '3 t) t ) '3 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 '()) '() 1) 1 ) '() 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 '()) '() 2) 2 ) '() 2)
(PROD (UNLESS nil (PROD (UNLESS nil '()) '() nil) nil ) '() nil)
(PROD (UNLESS t (PROD (UNLESS t '()) '() t) t ) '() t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (UNLESS nil (PROD (UNLESS nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (UNLESS t (PROD (UNLESS t '(())) '(()) t) t ) '(()) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (UNLESS nil (PROD (UNLESS nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (UNLESS t (PROD (UNLESS t '((()))) '((())) t) t ) '((())) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (UNLESS nil (PROD (UNLESS nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (UNLESS t (PROD (UNLESS t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (UNLESS nil (PROD (UNLESS nil ,A) ,A nil) nil ) ,A nil)
(PROD (UNLESS t (PROD (UNLESS t ,A) ,A t) t ) ,A t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (UNLESS nil (PROD (UNLESS nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (UNLESS t (PROD (UNLESS t ,1) ,1 t) t ) ,1 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (UNLESS nil (PROD (UNLESS nil ,()) ,() nil) nil ) ,() nil)
(PROD (UNLESS t (PROD (UNLESS t ,()) ,() t) t ) ,() t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (UNLESS nil (PROD (UNLESS nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (UNLESS t (PROD (UNLESS t ,(())) ,(()) t) t ) ,(()) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'A) `'A nil) nil ) `'A nil)
(PROD (UNLESS t (PROD (UNLESS t `'A) `'A t) t ) `'A t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'B) `'B nil) nil ) `'B nil)
(PROD (UNLESS t (PROD (UNLESS t `'B) `'B t) t ) `'B t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'C) `'C nil) nil ) `'C nil)
(PROD (UNLESS t (PROD (UNLESS t `'C) `'C t) t ) `'C t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (UNLESS t (PROD (UNLESS t `'1) `'1 t) t ) `'1 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (UNLESS t (PROD (UNLESS t `'2) `'2 t) t ) `'2 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (UNLESS t (PROD (UNLESS t `'3) `'3 t) t ) `'3 t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'()) `'() nil) nil ) `'() nil)
(PROD (UNLESS t (PROD (UNLESS t `'()) `'() t) t ) `'() t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (UNLESS t (PROD (UNLESS t `'(())) `'(()) t) t ) `'(()) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (UNLESS t (PROD (UNLESS t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (UNLESS 1 (PROD (UNLESS 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (UNLESS 2 (PROD (UNLESS 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (UNLESS nil (PROD (UNLESS nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (UNLESS t (PROD (UNLESS t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (UNLESS (cons t t) (PROD (UNLESS (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (UNLESS (cons nil t) (PROD (UNLESS (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (UNLESS (cons nil nil) (PROD (UNLESS (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (UNLESS (cons 0 0) (PROD (UNLESS (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (UNLESS (cons 1 1) (PROD (UNLESS (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (UNLESS (list 1 2 3) (PROD (UNLESS (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (UNLESS (list (cons 1 1 ) ) (PROD (UNLESS (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 T) T 1) 1 ) T 1)
(PROD (XOR 2 (PROD (XOR 2 T) T 2) 2 ) T 2)
(PROD (XOR nil (PROD (XOR nil T) T nil) nil ) T nil)
(PROD (XOR t (PROD (XOR t T) T t) t ) T t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (XOR 2 (PROD (XOR 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (XOR nil (PROD (XOR nil NIL) NIL nil) nil ) NIL nil)
(PROD (XOR t (PROD (XOR t NIL) NIL t) t ) NIL t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 A) A 1) 1 ) A 1)
(PROD (XOR 2 (PROD (XOR 2 A) A 2) 2 ) A 2)
(PROD (XOR nil (PROD (XOR nil A) A nil) nil ) A nil)
(PROD (XOR t (PROD (XOR t A) A t) t ) A t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 B) B 1) 1 ) B 1)
(PROD (XOR 2 (PROD (XOR 2 B) B 2) 2 ) B 2)
(PROD (XOR nil (PROD (XOR nil B) B nil) nil ) B nil)
(PROD (XOR t (PROD (XOR t B) B t) t ) B t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 C) C 1) 1 ) C 1)
(PROD (XOR 2 (PROD (XOR 2 C) C 2) 2 ) C 2)
(PROD (XOR nil (PROD (XOR nil C) C nil) nil ) C nil)
(PROD (XOR t (PROD (XOR t C) C t) t ) C t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 1) 1 1) 1 ) 1 1)
(PROD (XOR 2 (PROD (XOR 2 1) 1 2) 2 ) 1 2)
(PROD (XOR nil (PROD (XOR nil 1) 1 nil) nil ) 1 nil)
(PROD (XOR t (PROD (XOR t 1) 1 t) t ) 1 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 2) 2 1) 1 ) 2 1)
(PROD (XOR 2 (PROD (XOR 2 2) 2 2) 2 ) 2 2)
(PROD (XOR nil (PROD (XOR nil 2) 2 nil) nil ) 2 nil)
(PROD (XOR t (PROD (XOR t 2) 2 t) t ) 2 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 3) 3 1) 1 ) 3 1)
(PROD (XOR 2 (PROD (XOR 2 3) 3 2) 2 ) 3 2)
(PROD (XOR nil (PROD (XOR nil 3) 3 nil) nil ) 3 nil)
(PROD (XOR t (PROD (XOR t 3) 3 t) t ) 3 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 ()) () 1) 1 ) () 1)
(PROD (XOR 2 (PROD (XOR 2 ()) () 2) 2 ) () 2)
(PROD (XOR nil (PROD (XOR nil ()) () nil) nil ) () nil)
(PROD (XOR t (PROD (XOR t ()) () t) t ) () t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 (())) (()) 1) 1 ) (()) 1)
(PROD (XOR 2 (PROD (XOR 2 (())) (()) 2) 2 ) (()) 2)
(PROD (XOR nil (PROD (XOR nil (())) (()) nil) nil ) (()) nil)
(PROD (XOR t (PROD (XOR t (())) (()) t) t ) (()) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (XOR 2 (PROD (XOR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (XOR nil (PROD (XOR nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (XOR t (PROD (XOR t ((()))) ((())) t) t ) ((())) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (XOR 2 (PROD (XOR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (XOR nil (PROD (XOR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (XOR t (PROD (XOR t (((())))) (((()))) t) t ) (((()))) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 'A) 'A 1) 1 ) 'A 1)
(PROD (XOR 2 (PROD (XOR 2 'A) 'A 2) 2 ) 'A 2)
(PROD (XOR nil (PROD (XOR nil 'A) 'A nil) nil ) 'A nil)
(PROD (XOR t (PROD (XOR t 'A) 'A t) t ) 'A t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 'B) 'B 1) 1 ) 'B 1)
(PROD (XOR 2 (PROD (XOR 2 'B) 'B 2) 2 ) 'B 2)
(PROD (XOR nil (PROD (XOR nil 'B) 'B nil) nil ) 'B nil)
(PROD (XOR t (PROD (XOR t 'B) 'B t) t ) 'B t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 'C) 'C 1) 1 ) 'C 1)
(PROD (XOR 2 (PROD (XOR 2 'C) 'C 2) 2 ) 'C 2)
(PROD (XOR nil (PROD (XOR nil 'C) 'C nil) nil ) 'C nil)
(PROD (XOR t (PROD (XOR t 'C) 'C t) t ) 'C t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 '1) '1 1) 1 ) '1 1)
(PROD (XOR 2 (PROD (XOR 2 '1) '1 2) 2 ) '1 2)
(PROD (XOR nil (PROD (XOR nil '1) '1 nil) nil ) '1 nil)
(PROD (XOR t (PROD (XOR t '1) '1 t) t ) '1 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 '2) '2 1) 1 ) '2 1)
(PROD (XOR 2 (PROD (XOR 2 '2) '2 2) 2 ) '2 2)
(PROD (XOR nil (PROD (XOR nil '2) '2 nil) nil ) '2 nil)
(PROD (XOR t (PROD (XOR t '2) '2 t) t ) '2 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 '3) '3 1) 1 ) '3 1)
(PROD (XOR 2 (PROD (XOR 2 '3) '3 2) 2 ) '3 2)
(PROD (XOR nil (PROD (XOR nil '3) '3 nil) nil ) '3 nil)
(PROD (XOR t (PROD (XOR t '3) '3 t) t ) '3 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 '()) '() 1) 1 ) '() 1)
(PROD (XOR 2 (PROD (XOR 2 '()) '() 2) 2 ) '() 2)
(PROD (XOR nil (PROD (XOR nil '()) '() nil) nil ) '() nil)
(PROD (XOR t (PROD (XOR t '()) '() t) t ) '() t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (XOR 2 (PROD (XOR 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (XOR nil (PROD (XOR nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (XOR t (PROD (XOR t '(())) '(()) t) t ) '(()) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (XOR 2 (PROD (XOR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (XOR nil (PROD (XOR nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (XOR t (PROD (XOR t '((()))) '((())) t) t ) '((())) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (XOR 2 (PROD (XOR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (XOR nil (PROD (XOR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (XOR t (PROD (XOR t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (XOR 2 (PROD (XOR 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (XOR nil (PROD (XOR nil ,A) ,A nil) nil ) ,A nil)
(PROD (XOR t (PROD (XOR t ,A) ,A t) t ) ,A t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (XOR 2 (PROD (XOR 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (XOR nil (PROD (XOR nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (XOR t (PROD (XOR t ,1) ,1 t) t ) ,1 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (XOR 2 (PROD (XOR 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (XOR nil (PROD (XOR nil ,()) ,() nil) nil ) ,() nil)
(PROD (XOR t (PROD (XOR t ,()) ,() t) t ) ,() t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (XOR 2 (PROD (XOR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (XOR nil (PROD (XOR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (XOR t (PROD (XOR t ,(())) ,(()) t) t ) ,(()) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (XOR 2 (PROD (XOR 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (XOR nil (PROD (XOR nil `'A) `'A nil) nil ) `'A nil)
(PROD (XOR t (PROD (XOR t `'A) `'A t) t ) `'A t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (XOR 2 (PROD (XOR 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (XOR nil (PROD (XOR nil `'B) `'B nil) nil ) `'B nil)
(PROD (XOR t (PROD (XOR t `'B) `'B t) t ) `'B t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (XOR 2 (PROD (XOR 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (XOR nil (PROD (XOR nil `'C) `'C nil) nil ) `'C nil)
(PROD (XOR t (PROD (XOR t `'C) `'C t) t ) `'C t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (XOR 2 (PROD (XOR 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (XOR nil (PROD (XOR nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (XOR t (PROD (XOR t `'1) `'1 t) t ) `'1 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (XOR 2 (PROD (XOR 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (XOR nil (PROD (XOR nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (XOR t (PROD (XOR t `'2) `'2 t) t ) `'2 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (XOR 2 (PROD (XOR 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (XOR nil (PROD (XOR nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (XOR t (PROD (XOR t `'3) `'3 t) t ) `'3 t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (XOR 2 (PROD (XOR 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (XOR nil (PROD (XOR nil `'()) `'() nil) nil ) `'() nil)
(PROD (XOR t (PROD (XOR t `'()) `'() t) t ) `'() t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (XOR 2 (PROD (XOR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (XOR nil (PROD (XOR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (XOR t (PROD (XOR t `'(())) `'(()) t) t ) `'(()) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (XOR 2 (PROD (XOR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (XOR nil (PROD (XOR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (XOR t (PROD (XOR t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (XOR 1 (PROD (XOR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (XOR 2 (PROD (XOR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (XOR nil (PROD (XOR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (XOR t (PROD (XOR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (XOR (cons t t) (PROD (XOR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (XOR (cons nil t) (PROD (XOR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (XOR (cons nil nil) (PROD (XOR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (XOR (cons 0 0) (PROD (XOR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (XOR (cons 1 1) (PROD (XOR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (XOR (list 1 2 3) (PROD (XOR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (XOR (list (cons 1 1 ) ) (PROD (XOR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 T) T 1) 1 ) T 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 T) T 2) 2 ) T 2)
(PROG1 (PROD nil (PROG1 (PROD nil T) T nil) nil ) T nil)
(PROG1 (PROD t (PROG1 (PROD t T) T t) t ) T t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(PROG1 (PROD nil (PROG1 (PROD nil NIL) NIL nil) nil ) NIL nil)
(PROG1 (PROD t (PROG1 (PROD t NIL) NIL t) t ) NIL t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 A) A 1) 1 ) A 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 A) A 2) 2 ) A 2)
(PROG1 (PROD nil (PROG1 (PROD nil A) A nil) nil ) A nil)
(PROG1 (PROD t (PROG1 (PROD t A) A t) t ) A t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 B) B 1) 1 ) B 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 B) B 2) 2 ) B 2)
(PROG1 (PROD nil (PROG1 (PROD nil B) B nil) nil ) B nil)
(PROG1 (PROD t (PROG1 (PROD t B) B t) t ) B t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 C) C 1) 1 ) C 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 C) C 2) 2 ) C 2)
(PROG1 (PROD nil (PROG1 (PROD nil C) C nil) nil ) C nil)
(PROG1 (PROD t (PROG1 (PROD t C) C t) t ) C t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 1) 1 1) 1 ) 1 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 1) 1 2) 2 ) 1 2)
(PROG1 (PROD nil (PROG1 (PROD nil 1) 1 nil) nil ) 1 nil)
(PROG1 (PROD t (PROG1 (PROD t 1) 1 t) t ) 1 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 2) 2 1) 1 ) 2 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 2) 2 2) 2 ) 2 2)
(PROG1 (PROD nil (PROG1 (PROD nil 2) 2 nil) nil ) 2 nil)
(PROG1 (PROD t (PROG1 (PROD t 2) 2 t) t ) 2 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 3) 3 1) 1 ) 3 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 3) 3 2) 2 ) 3 2)
(PROG1 (PROD nil (PROG1 (PROD nil 3) 3 nil) nil ) 3 nil)
(PROG1 (PROD t (PROG1 (PROD t 3) 3 t) t ) 3 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 ()) () 1) 1 ) () 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 ()) () 2) 2 ) () 2)
(PROG1 (PROD nil (PROG1 (PROD nil ()) () nil) nil ) () nil)
(PROG1 (PROD t (PROG1 (PROD t ()) () t) t ) () t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 (())) (()) 1) 1 ) (()) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 (())) (()) 2) 2 ) (()) 2)
(PROG1 (PROD nil (PROG1 (PROD nil (())) (()) nil) nil ) (()) nil)
(PROG1 (PROD t (PROG1 (PROD t (())) (()) t) t ) (()) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROG1 (PROD nil (PROG1 (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(PROG1 (PROD t (PROG1 (PROD t ((()))) ((())) t) t ) ((())) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROG1 (PROD nil (PROG1 (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROG1 (PROD t (PROG1 (PROD t (((())))) (((()))) t) t ) (((()))) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 'A) 'A 1) 1 ) 'A 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 'A) 'A 2) 2 ) 'A 2)
(PROG1 (PROD nil (PROG1 (PROD nil 'A) 'A nil) nil ) 'A nil)
(PROG1 (PROD t (PROG1 (PROD t 'A) 'A t) t ) 'A t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 'B) 'B 1) 1 ) 'B 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 'B) 'B 2) 2 ) 'B 2)
(PROG1 (PROD nil (PROG1 (PROD nil 'B) 'B nil) nil ) 'B nil)
(PROG1 (PROD t (PROG1 (PROD t 'B) 'B t) t ) 'B t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 'C) 'C 1) 1 ) 'C 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 'C) 'C 2) 2 ) 'C 2)
(PROG1 (PROD nil (PROG1 (PROD nil 'C) 'C nil) nil ) 'C nil)
(PROG1 (PROD t (PROG1 (PROD t 'C) 'C t) t ) 'C t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 '1) '1 1) 1 ) '1 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 '1) '1 2) 2 ) '1 2)
(PROG1 (PROD nil (PROG1 (PROD nil '1) '1 nil) nil ) '1 nil)
(PROG1 (PROD t (PROG1 (PROD t '1) '1 t) t ) '1 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 '2) '2 1) 1 ) '2 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 '2) '2 2) 2 ) '2 2)
(PROG1 (PROD nil (PROG1 (PROD nil '2) '2 nil) nil ) '2 nil)
(PROG1 (PROD t (PROG1 (PROD t '2) '2 t) t ) '2 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 '3) '3 1) 1 ) '3 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 '3) '3 2) 2 ) '3 2)
(PROG1 (PROD nil (PROG1 (PROD nil '3) '3 nil) nil ) '3 nil)
(PROG1 (PROD t (PROG1 (PROD t '3) '3 t) t ) '3 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 '()) '() 1) 1 ) '() 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 '()) '() 2) 2 ) '() 2)
(PROG1 (PROD nil (PROG1 (PROD nil '()) '() nil) nil ) '() nil)
(PROG1 (PROD t (PROG1 (PROD t '()) '() t) t ) '() t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROG1 (PROD nil (PROG1 (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(PROG1 (PROD t (PROG1 (PROD t '(())) '(()) t) t ) '(()) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROG1 (PROD nil (PROG1 (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(PROG1 (PROD t (PROG1 (PROD t '((()))) '((())) t) t ) '((())) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROG1 (PROD nil (PROG1 (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROG1 (PROD t (PROG1 (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(PROG1 (PROD nil (PROG1 (PROD nil ,A) ,A nil) nil ) ,A nil)
(PROG1 (PROD t (PROG1 (PROD t ,A) ,A t) t ) ,A t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(PROG1 (PROD nil (PROG1 (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(PROG1 (PROD t (PROG1 (PROD t ,1) ,1 t) t ) ,1 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(PROG1 (PROD nil (PROG1 (PROD nil ,()) ,() nil) nil ) ,() nil)
(PROG1 (PROD t (PROG1 (PROD t ,()) ,() t) t ) ,() t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROG1 (PROD nil (PROG1 (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROG1 (PROD t (PROG1 (PROD t ,(())) ,(()) t) t ) ,(()) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'A) `'A nil) nil ) `'A nil)
(PROG1 (PROD t (PROG1 (PROD t `'A) `'A t) t ) `'A t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'B) `'B nil) nil ) `'B nil)
(PROG1 (PROD t (PROG1 (PROD t `'B) `'B t) t ) `'B t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'C) `'C nil) nil ) `'C nil)
(PROG1 (PROD t (PROG1 (PROD t `'C) `'C t) t ) `'C t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(PROG1 (PROD t (PROG1 (PROD t `'1) `'1 t) t ) `'1 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(PROG1 (PROD t (PROG1 (PROD t `'2) `'2 t) t ) `'2 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(PROG1 (PROD t (PROG1 (PROD t `'3) `'3 t) t ) `'3 t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'()) `'() nil) nil ) `'() nil)
(PROG1 (PROD t (PROG1 (PROD t `'()) `'() t) t ) `'() t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROG1 (PROD t (PROG1 (PROD t `'(())) `'(()) t) t ) `'(()) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROG1 (PROD t (PROG1 (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROG1 (PROD 1 (PROG1 (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROG1 (PROD 2 (PROG1 (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROG1 (PROD nil (PROG1 (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROG1 (PROD t (PROG1 (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROG1 (PROD (cons t t) (PROG1 (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROG1 (PROD (cons nil t) (PROG1 (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROG1 (PROD (cons nil nil) (PROG1 (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROG1 (PROD (cons 0 0) (PROG1 (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROG1 (PROD (cons 1 1) (PROG1 (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROG1 (PROD (list 1 2 3) (PROG1 (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROG1 (PROD (list (cons 1 1 ) ) (PROG1 (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 T) T 1) 1 ) T 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 T) T 2) 2 ) T 2)
(PROG2 (PROD nil (PROG2 (PROD nil T) T nil) nil ) T nil)
(PROG2 (PROD t (PROG2 (PROD t T) T t) t ) T t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(PROG2 (PROD nil (PROG2 (PROD nil NIL) NIL nil) nil ) NIL nil)
(PROG2 (PROD t (PROG2 (PROD t NIL) NIL t) t ) NIL t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 A) A 1) 1 ) A 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 A) A 2) 2 ) A 2)
(PROG2 (PROD nil (PROG2 (PROD nil A) A nil) nil ) A nil)
(PROG2 (PROD t (PROG2 (PROD t A) A t) t ) A t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 B) B 1) 1 ) B 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 B) B 2) 2 ) B 2)
(PROG2 (PROD nil (PROG2 (PROD nil B) B nil) nil ) B nil)
(PROG2 (PROD t (PROG2 (PROD t B) B t) t ) B t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 C) C 1) 1 ) C 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 C) C 2) 2 ) C 2)
(PROG2 (PROD nil (PROG2 (PROD nil C) C nil) nil ) C nil)
(PROG2 (PROD t (PROG2 (PROD t C) C t) t ) C t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 1) 1 1) 1 ) 1 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 1) 1 2) 2 ) 1 2)
(PROG2 (PROD nil (PROG2 (PROD nil 1) 1 nil) nil ) 1 nil)
(PROG2 (PROD t (PROG2 (PROD t 1) 1 t) t ) 1 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 2) 2 1) 1 ) 2 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 2) 2 2) 2 ) 2 2)
(PROG2 (PROD nil (PROG2 (PROD nil 2) 2 nil) nil ) 2 nil)
(PROG2 (PROD t (PROG2 (PROD t 2) 2 t) t ) 2 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 3) 3 1) 1 ) 3 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 3) 3 2) 2 ) 3 2)
(PROG2 (PROD nil (PROG2 (PROD nil 3) 3 nil) nil ) 3 nil)
(PROG2 (PROD t (PROG2 (PROD t 3) 3 t) t ) 3 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 ()) () 1) 1 ) () 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 ()) () 2) 2 ) () 2)
(PROG2 (PROD nil (PROG2 (PROD nil ()) () nil) nil ) () nil)
(PROG2 (PROD t (PROG2 (PROD t ()) () t) t ) () t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 (())) (()) 1) 1 ) (()) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 (())) (()) 2) 2 ) (()) 2)
(PROG2 (PROD nil (PROG2 (PROD nil (())) (()) nil) nil ) (()) nil)
(PROG2 (PROD t (PROG2 (PROD t (())) (()) t) t ) (()) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROG2 (PROD nil (PROG2 (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(PROG2 (PROD t (PROG2 (PROD t ((()))) ((())) t) t ) ((())) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROG2 (PROD nil (PROG2 (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROG2 (PROD t (PROG2 (PROD t (((())))) (((()))) t) t ) (((()))) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 'A) 'A 1) 1 ) 'A 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 'A) 'A 2) 2 ) 'A 2)
(PROG2 (PROD nil (PROG2 (PROD nil 'A) 'A nil) nil ) 'A nil)
(PROG2 (PROD t (PROG2 (PROD t 'A) 'A t) t ) 'A t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 'B) 'B 1) 1 ) 'B 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 'B) 'B 2) 2 ) 'B 2)
(PROG2 (PROD nil (PROG2 (PROD nil 'B) 'B nil) nil ) 'B nil)
(PROG2 (PROD t (PROG2 (PROD t 'B) 'B t) t ) 'B t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 'C) 'C 1) 1 ) 'C 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 'C) 'C 2) 2 ) 'C 2)
(PROG2 (PROD nil (PROG2 (PROD nil 'C) 'C nil) nil ) 'C nil)
(PROG2 (PROD t (PROG2 (PROD t 'C) 'C t) t ) 'C t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 '1) '1 1) 1 ) '1 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 '1) '1 2) 2 ) '1 2)
(PROG2 (PROD nil (PROG2 (PROD nil '1) '1 nil) nil ) '1 nil)
(PROG2 (PROD t (PROG2 (PROD t '1) '1 t) t ) '1 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 '2) '2 1) 1 ) '2 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 '2) '2 2) 2 ) '2 2)
(PROG2 (PROD nil (PROG2 (PROD nil '2) '2 nil) nil ) '2 nil)
(PROG2 (PROD t (PROG2 (PROD t '2) '2 t) t ) '2 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 '3) '3 1) 1 ) '3 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 '3) '3 2) 2 ) '3 2)
(PROG2 (PROD nil (PROG2 (PROD nil '3) '3 nil) nil ) '3 nil)
(PROG2 (PROD t (PROG2 (PROD t '3) '3 t) t ) '3 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 '()) '() 1) 1 ) '() 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 '()) '() 2) 2 ) '() 2)
(PROG2 (PROD nil (PROG2 (PROD nil '()) '() nil) nil ) '() nil)
(PROG2 (PROD t (PROG2 (PROD t '()) '() t) t ) '() t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROG2 (PROD nil (PROG2 (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(PROG2 (PROD t (PROG2 (PROD t '(())) '(()) t) t ) '(()) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROG2 (PROD nil (PROG2 (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(PROG2 (PROD t (PROG2 (PROD t '((()))) '((())) t) t ) '((())) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROG2 (PROD nil (PROG2 (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROG2 (PROD t (PROG2 (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(PROG2 (PROD nil (PROG2 (PROD nil ,A) ,A nil) nil ) ,A nil)
(PROG2 (PROD t (PROG2 (PROD t ,A) ,A t) t ) ,A t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(PROG2 (PROD nil (PROG2 (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(PROG2 (PROD t (PROG2 (PROD t ,1) ,1 t) t ) ,1 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(PROG2 (PROD nil (PROG2 (PROD nil ,()) ,() nil) nil ) ,() nil)
(PROG2 (PROD t (PROG2 (PROD t ,()) ,() t) t ) ,() t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROG2 (PROD nil (PROG2 (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROG2 (PROD t (PROG2 (PROD t ,(())) ,(()) t) t ) ,(()) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'A) `'A nil) nil ) `'A nil)
(PROG2 (PROD t (PROG2 (PROD t `'A) `'A t) t ) `'A t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'B) `'B nil) nil ) `'B nil)
(PROG2 (PROD t (PROG2 (PROD t `'B) `'B t) t ) `'B t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'C) `'C nil) nil ) `'C nil)
(PROG2 (PROD t (PROG2 (PROD t `'C) `'C t) t ) `'C t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(PROG2 (PROD t (PROG2 (PROD t `'1) `'1 t) t ) `'1 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(PROG2 (PROD t (PROG2 (PROD t `'2) `'2 t) t ) `'2 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(PROG2 (PROD t (PROG2 (PROD t `'3) `'3 t) t ) `'3 t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'()) `'() nil) nil ) `'() nil)
(PROG2 (PROD t (PROG2 (PROD t `'()) `'() t) t ) `'() t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROG2 (PROD t (PROG2 (PROD t `'(())) `'(()) t) t ) `'(()) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROG2 (PROD t (PROG2 (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROG2 (PROD 1 (PROG2 (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROG2 (PROD 2 (PROG2 (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROG2 (PROD nil (PROG2 (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROG2 (PROD t (PROG2 (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROG2 (PROD (cons t t) (PROG2 (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROG2 (PROD (cons nil t) (PROG2 (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROG2 (PROD (cons nil nil) (PROG2 (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROG2 (PROD (cons 0 0) (PROG2 (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROG2 (PROD (cons 1 1) (PROG2 (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROG2 (PROD (list 1 2 3) (PROG2 (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROG2 (PROD (list (cons 1 1 ) ) (PROG2 (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 T) T 1) 1 ) T 1)
(PROGN (PROD 2 (PROGN (PROD 2 T) T 2) 2 ) T 2)
(PROGN (PROD nil (PROGN (PROD nil T) T nil) nil ) T nil)
(PROGN (PROD t (PROGN (PROD t T) T t) t ) T t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(PROGN (PROD 2 (PROGN (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(PROGN (PROD nil (PROGN (PROD nil NIL) NIL nil) nil ) NIL nil)
(PROGN (PROD t (PROGN (PROD t NIL) NIL t) t ) NIL t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 A) A 1) 1 ) A 1)
(PROGN (PROD 2 (PROGN (PROD 2 A) A 2) 2 ) A 2)
(PROGN (PROD nil (PROGN (PROD nil A) A nil) nil ) A nil)
(PROGN (PROD t (PROGN (PROD t A) A t) t ) A t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 B) B 1) 1 ) B 1)
(PROGN (PROD 2 (PROGN (PROD 2 B) B 2) 2 ) B 2)
(PROGN (PROD nil (PROGN (PROD nil B) B nil) nil ) B nil)
(PROGN (PROD t (PROGN (PROD t B) B t) t ) B t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 C) C 1) 1 ) C 1)
(PROGN (PROD 2 (PROGN (PROD 2 C) C 2) 2 ) C 2)
(PROGN (PROD nil (PROGN (PROD nil C) C nil) nil ) C nil)
(PROGN (PROD t (PROGN (PROD t C) C t) t ) C t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 1) 1 1) 1 ) 1 1)
(PROGN (PROD 2 (PROGN (PROD 2 1) 1 2) 2 ) 1 2)
(PROGN (PROD nil (PROGN (PROD nil 1) 1 nil) nil ) 1 nil)
(PROGN (PROD t (PROGN (PROD t 1) 1 t) t ) 1 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 2) 2 1) 1 ) 2 1)
(PROGN (PROD 2 (PROGN (PROD 2 2) 2 2) 2 ) 2 2)
(PROGN (PROD nil (PROGN (PROD nil 2) 2 nil) nil ) 2 nil)
(PROGN (PROD t (PROGN (PROD t 2) 2 t) t ) 2 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 3) 3 1) 1 ) 3 1)
(PROGN (PROD 2 (PROGN (PROD 2 3) 3 2) 2 ) 3 2)
(PROGN (PROD nil (PROGN (PROD nil 3) 3 nil) nil ) 3 nil)
(PROGN (PROD t (PROGN (PROD t 3) 3 t) t ) 3 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 ()) () 1) 1 ) () 1)
(PROGN (PROD 2 (PROGN (PROD 2 ()) () 2) 2 ) () 2)
(PROGN (PROD nil (PROGN (PROD nil ()) () nil) nil ) () nil)
(PROGN (PROD t (PROGN (PROD t ()) () t) t ) () t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 (())) (()) 1) 1 ) (()) 1)
(PROGN (PROD 2 (PROGN (PROD 2 (())) (()) 2) 2 ) (()) 2)
(PROGN (PROD nil (PROGN (PROD nil (())) (()) nil) nil ) (()) nil)
(PROGN (PROD t (PROGN (PROD t (())) (()) t) t ) (()) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROGN (PROD 2 (PROGN (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROGN (PROD nil (PROGN (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(PROGN (PROD t (PROGN (PROD t ((()))) ((())) t) t ) ((())) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROGN (PROD 2 (PROGN (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROGN (PROD nil (PROGN (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROGN (PROD t (PROGN (PROD t (((())))) (((()))) t) t ) (((()))) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 'A) 'A 1) 1 ) 'A 1)
(PROGN (PROD 2 (PROGN (PROD 2 'A) 'A 2) 2 ) 'A 2)
(PROGN (PROD nil (PROGN (PROD nil 'A) 'A nil) nil ) 'A nil)
(PROGN (PROD t (PROGN (PROD t 'A) 'A t) t ) 'A t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 'B) 'B 1) 1 ) 'B 1)
(PROGN (PROD 2 (PROGN (PROD 2 'B) 'B 2) 2 ) 'B 2)
(PROGN (PROD nil (PROGN (PROD nil 'B) 'B nil) nil ) 'B nil)
(PROGN (PROD t (PROGN (PROD t 'B) 'B t) t ) 'B t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 'C) 'C 1) 1 ) 'C 1)
(PROGN (PROD 2 (PROGN (PROD 2 'C) 'C 2) 2 ) 'C 2)
(PROGN (PROD nil (PROGN (PROD nil 'C) 'C nil) nil ) 'C nil)
(PROGN (PROD t (PROGN (PROD t 'C) 'C t) t ) 'C t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 '1) '1 1) 1 ) '1 1)
(PROGN (PROD 2 (PROGN (PROD 2 '1) '1 2) 2 ) '1 2)
(PROGN (PROD nil (PROGN (PROD nil '1) '1 nil) nil ) '1 nil)
(PROGN (PROD t (PROGN (PROD t '1) '1 t) t ) '1 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 '2) '2 1) 1 ) '2 1)
(PROGN (PROD 2 (PROGN (PROD 2 '2) '2 2) 2 ) '2 2)
(PROGN (PROD nil (PROGN (PROD nil '2) '2 nil) nil ) '2 nil)
(PROGN (PROD t (PROGN (PROD t '2) '2 t) t ) '2 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 '3) '3 1) 1 ) '3 1)
(PROGN (PROD 2 (PROGN (PROD 2 '3) '3 2) 2 ) '3 2)
(PROGN (PROD nil (PROGN (PROD nil '3) '3 nil) nil ) '3 nil)
(PROGN (PROD t (PROGN (PROD t '3) '3 t) t ) '3 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 '()) '() 1) 1 ) '() 1)
(PROGN (PROD 2 (PROGN (PROD 2 '()) '() 2) 2 ) '() 2)
(PROGN (PROD nil (PROGN (PROD nil '()) '() nil) nil ) '() nil)
(PROGN (PROD t (PROGN (PROD t '()) '() t) t ) '() t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROGN (PROD 2 (PROGN (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROGN (PROD nil (PROGN (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(PROGN (PROD t (PROGN (PROD t '(())) '(()) t) t ) '(()) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROGN (PROD 2 (PROGN (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROGN (PROD nil (PROGN (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(PROGN (PROD t (PROGN (PROD t '((()))) '((())) t) t ) '((())) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROGN (PROD 2 (PROGN (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROGN (PROD nil (PROGN (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROGN (PROD t (PROGN (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(PROGN (PROD 2 (PROGN (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(PROGN (PROD nil (PROGN (PROD nil ,A) ,A nil) nil ) ,A nil)
(PROGN (PROD t (PROGN (PROD t ,A) ,A t) t ) ,A t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(PROGN (PROD 2 (PROGN (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(PROGN (PROD nil (PROGN (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(PROGN (PROD t (PROGN (PROD t ,1) ,1 t) t ) ,1 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(PROGN (PROD 2 (PROGN (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(PROGN (PROD nil (PROGN (PROD nil ,()) ,() nil) nil ) ,() nil)
(PROGN (PROD t (PROGN (PROD t ,()) ,() t) t ) ,() t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROGN (PROD 2 (PROGN (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROGN (PROD nil (PROGN (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROGN (PROD t (PROGN (PROD t ,(())) ,(()) t) t ) ,(()) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(PROGN (PROD nil (PROGN (PROD nil `'A) `'A nil) nil ) `'A nil)
(PROGN (PROD t (PROGN (PROD t `'A) `'A t) t ) `'A t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(PROGN (PROD nil (PROGN (PROD nil `'B) `'B nil) nil ) `'B nil)
(PROGN (PROD t (PROGN (PROD t `'B) `'B t) t ) `'B t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(PROGN (PROD nil (PROGN (PROD nil `'C) `'C nil) nil ) `'C nil)
(PROGN (PROD t (PROGN (PROD t `'C) `'C t) t ) `'C t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(PROGN (PROD nil (PROGN (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(PROGN (PROD t (PROGN (PROD t `'1) `'1 t) t ) `'1 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(PROGN (PROD nil (PROGN (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(PROGN (PROD t (PROGN (PROD t `'2) `'2 t) t ) `'2 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(PROGN (PROD nil (PROGN (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(PROGN (PROD t (PROGN (PROD t `'3) `'3 t) t ) `'3 t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(PROGN (PROD nil (PROGN (PROD nil `'()) `'() nil) nil ) `'() nil)
(PROGN (PROD t (PROGN (PROD t `'()) `'() t) t ) `'() t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROGN (PROD nil (PROGN (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROGN (PROD t (PROGN (PROD t `'(())) `'(()) t) t ) `'(()) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROGN (PROD nil (PROGN (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROGN (PROD t (PROGN (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROGN (PROD 1 (PROGN (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROGN (PROD 2 (PROGN (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROGN (PROD nil (PROGN (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROGN (PROD t (PROGN (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROGN (PROD (cons t t) (PROGN (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROGN (PROD (cons nil t) (PROGN (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROGN (PROD (cons nil nil) (PROGN (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROGN (PROD (cons 0 0) (PROGN (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROGN (PROD (cons 1 1) (PROGN (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROGN (PROD (list 1 2 3) (PROGN (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROGN (PROD (list (cons 1 1 ) ) (PROGN (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 T) T 1) 1 ) T 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 T) T 2) 2 ) T 2)
(QUOTE (PROD nil (QUOTE (PROD nil T) T nil) nil ) T nil)
(QUOTE (PROD t (QUOTE (PROD t T) T t) t ) T t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(QUOTE (PROD nil (QUOTE (PROD nil NIL) NIL nil) nil ) NIL nil)
(QUOTE (PROD t (QUOTE (PROD t NIL) NIL t) t ) NIL t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 A) A 1) 1 ) A 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 A) A 2) 2 ) A 2)
(QUOTE (PROD nil (QUOTE (PROD nil A) A nil) nil ) A nil)
(QUOTE (PROD t (QUOTE (PROD t A) A t) t ) A t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 B) B 1) 1 ) B 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 B) B 2) 2 ) B 2)
(QUOTE (PROD nil (QUOTE (PROD nil B) B nil) nil ) B nil)
(QUOTE (PROD t (QUOTE (PROD t B) B t) t ) B t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 C) C 1) 1 ) C 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 C) C 2) 2 ) C 2)
(QUOTE (PROD nil (QUOTE (PROD nil C) C nil) nil ) C nil)
(QUOTE (PROD t (QUOTE (PROD t C) C t) t ) C t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 1) 1 1) 1 ) 1 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 1) 1 2) 2 ) 1 2)
(QUOTE (PROD nil (QUOTE (PROD nil 1) 1 nil) nil ) 1 nil)
(QUOTE (PROD t (QUOTE (PROD t 1) 1 t) t ) 1 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 2) 2 1) 1 ) 2 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 2) 2 2) 2 ) 2 2)
(QUOTE (PROD nil (QUOTE (PROD nil 2) 2 nil) nil ) 2 nil)
(QUOTE (PROD t (QUOTE (PROD t 2) 2 t) t ) 2 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 3) 3 1) 1 ) 3 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 3) 3 2) 2 ) 3 2)
(QUOTE (PROD nil (QUOTE (PROD nil 3) 3 nil) nil ) 3 nil)
(QUOTE (PROD t (QUOTE (PROD t 3) 3 t) t ) 3 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 ()) () 1) 1 ) () 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 ()) () 2) 2 ) () 2)
(QUOTE (PROD nil (QUOTE (PROD nil ()) () nil) nil ) () nil)
(QUOTE (PROD t (QUOTE (PROD t ()) () t) t ) () t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 (())) (()) 1) 1 ) (()) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 (())) (()) 2) 2 ) (()) 2)
(QUOTE (PROD nil (QUOTE (PROD nil (())) (()) nil) nil ) (()) nil)
(QUOTE (PROD t (QUOTE (PROD t (())) (()) t) t ) (()) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(QUOTE (PROD nil (QUOTE (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(QUOTE (PROD t (QUOTE (PROD t ((()))) ((())) t) t ) ((())) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(QUOTE (PROD nil (QUOTE (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(QUOTE (PROD t (QUOTE (PROD t (((())))) (((()))) t) t ) (((()))) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 'A) 'A 1) 1 ) 'A 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 'A) 'A 2) 2 ) 'A 2)
(QUOTE (PROD nil (QUOTE (PROD nil 'A) 'A nil) nil ) 'A nil)
(QUOTE (PROD t (QUOTE (PROD t 'A) 'A t) t ) 'A t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 'B) 'B 1) 1 ) 'B 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 'B) 'B 2) 2 ) 'B 2)
(QUOTE (PROD nil (QUOTE (PROD nil 'B) 'B nil) nil ) 'B nil)
(QUOTE (PROD t (QUOTE (PROD t 'B) 'B t) t ) 'B t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 'C) 'C 1) 1 ) 'C 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 'C) 'C 2) 2 ) 'C 2)
(QUOTE (PROD nil (QUOTE (PROD nil 'C) 'C nil) nil ) 'C nil)
(QUOTE (PROD t (QUOTE (PROD t 'C) 'C t) t ) 'C t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 '1) '1 1) 1 ) '1 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 '1) '1 2) 2 ) '1 2)
(QUOTE (PROD nil (QUOTE (PROD nil '1) '1 nil) nil ) '1 nil)
(QUOTE (PROD t (QUOTE (PROD t '1) '1 t) t ) '1 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 '2) '2 1) 1 ) '2 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 '2) '2 2) 2 ) '2 2)
(QUOTE (PROD nil (QUOTE (PROD nil '2) '2 nil) nil ) '2 nil)
(QUOTE (PROD t (QUOTE (PROD t '2) '2 t) t ) '2 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 '3) '3 1) 1 ) '3 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 '3) '3 2) 2 ) '3 2)
(QUOTE (PROD nil (QUOTE (PROD nil '3) '3 nil) nil ) '3 nil)
(QUOTE (PROD t (QUOTE (PROD t '3) '3 t) t ) '3 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 '()) '() 1) 1 ) '() 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 '()) '() 2) 2 ) '() 2)
(QUOTE (PROD nil (QUOTE (PROD nil '()) '() nil) nil ) '() nil)
(QUOTE (PROD t (QUOTE (PROD t '()) '() t) t ) '() t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(QUOTE (PROD nil (QUOTE (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(QUOTE (PROD t (QUOTE (PROD t '(())) '(()) t) t ) '(()) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(QUOTE (PROD nil (QUOTE (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(QUOTE (PROD t (QUOTE (PROD t '((()))) '((())) t) t ) '((())) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(QUOTE (PROD nil (QUOTE (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(QUOTE (PROD t (QUOTE (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(QUOTE (PROD nil (QUOTE (PROD nil ,A) ,A nil) nil ) ,A nil)
(QUOTE (PROD t (QUOTE (PROD t ,A) ,A t) t ) ,A t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(QUOTE (PROD nil (QUOTE (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(QUOTE (PROD t (QUOTE (PROD t ,1) ,1 t) t ) ,1 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(QUOTE (PROD nil (QUOTE (PROD nil ,()) ,() nil) nil ) ,() nil)
(QUOTE (PROD t (QUOTE (PROD t ,()) ,() t) t ) ,() t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(QUOTE (PROD nil (QUOTE (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(QUOTE (PROD t (QUOTE (PROD t ,(())) ,(()) t) t ) ,(()) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'A) `'A nil) nil ) `'A nil)
(QUOTE (PROD t (QUOTE (PROD t `'A) `'A t) t ) `'A t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'B) `'B nil) nil ) `'B nil)
(QUOTE (PROD t (QUOTE (PROD t `'B) `'B t) t ) `'B t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'C) `'C nil) nil ) `'C nil)
(QUOTE (PROD t (QUOTE (PROD t `'C) `'C t) t ) `'C t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(QUOTE (PROD t (QUOTE (PROD t `'1) `'1 t) t ) `'1 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(QUOTE (PROD t (QUOTE (PROD t `'2) `'2 t) t ) `'2 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(QUOTE (PROD t (QUOTE (PROD t `'3) `'3 t) t ) `'3 t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'()) `'() nil) nil ) `'() nil)
(QUOTE (PROD t (QUOTE (PROD t `'()) `'() t) t ) `'() t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(QUOTE (PROD t (QUOTE (PROD t `'(())) `'(()) t) t ) `'(()) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(QUOTE (PROD t (QUOTE (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(QUOTE (PROD 1 (QUOTE (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(QUOTE (PROD 2 (QUOTE (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(QUOTE (PROD nil (QUOTE (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(QUOTE (PROD t (QUOTE (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(QUOTE (PROD (cons t t) (QUOTE (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(QUOTE (PROD (cons nil t) (QUOTE (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(QUOTE (PROD (cons nil nil) (QUOTE (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(QUOTE (PROD (cons 0 0) (QUOTE (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(QUOTE (PROD (cons 1 1) (QUOTE (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(QUOTE (PROD (list 1 2 3) (QUOTE (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(QUOTE (PROD (list (cons 1 1 ) ) (QUOTE (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 T) T 1) 1 ) T 1)
(SUBST (PROD 2 (SUBST (PROD 2 T) T 2) 2 ) T 2)
(SUBST (PROD nil (SUBST (PROD nil T) T nil) nil ) T nil)
(SUBST (PROD t (SUBST (PROD t T) T t) t ) T t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(SUBST (PROD 2 (SUBST (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(SUBST (PROD nil (SUBST (PROD nil NIL) NIL nil) nil ) NIL nil)
(SUBST (PROD t (SUBST (PROD t NIL) NIL t) t ) NIL t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 A) A 1) 1 ) A 1)
(SUBST (PROD 2 (SUBST (PROD 2 A) A 2) 2 ) A 2)
(SUBST (PROD nil (SUBST (PROD nil A) A nil) nil ) A nil)
(SUBST (PROD t (SUBST (PROD t A) A t) t ) A t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 B) B 1) 1 ) B 1)
(SUBST (PROD 2 (SUBST (PROD 2 B) B 2) 2 ) B 2)
(SUBST (PROD nil (SUBST (PROD nil B) B nil) nil ) B nil)
(SUBST (PROD t (SUBST (PROD t B) B t) t ) B t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 C) C 1) 1 ) C 1)
(SUBST (PROD 2 (SUBST (PROD 2 C) C 2) 2 ) C 2)
(SUBST (PROD nil (SUBST (PROD nil C) C nil) nil ) C nil)
(SUBST (PROD t (SUBST (PROD t C) C t) t ) C t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 1) 1 1) 1 ) 1 1)
(SUBST (PROD 2 (SUBST (PROD 2 1) 1 2) 2 ) 1 2)
(SUBST (PROD nil (SUBST (PROD nil 1) 1 nil) nil ) 1 nil)
(SUBST (PROD t (SUBST (PROD t 1) 1 t) t ) 1 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 2) 2 1) 1 ) 2 1)
(SUBST (PROD 2 (SUBST (PROD 2 2) 2 2) 2 ) 2 2)
(SUBST (PROD nil (SUBST (PROD nil 2) 2 nil) nil ) 2 nil)
(SUBST (PROD t (SUBST (PROD t 2) 2 t) t ) 2 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 3) 3 1) 1 ) 3 1)
(SUBST (PROD 2 (SUBST (PROD 2 3) 3 2) 2 ) 3 2)
(SUBST (PROD nil (SUBST (PROD nil 3) 3 nil) nil ) 3 nil)
(SUBST (PROD t (SUBST (PROD t 3) 3 t) t ) 3 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 ()) () 1) 1 ) () 1)
(SUBST (PROD 2 (SUBST (PROD 2 ()) () 2) 2 ) () 2)
(SUBST (PROD nil (SUBST (PROD nil ()) () nil) nil ) () nil)
(SUBST (PROD t (SUBST (PROD t ()) () t) t ) () t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 (())) (()) 1) 1 ) (()) 1)
(SUBST (PROD 2 (SUBST (PROD 2 (())) (()) 2) 2 ) (()) 2)
(SUBST (PROD nil (SUBST (PROD nil (())) (()) nil) nil ) (()) nil)
(SUBST (PROD t (SUBST (PROD t (())) (()) t) t ) (()) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(SUBST (PROD 2 (SUBST (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(SUBST (PROD nil (SUBST (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(SUBST (PROD t (SUBST (PROD t ((()))) ((())) t) t ) ((())) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(SUBST (PROD 2 (SUBST (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(SUBST (PROD nil (SUBST (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(SUBST (PROD t (SUBST (PROD t (((())))) (((()))) t) t ) (((()))) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 'A) 'A 1) 1 ) 'A 1)
(SUBST (PROD 2 (SUBST (PROD 2 'A) 'A 2) 2 ) 'A 2)
(SUBST (PROD nil (SUBST (PROD nil 'A) 'A nil) nil ) 'A nil)
(SUBST (PROD t (SUBST (PROD t 'A) 'A t) t ) 'A t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 'B) 'B 1) 1 ) 'B 1)
(SUBST (PROD 2 (SUBST (PROD 2 'B) 'B 2) 2 ) 'B 2)
(SUBST (PROD nil (SUBST (PROD nil 'B) 'B nil) nil ) 'B nil)
(SUBST (PROD t (SUBST (PROD t 'B) 'B t) t ) 'B t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 'C) 'C 1) 1 ) 'C 1)
(SUBST (PROD 2 (SUBST (PROD 2 'C) 'C 2) 2 ) 'C 2)
(SUBST (PROD nil (SUBST (PROD nil 'C) 'C nil) nil ) 'C nil)
(SUBST (PROD t (SUBST (PROD t 'C) 'C t) t ) 'C t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 '1) '1 1) 1 ) '1 1)
(SUBST (PROD 2 (SUBST (PROD 2 '1) '1 2) 2 ) '1 2)
(SUBST (PROD nil (SUBST (PROD nil '1) '1 nil) nil ) '1 nil)
(SUBST (PROD t (SUBST (PROD t '1) '1 t) t ) '1 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 '2) '2 1) 1 ) '2 1)
(SUBST (PROD 2 (SUBST (PROD 2 '2) '2 2) 2 ) '2 2)
(SUBST (PROD nil (SUBST (PROD nil '2) '2 nil) nil ) '2 nil)
(SUBST (PROD t (SUBST (PROD t '2) '2 t) t ) '2 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 '3) '3 1) 1 ) '3 1)
(SUBST (PROD 2 (SUBST (PROD 2 '3) '3 2) 2 ) '3 2)
(SUBST (PROD nil (SUBST (PROD nil '3) '3 nil) nil ) '3 nil)
(SUBST (PROD t (SUBST (PROD t '3) '3 t) t ) '3 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 '()) '() 1) 1 ) '() 1)
(SUBST (PROD 2 (SUBST (PROD 2 '()) '() 2) 2 ) '() 2)
(SUBST (PROD nil (SUBST (PROD nil '()) '() nil) nil ) '() nil)
(SUBST (PROD t (SUBST (PROD t '()) '() t) t ) '() t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(SUBST (PROD 2 (SUBST (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(SUBST (PROD nil (SUBST (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(SUBST (PROD t (SUBST (PROD t '(())) '(()) t) t ) '(()) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(SUBST (PROD 2 (SUBST (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(SUBST (PROD nil (SUBST (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(SUBST (PROD t (SUBST (PROD t '((()))) '((())) t) t ) '((())) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(SUBST (PROD 2 (SUBST (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(SUBST (PROD nil (SUBST (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(SUBST (PROD t (SUBST (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(SUBST (PROD 2 (SUBST (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(SUBST (PROD nil (SUBST (PROD nil ,A) ,A nil) nil ) ,A nil)
(SUBST (PROD t (SUBST (PROD t ,A) ,A t) t ) ,A t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(SUBST (PROD 2 (SUBST (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(SUBST (PROD nil (SUBST (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(SUBST (PROD t (SUBST (PROD t ,1) ,1 t) t ) ,1 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(SUBST (PROD 2 (SUBST (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(SUBST (PROD nil (SUBST (PROD nil ,()) ,() nil) nil ) ,() nil)
(SUBST (PROD t (SUBST (PROD t ,()) ,() t) t ) ,() t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(SUBST (PROD 2 (SUBST (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(SUBST (PROD nil (SUBST (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(SUBST (PROD t (SUBST (PROD t ,(())) ,(()) t) t ) ,(()) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(SUBST (PROD nil (SUBST (PROD nil `'A) `'A nil) nil ) `'A nil)
(SUBST (PROD t (SUBST (PROD t `'A) `'A t) t ) `'A t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(SUBST (PROD nil (SUBST (PROD nil `'B) `'B nil) nil ) `'B nil)
(SUBST (PROD t (SUBST (PROD t `'B) `'B t) t ) `'B t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(SUBST (PROD nil (SUBST (PROD nil `'C) `'C nil) nil ) `'C nil)
(SUBST (PROD t (SUBST (PROD t `'C) `'C t) t ) `'C t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(SUBST (PROD nil (SUBST (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(SUBST (PROD t (SUBST (PROD t `'1) `'1 t) t ) `'1 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(SUBST (PROD nil (SUBST (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(SUBST (PROD t (SUBST (PROD t `'2) `'2 t) t ) `'2 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(SUBST (PROD nil (SUBST (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(SUBST (PROD t (SUBST (PROD t `'3) `'3 t) t ) `'3 t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(SUBST (PROD nil (SUBST (PROD nil `'()) `'() nil) nil ) `'() nil)
(SUBST (PROD t (SUBST (PROD t `'()) `'() t) t ) `'() t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(SUBST (PROD nil (SUBST (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(SUBST (PROD t (SUBST (PROD t `'(())) `'(()) t) t ) `'(()) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(SUBST (PROD nil (SUBST (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(SUBST (PROD t (SUBST (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(SUBST (PROD 1 (SUBST (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(SUBST (PROD 2 (SUBST (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(SUBST (PROD nil (SUBST (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(SUBST (PROD t (SUBST (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(SUBST (PROD (cons t t) (SUBST (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(SUBST (PROD (cons nil t) (SUBST (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(SUBST (PROD (cons nil nil) (SUBST (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(SUBST (PROD (cons 0 0) (SUBST (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(SUBST (PROD (cons 1 1) (SUBST (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(SUBST (PROD (list 1 2 3) (SUBST (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(SUBST (PROD (list (cons 1 1 ) ) (SUBST (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 T) T 1) 1 ) T 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 T) T 2) 2 ) T 2)
(UNLESS (PROD nil (UNLESS (PROD nil T) T nil) nil ) T nil)
(UNLESS (PROD t (UNLESS (PROD t T) T t) t ) T t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(UNLESS (PROD nil (UNLESS (PROD nil NIL) NIL nil) nil ) NIL nil)
(UNLESS (PROD t (UNLESS (PROD t NIL) NIL t) t ) NIL t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 A) A 1) 1 ) A 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 A) A 2) 2 ) A 2)
(UNLESS (PROD nil (UNLESS (PROD nil A) A nil) nil ) A nil)
(UNLESS (PROD t (UNLESS (PROD t A) A t) t ) A t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 B) B 1) 1 ) B 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 B) B 2) 2 ) B 2)
(UNLESS (PROD nil (UNLESS (PROD nil B) B nil) nil ) B nil)
(UNLESS (PROD t (UNLESS (PROD t B) B t) t ) B t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 C) C 1) 1 ) C 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 C) C 2) 2 ) C 2)
(UNLESS (PROD nil (UNLESS (PROD nil C) C nil) nil ) C nil)
(UNLESS (PROD t (UNLESS (PROD t C) C t) t ) C t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 1) 1 1) 1 ) 1 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 1) 1 2) 2 ) 1 2)
(UNLESS (PROD nil (UNLESS (PROD nil 1) 1 nil) nil ) 1 nil)
(UNLESS (PROD t (UNLESS (PROD t 1) 1 t) t ) 1 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 2) 2 1) 1 ) 2 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 2) 2 2) 2 ) 2 2)
(UNLESS (PROD nil (UNLESS (PROD nil 2) 2 nil) nil ) 2 nil)
(UNLESS (PROD t (UNLESS (PROD t 2) 2 t) t ) 2 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 3) 3 1) 1 ) 3 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 3) 3 2) 2 ) 3 2)
(UNLESS (PROD nil (UNLESS (PROD nil 3) 3 nil) nil ) 3 nil)
(UNLESS (PROD t (UNLESS (PROD t 3) 3 t) t ) 3 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 ()) () 1) 1 ) () 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 ()) () 2) 2 ) () 2)
(UNLESS (PROD nil (UNLESS (PROD nil ()) () nil) nil ) () nil)
(UNLESS (PROD t (UNLESS (PROD t ()) () t) t ) () t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 (())) (()) 1) 1 ) (()) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 (())) (()) 2) 2 ) (()) 2)
(UNLESS (PROD nil (UNLESS (PROD nil (())) (()) nil) nil ) (()) nil)
(UNLESS (PROD t (UNLESS (PROD t (())) (()) t) t ) (()) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(UNLESS (PROD nil (UNLESS (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(UNLESS (PROD t (UNLESS (PROD t ((()))) ((())) t) t ) ((())) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(UNLESS (PROD nil (UNLESS (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(UNLESS (PROD t (UNLESS (PROD t (((())))) (((()))) t) t ) (((()))) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 'A) 'A 1) 1 ) 'A 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 'A) 'A 2) 2 ) 'A 2)
(UNLESS (PROD nil (UNLESS (PROD nil 'A) 'A nil) nil ) 'A nil)
(UNLESS (PROD t (UNLESS (PROD t 'A) 'A t) t ) 'A t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 'B) 'B 1) 1 ) 'B 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 'B) 'B 2) 2 ) 'B 2)
(UNLESS (PROD nil (UNLESS (PROD nil 'B) 'B nil) nil ) 'B nil)
(UNLESS (PROD t (UNLESS (PROD t 'B) 'B t) t ) 'B t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 'C) 'C 1) 1 ) 'C 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 'C) 'C 2) 2 ) 'C 2)
(UNLESS (PROD nil (UNLESS (PROD nil 'C) 'C nil) nil ) 'C nil)
(UNLESS (PROD t (UNLESS (PROD t 'C) 'C t) t ) 'C t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 '1) '1 1) 1 ) '1 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 '1) '1 2) 2 ) '1 2)
(UNLESS (PROD nil (UNLESS (PROD nil '1) '1 nil) nil ) '1 nil)
(UNLESS (PROD t (UNLESS (PROD t '1) '1 t) t ) '1 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 '2) '2 1) 1 ) '2 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 '2) '2 2) 2 ) '2 2)
(UNLESS (PROD nil (UNLESS (PROD nil '2) '2 nil) nil ) '2 nil)
(UNLESS (PROD t (UNLESS (PROD t '2) '2 t) t ) '2 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 '3) '3 1) 1 ) '3 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 '3) '3 2) 2 ) '3 2)
(UNLESS (PROD nil (UNLESS (PROD nil '3) '3 nil) nil ) '3 nil)
(UNLESS (PROD t (UNLESS (PROD t '3) '3 t) t ) '3 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 '()) '() 1) 1 ) '() 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 '()) '() 2) 2 ) '() 2)
(UNLESS (PROD nil (UNLESS (PROD nil '()) '() nil) nil ) '() nil)
(UNLESS (PROD t (UNLESS (PROD t '()) '() t) t ) '() t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(UNLESS (PROD nil (UNLESS (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(UNLESS (PROD t (UNLESS (PROD t '(())) '(()) t) t ) '(()) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(UNLESS (PROD nil (UNLESS (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(UNLESS (PROD t (UNLESS (PROD t '((()))) '((())) t) t ) '((())) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(UNLESS (PROD nil (UNLESS (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(UNLESS (PROD t (UNLESS (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(UNLESS (PROD nil (UNLESS (PROD nil ,A) ,A nil) nil ) ,A nil)
(UNLESS (PROD t (UNLESS (PROD t ,A) ,A t) t ) ,A t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(UNLESS (PROD nil (UNLESS (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(UNLESS (PROD t (UNLESS (PROD t ,1) ,1 t) t ) ,1 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(UNLESS (PROD nil (UNLESS (PROD nil ,()) ,() nil) nil ) ,() nil)
(UNLESS (PROD t (UNLESS (PROD t ,()) ,() t) t ) ,() t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(UNLESS (PROD nil (UNLESS (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(UNLESS (PROD t (UNLESS (PROD t ,(())) ,(()) t) t ) ,(()) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'A) `'A nil) nil ) `'A nil)
(UNLESS (PROD t (UNLESS (PROD t `'A) `'A t) t ) `'A t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'B) `'B nil) nil ) `'B nil)
(UNLESS (PROD t (UNLESS (PROD t `'B) `'B t) t ) `'B t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'C) `'C nil) nil ) `'C nil)
(UNLESS (PROD t (UNLESS (PROD t `'C) `'C t) t ) `'C t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(UNLESS (PROD t (UNLESS (PROD t `'1) `'1 t) t ) `'1 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(UNLESS (PROD t (UNLESS (PROD t `'2) `'2 t) t ) `'2 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(UNLESS (PROD t (UNLESS (PROD t `'3) `'3 t) t ) `'3 t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'()) `'() nil) nil ) `'() nil)
(UNLESS (PROD t (UNLESS (PROD t `'()) `'() t) t ) `'() t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(UNLESS (PROD t (UNLESS (PROD t `'(())) `'(()) t) t ) `'(()) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(UNLESS (PROD t (UNLESS (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(UNLESS (PROD 1 (UNLESS (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(UNLESS (PROD 2 (UNLESS (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(UNLESS (PROD nil (UNLESS (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(UNLESS (PROD t (UNLESS (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(UNLESS (PROD (cons t t) (UNLESS (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(UNLESS (PROD (cons nil t) (UNLESS (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(UNLESS (PROD (cons nil nil) (UNLESS (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(UNLESS (PROD (cons 0 0) (UNLESS (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(UNLESS (PROD (cons 1 1) (UNLESS (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(UNLESS (PROD (list 1 2 3) (UNLESS (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(UNLESS (PROD (list (cons 1 1 ) ) (UNLESS (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 T) T 1) 1 ) T 1)
(XOR (PROD 2 (XOR (PROD 2 T) T 2) 2 ) T 2)
(XOR (PROD nil (XOR (PROD nil T) T nil) nil ) T nil)
(XOR (PROD t (XOR (PROD t T) T t) t ) T t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(XOR (PROD 2 (XOR (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(XOR (PROD nil (XOR (PROD nil NIL) NIL nil) nil ) NIL nil)
(XOR (PROD t (XOR (PROD t NIL) NIL t) t ) NIL t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 A) A 1) 1 ) A 1)
(XOR (PROD 2 (XOR (PROD 2 A) A 2) 2 ) A 2)
(XOR (PROD nil (XOR (PROD nil A) A nil) nil ) A nil)
(XOR (PROD t (XOR (PROD t A) A t) t ) A t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 B) B 1) 1 ) B 1)
(XOR (PROD 2 (XOR (PROD 2 B) B 2) 2 ) B 2)
(XOR (PROD nil (XOR (PROD nil B) B nil) nil ) B nil)
(XOR (PROD t (XOR (PROD t B) B t) t ) B t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 C) C 1) 1 ) C 1)
(XOR (PROD 2 (XOR (PROD 2 C) C 2) 2 ) C 2)
(XOR (PROD nil (XOR (PROD nil C) C nil) nil ) C nil)
(XOR (PROD t (XOR (PROD t C) C t) t ) C t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 1) 1 1) 1 ) 1 1)
(XOR (PROD 2 (XOR (PROD 2 1) 1 2) 2 ) 1 2)
(XOR (PROD nil (XOR (PROD nil 1) 1 nil) nil ) 1 nil)
(XOR (PROD t (XOR (PROD t 1) 1 t) t ) 1 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 2) 2 1) 1 ) 2 1)
(XOR (PROD 2 (XOR (PROD 2 2) 2 2) 2 ) 2 2)
(XOR (PROD nil (XOR (PROD nil 2) 2 nil) nil ) 2 nil)
(XOR (PROD t (XOR (PROD t 2) 2 t) t ) 2 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 3) 3 1) 1 ) 3 1)
(XOR (PROD 2 (XOR (PROD 2 3) 3 2) 2 ) 3 2)
(XOR (PROD nil (XOR (PROD nil 3) 3 nil) nil ) 3 nil)
(XOR (PROD t (XOR (PROD t 3) 3 t) t ) 3 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 ()) () 1) 1 ) () 1)
(XOR (PROD 2 (XOR (PROD 2 ()) () 2) 2 ) () 2)
(XOR (PROD nil (XOR (PROD nil ()) () nil) nil ) () nil)
(XOR (PROD t (XOR (PROD t ()) () t) t ) () t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 (())) (()) 1) 1 ) (()) 1)
(XOR (PROD 2 (XOR (PROD 2 (())) (()) 2) 2 ) (()) 2)
(XOR (PROD nil (XOR (PROD nil (())) (()) nil) nil ) (()) nil)
(XOR (PROD t (XOR (PROD t (())) (()) t) t ) (()) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(XOR (PROD 2 (XOR (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(XOR (PROD nil (XOR (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(XOR (PROD t (XOR (PROD t ((()))) ((())) t) t ) ((())) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(XOR (PROD 2 (XOR (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(XOR (PROD nil (XOR (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(XOR (PROD t (XOR (PROD t (((())))) (((()))) t) t ) (((()))) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 'A) 'A 1) 1 ) 'A 1)
(XOR (PROD 2 (XOR (PROD 2 'A) 'A 2) 2 ) 'A 2)
(XOR (PROD nil (XOR (PROD nil 'A) 'A nil) nil ) 'A nil)
(XOR (PROD t (XOR (PROD t 'A) 'A t) t ) 'A t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 'B) 'B 1) 1 ) 'B 1)
(XOR (PROD 2 (XOR (PROD 2 'B) 'B 2) 2 ) 'B 2)
(XOR (PROD nil (XOR (PROD nil 'B) 'B nil) nil ) 'B nil)
(XOR (PROD t (XOR (PROD t 'B) 'B t) t ) 'B t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 'C) 'C 1) 1 ) 'C 1)
(XOR (PROD 2 (XOR (PROD 2 'C) 'C 2) 2 ) 'C 2)
(XOR (PROD nil (XOR (PROD nil 'C) 'C nil) nil ) 'C nil)
(XOR (PROD t (XOR (PROD t 'C) 'C t) t ) 'C t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 '1) '1 1) 1 ) '1 1)
(XOR (PROD 2 (XOR (PROD 2 '1) '1 2) 2 ) '1 2)
(XOR (PROD nil (XOR (PROD nil '1) '1 nil) nil ) '1 nil)
(XOR (PROD t (XOR (PROD t '1) '1 t) t ) '1 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 '2) '2 1) 1 ) '2 1)
(XOR (PROD 2 (XOR (PROD 2 '2) '2 2) 2 ) '2 2)
(XOR (PROD nil (XOR (PROD nil '2) '2 nil) nil ) '2 nil)
(XOR (PROD t (XOR (PROD t '2) '2 t) t ) '2 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 '3) '3 1) 1 ) '3 1)
(XOR (PROD 2 (XOR (PROD 2 '3) '3 2) 2 ) '3 2)
(XOR (PROD nil (XOR (PROD nil '3) '3 nil) nil ) '3 nil)
(XOR (PROD t (XOR (PROD t '3) '3 t) t ) '3 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 '()) '() 1) 1 ) '() 1)
(XOR (PROD 2 (XOR (PROD 2 '()) '() 2) 2 ) '() 2)
(XOR (PROD nil (XOR (PROD nil '()) '() nil) nil ) '() nil)
(XOR (PROD t (XOR (PROD t '()) '() t) t ) '() t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(XOR (PROD 2 (XOR (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(XOR (PROD nil (XOR (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(XOR (PROD t (XOR (PROD t '(())) '(()) t) t ) '(()) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(XOR (PROD 2 (XOR (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(XOR (PROD nil (XOR (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(XOR (PROD t (XOR (PROD t '((()))) '((())) t) t ) '((())) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(XOR (PROD 2 (XOR (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(XOR (PROD nil (XOR (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(XOR (PROD t (XOR (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(XOR (PROD 2 (XOR (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(XOR (PROD nil (XOR (PROD nil ,A) ,A nil) nil ) ,A nil)
(XOR (PROD t (XOR (PROD t ,A) ,A t) t ) ,A t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(XOR (PROD 2 (XOR (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(XOR (PROD nil (XOR (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(XOR (PROD t (XOR (PROD t ,1) ,1 t) t ) ,1 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(XOR (PROD 2 (XOR (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(XOR (PROD nil (XOR (PROD nil ,()) ,() nil) nil ) ,() nil)
(XOR (PROD t (XOR (PROD t ,()) ,() t) t ) ,() t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(XOR (PROD 2 (XOR (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(XOR (PROD nil (XOR (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(XOR (PROD t (XOR (PROD t ,(())) ,(()) t) t ) ,(()) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(XOR (PROD 2 (XOR (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(XOR (PROD nil (XOR (PROD nil `'A) `'A nil) nil ) `'A nil)
(XOR (PROD t (XOR (PROD t `'A) `'A t) t ) `'A t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(XOR (PROD 2 (XOR (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(XOR (PROD nil (XOR (PROD nil `'B) `'B nil) nil ) `'B nil)
(XOR (PROD t (XOR (PROD t `'B) `'B t) t ) `'B t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(XOR (PROD 2 (XOR (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(XOR (PROD nil (XOR (PROD nil `'C) `'C nil) nil ) `'C nil)
(XOR (PROD t (XOR (PROD t `'C) `'C t) t ) `'C t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(XOR (PROD 2 (XOR (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(XOR (PROD nil (XOR (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(XOR (PROD t (XOR (PROD t `'1) `'1 t) t ) `'1 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(XOR (PROD 2 (XOR (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(XOR (PROD nil (XOR (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(XOR (PROD t (XOR (PROD t `'2) `'2 t) t ) `'2 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(XOR (PROD 2 (XOR (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(XOR (PROD nil (XOR (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(XOR (PROD t (XOR (PROD t `'3) `'3 t) t ) `'3 t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(XOR (PROD 2 (XOR (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(XOR (PROD nil (XOR (PROD nil `'()) `'() nil) nil ) `'() nil)
(XOR (PROD t (XOR (PROD t `'()) `'() t) t ) `'() t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(XOR (PROD 2 (XOR (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(XOR (PROD nil (XOR (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(XOR (PROD t (XOR (PROD t `'(())) `'(()) t) t ) `'(()) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(XOR (PROD 2 (XOR (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(XOR (PROD nil (XOR (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(XOR (PROD t (XOR (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(XOR (PROD 1 (XOR (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(XOR (PROD 2 (XOR (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(XOR (PROD nil (XOR (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(XOR (PROD t (XOR (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(XOR (PROD (cons t t) (XOR (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(XOR (PROD (cons nil t) (XOR (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(XOR (PROD (cons nil nil) (XOR (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(XOR (PROD (cons 0 0) (XOR (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(XOR (PROD (cons 1 1) (XOR (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(XOR (PROD (list 1 2 3) (XOR (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(XOR (PROD (list (cons 1 1 ) ) (XOR (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
