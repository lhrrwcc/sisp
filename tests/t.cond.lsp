(* (COND 1 (* (COND 1 T) T 1) 1 ) T 1)
(* (COND 2 (* (COND 2 T) T 2) 2 ) T 2)
(* (COND nil (* (COND nil T) T nil) nil ) T nil)
(* (COND t (* (COND t T) T t) t ) T t)
(* (COND (cons t t) (* (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 NIL) NIL 1) 1 ) NIL 1)
(* (COND 2 (* (COND 2 NIL) NIL 2) 2 ) NIL 2)
(* (COND nil (* (COND nil NIL) NIL nil) nil ) NIL nil)
(* (COND t (* (COND t NIL) NIL t) t ) NIL t)
(* (COND (cons t t) (* (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 A) A 1) 1 ) A 1)
(* (COND 2 (* (COND 2 A) A 2) 2 ) A 2)
(* (COND nil (* (COND nil A) A nil) nil ) A nil)
(* (COND t (* (COND t A) A t) t ) A t)
(* (COND (cons t t) (* (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 B) B 1) 1 ) B 1)
(* (COND 2 (* (COND 2 B) B 2) 2 ) B 2)
(* (COND nil (* (COND nil B) B nil) nil ) B nil)
(* (COND t (* (COND t B) B t) t ) B t)
(* (COND (cons t t) (* (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 C) C 1) 1 ) C 1)
(* (COND 2 (* (COND 2 C) C 2) 2 ) C 2)
(* (COND nil (* (COND nil C) C nil) nil ) C nil)
(* (COND t (* (COND t C) C t) t ) C t)
(* (COND (cons t t) (* (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 1) 1 1) 1 ) 1 1)
(* (COND 2 (* (COND 2 1) 1 2) 2 ) 1 2)
(* (COND nil (* (COND nil 1) 1 nil) nil ) 1 nil)
(* (COND t (* (COND t 1) 1 t) t ) 1 t)
(* (COND (cons t t) (* (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 2) 2 1) 1 ) 2 1)
(* (COND 2 (* (COND 2 2) 2 2) 2 ) 2 2)
(* (COND nil (* (COND nil 2) 2 nil) nil ) 2 nil)
(* (COND t (* (COND t 2) 2 t) t ) 2 t)
(* (COND (cons t t) (* (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 3) 3 1) 1 ) 3 1)
(* (COND 2 (* (COND 2 3) 3 2) 2 ) 3 2)
(* (COND nil (* (COND nil 3) 3 nil) nil ) 3 nil)
(* (COND t (* (COND t 3) 3 t) t ) 3 t)
(* (COND (cons t t) (* (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 ()) () 1) 1 ) () 1)
(* (COND 2 (* (COND 2 ()) () 2) 2 ) () 2)
(* (COND nil (* (COND nil ()) () nil) nil ) () nil)
(* (COND t (* (COND t ()) () t) t ) () t)
(* (COND (cons t t) (* (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 (())) (()) 1) 1 ) (()) 1)
(* (COND 2 (* (COND 2 (())) (()) 2) 2 ) (()) 2)
(* (COND nil (* (COND nil (())) (()) nil) nil ) (()) nil)
(* (COND t (* (COND t (())) (()) t) t ) (()) t)
(* (COND (cons t t) (* (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(* (COND 2 (* (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(* (COND nil (* (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(* (COND t (* (COND t ((()))) ((())) t) t ) ((())) t)
(* (COND (cons t t) (* (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(* (COND 2 (* (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(* (COND nil (* (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(* (COND t (* (COND t (((())))) (((()))) t) t ) (((()))) t)
(* (COND (cons t t) (* (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 'A) 'A 1) 1 ) 'A 1)
(* (COND 2 (* (COND 2 'A) 'A 2) 2 ) 'A 2)
(* (COND nil (* (COND nil 'A) 'A nil) nil ) 'A nil)
(* (COND t (* (COND t 'A) 'A t) t ) 'A t)
(* (COND (cons t t) (* (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 'B) 'B 1) 1 ) 'B 1)
(* (COND 2 (* (COND 2 'B) 'B 2) 2 ) 'B 2)
(* (COND nil (* (COND nil 'B) 'B nil) nil ) 'B nil)
(* (COND t (* (COND t 'B) 'B t) t ) 'B t)
(* (COND (cons t t) (* (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 'C) 'C 1) 1 ) 'C 1)
(* (COND 2 (* (COND 2 'C) 'C 2) 2 ) 'C 2)
(* (COND nil (* (COND nil 'C) 'C nil) nil ) 'C nil)
(* (COND t (* (COND t 'C) 'C t) t ) 'C t)
(* (COND (cons t t) (* (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 '1) '1 1) 1 ) '1 1)
(* (COND 2 (* (COND 2 '1) '1 2) 2 ) '1 2)
(* (COND nil (* (COND nil '1) '1 nil) nil ) '1 nil)
(* (COND t (* (COND t '1) '1 t) t ) '1 t)
(* (COND (cons t t) (* (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 '2) '2 1) 1 ) '2 1)
(* (COND 2 (* (COND 2 '2) '2 2) 2 ) '2 2)
(* (COND nil (* (COND nil '2) '2 nil) nil ) '2 nil)
(* (COND t (* (COND t '2) '2 t) t ) '2 t)
(* (COND (cons t t) (* (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 '3) '3 1) 1 ) '3 1)
(* (COND 2 (* (COND 2 '3) '3 2) 2 ) '3 2)
(* (COND nil (* (COND nil '3) '3 nil) nil ) '3 nil)
(* (COND t (* (COND t '3) '3 t) t ) '3 t)
(* (COND (cons t t) (* (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 '()) '() 1) 1 ) '() 1)
(* (COND 2 (* (COND 2 '()) '() 2) 2 ) '() 2)
(* (COND nil (* (COND nil '()) '() nil) nil ) '() nil)
(* (COND t (* (COND t '()) '() t) t ) '() t)
(* (COND (cons t t) (* (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(* (COND 2 (* (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(* (COND nil (* (COND nil '(())) '(()) nil) nil ) '(()) nil)
(* (COND t (* (COND t '(())) '(()) t) t ) '(()) t)
(* (COND (cons t t) (* (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(* (COND 2 (* (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(* (COND nil (* (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(* (COND t (* (COND t '((()))) '((())) t) t ) '((())) t)
(* (COND (cons t t) (* (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(* (COND 2 (* (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(* (COND nil (* (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(* (COND t (* (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(* (COND (cons t t) (* (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 ,A) ,A 1) 1 ) ,A 1)
(* (COND 2 (* (COND 2 ,A) ,A 2) 2 ) ,A 2)
(* (COND nil (* (COND nil ,A) ,A nil) nil ) ,A nil)
(* (COND t (* (COND t ,A) ,A t) t ) ,A t)
(* (COND (cons t t) (* (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 ,1) ,1 1) 1 ) ,1 1)
(* (COND 2 (* (COND 2 ,1) ,1 2) 2 ) ,1 2)
(* (COND nil (* (COND nil ,1) ,1 nil) nil ) ,1 nil)
(* (COND t (* (COND t ,1) ,1 t) t ) ,1 t)
(* (COND (cons t t) (* (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 ,()) ,() 1) 1 ) ,() 1)
(* (COND 2 (* (COND 2 ,()) ,() 2) 2 ) ,() 2)
(* (COND nil (* (COND nil ,()) ,() nil) nil ) ,() nil)
(* (COND t (* (COND t ,()) ,() t) t ) ,() t)
(* (COND (cons t t) (* (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(* (COND 2 (* (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(* (COND nil (* (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(* (COND t (* (COND t ,(())) ,(()) t) t ) ,(()) t)
(* (COND (cons t t) (* (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'A) `'A 1) 1 ) `'A 1)
(* (COND 2 (* (COND 2 `'A) `'A 2) 2 ) `'A 2)
(* (COND nil (* (COND nil `'A) `'A nil) nil ) `'A nil)
(* (COND t (* (COND t `'A) `'A t) t ) `'A t)
(* (COND (cons t t) (* (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'B) `'B 1) 1 ) `'B 1)
(* (COND 2 (* (COND 2 `'B) `'B 2) 2 ) `'B 2)
(* (COND nil (* (COND nil `'B) `'B nil) nil ) `'B nil)
(* (COND t (* (COND t `'B) `'B t) t ) `'B t)
(* (COND (cons t t) (* (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'C) `'C 1) 1 ) `'C 1)
(* (COND 2 (* (COND 2 `'C) `'C 2) 2 ) `'C 2)
(* (COND nil (* (COND nil `'C) `'C nil) nil ) `'C nil)
(* (COND t (* (COND t `'C) `'C t) t ) `'C t)
(* (COND (cons t t) (* (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'1) `'1 1) 1 ) `'1 1)
(* (COND 2 (* (COND 2 `'1) `'1 2) 2 ) `'1 2)
(* (COND nil (* (COND nil `'1) `'1 nil) nil ) `'1 nil)
(* (COND t (* (COND t `'1) `'1 t) t ) `'1 t)
(* (COND (cons t t) (* (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'2) `'2 1) 1 ) `'2 1)
(* (COND 2 (* (COND 2 `'2) `'2 2) 2 ) `'2 2)
(* (COND nil (* (COND nil `'2) `'2 nil) nil ) `'2 nil)
(* (COND t (* (COND t `'2) `'2 t) t ) `'2 t)
(* (COND (cons t t) (* (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'3) `'3 1) 1 ) `'3 1)
(* (COND 2 (* (COND 2 `'3) `'3 2) 2 ) `'3 2)
(* (COND nil (* (COND nil `'3) `'3 nil) nil ) `'3 nil)
(* (COND t (* (COND t `'3) `'3 t) t ) `'3 t)
(* (COND (cons t t) (* (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'()) `'() 1) 1 ) `'() 1)
(* (COND 2 (* (COND 2 `'()) `'() 2) 2 ) `'() 2)
(* (COND nil (* (COND nil `'()) `'() nil) nil ) `'() nil)
(* (COND t (* (COND t `'()) `'() t) t ) `'() t)
(* (COND (cons t t) (* (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(* (COND 2 (* (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(* (COND nil (* (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(* (COND t (* (COND t `'(())) `'(()) t) t ) `'(()) t)
(* (COND (cons t t) (* (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(* (COND 2 (* (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(* (COND nil (* (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(* (COND t (* (COND t `'((()))) `'((())) t) t ) `'((())) t)
(* (COND (cons t t) (* (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(* (COND 1 (* (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(* (COND 2 (* (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(* (COND nil (* (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(* (COND t (* (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(* (COND (cons t t) (* (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(* (COND (cons nil t) (* (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(* (COND (cons nil nil) (* (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(* (COND (cons 0 0) (* (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(* (COND (cons 1 1) (* (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(* (COND (list 1 2 3) (* (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(* (COND (list (cons 1 1 ) ) (* (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 T) T 1) 1 ) T 1)
(+ (COND 2 (+ (COND 2 T) T 2) 2 ) T 2)
(+ (COND nil (+ (COND nil T) T nil) nil ) T nil)
(+ (COND t (+ (COND t T) T t) t ) T t)
(+ (COND (cons t t) (+ (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 NIL) NIL 1) 1 ) NIL 1)
(+ (COND 2 (+ (COND 2 NIL) NIL 2) 2 ) NIL 2)
(+ (COND nil (+ (COND nil NIL) NIL nil) nil ) NIL nil)
(+ (COND t (+ (COND t NIL) NIL t) t ) NIL t)
(+ (COND (cons t t) (+ (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 A) A 1) 1 ) A 1)
(+ (COND 2 (+ (COND 2 A) A 2) 2 ) A 2)
(+ (COND nil (+ (COND nil A) A nil) nil ) A nil)
(+ (COND t (+ (COND t A) A t) t ) A t)
(+ (COND (cons t t) (+ (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 B) B 1) 1 ) B 1)
(+ (COND 2 (+ (COND 2 B) B 2) 2 ) B 2)
(+ (COND nil (+ (COND nil B) B nil) nil ) B nil)
(+ (COND t (+ (COND t B) B t) t ) B t)
(+ (COND (cons t t) (+ (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 C) C 1) 1 ) C 1)
(+ (COND 2 (+ (COND 2 C) C 2) 2 ) C 2)
(+ (COND nil (+ (COND nil C) C nil) nil ) C nil)
(+ (COND t (+ (COND t C) C t) t ) C t)
(+ (COND (cons t t) (+ (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 1) 1 1) 1 ) 1 1)
(+ (COND 2 (+ (COND 2 1) 1 2) 2 ) 1 2)
(+ (COND nil (+ (COND nil 1) 1 nil) nil ) 1 nil)
(+ (COND t (+ (COND t 1) 1 t) t ) 1 t)
(+ (COND (cons t t) (+ (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 2) 2 1) 1 ) 2 1)
(+ (COND 2 (+ (COND 2 2) 2 2) 2 ) 2 2)
(+ (COND nil (+ (COND nil 2) 2 nil) nil ) 2 nil)
(+ (COND t (+ (COND t 2) 2 t) t ) 2 t)
(+ (COND (cons t t) (+ (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 3) 3 1) 1 ) 3 1)
(+ (COND 2 (+ (COND 2 3) 3 2) 2 ) 3 2)
(+ (COND nil (+ (COND nil 3) 3 nil) nil ) 3 nil)
(+ (COND t (+ (COND t 3) 3 t) t ) 3 t)
(+ (COND (cons t t) (+ (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 ()) () 1) 1 ) () 1)
(+ (COND 2 (+ (COND 2 ()) () 2) 2 ) () 2)
(+ (COND nil (+ (COND nil ()) () nil) nil ) () nil)
(+ (COND t (+ (COND t ()) () t) t ) () t)
(+ (COND (cons t t) (+ (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 (())) (()) 1) 1 ) (()) 1)
(+ (COND 2 (+ (COND 2 (())) (()) 2) 2 ) (()) 2)
(+ (COND nil (+ (COND nil (())) (()) nil) nil ) (()) nil)
(+ (COND t (+ (COND t (())) (()) t) t ) (()) t)
(+ (COND (cons t t) (+ (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(+ (COND 2 (+ (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(+ (COND nil (+ (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(+ (COND t (+ (COND t ((()))) ((())) t) t ) ((())) t)
(+ (COND (cons t t) (+ (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(+ (COND 2 (+ (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(+ (COND nil (+ (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(+ (COND t (+ (COND t (((())))) (((()))) t) t ) (((()))) t)
(+ (COND (cons t t) (+ (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 'A) 'A 1) 1 ) 'A 1)
(+ (COND 2 (+ (COND 2 'A) 'A 2) 2 ) 'A 2)
(+ (COND nil (+ (COND nil 'A) 'A nil) nil ) 'A nil)
(+ (COND t (+ (COND t 'A) 'A t) t ) 'A t)
(+ (COND (cons t t) (+ (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 'B) 'B 1) 1 ) 'B 1)
(+ (COND 2 (+ (COND 2 'B) 'B 2) 2 ) 'B 2)
(+ (COND nil (+ (COND nil 'B) 'B nil) nil ) 'B nil)
(+ (COND t (+ (COND t 'B) 'B t) t ) 'B t)
(+ (COND (cons t t) (+ (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 'C) 'C 1) 1 ) 'C 1)
(+ (COND 2 (+ (COND 2 'C) 'C 2) 2 ) 'C 2)
(+ (COND nil (+ (COND nil 'C) 'C nil) nil ) 'C nil)
(+ (COND t (+ (COND t 'C) 'C t) t ) 'C t)
(+ (COND (cons t t) (+ (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 '1) '1 1) 1 ) '1 1)
(+ (COND 2 (+ (COND 2 '1) '1 2) 2 ) '1 2)
(+ (COND nil (+ (COND nil '1) '1 nil) nil ) '1 nil)
(+ (COND t (+ (COND t '1) '1 t) t ) '1 t)
(+ (COND (cons t t) (+ (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 '2) '2 1) 1 ) '2 1)
(+ (COND 2 (+ (COND 2 '2) '2 2) 2 ) '2 2)
(+ (COND nil (+ (COND nil '2) '2 nil) nil ) '2 nil)
(+ (COND t (+ (COND t '2) '2 t) t ) '2 t)
(+ (COND (cons t t) (+ (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 '3) '3 1) 1 ) '3 1)
(+ (COND 2 (+ (COND 2 '3) '3 2) 2 ) '3 2)
(+ (COND nil (+ (COND nil '3) '3 nil) nil ) '3 nil)
(+ (COND t (+ (COND t '3) '3 t) t ) '3 t)
(+ (COND (cons t t) (+ (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 '()) '() 1) 1 ) '() 1)
(+ (COND 2 (+ (COND 2 '()) '() 2) 2 ) '() 2)
(+ (COND nil (+ (COND nil '()) '() nil) nil ) '() nil)
(+ (COND t (+ (COND t '()) '() t) t ) '() t)
(+ (COND (cons t t) (+ (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(+ (COND 2 (+ (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(+ (COND nil (+ (COND nil '(())) '(()) nil) nil ) '(()) nil)
(+ (COND t (+ (COND t '(())) '(()) t) t ) '(()) t)
(+ (COND (cons t t) (+ (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(+ (COND 2 (+ (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(+ (COND nil (+ (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(+ (COND t (+ (COND t '((()))) '((())) t) t ) '((())) t)
(+ (COND (cons t t) (+ (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(+ (COND 2 (+ (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(+ (COND nil (+ (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(+ (COND t (+ (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(+ (COND (cons t t) (+ (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 ,A) ,A 1) 1 ) ,A 1)
(+ (COND 2 (+ (COND 2 ,A) ,A 2) 2 ) ,A 2)
(+ (COND nil (+ (COND nil ,A) ,A nil) nil ) ,A nil)
(+ (COND t (+ (COND t ,A) ,A t) t ) ,A t)
(+ (COND (cons t t) (+ (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 ,1) ,1 1) 1 ) ,1 1)
(+ (COND 2 (+ (COND 2 ,1) ,1 2) 2 ) ,1 2)
(+ (COND nil (+ (COND nil ,1) ,1 nil) nil ) ,1 nil)
(+ (COND t (+ (COND t ,1) ,1 t) t ) ,1 t)
(+ (COND (cons t t) (+ (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 ,()) ,() 1) 1 ) ,() 1)
(+ (COND 2 (+ (COND 2 ,()) ,() 2) 2 ) ,() 2)
(+ (COND nil (+ (COND nil ,()) ,() nil) nil ) ,() nil)
(+ (COND t (+ (COND t ,()) ,() t) t ) ,() t)
(+ (COND (cons t t) (+ (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(+ (COND 2 (+ (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(+ (COND nil (+ (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(+ (COND t (+ (COND t ,(())) ,(()) t) t ) ,(()) t)
(+ (COND (cons t t) (+ (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'A) `'A 1) 1 ) `'A 1)
(+ (COND 2 (+ (COND 2 `'A) `'A 2) 2 ) `'A 2)
(+ (COND nil (+ (COND nil `'A) `'A nil) nil ) `'A nil)
(+ (COND t (+ (COND t `'A) `'A t) t ) `'A t)
(+ (COND (cons t t) (+ (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'B) `'B 1) 1 ) `'B 1)
(+ (COND 2 (+ (COND 2 `'B) `'B 2) 2 ) `'B 2)
(+ (COND nil (+ (COND nil `'B) `'B nil) nil ) `'B nil)
(+ (COND t (+ (COND t `'B) `'B t) t ) `'B t)
(+ (COND (cons t t) (+ (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'C) `'C 1) 1 ) `'C 1)
(+ (COND 2 (+ (COND 2 `'C) `'C 2) 2 ) `'C 2)
(+ (COND nil (+ (COND nil `'C) `'C nil) nil ) `'C nil)
(+ (COND t (+ (COND t `'C) `'C t) t ) `'C t)
(+ (COND (cons t t) (+ (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'1) `'1 1) 1 ) `'1 1)
(+ (COND 2 (+ (COND 2 `'1) `'1 2) 2 ) `'1 2)
(+ (COND nil (+ (COND nil `'1) `'1 nil) nil ) `'1 nil)
(+ (COND t (+ (COND t `'1) `'1 t) t ) `'1 t)
(+ (COND (cons t t) (+ (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'2) `'2 1) 1 ) `'2 1)
(+ (COND 2 (+ (COND 2 `'2) `'2 2) 2 ) `'2 2)
(+ (COND nil (+ (COND nil `'2) `'2 nil) nil ) `'2 nil)
(+ (COND t (+ (COND t `'2) `'2 t) t ) `'2 t)
(+ (COND (cons t t) (+ (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'3) `'3 1) 1 ) `'3 1)
(+ (COND 2 (+ (COND 2 `'3) `'3 2) 2 ) `'3 2)
(+ (COND nil (+ (COND nil `'3) `'3 nil) nil ) `'3 nil)
(+ (COND t (+ (COND t `'3) `'3 t) t ) `'3 t)
(+ (COND (cons t t) (+ (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'()) `'() 1) 1 ) `'() 1)
(+ (COND 2 (+ (COND 2 `'()) `'() 2) 2 ) `'() 2)
(+ (COND nil (+ (COND nil `'()) `'() nil) nil ) `'() nil)
(+ (COND t (+ (COND t `'()) `'() t) t ) `'() t)
(+ (COND (cons t t) (+ (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(+ (COND 2 (+ (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(+ (COND nil (+ (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(+ (COND t (+ (COND t `'(())) `'(()) t) t ) `'(()) t)
(+ (COND (cons t t) (+ (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(+ (COND 2 (+ (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(+ (COND nil (+ (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(+ (COND t (+ (COND t `'((()))) `'((())) t) t ) `'((())) t)
(+ (COND (cons t t) (+ (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(+ (COND 1 (+ (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(+ (COND 2 (+ (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(+ (COND nil (+ (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(+ (COND t (+ (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(+ (COND (cons t t) (+ (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(+ (COND (cons nil t) (+ (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(+ (COND (cons nil nil) (+ (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(+ (COND (cons 0 0) (+ (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(+ (COND (cons 1 1) (+ (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(+ (COND (list 1 2 3) (+ (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(+ (COND (list (cons 1 1 ) ) (+ (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 T) T 1) 1 ) T 1)
(< (COND 2 (< (COND 2 T) T 2) 2 ) T 2)
(< (COND nil (< (COND nil T) T nil) nil ) T nil)
(< (COND t (< (COND t T) T t) t ) T t)
(< (COND (cons t t) (< (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 NIL) NIL 1) 1 ) NIL 1)
(< (COND 2 (< (COND 2 NIL) NIL 2) 2 ) NIL 2)
(< (COND nil (< (COND nil NIL) NIL nil) nil ) NIL nil)
(< (COND t (< (COND t NIL) NIL t) t ) NIL t)
(< (COND (cons t t) (< (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 A) A 1) 1 ) A 1)
(< (COND 2 (< (COND 2 A) A 2) 2 ) A 2)
(< (COND nil (< (COND nil A) A nil) nil ) A nil)
(< (COND t (< (COND t A) A t) t ) A t)
(< (COND (cons t t) (< (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 B) B 1) 1 ) B 1)
(< (COND 2 (< (COND 2 B) B 2) 2 ) B 2)
(< (COND nil (< (COND nil B) B nil) nil ) B nil)
(< (COND t (< (COND t B) B t) t ) B t)
(< (COND (cons t t) (< (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 C) C 1) 1 ) C 1)
(< (COND 2 (< (COND 2 C) C 2) 2 ) C 2)
(< (COND nil (< (COND nil C) C nil) nil ) C nil)
(< (COND t (< (COND t C) C t) t ) C t)
(< (COND (cons t t) (< (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 1) 1 1) 1 ) 1 1)
(< (COND 2 (< (COND 2 1) 1 2) 2 ) 1 2)
(< (COND nil (< (COND nil 1) 1 nil) nil ) 1 nil)
(< (COND t (< (COND t 1) 1 t) t ) 1 t)
(< (COND (cons t t) (< (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 2) 2 1) 1 ) 2 1)
(< (COND 2 (< (COND 2 2) 2 2) 2 ) 2 2)
(< (COND nil (< (COND nil 2) 2 nil) nil ) 2 nil)
(< (COND t (< (COND t 2) 2 t) t ) 2 t)
(< (COND (cons t t) (< (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 3) 3 1) 1 ) 3 1)
(< (COND 2 (< (COND 2 3) 3 2) 2 ) 3 2)
(< (COND nil (< (COND nil 3) 3 nil) nil ) 3 nil)
(< (COND t (< (COND t 3) 3 t) t ) 3 t)
(< (COND (cons t t) (< (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 ()) () 1) 1 ) () 1)
(< (COND 2 (< (COND 2 ()) () 2) 2 ) () 2)
(< (COND nil (< (COND nil ()) () nil) nil ) () nil)
(< (COND t (< (COND t ()) () t) t ) () t)
(< (COND (cons t t) (< (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 (())) (()) 1) 1 ) (()) 1)
(< (COND 2 (< (COND 2 (())) (()) 2) 2 ) (()) 2)
(< (COND nil (< (COND nil (())) (()) nil) nil ) (()) nil)
(< (COND t (< (COND t (())) (()) t) t ) (()) t)
(< (COND (cons t t) (< (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(< (COND 2 (< (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(< (COND nil (< (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(< (COND t (< (COND t ((()))) ((())) t) t ) ((())) t)
(< (COND (cons t t) (< (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(< (COND 2 (< (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(< (COND nil (< (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(< (COND t (< (COND t (((())))) (((()))) t) t ) (((()))) t)
(< (COND (cons t t) (< (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 'A) 'A 1) 1 ) 'A 1)
(< (COND 2 (< (COND 2 'A) 'A 2) 2 ) 'A 2)
(< (COND nil (< (COND nil 'A) 'A nil) nil ) 'A nil)
(< (COND t (< (COND t 'A) 'A t) t ) 'A t)
(< (COND (cons t t) (< (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 'B) 'B 1) 1 ) 'B 1)
(< (COND 2 (< (COND 2 'B) 'B 2) 2 ) 'B 2)
(< (COND nil (< (COND nil 'B) 'B nil) nil ) 'B nil)
(< (COND t (< (COND t 'B) 'B t) t ) 'B t)
(< (COND (cons t t) (< (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 'C) 'C 1) 1 ) 'C 1)
(< (COND 2 (< (COND 2 'C) 'C 2) 2 ) 'C 2)
(< (COND nil (< (COND nil 'C) 'C nil) nil ) 'C nil)
(< (COND t (< (COND t 'C) 'C t) t ) 'C t)
(< (COND (cons t t) (< (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 '1) '1 1) 1 ) '1 1)
(< (COND 2 (< (COND 2 '1) '1 2) 2 ) '1 2)
(< (COND nil (< (COND nil '1) '1 nil) nil ) '1 nil)
(< (COND t (< (COND t '1) '1 t) t ) '1 t)
(< (COND (cons t t) (< (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 '2) '2 1) 1 ) '2 1)
(< (COND 2 (< (COND 2 '2) '2 2) 2 ) '2 2)
(< (COND nil (< (COND nil '2) '2 nil) nil ) '2 nil)
(< (COND t (< (COND t '2) '2 t) t ) '2 t)
(< (COND (cons t t) (< (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 '3) '3 1) 1 ) '3 1)
(< (COND 2 (< (COND 2 '3) '3 2) 2 ) '3 2)
(< (COND nil (< (COND nil '3) '3 nil) nil ) '3 nil)
(< (COND t (< (COND t '3) '3 t) t ) '3 t)
(< (COND (cons t t) (< (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 '()) '() 1) 1 ) '() 1)
(< (COND 2 (< (COND 2 '()) '() 2) 2 ) '() 2)
(< (COND nil (< (COND nil '()) '() nil) nil ) '() nil)
(< (COND t (< (COND t '()) '() t) t ) '() t)
(< (COND (cons t t) (< (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(< (COND 2 (< (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(< (COND nil (< (COND nil '(())) '(()) nil) nil ) '(()) nil)
(< (COND t (< (COND t '(())) '(()) t) t ) '(()) t)
(< (COND (cons t t) (< (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(< (COND 2 (< (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(< (COND nil (< (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(< (COND t (< (COND t '((()))) '((())) t) t ) '((())) t)
(< (COND (cons t t) (< (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(< (COND 2 (< (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(< (COND nil (< (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(< (COND t (< (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(< (COND (cons t t) (< (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 ,A) ,A 1) 1 ) ,A 1)
(< (COND 2 (< (COND 2 ,A) ,A 2) 2 ) ,A 2)
(< (COND nil (< (COND nil ,A) ,A nil) nil ) ,A nil)
(< (COND t (< (COND t ,A) ,A t) t ) ,A t)
(< (COND (cons t t) (< (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 ,1) ,1 1) 1 ) ,1 1)
(< (COND 2 (< (COND 2 ,1) ,1 2) 2 ) ,1 2)
(< (COND nil (< (COND nil ,1) ,1 nil) nil ) ,1 nil)
(< (COND t (< (COND t ,1) ,1 t) t ) ,1 t)
(< (COND (cons t t) (< (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 ,()) ,() 1) 1 ) ,() 1)
(< (COND 2 (< (COND 2 ,()) ,() 2) 2 ) ,() 2)
(< (COND nil (< (COND nil ,()) ,() nil) nil ) ,() nil)
(< (COND t (< (COND t ,()) ,() t) t ) ,() t)
(< (COND (cons t t) (< (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(< (COND 2 (< (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(< (COND nil (< (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(< (COND t (< (COND t ,(())) ,(()) t) t ) ,(()) t)
(< (COND (cons t t) (< (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'A) `'A 1) 1 ) `'A 1)
(< (COND 2 (< (COND 2 `'A) `'A 2) 2 ) `'A 2)
(< (COND nil (< (COND nil `'A) `'A nil) nil ) `'A nil)
(< (COND t (< (COND t `'A) `'A t) t ) `'A t)
(< (COND (cons t t) (< (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'B) `'B 1) 1 ) `'B 1)
(< (COND 2 (< (COND 2 `'B) `'B 2) 2 ) `'B 2)
(< (COND nil (< (COND nil `'B) `'B nil) nil ) `'B nil)
(< (COND t (< (COND t `'B) `'B t) t ) `'B t)
(< (COND (cons t t) (< (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'C) `'C 1) 1 ) `'C 1)
(< (COND 2 (< (COND 2 `'C) `'C 2) 2 ) `'C 2)
(< (COND nil (< (COND nil `'C) `'C nil) nil ) `'C nil)
(< (COND t (< (COND t `'C) `'C t) t ) `'C t)
(< (COND (cons t t) (< (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'1) `'1 1) 1 ) `'1 1)
(< (COND 2 (< (COND 2 `'1) `'1 2) 2 ) `'1 2)
(< (COND nil (< (COND nil `'1) `'1 nil) nil ) `'1 nil)
(< (COND t (< (COND t `'1) `'1 t) t ) `'1 t)
(< (COND (cons t t) (< (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'2) `'2 1) 1 ) `'2 1)
(< (COND 2 (< (COND 2 `'2) `'2 2) 2 ) `'2 2)
(< (COND nil (< (COND nil `'2) `'2 nil) nil ) `'2 nil)
(< (COND t (< (COND t `'2) `'2 t) t ) `'2 t)
(< (COND (cons t t) (< (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'3) `'3 1) 1 ) `'3 1)
(< (COND 2 (< (COND 2 `'3) `'3 2) 2 ) `'3 2)
(< (COND nil (< (COND nil `'3) `'3 nil) nil ) `'3 nil)
(< (COND t (< (COND t `'3) `'3 t) t ) `'3 t)
(< (COND (cons t t) (< (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'()) `'() 1) 1 ) `'() 1)
(< (COND 2 (< (COND 2 `'()) `'() 2) 2 ) `'() 2)
(< (COND nil (< (COND nil `'()) `'() nil) nil ) `'() nil)
(< (COND t (< (COND t `'()) `'() t) t ) `'() t)
(< (COND (cons t t) (< (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(< (COND 2 (< (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(< (COND nil (< (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(< (COND t (< (COND t `'(())) `'(()) t) t ) `'(()) t)
(< (COND (cons t t) (< (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(< (COND 2 (< (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(< (COND nil (< (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(< (COND t (< (COND t `'((()))) `'((())) t) t ) `'((())) t)
(< (COND (cons t t) (< (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(< (COND 1 (< (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(< (COND 2 (< (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(< (COND nil (< (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(< (COND t (< (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(< (COND (cons t t) (< (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(< (COND (cons nil t) (< (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(< (COND (cons nil nil) (< (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(< (COND (cons 0 0) (< (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(< (COND (cons 1 1) (< (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(< (COND (list 1 2 3) (< (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(< (COND (list (cons 1 1 ) ) (< (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 T) T 1) 1 ) T 1)
(<= (COND 2 (<= (COND 2 T) T 2) 2 ) T 2)
(<= (COND nil (<= (COND nil T) T nil) nil ) T nil)
(<= (COND t (<= (COND t T) T t) t ) T t)
(<= (COND (cons t t) (<= (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 NIL) NIL 1) 1 ) NIL 1)
(<= (COND 2 (<= (COND 2 NIL) NIL 2) 2 ) NIL 2)
(<= (COND nil (<= (COND nil NIL) NIL nil) nil ) NIL nil)
(<= (COND t (<= (COND t NIL) NIL t) t ) NIL t)
(<= (COND (cons t t) (<= (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 A) A 1) 1 ) A 1)
(<= (COND 2 (<= (COND 2 A) A 2) 2 ) A 2)
(<= (COND nil (<= (COND nil A) A nil) nil ) A nil)
(<= (COND t (<= (COND t A) A t) t ) A t)
(<= (COND (cons t t) (<= (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 B) B 1) 1 ) B 1)
(<= (COND 2 (<= (COND 2 B) B 2) 2 ) B 2)
(<= (COND nil (<= (COND nil B) B nil) nil ) B nil)
(<= (COND t (<= (COND t B) B t) t ) B t)
(<= (COND (cons t t) (<= (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 C) C 1) 1 ) C 1)
(<= (COND 2 (<= (COND 2 C) C 2) 2 ) C 2)
(<= (COND nil (<= (COND nil C) C nil) nil ) C nil)
(<= (COND t (<= (COND t C) C t) t ) C t)
(<= (COND (cons t t) (<= (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 1) 1 1) 1 ) 1 1)
(<= (COND 2 (<= (COND 2 1) 1 2) 2 ) 1 2)
(<= (COND nil (<= (COND nil 1) 1 nil) nil ) 1 nil)
(<= (COND t (<= (COND t 1) 1 t) t ) 1 t)
(<= (COND (cons t t) (<= (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 2) 2 1) 1 ) 2 1)
(<= (COND 2 (<= (COND 2 2) 2 2) 2 ) 2 2)
(<= (COND nil (<= (COND nil 2) 2 nil) nil ) 2 nil)
(<= (COND t (<= (COND t 2) 2 t) t ) 2 t)
(<= (COND (cons t t) (<= (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 3) 3 1) 1 ) 3 1)
(<= (COND 2 (<= (COND 2 3) 3 2) 2 ) 3 2)
(<= (COND nil (<= (COND nil 3) 3 nil) nil ) 3 nil)
(<= (COND t (<= (COND t 3) 3 t) t ) 3 t)
(<= (COND (cons t t) (<= (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 ()) () 1) 1 ) () 1)
(<= (COND 2 (<= (COND 2 ()) () 2) 2 ) () 2)
(<= (COND nil (<= (COND nil ()) () nil) nil ) () nil)
(<= (COND t (<= (COND t ()) () t) t ) () t)
(<= (COND (cons t t) (<= (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 (())) (()) 1) 1 ) (()) 1)
(<= (COND 2 (<= (COND 2 (())) (()) 2) 2 ) (()) 2)
(<= (COND nil (<= (COND nil (())) (()) nil) nil ) (()) nil)
(<= (COND t (<= (COND t (())) (()) t) t ) (()) t)
(<= (COND (cons t t) (<= (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(<= (COND 2 (<= (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(<= (COND nil (<= (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(<= (COND t (<= (COND t ((()))) ((())) t) t ) ((())) t)
(<= (COND (cons t t) (<= (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(<= (COND 2 (<= (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(<= (COND nil (<= (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(<= (COND t (<= (COND t (((())))) (((()))) t) t ) (((()))) t)
(<= (COND (cons t t) (<= (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 'A) 'A 1) 1 ) 'A 1)
(<= (COND 2 (<= (COND 2 'A) 'A 2) 2 ) 'A 2)
(<= (COND nil (<= (COND nil 'A) 'A nil) nil ) 'A nil)
(<= (COND t (<= (COND t 'A) 'A t) t ) 'A t)
(<= (COND (cons t t) (<= (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 'B) 'B 1) 1 ) 'B 1)
(<= (COND 2 (<= (COND 2 'B) 'B 2) 2 ) 'B 2)
(<= (COND nil (<= (COND nil 'B) 'B nil) nil ) 'B nil)
(<= (COND t (<= (COND t 'B) 'B t) t ) 'B t)
(<= (COND (cons t t) (<= (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 'C) 'C 1) 1 ) 'C 1)
(<= (COND 2 (<= (COND 2 'C) 'C 2) 2 ) 'C 2)
(<= (COND nil (<= (COND nil 'C) 'C nil) nil ) 'C nil)
(<= (COND t (<= (COND t 'C) 'C t) t ) 'C t)
(<= (COND (cons t t) (<= (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 '1) '1 1) 1 ) '1 1)
(<= (COND 2 (<= (COND 2 '1) '1 2) 2 ) '1 2)
(<= (COND nil (<= (COND nil '1) '1 nil) nil ) '1 nil)
(<= (COND t (<= (COND t '1) '1 t) t ) '1 t)
(<= (COND (cons t t) (<= (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 '2) '2 1) 1 ) '2 1)
(<= (COND 2 (<= (COND 2 '2) '2 2) 2 ) '2 2)
(<= (COND nil (<= (COND nil '2) '2 nil) nil ) '2 nil)
(<= (COND t (<= (COND t '2) '2 t) t ) '2 t)
(<= (COND (cons t t) (<= (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 '3) '3 1) 1 ) '3 1)
(<= (COND 2 (<= (COND 2 '3) '3 2) 2 ) '3 2)
(<= (COND nil (<= (COND nil '3) '3 nil) nil ) '3 nil)
(<= (COND t (<= (COND t '3) '3 t) t ) '3 t)
(<= (COND (cons t t) (<= (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 '()) '() 1) 1 ) '() 1)
(<= (COND 2 (<= (COND 2 '()) '() 2) 2 ) '() 2)
(<= (COND nil (<= (COND nil '()) '() nil) nil ) '() nil)
(<= (COND t (<= (COND t '()) '() t) t ) '() t)
(<= (COND (cons t t) (<= (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(<= (COND 2 (<= (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(<= (COND nil (<= (COND nil '(())) '(()) nil) nil ) '(()) nil)
(<= (COND t (<= (COND t '(())) '(()) t) t ) '(()) t)
(<= (COND (cons t t) (<= (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(<= (COND 2 (<= (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(<= (COND nil (<= (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(<= (COND t (<= (COND t '((()))) '((())) t) t ) '((())) t)
(<= (COND (cons t t) (<= (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(<= (COND 2 (<= (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(<= (COND nil (<= (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(<= (COND t (<= (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(<= (COND (cons t t) (<= (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 ,A) ,A 1) 1 ) ,A 1)
(<= (COND 2 (<= (COND 2 ,A) ,A 2) 2 ) ,A 2)
(<= (COND nil (<= (COND nil ,A) ,A nil) nil ) ,A nil)
(<= (COND t (<= (COND t ,A) ,A t) t ) ,A t)
(<= (COND (cons t t) (<= (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 ,1) ,1 1) 1 ) ,1 1)
(<= (COND 2 (<= (COND 2 ,1) ,1 2) 2 ) ,1 2)
(<= (COND nil (<= (COND nil ,1) ,1 nil) nil ) ,1 nil)
(<= (COND t (<= (COND t ,1) ,1 t) t ) ,1 t)
(<= (COND (cons t t) (<= (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 ,()) ,() 1) 1 ) ,() 1)
(<= (COND 2 (<= (COND 2 ,()) ,() 2) 2 ) ,() 2)
(<= (COND nil (<= (COND nil ,()) ,() nil) nil ) ,() nil)
(<= (COND t (<= (COND t ,()) ,() t) t ) ,() t)
(<= (COND (cons t t) (<= (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(<= (COND 2 (<= (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(<= (COND nil (<= (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(<= (COND t (<= (COND t ,(())) ,(()) t) t ) ,(()) t)
(<= (COND (cons t t) (<= (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'A) `'A 1) 1 ) `'A 1)
(<= (COND 2 (<= (COND 2 `'A) `'A 2) 2 ) `'A 2)
(<= (COND nil (<= (COND nil `'A) `'A nil) nil ) `'A nil)
(<= (COND t (<= (COND t `'A) `'A t) t ) `'A t)
(<= (COND (cons t t) (<= (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'B) `'B 1) 1 ) `'B 1)
(<= (COND 2 (<= (COND 2 `'B) `'B 2) 2 ) `'B 2)
(<= (COND nil (<= (COND nil `'B) `'B nil) nil ) `'B nil)
(<= (COND t (<= (COND t `'B) `'B t) t ) `'B t)
(<= (COND (cons t t) (<= (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'C) `'C 1) 1 ) `'C 1)
(<= (COND 2 (<= (COND 2 `'C) `'C 2) 2 ) `'C 2)
(<= (COND nil (<= (COND nil `'C) `'C nil) nil ) `'C nil)
(<= (COND t (<= (COND t `'C) `'C t) t ) `'C t)
(<= (COND (cons t t) (<= (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'1) `'1 1) 1 ) `'1 1)
(<= (COND 2 (<= (COND 2 `'1) `'1 2) 2 ) `'1 2)
(<= (COND nil (<= (COND nil `'1) `'1 nil) nil ) `'1 nil)
(<= (COND t (<= (COND t `'1) `'1 t) t ) `'1 t)
(<= (COND (cons t t) (<= (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'2) `'2 1) 1 ) `'2 1)
(<= (COND 2 (<= (COND 2 `'2) `'2 2) 2 ) `'2 2)
(<= (COND nil (<= (COND nil `'2) `'2 nil) nil ) `'2 nil)
(<= (COND t (<= (COND t `'2) `'2 t) t ) `'2 t)
(<= (COND (cons t t) (<= (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'3) `'3 1) 1 ) `'3 1)
(<= (COND 2 (<= (COND 2 `'3) `'3 2) 2 ) `'3 2)
(<= (COND nil (<= (COND nil `'3) `'3 nil) nil ) `'3 nil)
(<= (COND t (<= (COND t `'3) `'3 t) t ) `'3 t)
(<= (COND (cons t t) (<= (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'()) `'() 1) 1 ) `'() 1)
(<= (COND 2 (<= (COND 2 `'()) `'() 2) 2 ) `'() 2)
(<= (COND nil (<= (COND nil `'()) `'() nil) nil ) `'() nil)
(<= (COND t (<= (COND t `'()) `'() t) t ) `'() t)
(<= (COND (cons t t) (<= (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(<= (COND 2 (<= (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(<= (COND nil (<= (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(<= (COND t (<= (COND t `'(())) `'(()) t) t ) `'(()) t)
(<= (COND (cons t t) (<= (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(<= (COND 2 (<= (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(<= (COND nil (<= (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(<= (COND t (<= (COND t `'((()))) `'((())) t) t ) `'((())) t)
(<= (COND (cons t t) (<= (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(<= (COND 1 (<= (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(<= (COND 2 (<= (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(<= (COND nil (<= (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(<= (COND t (<= (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(<= (COND (cons t t) (<= (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(<= (COND (cons nil t) (<= (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(<= (COND (cons nil nil) (<= (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(<= (COND (cons 0 0) (<= (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(<= (COND (cons 1 1) (<= (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(<= (COND (list 1 2 3) (<= (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(<= (COND (list (cons 1 1 ) ) (<= (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 T) T 1) 1 ) T 1)
(= (COND 2 (= (COND 2 T) T 2) 2 ) T 2)
(= (COND nil (= (COND nil T) T nil) nil ) T nil)
(= (COND t (= (COND t T) T t) t ) T t)
(= (COND (cons t t) (= (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 NIL) NIL 1) 1 ) NIL 1)
(= (COND 2 (= (COND 2 NIL) NIL 2) 2 ) NIL 2)
(= (COND nil (= (COND nil NIL) NIL nil) nil ) NIL nil)
(= (COND t (= (COND t NIL) NIL t) t ) NIL t)
(= (COND (cons t t) (= (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 A) A 1) 1 ) A 1)
(= (COND 2 (= (COND 2 A) A 2) 2 ) A 2)
(= (COND nil (= (COND nil A) A nil) nil ) A nil)
(= (COND t (= (COND t A) A t) t ) A t)
(= (COND (cons t t) (= (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 B) B 1) 1 ) B 1)
(= (COND 2 (= (COND 2 B) B 2) 2 ) B 2)
(= (COND nil (= (COND nil B) B nil) nil ) B nil)
(= (COND t (= (COND t B) B t) t ) B t)
(= (COND (cons t t) (= (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 C) C 1) 1 ) C 1)
(= (COND 2 (= (COND 2 C) C 2) 2 ) C 2)
(= (COND nil (= (COND nil C) C nil) nil ) C nil)
(= (COND t (= (COND t C) C t) t ) C t)
(= (COND (cons t t) (= (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 1) 1 1) 1 ) 1 1)
(= (COND 2 (= (COND 2 1) 1 2) 2 ) 1 2)
(= (COND nil (= (COND nil 1) 1 nil) nil ) 1 nil)
(= (COND t (= (COND t 1) 1 t) t ) 1 t)
(= (COND (cons t t) (= (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 2) 2 1) 1 ) 2 1)
(= (COND 2 (= (COND 2 2) 2 2) 2 ) 2 2)
(= (COND nil (= (COND nil 2) 2 nil) nil ) 2 nil)
(= (COND t (= (COND t 2) 2 t) t ) 2 t)
(= (COND (cons t t) (= (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 3) 3 1) 1 ) 3 1)
(= (COND 2 (= (COND 2 3) 3 2) 2 ) 3 2)
(= (COND nil (= (COND nil 3) 3 nil) nil ) 3 nil)
(= (COND t (= (COND t 3) 3 t) t ) 3 t)
(= (COND (cons t t) (= (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 ()) () 1) 1 ) () 1)
(= (COND 2 (= (COND 2 ()) () 2) 2 ) () 2)
(= (COND nil (= (COND nil ()) () nil) nil ) () nil)
(= (COND t (= (COND t ()) () t) t ) () t)
(= (COND (cons t t) (= (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 (())) (()) 1) 1 ) (()) 1)
(= (COND 2 (= (COND 2 (())) (()) 2) 2 ) (()) 2)
(= (COND nil (= (COND nil (())) (()) nil) nil ) (()) nil)
(= (COND t (= (COND t (())) (()) t) t ) (()) t)
(= (COND (cons t t) (= (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(= (COND 2 (= (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(= (COND nil (= (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(= (COND t (= (COND t ((()))) ((())) t) t ) ((())) t)
(= (COND (cons t t) (= (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(= (COND 2 (= (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(= (COND nil (= (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(= (COND t (= (COND t (((())))) (((()))) t) t ) (((()))) t)
(= (COND (cons t t) (= (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 'A) 'A 1) 1 ) 'A 1)
(= (COND 2 (= (COND 2 'A) 'A 2) 2 ) 'A 2)
(= (COND nil (= (COND nil 'A) 'A nil) nil ) 'A nil)
(= (COND t (= (COND t 'A) 'A t) t ) 'A t)
(= (COND (cons t t) (= (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 'B) 'B 1) 1 ) 'B 1)
(= (COND 2 (= (COND 2 'B) 'B 2) 2 ) 'B 2)
(= (COND nil (= (COND nil 'B) 'B nil) nil ) 'B nil)
(= (COND t (= (COND t 'B) 'B t) t ) 'B t)
(= (COND (cons t t) (= (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 'C) 'C 1) 1 ) 'C 1)
(= (COND 2 (= (COND 2 'C) 'C 2) 2 ) 'C 2)
(= (COND nil (= (COND nil 'C) 'C nil) nil ) 'C nil)
(= (COND t (= (COND t 'C) 'C t) t ) 'C t)
(= (COND (cons t t) (= (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 '1) '1 1) 1 ) '1 1)
(= (COND 2 (= (COND 2 '1) '1 2) 2 ) '1 2)
(= (COND nil (= (COND nil '1) '1 nil) nil ) '1 nil)
(= (COND t (= (COND t '1) '1 t) t ) '1 t)
(= (COND (cons t t) (= (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 '2) '2 1) 1 ) '2 1)
(= (COND 2 (= (COND 2 '2) '2 2) 2 ) '2 2)
(= (COND nil (= (COND nil '2) '2 nil) nil ) '2 nil)
(= (COND t (= (COND t '2) '2 t) t ) '2 t)
(= (COND (cons t t) (= (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 '3) '3 1) 1 ) '3 1)
(= (COND 2 (= (COND 2 '3) '3 2) 2 ) '3 2)
(= (COND nil (= (COND nil '3) '3 nil) nil ) '3 nil)
(= (COND t (= (COND t '3) '3 t) t ) '3 t)
(= (COND (cons t t) (= (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 '()) '() 1) 1 ) '() 1)
(= (COND 2 (= (COND 2 '()) '() 2) 2 ) '() 2)
(= (COND nil (= (COND nil '()) '() nil) nil ) '() nil)
(= (COND t (= (COND t '()) '() t) t ) '() t)
(= (COND (cons t t) (= (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(= (COND 2 (= (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(= (COND nil (= (COND nil '(())) '(()) nil) nil ) '(()) nil)
(= (COND t (= (COND t '(())) '(()) t) t ) '(()) t)
(= (COND (cons t t) (= (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(= (COND 2 (= (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(= (COND nil (= (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(= (COND t (= (COND t '((()))) '((())) t) t ) '((())) t)
(= (COND (cons t t) (= (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(= (COND 2 (= (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(= (COND nil (= (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(= (COND t (= (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(= (COND (cons t t) (= (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 ,A) ,A 1) 1 ) ,A 1)
(= (COND 2 (= (COND 2 ,A) ,A 2) 2 ) ,A 2)
(= (COND nil (= (COND nil ,A) ,A nil) nil ) ,A nil)
(= (COND t (= (COND t ,A) ,A t) t ) ,A t)
(= (COND (cons t t) (= (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 ,1) ,1 1) 1 ) ,1 1)
(= (COND 2 (= (COND 2 ,1) ,1 2) 2 ) ,1 2)
(= (COND nil (= (COND nil ,1) ,1 nil) nil ) ,1 nil)
(= (COND t (= (COND t ,1) ,1 t) t ) ,1 t)
(= (COND (cons t t) (= (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 ,()) ,() 1) 1 ) ,() 1)
(= (COND 2 (= (COND 2 ,()) ,() 2) 2 ) ,() 2)
(= (COND nil (= (COND nil ,()) ,() nil) nil ) ,() nil)
(= (COND t (= (COND t ,()) ,() t) t ) ,() t)
(= (COND (cons t t) (= (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(= (COND 2 (= (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(= (COND nil (= (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(= (COND t (= (COND t ,(())) ,(()) t) t ) ,(()) t)
(= (COND (cons t t) (= (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'A) `'A 1) 1 ) `'A 1)
(= (COND 2 (= (COND 2 `'A) `'A 2) 2 ) `'A 2)
(= (COND nil (= (COND nil `'A) `'A nil) nil ) `'A nil)
(= (COND t (= (COND t `'A) `'A t) t ) `'A t)
(= (COND (cons t t) (= (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'B) `'B 1) 1 ) `'B 1)
(= (COND 2 (= (COND 2 `'B) `'B 2) 2 ) `'B 2)
(= (COND nil (= (COND nil `'B) `'B nil) nil ) `'B nil)
(= (COND t (= (COND t `'B) `'B t) t ) `'B t)
(= (COND (cons t t) (= (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'C) `'C 1) 1 ) `'C 1)
(= (COND 2 (= (COND 2 `'C) `'C 2) 2 ) `'C 2)
(= (COND nil (= (COND nil `'C) `'C nil) nil ) `'C nil)
(= (COND t (= (COND t `'C) `'C t) t ) `'C t)
(= (COND (cons t t) (= (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'1) `'1 1) 1 ) `'1 1)
(= (COND 2 (= (COND 2 `'1) `'1 2) 2 ) `'1 2)
(= (COND nil (= (COND nil `'1) `'1 nil) nil ) `'1 nil)
(= (COND t (= (COND t `'1) `'1 t) t ) `'1 t)
(= (COND (cons t t) (= (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'2) `'2 1) 1 ) `'2 1)
(= (COND 2 (= (COND 2 `'2) `'2 2) 2 ) `'2 2)
(= (COND nil (= (COND nil `'2) `'2 nil) nil ) `'2 nil)
(= (COND t (= (COND t `'2) `'2 t) t ) `'2 t)
(= (COND (cons t t) (= (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'3) `'3 1) 1 ) `'3 1)
(= (COND 2 (= (COND 2 `'3) `'3 2) 2 ) `'3 2)
(= (COND nil (= (COND nil `'3) `'3 nil) nil ) `'3 nil)
(= (COND t (= (COND t `'3) `'3 t) t ) `'3 t)
(= (COND (cons t t) (= (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'()) `'() 1) 1 ) `'() 1)
(= (COND 2 (= (COND 2 `'()) `'() 2) 2 ) `'() 2)
(= (COND nil (= (COND nil `'()) `'() nil) nil ) `'() nil)
(= (COND t (= (COND t `'()) `'() t) t ) `'() t)
(= (COND (cons t t) (= (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(= (COND 2 (= (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(= (COND nil (= (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(= (COND t (= (COND t `'(())) `'(()) t) t ) `'(()) t)
(= (COND (cons t t) (= (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(= (COND 2 (= (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(= (COND nil (= (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(= (COND t (= (COND t `'((()))) `'((())) t) t ) `'((())) t)
(= (COND (cons t t) (= (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(= (COND 1 (= (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(= (COND 2 (= (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(= (COND nil (= (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(= (COND t (= (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(= (COND (cons t t) (= (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(= (COND (cons nil t) (= (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(= (COND (cons nil nil) (= (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(= (COND (cons 0 0) (= (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(= (COND (cons 1 1) (= (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(= (COND (list 1 2 3) (= (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(= (COND (list (cons 1 1 ) ) (= (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 T) T 1) 1 ) T 1)
(> (COND 2 (> (COND 2 T) T 2) 2 ) T 2)
(> (COND nil (> (COND nil T) T nil) nil ) T nil)
(> (COND t (> (COND t T) T t) t ) T t)
(> (COND (cons t t) (> (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 NIL) NIL 1) 1 ) NIL 1)
(> (COND 2 (> (COND 2 NIL) NIL 2) 2 ) NIL 2)
(> (COND nil (> (COND nil NIL) NIL nil) nil ) NIL nil)
(> (COND t (> (COND t NIL) NIL t) t ) NIL t)
(> (COND (cons t t) (> (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 A) A 1) 1 ) A 1)
(> (COND 2 (> (COND 2 A) A 2) 2 ) A 2)
(> (COND nil (> (COND nil A) A nil) nil ) A nil)
(> (COND t (> (COND t A) A t) t ) A t)
(> (COND (cons t t) (> (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 B) B 1) 1 ) B 1)
(> (COND 2 (> (COND 2 B) B 2) 2 ) B 2)
(> (COND nil (> (COND nil B) B nil) nil ) B nil)
(> (COND t (> (COND t B) B t) t ) B t)
(> (COND (cons t t) (> (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 C) C 1) 1 ) C 1)
(> (COND 2 (> (COND 2 C) C 2) 2 ) C 2)
(> (COND nil (> (COND nil C) C nil) nil ) C nil)
(> (COND t (> (COND t C) C t) t ) C t)
(> (COND (cons t t) (> (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 1) 1 1) 1 ) 1 1)
(> (COND 2 (> (COND 2 1) 1 2) 2 ) 1 2)
(> (COND nil (> (COND nil 1) 1 nil) nil ) 1 nil)
(> (COND t (> (COND t 1) 1 t) t ) 1 t)
(> (COND (cons t t) (> (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 2) 2 1) 1 ) 2 1)
(> (COND 2 (> (COND 2 2) 2 2) 2 ) 2 2)
(> (COND nil (> (COND nil 2) 2 nil) nil ) 2 nil)
(> (COND t (> (COND t 2) 2 t) t ) 2 t)
(> (COND (cons t t) (> (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 3) 3 1) 1 ) 3 1)
(> (COND 2 (> (COND 2 3) 3 2) 2 ) 3 2)
(> (COND nil (> (COND nil 3) 3 nil) nil ) 3 nil)
(> (COND t (> (COND t 3) 3 t) t ) 3 t)
(> (COND (cons t t) (> (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 ()) () 1) 1 ) () 1)
(> (COND 2 (> (COND 2 ()) () 2) 2 ) () 2)
(> (COND nil (> (COND nil ()) () nil) nil ) () nil)
(> (COND t (> (COND t ()) () t) t ) () t)
(> (COND (cons t t) (> (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 (())) (()) 1) 1 ) (()) 1)
(> (COND 2 (> (COND 2 (())) (()) 2) 2 ) (()) 2)
(> (COND nil (> (COND nil (())) (()) nil) nil ) (()) nil)
(> (COND t (> (COND t (())) (()) t) t ) (()) t)
(> (COND (cons t t) (> (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(> (COND 2 (> (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(> (COND nil (> (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(> (COND t (> (COND t ((()))) ((())) t) t ) ((())) t)
(> (COND (cons t t) (> (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(> (COND 2 (> (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(> (COND nil (> (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(> (COND t (> (COND t (((())))) (((()))) t) t ) (((()))) t)
(> (COND (cons t t) (> (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 'A) 'A 1) 1 ) 'A 1)
(> (COND 2 (> (COND 2 'A) 'A 2) 2 ) 'A 2)
(> (COND nil (> (COND nil 'A) 'A nil) nil ) 'A nil)
(> (COND t (> (COND t 'A) 'A t) t ) 'A t)
(> (COND (cons t t) (> (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 'B) 'B 1) 1 ) 'B 1)
(> (COND 2 (> (COND 2 'B) 'B 2) 2 ) 'B 2)
(> (COND nil (> (COND nil 'B) 'B nil) nil ) 'B nil)
(> (COND t (> (COND t 'B) 'B t) t ) 'B t)
(> (COND (cons t t) (> (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 'C) 'C 1) 1 ) 'C 1)
(> (COND 2 (> (COND 2 'C) 'C 2) 2 ) 'C 2)
(> (COND nil (> (COND nil 'C) 'C nil) nil ) 'C nil)
(> (COND t (> (COND t 'C) 'C t) t ) 'C t)
(> (COND (cons t t) (> (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 '1) '1 1) 1 ) '1 1)
(> (COND 2 (> (COND 2 '1) '1 2) 2 ) '1 2)
(> (COND nil (> (COND nil '1) '1 nil) nil ) '1 nil)
(> (COND t (> (COND t '1) '1 t) t ) '1 t)
(> (COND (cons t t) (> (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 '2) '2 1) 1 ) '2 1)
(> (COND 2 (> (COND 2 '2) '2 2) 2 ) '2 2)
(> (COND nil (> (COND nil '2) '2 nil) nil ) '2 nil)
(> (COND t (> (COND t '2) '2 t) t ) '2 t)
(> (COND (cons t t) (> (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 '3) '3 1) 1 ) '3 1)
(> (COND 2 (> (COND 2 '3) '3 2) 2 ) '3 2)
(> (COND nil (> (COND nil '3) '3 nil) nil ) '3 nil)
(> (COND t (> (COND t '3) '3 t) t ) '3 t)
(> (COND (cons t t) (> (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 '()) '() 1) 1 ) '() 1)
(> (COND 2 (> (COND 2 '()) '() 2) 2 ) '() 2)
(> (COND nil (> (COND nil '()) '() nil) nil ) '() nil)
(> (COND t (> (COND t '()) '() t) t ) '() t)
(> (COND (cons t t) (> (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(> (COND 2 (> (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(> (COND nil (> (COND nil '(())) '(()) nil) nil ) '(()) nil)
(> (COND t (> (COND t '(())) '(()) t) t ) '(()) t)
(> (COND (cons t t) (> (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(> (COND 2 (> (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(> (COND nil (> (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(> (COND t (> (COND t '((()))) '((())) t) t ) '((())) t)
(> (COND (cons t t) (> (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(> (COND 2 (> (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(> (COND nil (> (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(> (COND t (> (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(> (COND (cons t t) (> (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 ,A) ,A 1) 1 ) ,A 1)
(> (COND 2 (> (COND 2 ,A) ,A 2) 2 ) ,A 2)
(> (COND nil (> (COND nil ,A) ,A nil) nil ) ,A nil)
(> (COND t (> (COND t ,A) ,A t) t ) ,A t)
(> (COND (cons t t) (> (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 ,1) ,1 1) 1 ) ,1 1)
(> (COND 2 (> (COND 2 ,1) ,1 2) 2 ) ,1 2)
(> (COND nil (> (COND nil ,1) ,1 nil) nil ) ,1 nil)
(> (COND t (> (COND t ,1) ,1 t) t ) ,1 t)
(> (COND (cons t t) (> (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 ,()) ,() 1) 1 ) ,() 1)
(> (COND 2 (> (COND 2 ,()) ,() 2) 2 ) ,() 2)
(> (COND nil (> (COND nil ,()) ,() nil) nil ) ,() nil)
(> (COND t (> (COND t ,()) ,() t) t ) ,() t)
(> (COND (cons t t) (> (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(> (COND 2 (> (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(> (COND nil (> (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(> (COND t (> (COND t ,(())) ,(()) t) t ) ,(()) t)
(> (COND (cons t t) (> (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'A) `'A 1) 1 ) `'A 1)
(> (COND 2 (> (COND 2 `'A) `'A 2) 2 ) `'A 2)
(> (COND nil (> (COND nil `'A) `'A nil) nil ) `'A nil)
(> (COND t (> (COND t `'A) `'A t) t ) `'A t)
(> (COND (cons t t) (> (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'B) `'B 1) 1 ) `'B 1)
(> (COND 2 (> (COND 2 `'B) `'B 2) 2 ) `'B 2)
(> (COND nil (> (COND nil `'B) `'B nil) nil ) `'B nil)
(> (COND t (> (COND t `'B) `'B t) t ) `'B t)
(> (COND (cons t t) (> (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'C) `'C 1) 1 ) `'C 1)
(> (COND 2 (> (COND 2 `'C) `'C 2) 2 ) `'C 2)
(> (COND nil (> (COND nil `'C) `'C nil) nil ) `'C nil)
(> (COND t (> (COND t `'C) `'C t) t ) `'C t)
(> (COND (cons t t) (> (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'1) `'1 1) 1 ) `'1 1)
(> (COND 2 (> (COND 2 `'1) `'1 2) 2 ) `'1 2)
(> (COND nil (> (COND nil `'1) `'1 nil) nil ) `'1 nil)
(> (COND t (> (COND t `'1) `'1 t) t ) `'1 t)
(> (COND (cons t t) (> (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'2) `'2 1) 1 ) `'2 1)
(> (COND 2 (> (COND 2 `'2) `'2 2) 2 ) `'2 2)
(> (COND nil (> (COND nil `'2) `'2 nil) nil ) `'2 nil)
(> (COND t (> (COND t `'2) `'2 t) t ) `'2 t)
(> (COND (cons t t) (> (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'3) `'3 1) 1 ) `'3 1)
(> (COND 2 (> (COND 2 `'3) `'3 2) 2 ) `'3 2)
(> (COND nil (> (COND nil `'3) `'3 nil) nil ) `'3 nil)
(> (COND t (> (COND t `'3) `'3 t) t ) `'3 t)
(> (COND (cons t t) (> (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'()) `'() 1) 1 ) `'() 1)
(> (COND 2 (> (COND 2 `'()) `'() 2) 2 ) `'() 2)
(> (COND nil (> (COND nil `'()) `'() nil) nil ) `'() nil)
(> (COND t (> (COND t `'()) `'() t) t ) `'() t)
(> (COND (cons t t) (> (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(> (COND 2 (> (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(> (COND nil (> (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(> (COND t (> (COND t `'(())) `'(()) t) t ) `'(()) t)
(> (COND (cons t t) (> (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(> (COND 2 (> (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(> (COND nil (> (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(> (COND t (> (COND t `'((()))) `'((())) t) t ) `'((())) t)
(> (COND (cons t t) (> (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(> (COND 1 (> (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(> (COND 2 (> (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(> (COND nil (> (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(> (COND t (> (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(> (COND (cons t t) (> (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(> (COND (cons nil t) (> (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(> (COND (cons nil nil) (> (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(> (COND (cons 0 0) (> (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(> (COND (cons 1 1) (> (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(> (COND (list 1 2 3) (> (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(> (COND (list (cons 1 1 ) ) (> (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 T) T 1) 1 ) T 1)
(>= (COND 2 (>= (COND 2 T) T 2) 2 ) T 2)
(>= (COND nil (>= (COND nil T) T nil) nil ) T nil)
(>= (COND t (>= (COND t T) T t) t ) T t)
(>= (COND (cons t t) (>= (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 NIL) NIL 1) 1 ) NIL 1)
(>= (COND 2 (>= (COND 2 NIL) NIL 2) 2 ) NIL 2)
(>= (COND nil (>= (COND nil NIL) NIL nil) nil ) NIL nil)
(>= (COND t (>= (COND t NIL) NIL t) t ) NIL t)
(>= (COND (cons t t) (>= (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 A) A 1) 1 ) A 1)
(>= (COND 2 (>= (COND 2 A) A 2) 2 ) A 2)
(>= (COND nil (>= (COND nil A) A nil) nil ) A nil)
(>= (COND t (>= (COND t A) A t) t ) A t)
(>= (COND (cons t t) (>= (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 B) B 1) 1 ) B 1)
(>= (COND 2 (>= (COND 2 B) B 2) 2 ) B 2)
(>= (COND nil (>= (COND nil B) B nil) nil ) B nil)
(>= (COND t (>= (COND t B) B t) t ) B t)
(>= (COND (cons t t) (>= (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 C) C 1) 1 ) C 1)
(>= (COND 2 (>= (COND 2 C) C 2) 2 ) C 2)
(>= (COND nil (>= (COND nil C) C nil) nil ) C nil)
(>= (COND t (>= (COND t C) C t) t ) C t)
(>= (COND (cons t t) (>= (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 1) 1 1) 1 ) 1 1)
(>= (COND 2 (>= (COND 2 1) 1 2) 2 ) 1 2)
(>= (COND nil (>= (COND nil 1) 1 nil) nil ) 1 nil)
(>= (COND t (>= (COND t 1) 1 t) t ) 1 t)
(>= (COND (cons t t) (>= (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 2) 2 1) 1 ) 2 1)
(>= (COND 2 (>= (COND 2 2) 2 2) 2 ) 2 2)
(>= (COND nil (>= (COND nil 2) 2 nil) nil ) 2 nil)
(>= (COND t (>= (COND t 2) 2 t) t ) 2 t)
(>= (COND (cons t t) (>= (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 3) 3 1) 1 ) 3 1)
(>= (COND 2 (>= (COND 2 3) 3 2) 2 ) 3 2)
(>= (COND nil (>= (COND nil 3) 3 nil) nil ) 3 nil)
(>= (COND t (>= (COND t 3) 3 t) t ) 3 t)
(>= (COND (cons t t) (>= (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 ()) () 1) 1 ) () 1)
(>= (COND 2 (>= (COND 2 ()) () 2) 2 ) () 2)
(>= (COND nil (>= (COND nil ()) () nil) nil ) () nil)
(>= (COND t (>= (COND t ()) () t) t ) () t)
(>= (COND (cons t t) (>= (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 (())) (()) 1) 1 ) (()) 1)
(>= (COND 2 (>= (COND 2 (())) (()) 2) 2 ) (()) 2)
(>= (COND nil (>= (COND nil (())) (()) nil) nil ) (()) nil)
(>= (COND t (>= (COND t (())) (()) t) t ) (()) t)
(>= (COND (cons t t) (>= (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(>= (COND 2 (>= (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(>= (COND nil (>= (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(>= (COND t (>= (COND t ((()))) ((())) t) t ) ((())) t)
(>= (COND (cons t t) (>= (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(>= (COND 2 (>= (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(>= (COND nil (>= (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(>= (COND t (>= (COND t (((())))) (((()))) t) t ) (((()))) t)
(>= (COND (cons t t) (>= (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 'A) 'A 1) 1 ) 'A 1)
(>= (COND 2 (>= (COND 2 'A) 'A 2) 2 ) 'A 2)
(>= (COND nil (>= (COND nil 'A) 'A nil) nil ) 'A nil)
(>= (COND t (>= (COND t 'A) 'A t) t ) 'A t)
(>= (COND (cons t t) (>= (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 'B) 'B 1) 1 ) 'B 1)
(>= (COND 2 (>= (COND 2 'B) 'B 2) 2 ) 'B 2)
(>= (COND nil (>= (COND nil 'B) 'B nil) nil ) 'B nil)
(>= (COND t (>= (COND t 'B) 'B t) t ) 'B t)
(>= (COND (cons t t) (>= (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 'C) 'C 1) 1 ) 'C 1)
(>= (COND 2 (>= (COND 2 'C) 'C 2) 2 ) 'C 2)
(>= (COND nil (>= (COND nil 'C) 'C nil) nil ) 'C nil)
(>= (COND t (>= (COND t 'C) 'C t) t ) 'C t)
(>= (COND (cons t t) (>= (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 '1) '1 1) 1 ) '1 1)
(>= (COND 2 (>= (COND 2 '1) '1 2) 2 ) '1 2)
(>= (COND nil (>= (COND nil '1) '1 nil) nil ) '1 nil)
(>= (COND t (>= (COND t '1) '1 t) t ) '1 t)
(>= (COND (cons t t) (>= (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 '2) '2 1) 1 ) '2 1)
(>= (COND 2 (>= (COND 2 '2) '2 2) 2 ) '2 2)
(>= (COND nil (>= (COND nil '2) '2 nil) nil ) '2 nil)
(>= (COND t (>= (COND t '2) '2 t) t ) '2 t)
(>= (COND (cons t t) (>= (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 '3) '3 1) 1 ) '3 1)
(>= (COND 2 (>= (COND 2 '3) '3 2) 2 ) '3 2)
(>= (COND nil (>= (COND nil '3) '3 nil) nil ) '3 nil)
(>= (COND t (>= (COND t '3) '3 t) t ) '3 t)
(>= (COND (cons t t) (>= (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 '()) '() 1) 1 ) '() 1)
(>= (COND 2 (>= (COND 2 '()) '() 2) 2 ) '() 2)
(>= (COND nil (>= (COND nil '()) '() nil) nil ) '() nil)
(>= (COND t (>= (COND t '()) '() t) t ) '() t)
(>= (COND (cons t t) (>= (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(>= (COND 2 (>= (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(>= (COND nil (>= (COND nil '(())) '(()) nil) nil ) '(()) nil)
(>= (COND t (>= (COND t '(())) '(()) t) t ) '(()) t)
(>= (COND (cons t t) (>= (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(>= (COND 2 (>= (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(>= (COND nil (>= (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(>= (COND t (>= (COND t '((()))) '((())) t) t ) '((())) t)
(>= (COND (cons t t) (>= (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(>= (COND 2 (>= (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(>= (COND nil (>= (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(>= (COND t (>= (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(>= (COND (cons t t) (>= (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 ,A) ,A 1) 1 ) ,A 1)
(>= (COND 2 (>= (COND 2 ,A) ,A 2) 2 ) ,A 2)
(>= (COND nil (>= (COND nil ,A) ,A nil) nil ) ,A nil)
(>= (COND t (>= (COND t ,A) ,A t) t ) ,A t)
(>= (COND (cons t t) (>= (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 ,1) ,1 1) 1 ) ,1 1)
(>= (COND 2 (>= (COND 2 ,1) ,1 2) 2 ) ,1 2)
(>= (COND nil (>= (COND nil ,1) ,1 nil) nil ) ,1 nil)
(>= (COND t (>= (COND t ,1) ,1 t) t ) ,1 t)
(>= (COND (cons t t) (>= (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 ,()) ,() 1) 1 ) ,() 1)
(>= (COND 2 (>= (COND 2 ,()) ,() 2) 2 ) ,() 2)
(>= (COND nil (>= (COND nil ,()) ,() nil) nil ) ,() nil)
(>= (COND t (>= (COND t ,()) ,() t) t ) ,() t)
(>= (COND (cons t t) (>= (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(>= (COND 2 (>= (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(>= (COND nil (>= (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(>= (COND t (>= (COND t ,(())) ,(()) t) t ) ,(()) t)
(>= (COND (cons t t) (>= (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'A) `'A 1) 1 ) `'A 1)
(>= (COND 2 (>= (COND 2 `'A) `'A 2) 2 ) `'A 2)
(>= (COND nil (>= (COND nil `'A) `'A nil) nil ) `'A nil)
(>= (COND t (>= (COND t `'A) `'A t) t ) `'A t)
(>= (COND (cons t t) (>= (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'B) `'B 1) 1 ) `'B 1)
(>= (COND 2 (>= (COND 2 `'B) `'B 2) 2 ) `'B 2)
(>= (COND nil (>= (COND nil `'B) `'B nil) nil ) `'B nil)
(>= (COND t (>= (COND t `'B) `'B t) t ) `'B t)
(>= (COND (cons t t) (>= (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'C) `'C 1) 1 ) `'C 1)
(>= (COND 2 (>= (COND 2 `'C) `'C 2) 2 ) `'C 2)
(>= (COND nil (>= (COND nil `'C) `'C nil) nil ) `'C nil)
(>= (COND t (>= (COND t `'C) `'C t) t ) `'C t)
(>= (COND (cons t t) (>= (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'1) `'1 1) 1 ) `'1 1)
(>= (COND 2 (>= (COND 2 `'1) `'1 2) 2 ) `'1 2)
(>= (COND nil (>= (COND nil `'1) `'1 nil) nil ) `'1 nil)
(>= (COND t (>= (COND t `'1) `'1 t) t ) `'1 t)
(>= (COND (cons t t) (>= (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'2) `'2 1) 1 ) `'2 1)
(>= (COND 2 (>= (COND 2 `'2) `'2 2) 2 ) `'2 2)
(>= (COND nil (>= (COND nil `'2) `'2 nil) nil ) `'2 nil)
(>= (COND t (>= (COND t `'2) `'2 t) t ) `'2 t)
(>= (COND (cons t t) (>= (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'3) `'3 1) 1 ) `'3 1)
(>= (COND 2 (>= (COND 2 `'3) `'3 2) 2 ) `'3 2)
(>= (COND nil (>= (COND nil `'3) `'3 nil) nil ) `'3 nil)
(>= (COND t (>= (COND t `'3) `'3 t) t ) `'3 t)
(>= (COND (cons t t) (>= (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'()) `'() 1) 1 ) `'() 1)
(>= (COND 2 (>= (COND 2 `'()) `'() 2) 2 ) `'() 2)
(>= (COND nil (>= (COND nil `'()) `'() nil) nil ) `'() nil)
(>= (COND t (>= (COND t `'()) `'() t) t ) `'() t)
(>= (COND (cons t t) (>= (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(>= (COND 2 (>= (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(>= (COND nil (>= (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(>= (COND t (>= (COND t `'(())) `'(()) t) t ) `'(()) t)
(>= (COND (cons t t) (>= (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(>= (COND 2 (>= (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(>= (COND nil (>= (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(>= (COND t (>= (COND t `'((()))) `'((())) t) t ) `'((())) t)
(>= (COND (cons t t) (>= (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(>= (COND 1 (>= (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(>= (COND 2 (>= (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(>= (COND nil (>= (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(>= (COND t (>= (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(>= (COND (cons t t) (>= (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(>= (COND (cons nil t) (>= (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(>= (COND (cons nil nil) (>= (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(>= (COND (cons 0 0) (>= (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(>= (COND (cons 1 1) (>= (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(>= (COND (list 1 2 3) (>= (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(>= (COND (list (cons 1 1 ) ) (>= (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 T) T 1) 1 ) T 1)
(ADD (COND 2 (ADD (COND 2 T) T 2) 2 ) T 2)
(ADD (COND nil (ADD (COND nil T) T nil) nil ) T nil)
(ADD (COND t (ADD (COND t T) T t) t ) T t)
(ADD (COND (cons t t) (ADD (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 NIL) NIL 1) 1 ) NIL 1)
(ADD (COND 2 (ADD (COND 2 NIL) NIL 2) 2 ) NIL 2)
(ADD (COND nil (ADD (COND nil NIL) NIL nil) nil ) NIL nil)
(ADD (COND t (ADD (COND t NIL) NIL t) t ) NIL t)
(ADD (COND (cons t t) (ADD (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 A) A 1) 1 ) A 1)
(ADD (COND 2 (ADD (COND 2 A) A 2) 2 ) A 2)
(ADD (COND nil (ADD (COND nil A) A nil) nil ) A nil)
(ADD (COND t (ADD (COND t A) A t) t ) A t)
(ADD (COND (cons t t) (ADD (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 B) B 1) 1 ) B 1)
(ADD (COND 2 (ADD (COND 2 B) B 2) 2 ) B 2)
(ADD (COND nil (ADD (COND nil B) B nil) nil ) B nil)
(ADD (COND t (ADD (COND t B) B t) t ) B t)
(ADD (COND (cons t t) (ADD (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 C) C 1) 1 ) C 1)
(ADD (COND 2 (ADD (COND 2 C) C 2) 2 ) C 2)
(ADD (COND nil (ADD (COND nil C) C nil) nil ) C nil)
(ADD (COND t (ADD (COND t C) C t) t ) C t)
(ADD (COND (cons t t) (ADD (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 1) 1 1) 1 ) 1 1)
(ADD (COND 2 (ADD (COND 2 1) 1 2) 2 ) 1 2)
(ADD (COND nil (ADD (COND nil 1) 1 nil) nil ) 1 nil)
(ADD (COND t (ADD (COND t 1) 1 t) t ) 1 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 2) 2 1) 1 ) 2 1)
(ADD (COND 2 (ADD (COND 2 2) 2 2) 2 ) 2 2)
(ADD (COND nil (ADD (COND nil 2) 2 nil) nil ) 2 nil)
(ADD (COND t (ADD (COND t 2) 2 t) t ) 2 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 3) 3 1) 1 ) 3 1)
(ADD (COND 2 (ADD (COND 2 3) 3 2) 2 ) 3 2)
(ADD (COND nil (ADD (COND nil 3) 3 nil) nil ) 3 nil)
(ADD (COND t (ADD (COND t 3) 3 t) t ) 3 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 ()) () 1) 1 ) () 1)
(ADD (COND 2 (ADD (COND 2 ()) () 2) 2 ) () 2)
(ADD (COND nil (ADD (COND nil ()) () nil) nil ) () nil)
(ADD (COND t (ADD (COND t ()) () t) t ) () t)
(ADD (COND (cons t t) (ADD (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 (())) (()) 1) 1 ) (()) 1)
(ADD (COND 2 (ADD (COND 2 (())) (()) 2) 2 ) (()) 2)
(ADD (COND nil (ADD (COND nil (())) (()) nil) nil ) (()) nil)
(ADD (COND t (ADD (COND t (())) (()) t) t ) (()) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(ADD (COND 2 (ADD (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(ADD (COND nil (ADD (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(ADD (COND t (ADD (COND t ((()))) ((())) t) t ) ((())) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(ADD (COND 2 (ADD (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(ADD (COND nil (ADD (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(ADD (COND t (ADD (COND t (((())))) (((()))) t) t ) (((()))) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 'A) 'A 1) 1 ) 'A 1)
(ADD (COND 2 (ADD (COND 2 'A) 'A 2) 2 ) 'A 2)
(ADD (COND nil (ADD (COND nil 'A) 'A nil) nil ) 'A nil)
(ADD (COND t (ADD (COND t 'A) 'A t) t ) 'A t)
(ADD (COND (cons t t) (ADD (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 'B) 'B 1) 1 ) 'B 1)
(ADD (COND 2 (ADD (COND 2 'B) 'B 2) 2 ) 'B 2)
(ADD (COND nil (ADD (COND nil 'B) 'B nil) nil ) 'B nil)
(ADD (COND t (ADD (COND t 'B) 'B t) t ) 'B t)
(ADD (COND (cons t t) (ADD (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 'C) 'C 1) 1 ) 'C 1)
(ADD (COND 2 (ADD (COND 2 'C) 'C 2) 2 ) 'C 2)
(ADD (COND nil (ADD (COND nil 'C) 'C nil) nil ) 'C nil)
(ADD (COND t (ADD (COND t 'C) 'C t) t ) 'C t)
(ADD (COND (cons t t) (ADD (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 '1) '1 1) 1 ) '1 1)
(ADD (COND 2 (ADD (COND 2 '1) '1 2) 2 ) '1 2)
(ADD (COND nil (ADD (COND nil '1) '1 nil) nil ) '1 nil)
(ADD (COND t (ADD (COND t '1) '1 t) t ) '1 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 '2) '2 1) 1 ) '2 1)
(ADD (COND 2 (ADD (COND 2 '2) '2 2) 2 ) '2 2)
(ADD (COND nil (ADD (COND nil '2) '2 nil) nil ) '2 nil)
(ADD (COND t (ADD (COND t '2) '2 t) t ) '2 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 '3) '3 1) 1 ) '3 1)
(ADD (COND 2 (ADD (COND 2 '3) '3 2) 2 ) '3 2)
(ADD (COND nil (ADD (COND nil '3) '3 nil) nil ) '3 nil)
(ADD (COND t (ADD (COND t '3) '3 t) t ) '3 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 '()) '() 1) 1 ) '() 1)
(ADD (COND 2 (ADD (COND 2 '()) '() 2) 2 ) '() 2)
(ADD (COND nil (ADD (COND nil '()) '() nil) nil ) '() nil)
(ADD (COND t (ADD (COND t '()) '() t) t ) '() t)
(ADD (COND (cons t t) (ADD (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(ADD (COND 2 (ADD (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(ADD (COND nil (ADD (COND nil '(())) '(()) nil) nil ) '(()) nil)
(ADD (COND t (ADD (COND t '(())) '(()) t) t ) '(()) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(ADD (COND 2 (ADD (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(ADD (COND nil (ADD (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(ADD (COND t (ADD (COND t '((()))) '((())) t) t ) '((())) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(ADD (COND 2 (ADD (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(ADD (COND nil (ADD (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(ADD (COND t (ADD (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 ,A) ,A 1) 1 ) ,A 1)
(ADD (COND 2 (ADD (COND 2 ,A) ,A 2) 2 ) ,A 2)
(ADD (COND nil (ADD (COND nil ,A) ,A nil) nil ) ,A nil)
(ADD (COND t (ADD (COND t ,A) ,A t) t ) ,A t)
(ADD (COND (cons t t) (ADD (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 ,1) ,1 1) 1 ) ,1 1)
(ADD (COND 2 (ADD (COND 2 ,1) ,1 2) 2 ) ,1 2)
(ADD (COND nil (ADD (COND nil ,1) ,1 nil) nil ) ,1 nil)
(ADD (COND t (ADD (COND t ,1) ,1 t) t ) ,1 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 ,()) ,() 1) 1 ) ,() 1)
(ADD (COND 2 (ADD (COND 2 ,()) ,() 2) 2 ) ,() 2)
(ADD (COND nil (ADD (COND nil ,()) ,() nil) nil ) ,() nil)
(ADD (COND t (ADD (COND t ,()) ,() t) t ) ,() t)
(ADD (COND (cons t t) (ADD (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(ADD (COND 2 (ADD (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(ADD (COND nil (ADD (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(ADD (COND t (ADD (COND t ,(())) ,(()) t) t ) ,(()) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'A) `'A 1) 1 ) `'A 1)
(ADD (COND 2 (ADD (COND 2 `'A) `'A 2) 2 ) `'A 2)
(ADD (COND nil (ADD (COND nil `'A) `'A nil) nil ) `'A nil)
(ADD (COND t (ADD (COND t `'A) `'A t) t ) `'A t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'B) `'B 1) 1 ) `'B 1)
(ADD (COND 2 (ADD (COND 2 `'B) `'B 2) 2 ) `'B 2)
(ADD (COND nil (ADD (COND nil `'B) `'B nil) nil ) `'B nil)
(ADD (COND t (ADD (COND t `'B) `'B t) t ) `'B t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'C) `'C 1) 1 ) `'C 1)
(ADD (COND 2 (ADD (COND 2 `'C) `'C 2) 2 ) `'C 2)
(ADD (COND nil (ADD (COND nil `'C) `'C nil) nil ) `'C nil)
(ADD (COND t (ADD (COND t `'C) `'C t) t ) `'C t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'1) `'1 1) 1 ) `'1 1)
(ADD (COND 2 (ADD (COND 2 `'1) `'1 2) 2 ) `'1 2)
(ADD (COND nil (ADD (COND nil `'1) `'1 nil) nil ) `'1 nil)
(ADD (COND t (ADD (COND t `'1) `'1 t) t ) `'1 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'2) `'2 1) 1 ) `'2 1)
(ADD (COND 2 (ADD (COND 2 `'2) `'2 2) 2 ) `'2 2)
(ADD (COND nil (ADD (COND nil `'2) `'2 nil) nil ) `'2 nil)
(ADD (COND t (ADD (COND t `'2) `'2 t) t ) `'2 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'3) `'3 1) 1 ) `'3 1)
(ADD (COND 2 (ADD (COND 2 `'3) `'3 2) 2 ) `'3 2)
(ADD (COND nil (ADD (COND nil `'3) `'3 nil) nil ) `'3 nil)
(ADD (COND t (ADD (COND t `'3) `'3 t) t ) `'3 t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'()) `'() 1) 1 ) `'() 1)
(ADD (COND 2 (ADD (COND 2 `'()) `'() 2) 2 ) `'() 2)
(ADD (COND nil (ADD (COND nil `'()) `'() nil) nil ) `'() nil)
(ADD (COND t (ADD (COND t `'()) `'() t) t ) `'() t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(ADD (COND 2 (ADD (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(ADD (COND nil (ADD (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(ADD (COND t (ADD (COND t `'(())) `'(()) t) t ) `'(()) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(ADD (COND 2 (ADD (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(ADD (COND nil (ADD (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(ADD (COND t (ADD (COND t `'((()))) `'((())) t) t ) `'((())) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(ADD (COND 1 (ADD (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(ADD (COND 2 (ADD (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(ADD (COND nil (ADD (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(ADD (COND t (ADD (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(ADD (COND (cons t t) (ADD (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(ADD (COND (cons nil t) (ADD (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(ADD (COND (cons nil nil) (ADD (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(ADD (COND (cons 0 0) (ADD (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(ADD (COND (cons 1 1) (ADD (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(ADD (COND (list 1 2 3) (ADD (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(ADD (COND (list (cons 1 1 ) ) (ADD (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 T) T 1) 1 ) T 1)
(AND (COND 2 (AND (COND 2 T) T 2) 2 ) T 2)
(AND (COND nil (AND (COND nil T) T nil) nil ) T nil)
(AND (COND t (AND (COND t T) T t) t ) T t)
(AND (COND (cons t t) (AND (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 NIL) NIL 1) 1 ) NIL 1)
(AND (COND 2 (AND (COND 2 NIL) NIL 2) 2 ) NIL 2)
(AND (COND nil (AND (COND nil NIL) NIL nil) nil ) NIL nil)
(AND (COND t (AND (COND t NIL) NIL t) t ) NIL t)
(AND (COND (cons t t) (AND (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 A) A 1) 1 ) A 1)
(AND (COND 2 (AND (COND 2 A) A 2) 2 ) A 2)
(AND (COND nil (AND (COND nil A) A nil) nil ) A nil)
(AND (COND t (AND (COND t A) A t) t ) A t)
(AND (COND (cons t t) (AND (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 B) B 1) 1 ) B 1)
(AND (COND 2 (AND (COND 2 B) B 2) 2 ) B 2)
(AND (COND nil (AND (COND nil B) B nil) nil ) B nil)
(AND (COND t (AND (COND t B) B t) t ) B t)
(AND (COND (cons t t) (AND (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 C) C 1) 1 ) C 1)
(AND (COND 2 (AND (COND 2 C) C 2) 2 ) C 2)
(AND (COND nil (AND (COND nil C) C nil) nil ) C nil)
(AND (COND t (AND (COND t C) C t) t ) C t)
(AND (COND (cons t t) (AND (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 1) 1 1) 1 ) 1 1)
(AND (COND 2 (AND (COND 2 1) 1 2) 2 ) 1 2)
(AND (COND nil (AND (COND nil 1) 1 nil) nil ) 1 nil)
(AND (COND t (AND (COND t 1) 1 t) t ) 1 t)
(AND (COND (cons t t) (AND (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 2) 2 1) 1 ) 2 1)
(AND (COND 2 (AND (COND 2 2) 2 2) 2 ) 2 2)
(AND (COND nil (AND (COND nil 2) 2 nil) nil ) 2 nil)
(AND (COND t (AND (COND t 2) 2 t) t ) 2 t)
(AND (COND (cons t t) (AND (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 3) 3 1) 1 ) 3 1)
(AND (COND 2 (AND (COND 2 3) 3 2) 2 ) 3 2)
(AND (COND nil (AND (COND nil 3) 3 nil) nil ) 3 nil)
(AND (COND t (AND (COND t 3) 3 t) t ) 3 t)
(AND (COND (cons t t) (AND (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 ()) () 1) 1 ) () 1)
(AND (COND 2 (AND (COND 2 ()) () 2) 2 ) () 2)
(AND (COND nil (AND (COND nil ()) () nil) nil ) () nil)
(AND (COND t (AND (COND t ()) () t) t ) () t)
(AND (COND (cons t t) (AND (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 (())) (()) 1) 1 ) (()) 1)
(AND (COND 2 (AND (COND 2 (())) (()) 2) 2 ) (()) 2)
(AND (COND nil (AND (COND nil (())) (()) nil) nil ) (()) nil)
(AND (COND t (AND (COND t (())) (()) t) t ) (()) t)
(AND (COND (cons t t) (AND (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(AND (COND 2 (AND (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(AND (COND nil (AND (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(AND (COND t (AND (COND t ((()))) ((())) t) t ) ((())) t)
(AND (COND (cons t t) (AND (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(AND (COND 2 (AND (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(AND (COND nil (AND (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(AND (COND t (AND (COND t (((())))) (((()))) t) t ) (((()))) t)
(AND (COND (cons t t) (AND (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 'A) 'A 1) 1 ) 'A 1)
(AND (COND 2 (AND (COND 2 'A) 'A 2) 2 ) 'A 2)
(AND (COND nil (AND (COND nil 'A) 'A nil) nil ) 'A nil)
(AND (COND t (AND (COND t 'A) 'A t) t ) 'A t)
(AND (COND (cons t t) (AND (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 'B) 'B 1) 1 ) 'B 1)
(AND (COND 2 (AND (COND 2 'B) 'B 2) 2 ) 'B 2)
(AND (COND nil (AND (COND nil 'B) 'B nil) nil ) 'B nil)
(AND (COND t (AND (COND t 'B) 'B t) t ) 'B t)
(AND (COND (cons t t) (AND (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 'C) 'C 1) 1 ) 'C 1)
(AND (COND 2 (AND (COND 2 'C) 'C 2) 2 ) 'C 2)
(AND (COND nil (AND (COND nil 'C) 'C nil) nil ) 'C nil)
(AND (COND t (AND (COND t 'C) 'C t) t ) 'C t)
(AND (COND (cons t t) (AND (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 '1) '1 1) 1 ) '1 1)
(AND (COND 2 (AND (COND 2 '1) '1 2) 2 ) '1 2)
(AND (COND nil (AND (COND nil '1) '1 nil) nil ) '1 nil)
(AND (COND t (AND (COND t '1) '1 t) t ) '1 t)
(AND (COND (cons t t) (AND (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 '2) '2 1) 1 ) '2 1)
(AND (COND 2 (AND (COND 2 '2) '2 2) 2 ) '2 2)
(AND (COND nil (AND (COND nil '2) '2 nil) nil ) '2 nil)
(AND (COND t (AND (COND t '2) '2 t) t ) '2 t)
(AND (COND (cons t t) (AND (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 '3) '3 1) 1 ) '3 1)
(AND (COND 2 (AND (COND 2 '3) '3 2) 2 ) '3 2)
(AND (COND nil (AND (COND nil '3) '3 nil) nil ) '3 nil)
(AND (COND t (AND (COND t '3) '3 t) t ) '3 t)
(AND (COND (cons t t) (AND (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 '()) '() 1) 1 ) '() 1)
(AND (COND 2 (AND (COND 2 '()) '() 2) 2 ) '() 2)
(AND (COND nil (AND (COND nil '()) '() nil) nil ) '() nil)
(AND (COND t (AND (COND t '()) '() t) t ) '() t)
(AND (COND (cons t t) (AND (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(AND (COND 2 (AND (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(AND (COND nil (AND (COND nil '(())) '(()) nil) nil ) '(()) nil)
(AND (COND t (AND (COND t '(())) '(()) t) t ) '(()) t)
(AND (COND (cons t t) (AND (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(AND (COND 2 (AND (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(AND (COND nil (AND (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(AND (COND t (AND (COND t '((()))) '((())) t) t ) '((())) t)
(AND (COND (cons t t) (AND (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(AND (COND 2 (AND (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(AND (COND nil (AND (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(AND (COND t (AND (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(AND (COND (cons t t) (AND (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 ,A) ,A 1) 1 ) ,A 1)
(AND (COND 2 (AND (COND 2 ,A) ,A 2) 2 ) ,A 2)
(AND (COND nil (AND (COND nil ,A) ,A nil) nil ) ,A nil)
(AND (COND t (AND (COND t ,A) ,A t) t ) ,A t)
(AND (COND (cons t t) (AND (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 ,1) ,1 1) 1 ) ,1 1)
(AND (COND 2 (AND (COND 2 ,1) ,1 2) 2 ) ,1 2)
(AND (COND nil (AND (COND nil ,1) ,1 nil) nil ) ,1 nil)
(AND (COND t (AND (COND t ,1) ,1 t) t ) ,1 t)
(AND (COND (cons t t) (AND (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 ,()) ,() 1) 1 ) ,() 1)
(AND (COND 2 (AND (COND 2 ,()) ,() 2) 2 ) ,() 2)
(AND (COND nil (AND (COND nil ,()) ,() nil) nil ) ,() nil)
(AND (COND t (AND (COND t ,()) ,() t) t ) ,() t)
(AND (COND (cons t t) (AND (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(AND (COND 2 (AND (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(AND (COND nil (AND (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(AND (COND t (AND (COND t ,(())) ,(()) t) t ) ,(()) t)
(AND (COND (cons t t) (AND (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'A) `'A 1) 1 ) `'A 1)
(AND (COND 2 (AND (COND 2 `'A) `'A 2) 2 ) `'A 2)
(AND (COND nil (AND (COND nil `'A) `'A nil) nil ) `'A nil)
(AND (COND t (AND (COND t `'A) `'A t) t ) `'A t)
(AND (COND (cons t t) (AND (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'B) `'B 1) 1 ) `'B 1)
(AND (COND 2 (AND (COND 2 `'B) `'B 2) 2 ) `'B 2)
(AND (COND nil (AND (COND nil `'B) `'B nil) nil ) `'B nil)
(AND (COND t (AND (COND t `'B) `'B t) t ) `'B t)
(AND (COND (cons t t) (AND (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'C) `'C 1) 1 ) `'C 1)
(AND (COND 2 (AND (COND 2 `'C) `'C 2) 2 ) `'C 2)
(AND (COND nil (AND (COND nil `'C) `'C nil) nil ) `'C nil)
(AND (COND t (AND (COND t `'C) `'C t) t ) `'C t)
(AND (COND (cons t t) (AND (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'1) `'1 1) 1 ) `'1 1)
(AND (COND 2 (AND (COND 2 `'1) `'1 2) 2 ) `'1 2)
(AND (COND nil (AND (COND nil `'1) `'1 nil) nil ) `'1 nil)
(AND (COND t (AND (COND t `'1) `'1 t) t ) `'1 t)
(AND (COND (cons t t) (AND (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'2) `'2 1) 1 ) `'2 1)
(AND (COND 2 (AND (COND 2 `'2) `'2 2) 2 ) `'2 2)
(AND (COND nil (AND (COND nil `'2) `'2 nil) nil ) `'2 nil)
(AND (COND t (AND (COND t `'2) `'2 t) t ) `'2 t)
(AND (COND (cons t t) (AND (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'3) `'3 1) 1 ) `'3 1)
(AND (COND 2 (AND (COND 2 `'3) `'3 2) 2 ) `'3 2)
(AND (COND nil (AND (COND nil `'3) `'3 nil) nil ) `'3 nil)
(AND (COND t (AND (COND t `'3) `'3 t) t ) `'3 t)
(AND (COND (cons t t) (AND (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'()) `'() 1) 1 ) `'() 1)
(AND (COND 2 (AND (COND 2 `'()) `'() 2) 2 ) `'() 2)
(AND (COND nil (AND (COND nil `'()) `'() nil) nil ) `'() nil)
(AND (COND t (AND (COND t `'()) `'() t) t ) `'() t)
(AND (COND (cons t t) (AND (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(AND (COND 2 (AND (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(AND (COND nil (AND (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(AND (COND t (AND (COND t `'(())) `'(()) t) t ) `'(()) t)
(AND (COND (cons t t) (AND (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(AND (COND 2 (AND (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(AND (COND nil (AND (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(AND (COND t (AND (COND t `'((()))) `'((())) t) t ) `'((())) t)
(AND (COND (cons t t) (AND (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(AND (COND 1 (AND (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(AND (COND 2 (AND (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(AND (COND nil (AND (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(AND (COND t (AND (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(AND (COND (cons t t) (AND (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(AND (COND (cons nil t) (AND (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(AND (COND (cons nil nil) (AND (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(AND (COND (cons 0 0) (AND (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(AND (COND (cons 1 1) (AND (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(AND (COND (list 1 2 3) (AND (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(AND (COND (list (cons 1 1 ) ) (AND (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 T) T 1) 1 ) T 1)
(APPEND (COND 2 (APPEND (COND 2 T) T 2) 2 ) T 2)
(APPEND (COND nil (APPEND (COND nil T) T nil) nil ) T nil)
(APPEND (COND t (APPEND (COND t T) T t) t ) T t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 NIL) NIL 1) 1 ) NIL 1)
(APPEND (COND 2 (APPEND (COND 2 NIL) NIL 2) 2 ) NIL 2)
(APPEND (COND nil (APPEND (COND nil NIL) NIL nil) nil ) NIL nil)
(APPEND (COND t (APPEND (COND t NIL) NIL t) t ) NIL t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 A) A 1) 1 ) A 1)
(APPEND (COND 2 (APPEND (COND 2 A) A 2) 2 ) A 2)
(APPEND (COND nil (APPEND (COND nil A) A nil) nil ) A nil)
(APPEND (COND t (APPEND (COND t A) A t) t ) A t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 B) B 1) 1 ) B 1)
(APPEND (COND 2 (APPEND (COND 2 B) B 2) 2 ) B 2)
(APPEND (COND nil (APPEND (COND nil B) B nil) nil ) B nil)
(APPEND (COND t (APPEND (COND t B) B t) t ) B t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 C) C 1) 1 ) C 1)
(APPEND (COND 2 (APPEND (COND 2 C) C 2) 2 ) C 2)
(APPEND (COND nil (APPEND (COND nil C) C nil) nil ) C nil)
(APPEND (COND t (APPEND (COND t C) C t) t ) C t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 1) 1 1) 1 ) 1 1)
(APPEND (COND 2 (APPEND (COND 2 1) 1 2) 2 ) 1 2)
(APPEND (COND nil (APPEND (COND nil 1) 1 nil) nil ) 1 nil)
(APPEND (COND t (APPEND (COND t 1) 1 t) t ) 1 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 2) 2 1) 1 ) 2 1)
(APPEND (COND 2 (APPEND (COND 2 2) 2 2) 2 ) 2 2)
(APPEND (COND nil (APPEND (COND nil 2) 2 nil) nil ) 2 nil)
(APPEND (COND t (APPEND (COND t 2) 2 t) t ) 2 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 3) 3 1) 1 ) 3 1)
(APPEND (COND 2 (APPEND (COND 2 3) 3 2) 2 ) 3 2)
(APPEND (COND nil (APPEND (COND nil 3) 3 nil) nil ) 3 nil)
(APPEND (COND t (APPEND (COND t 3) 3 t) t ) 3 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 ()) () 1) 1 ) () 1)
(APPEND (COND 2 (APPEND (COND 2 ()) () 2) 2 ) () 2)
(APPEND (COND nil (APPEND (COND nil ()) () nil) nil ) () nil)
(APPEND (COND t (APPEND (COND t ()) () t) t ) () t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 (())) (()) 1) 1 ) (()) 1)
(APPEND (COND 2 (APPEND (COND 2 (())) (()) 2) 2 ) (()) 2)
(APPEND (COND nil (APPEND (COND nil (())) (()) nil) nil ) (()) nil)
(APPEND (COND t (APPEND (COND t (())) (()) t) t ) (()) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(APPEND (COND 2 (APPEND (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(APPEND (COND nil (APPEND (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(APPEND (COND t (APPEND (COND t ((()))) ((())) t) t ) ((())) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(APPEND (COND 2 (APPEND (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(APPEND (COND nil (APPEND (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(APPEND (COND t (APPEND (COND t (((())))) (((()))) t) t ) (((()))) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 'A) 'A 1) 1 ) 'A 1)
(APPEND (COND 2 (APPEND (COND 2 'A) 'A 2) 2 ) 'A 2)
(APPEND (COND nil (APPEND (COND nil 'A) 'A nil) nil ) 'A nil)
(APPEND (COND t (APPEND (COND t 'A) 'A t) t ) 'A t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 'B) 'B 1) 1 ) 'B 1)
(APPEND (COND 2 (APPEND (COND 2 'B) 'B 2) 2 ) 'B 2)
(APPEND (COND nil (APPEND (COND nil 'B) 'B nil) nil ) 'B nil)
(APPEND (COND t (APPEND (COND t 'B) 'B t) t ) 'B t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 'C) 'C 1) 1 ) 'C 1)
(APPEND (COND 2 (APPEND (COND 2 'C) 'C 2) 2 ) 'C 2)
(APPEND (COND nil (APPEND (COND nil 'C) 'C nil) nil ) 'C nil)
(APPEND (COND t (APPEND (COND t 'C) 'C t) t ) 'C t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 '1) '1 1) 1 ) '1 1)
(APPEND (COND 2 (APPEND (COND 2 '1) '1 2) 2 ) '1 2)
(APPEND (COND nil (APPEND (COND nil '1) '1 nil) nil ) '1 nil)
(APPEND (COND t (APPEND (COND t '1) '1 t) t ) '1 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 '2) '2 1) 1 ) '2 1)
(APPEND (COND 2 (APPEND (COND 2 '2) '2 2) 2 ) '2 2)
(APPEND (COND nil (APPEND (COND nil '2) '2 nil) nil ) '2 nil)
(APPEND (COND t (APPEND (COND t '2) '2 t) t ) '2 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 '3) '3 1) 1 ) '3 1)
(APPEND (COND 2 (APPEND (COND 2 '3) '3 2) 2 ) '3 2)
(APPEND (COND nil (APPEND (COND nil '3) '3 nil) nil ) '3 nil)
(APPEND (COND t (APPEND (COND t '3) '3 t) t ) '3 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 '()) '() 1) 1 ) '() 1)
(APPEND (COND 2 (APPEND (COND 2 '()) '() 2) 2 ) '() 2)
(APPEND (COND nil (APPEND (COND nil '()) '() nil) nil ) '() nil)
(APPEND (COND t (APPEND (COND t '()) '() t) t ) '() t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(APPEND (COND 2 (APPEND (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(APPEND (COND nil (APPEND (COND nil '(())) '(()) nil) nil ) '(()) nil)
(APPEND (COND t (APPEND (COND t '(())) '(()) t) t ) '(()) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(APPEND (COND 2 (APPEND (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(APPEND (COND nil (APPEND (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(APPEND (COND t (APPEND (COND t '((()))) '((())) t) t ) '((())) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(APPEND (COND 2 (APPEND (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(APPEND (COND nil (APPEND (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(APPEND (COND t (APPEND (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 ,A) ,A 1) 1 ) ,A 1)
(APPEND (COND 2 (APPEND (COND 2 ,A) ,A 2) 2 ) ,A 2)
(APPEND (COND nil (APPEND (COND nil ,A) ,A nil) nil ) ,A nil)
(APPEND (COND t (APPEND (COND t ,A) ,A t) t ) ,A t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 ,1) ,1 1) 1 ) ,1 1)
(APPEND (COND 2 (APPEND (COND 2 ,1) ,1 2) 2 ) ,1 2)
(APPEND (COND nil (APPEND (COND nil ,1) ,1 nil) nil ) ,1 nil)
(APPEND (COND t (APPEND (COND t ,1) ,1 t) t ) ,1 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 ,()) ,() 1) 1 ) ,() 1)
(APPEND (COND 2 (APPEND (COND 2 ,()) ,() 2) 2 ) ,() 2)
(APPEND (COND nil (APPEND (COND nil ,()) ,() nil) nil ) ,() nil)
(APPEND (COND t (APPEND (COND t ,()) ,() t) t ) ,() t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(APPEND (COND 2 (APPEND (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(APPEND (COND nil (APPEND (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(APPEND (COND t (APPEND (COND t ,(())) ,(()) t) t ) ,(()) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'A) `'A 1) 1 ) `'A 1)
(APPEND (COND 2 (APPEND (COND 2 `'A) `'A 2) 2 ) `'A 2)
(APPEND (COND nil (APPEND (COND nil `'A) `'A nil) nil ) `'A nil)
(APPEND (COND t (APPEND (COND t `'A) `'A t) t ) `'A t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'B) `'B 1) 1 ) `'B 1)
(APPEND (COND 2 (APPEND (COND 2 `'B) `'B 2) 2 ) `'B 2)
(APPEND (COND nil (APPEND (COND nil `'B) `'B nil) nil ) `'B nil)
(APPEND (COND t (APPEND (COND t `'B) `'B t) t ) `'B t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'C) `'C 1) 1 ) `'C 1)
(APPEND (COND 2 (APPEND (COND 2 `'C) `'C 2) 2 ) `'C 2)
(APPEND (COND nil (APPEND (COND nil `'C) `'C nil) nil ) `'C nil)
(APPEND (COND t (APPEND (COND t `'C) `'C t) t ) `'C t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'1) `'1 1) 1 ) `'1 1)
(APPEND (COND 2 (APPEND (COND 2 `'1) `'1 2) 2 ) `'1 2)
(APPEND (COND nil (APPEND (COND nil `'1) `'1 nil) nil ) `'1 nil)
(APPEND (COND t (APPEND (COND t `'1) `'1 t) t ) `'1 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'2) `'2 1) 1 ) `'2 1)
(APPEND (COND 2 (APPEND (COND 2 `'2) `'2 2) 2 ) `'2 2)
(APPEND (COND nil (APPEND (COND nil `'2) `'2 nil) nil ) `'2 nil)
(APPEND (COND t (APPEND (COND t `'2) `'2 t) t ) `'2 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'3) `'3 1) 1 ) `'3 1)
(APPEND (COND 2 (APPEND (COND 2 `'3) `'3 2) 2 ) `'3 2)
(APPEND (COND nil (APPEND (COND nil `'3) `'3 nil) nil ) `'3 nil)
(APPEND (COND t (APPEND (COND t `'3) `'3 t) t ) `'3 t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'()) `'() 1) 1 ) `'() 1)
(APPEND (COND 2 (APPEND (COND 2 `'()) `'() 2) 2 ) `'() 2)
(APPEND (COND nil (APPEND (COND nil `'()) `'() nil) nil ) `'() nil)
(APPEND (COND t (APPEND (COND t `'()) `'() t) t ) `'() t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(APPEND (COND 2 (APPEND (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(APPEND (COND nil (APPEND (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(APPEND (COND t (APPEND (COND t `'(())) `'(()) t) t ) `'(()) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(APPEND (COND 2 (APPEND (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(APPEND (COND nil (APPEND (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(APPEND (COND t (APPEND (COND t `'((()))) `'((())) t) t ) `'((())) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(APPEND (COND 1 (APPEND (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(APPEND (COND 2 (APPEND (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(APPEND (COND nil (APPEND (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(APPEND (COND t (APPEND (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(APPEND (COND (cons t t) (APPEND (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(APPEND (COND (cons nil t) (APPEND (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(APPEND (COND (cons nil nil) (APPEND (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(APPEND (COND (cons 0 0) (APPEND (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(APPEND (COND (cons 1 1) (APPEND (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(APPEND (COND (list 1 2 3) (APPEND (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(APPEND (COND (list (cons 1 1 ) ) (APPEND (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 T) T 1) 1 ) T 1)
(ATOM (COND 2 (ATOM (COND 2 T) T 2) 2 ) T 2)
(ATOM (COND nil (ATOM (COND nil T) T nil) nil ) T nil)
(ATOM (COND t (ATOM (COND t T) T t) t ) T t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 NIL) NIL 1) 1 ) NIL 1)
(ATOM (COND 2 (ATOM (COND 2 NIL) NIL 2) 2 ) NIL 2)
(ATOM (COND nil (ATOM (COND nil NIL) NIL nil) nil ) NIL nil)
(ATOM (COND t (ATOM (COND t NIL) NIL t) t ) NIL t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 A) A 1) 1 ) A 1)
(ATOM (COND 2 (ATOM (COND 2 A) A 2) 2 ) A 2)
(ATOM (COND nil (ATOM (COND nil A) A nil) nil ) A nil)
(ATOM (COND t (ATOM (COND t A) A t) t ) A t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 B) B 1) 1 ) B 1)
(ATOM (COND 2 (ATOM (COND 2 B) B 2) 2 ) B 2)
(ATOM (COND nil (ATOM (COND nil B) B nil) nil ) B nil)
(ATOM (COND t (ATOM (COND t B) B t) t ) B t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 C) C 1) 1 ) C 1)
(ATOM (COND 2 (ATOM (COND 2 C) C 2) 2 ) C 2)
(ATOM (COND nil (ATOM (COND nil C) C nil) nil ) C nil)
(ATOM (COND t (ATOM (COND t C) C t) t ) C t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 1) 1 1) 1 ) 1 1)
(ATOM (COND 2 (ATOM (COND 2 1) 1 2) 2 ) 1 2)
(ATOM (COND nil (ATOM (COND nil 1) 1 nil) nil ) 1 nil)
(ATOM (COND t (ATOM (COND t 1) 1 t) t ) 1 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 2) 2 1) 1 ) 2 1)
(ATOM (COND 2 (ATOM (COND 2 2) 2 2) 2 ) 2 2)
(ATOM (COND nil (ATOM (COND nil 2) 2 nil) nil ) 2 nil)
(ATOM (COND t (ATOM (COND t 2) 2 t) t ) 2 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 3) 3 1) 1 ) 3 1)
(ATOM (COND 2 (ATOM (COND 2 3) 3 2) 2 ) 3 2)
(ATOM (COND nil (ATOM (COND nil 3) 3 nil) nil ) 3 nil)
(ATOM (COND t (ATOM (COND t 3) 3 t) t ) 3 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 ()) () 1) 1 ) () 1)
(ATOM (COND 2 (ATOM (COND 2 ()) () 2) 2 ) () 2)
(ATOM (COND nil (ATOM (COND nil ()) () nil) nil ) () nil)
(ATOM (COND t (ATOM (COND t ()) () t) t ) () t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 (())) (()) 1) 1 ) (()) 1)
(ATOM (COND 2 (ATOM (COND 2 (())) (()) 2) 2 ) (()) 2)
(ATOM (COND nil (ATOM (COND nil (())) (()) nil) nil ) (()) nil)
(ATOM (COND t (ATOM (COND t (())) (()) t) t ) (()) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(ATOM (COND 2 (ATOM (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(ATOM (COND nil (ATOM (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(ATOM (COND t (ATOM (COND t ((()))) ((())) t) t ) ((())) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(ATOM (COND 2 (ATOM (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(ATOM (COND nil (ATOM (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(ATOM (COND t (ATOM (COND t (((())))) (((()))) t) t ) (((()))) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 'A) 'A 1) 1 ) 'A 1)
(ATOM (COND 2 (ATOM (COND 2 'A) 'A 2) 2 ) 'A 2)
(ATOM (COND nil (ATOM (COND nil 'A) 'A nil) nil ) 'A nil)
(ATOM (COND t (ATOM (COND t 'A) 'A t) t ) 'A t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 'B) 'B 1) 1 ) 'B 1)
(ATOM (COND 2 (ATOM (COND 2 'B) 'B 2) 2 ) 'B 2)
(ATOM (COND nil (ATOM (COND nil 'B) 'B nil) nil ) 'B nil)
(ATOM (COND t (ATOM (COND t 'B) 'B t) t ) 'B t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 'C) 'C 1) 1 ) 'C 1)
(ATOM (COND 2 (ATOM (COND 2 'C) 'C 2) 2 ) 'C 2)
(ATOM (COND nil (ATOM (COND nil 'C) 'C nil) nil ) 'C nil)
(ATOM (COND t (ATOM (COND t 'C) 'C t) t ) 'C t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 '1) '1 1) 1 ) '1 1)
(ATOM (COND 2 (ATOM (COND 2 '1) '1 2) 2 ) '1 2)
(ATOM (COND nil (ATOM (COND nil '1) '1 nil) nil ) '1 nil)
(ATOM (COND t (ATOM (COND t '1) '1 t) t ) '1 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 '2) '2 1) 1 ) '2 1)
(ATOM (COND 2 (ATOM (COND 2 '2) '2 2) 2 ) '2 2)
(ATOM (COND nil (ATOM (COND nil '2) '2 nil) nil ) '2 nil)
(ATOM (COND t (ATOM (COND t '2) '2 t) t ) '2 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 '3) '3 1) 1 ) '3 1)
(ATOM (COND 2 (ATOM (COND 2 '3) '3 2) 2 ) '3 2)
(ATOM (COND nil (ATOM (COND nil '3) '3 nil) nil ) '3 nil)
(ATOM (COND t (ATOM (COND t '3) '3 t) t ) '3 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 '()) '() 1) 1 ) '() 1)
(ATOM (COND 2 (ATOM (COND 2 '()) '() 2) 2 ) '() 2)
(ATOM (COND nil (ATOM (COND nil '()) '() nil) nil ) '() nil)
(ATOM (COND t (ATOM (COND t '()) '() t) t ) '() t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(ATOM (COND 2 (ATOM (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(ATOM (COND nil (ATOM (COND nil '(())) '(()) nil) nil ) '(()) nil)
(ATOM (COND t (ATOM (COND t '(())) '(()) t) t ) '(()) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(ATOM (COND 2 (ATOM (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(ATOM (COND nil (ATOM (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(ATOM (COND t (ATOM (COND t '((()))) '((())) t) t ) '((())) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(ATOM (COND 2 (ATOM (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(ATOM (COND nil (ATOM (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(ATOM (COND t (ATOM (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 ,A) ,A 1) 1 ) ,A 1)
(ATOM (COND 2 (ATOM (COND 2 ,A) ,A 2) 2 ) ,A 2)
(ATOM (COND nil (ATOM (COND nil ,A) ,A nil) nil ) ,A nil)
(ATOM (COND t (ATOM (COND t ,A) ,A t) t ) ,A t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 ,1) ,1 1) 1 ) ,1 1)
(ATOM (COND 2 (ATOM (COND 2 ,1) ,1 2) 2 ) ,1 2)
(ATOM (COND nil (ATOM (COND nil ,1) ,1 nil) nil ) ,1 nil)
(ATOM (COND t (ATOM (COND t ,1) ,1 t) t ) ,1 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 ,()) ,() 1) 1 ) ,() 1)
(ATOM (COND 2 (ATOM (COND 2 ,()) ,() 2) 2 ) ,() 2)
(ATOM (COND nil (ATOM (COND nil ,()) ,() nil) nil ) ,() nil)
(ATOM (COND t (ATOM (COND t ,()) ,() t) t ) ,() t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(ATOM (COND 2 (ATOM (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(ATOM (COND nil (ATOM (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(ATOM (COND t (ATOM (COND t ,(())) ,(()) t) t ) ,(()) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'A) `'A 1) 1 ) `'A 1)
(ATOM (COND 2 (ATOM (COND 2 `'A) `'A 2) 2 ) `'A 2)
(ATOM (COND nil (ATOM (COND nil `'A) `'A nil) nil ) `'A nil)
(ATOM (COND t (ATOM (COND t `'A) `'A t) t ) `'A t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'B) `'B 1) 1 ) `'B 1)
(ATOM (COND 2 (ATOM (COND 2 `'B) `'B 2) 2 ) `'B 2)
(ATOM (COND nil (ATOM (COND nil `'B) `'B nil) nil ) `'B nil)
(ATOM (COND t (ATOM (COND t `'B) `'B t) t ) `'B t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'C) `'C 1) 1 ) `'C 1)
(ATOM (COND 2 (ATOM (COND 2 `'C) `'C 2) 2 ) `'C 2)
(ATOM (COND nil (ATOM (COND nil `'C) `'C nil) nil ) `'C nil)
(ATOM (COND t (ATOM (COND t `'C) `'C t) t ) `'C t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'1) `'1 1) 1 ) `'1 1)
(ATOM (COND 2 (ATOM (COND 2 `'1) `'1 2) 2 ) `'1 2)
(ATOM (COND nil (ATOM (COND nil `'1) `'1 nil) nil ) `'1 nil)
(ATOM (COND t (ATOM (COND t `'1) `'1 t) t ) `'1 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'2) `'2 1) 1 ) `'2 1)
(ATOM (COND 2 (ATOM (COND 2 `'2) `'2 2) 2 ) `'2 2)
(ATOM (COND nil (ATOM (COND nil `'2) `'2 nil) nil ) `'2 nil)
(ATOM (COND t (ATOM (COND t `'2) `'2 t) t ) `'2 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'3) `'3 1) 1 ) `'3 1)
(ATOM (COND 2 (ATOM (COND 2 `'3) `'3 2) 2 ) `'3 2)
(ATOM (COND nil (ATOM (COND nil `'3) `'3 nil) nil ) `'3 nil)
(ATOM (COND t (ATOM (COND t `'3) `'3 t) t ) `'3 t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'()) `'() 1) 1 ) `'() 1)
(ATOM (COND 2 (ATOM (COND 2 `'()) `'() 2) 2 ) `'() 2)
(ATOM (COND nil (ATOM (COND nil `'()) `'() nil) nil ) `'() nil)
(ATOM (COND t (ATOM (COND t `'()) `'() t) t ) `'() t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(ATOM (COND 2 (ATOM (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(ATOM (COND nil (ATOM (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(ATOM (COND t (ATOM (COND t `'(())) `'(()) t) t ) `'(()) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(ATOM (COND 2 (ATOM (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(ATOM (COND nil (ATOM (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(ATOM (COND t (ATOM (COND t `'((()))) `'((())) t) t ) `'((())) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(ATOM (COND 1 (ATOM (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(ATOM (COND 2 (ATOM (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(ATOM (COND nil (ATOM (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(ATOM (COND t (ATOM (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(ATOM (COND (cons t t) (ATOM (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(ATOM (COND (cons nil t) (ATOM (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(ATOM (COND (cons nil nil) (ATOM (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(ATOM (COND (cons 0 0) (ATOM (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(ATOM (COND (cons 1 1) (ATOM (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(ATOM (COND (list 1 2 3) (ATOM (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(ATOM (COND (list (cons 1 1 ) ) (ATOM (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 T) T 1) 1 ) T 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 T) T 2) 2 ) T 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil T) T nil) nil ) T nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t T) T t) t ) T t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 NIL) NIL 1) 1 ) NIL 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 NIL) NIL 2) 2 ) NIL 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil NIL) NIL nil) nil ) NIL nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t NIL) NIL t) t ) NIL t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 A) A 1) 1 ) A 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 A) A 2) 2 ) A 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil A) A nil) nil ) A nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t A) A t) t ) A t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 B) B 1) 1 ) B 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 B) B 2) 2 ) B 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil B) B nil) nil ) B nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t B) B t) t ) B t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 C) C 1) 1 ) C 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 C) C 2) 2 ) C 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil C) C nil) nil ) C nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t C) C t) t ) C t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 1) 1 1) 1 ) 1 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 1) 1 2) 2 ) 1 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil 1) 1 nil) nil ) 1 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t 1) 1 t) t ) 1 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 2) 2 1) 1 ) 2 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 2) 2 2) 2 ) 2 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil 2) 2 nil) nil ) 2 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t 2) 2 t) t ) 2 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 3) 3 1) 1 ) 3 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 3) 3 2) 2 ) 3 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil 3) 3 nil) nil ) 3 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t 3) 3 t) t ) 3 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 ()) () 1) 1 ) () 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 ()) () 2) 2 ) () 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil ()) () nil) nil ) () nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t ()) () t) t ) () t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 (())) (()) 1) 1 ) (()) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 (())) (()) 2) 2 ) (()) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil (())) (()) nil) nil ) (()) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t (())) (()) t) t ) (()) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t ((()))) ((())) t) t ) ((())) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t (((())))) (((()))) t) t ) (((()))) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 'A) 'A 1) 1 ) 'A 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 'A) 'A 2) 2 ) 'A 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil 'A) 'A nil) nil ) 'A nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t 'A) 'A t) t ) 'A t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 'B) 'B 1) 1 ) 'B 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 'B) 'B 2) 2 ) 'B 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil 'B) 'B nil) nil ) 'B nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t 'B) 'B t) t ) 'B t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 'C) 'C 1) 1 ) 'C 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 'C) 'C 2) 2 ) 'C 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil 'C) 'C nil) nil ) 'C nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t 'C) 'C t) t ) 'C t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 '1) '1 1) 1 ) '1 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 '1) '1 2) 2 ) '1 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil '1) '1 nil) nil ) '1 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t '1) '1 t) t ) '1 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 '2) '2 1) 1 ) '2 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 '2) '2 2) 2 ) '2 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil '2) '2 nil) nil ) '2 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t '2) '2 t) t ) '2 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 '3) '3 1) 1 ) '3 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 '3) '3 2) 2 ) '3 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil '3) '3 nil) nil ) '3 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t '3) '3 t) t ) '3 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 '()) '() 1) 1 ) '() 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 '()) '() 2) 2 ) '() 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil '()) '() nil) nil ) '() nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t '()) '() t) t ) '() t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil '(())) '(()) nil) nil ) '(()) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t '(())) '(()) t) t ) '(()) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t '((()))) '((())) t) t ) '((())) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 ,A) ,A 1) 1 ) ,A 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 ,A) ,A 2) 2 ) ,A 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil ,A) ,A nil) nil ) ,A nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t ,A) ,A t) t ) ,A t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 ,1) ,1 1) 1 ) ,1 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 ,1) ,1 2) 2 ) ,1 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil ,1) ,1 nil) nil ) ,1 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t ,1) ,1 t) t ) ,1 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 ,()) ,() 1) 1 ) ,() 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 ,()) ,() 2) 2 ) ,() 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil ,()) ,() nil) nil ) ,() nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t ,()) ,() t) t ) ,() t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t ,(())) ,(()) t) t ) ,(()) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'A) `'A 1) 1 ) `'A 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'A) `'A 2) 2 ) `'A 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'A) `'A nil) nil ) `'A nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'A) `'A t) t ) `'A t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'B) `'B 1) 1 ) `'B 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'B) `'B 2) 2 ) `'B 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'B) `'B nil) nil ) `'B nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'B) `'B t) t ) `'B t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'C) `'C 1) 1 ) `'C 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'C) `'C 2) 2 ) `'C 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'C) `'C nil) nil ) `'C nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'C) `'C t) t ) `'C t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'1) `'1 1) 1 ) `'1 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'1) `'1 2) 2 ) `'1 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'1) `'1 nil) nil ) `'1 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'1) `'1 t) t ) `'1 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'2) `'2 1) 1 ) `'2 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'2) `'2 2) 2 ) `'2 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'2) `'2 nil) nil ) `'2 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'2) `'2 t) t ) `'2 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'3) `'3 1) 1 ) `'3 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'3) `'3 2) 2 ) `'3 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'3) `'3 nil) nil ) `'3 nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'3) `'3 t) t ) `'3 t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'()) `'() 1) 1 ) `'() 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'()) `'() 2) 2 ) `'() 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'()) `'() nil) nil ) `'() nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'()) `'() t) t ) `'() t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'(())) `'(()) t) t ) `'(()) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'((()))) `'((())) t) t ) `'((())) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(BACKQUOTE (COND 1 (BACKQUOTE (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(BACKQUOTE (COND 2 (BACKQUOTE (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(BACKQUOTE (COND nil (BACKQUOTE (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(BACKQUOTE (COND t (BACKQUOTE (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(BACKQUOTE (COND (cons t t) (BACKQUOTE (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(BACKQUOTE (COND (cons nil t) (BACKQUOTE (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(BACKQUOTE (COND (cons nil nil) (BACKQUOTE (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(BACKQUOTE (COND (cons 0 0) (BACKQUOTE (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(BACKQUOTE (COND (cons 1 1) (BACKQUOTE (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(BACKQUOTE (COND (list 1 2 3) (BACKQUOTE (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(BACKQUOTE (COND (list (cons 1 1 ) ) (BACKQUOTE (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 T) T 1) 1 ) T 1)
(CAR (COND 2 (CAR (COND 2 T) T 2) 2 ) T 2)
(CAR (COND nil (CAR (COND nil T) T nil) nil ) T nil)
(CAR (COND t (CAR (COND t T) T t) t ) T t)
(CAR (COND (cons t t) (CAR (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 NIL) NIL 1) 1 ) NIL 1)
(CAR (COND 2 (CAR (COND 2 NIL) NIL 2) 2 ) NIL 2)
(CAR (COND nil (CAR (COND nil NIL) NIL nil) nil ) NIL nil)
(CAR (COND t (CAR (COND t NIL) NIL t) t ) NIL t)
(CAR (COND (cons t t) (CAR (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 A) A 1) 1 ) A 1)
(CAR (COND 2 (CAR (COND 2 A) A 2) 2 ) A 2)
(CAR (COND nil (CAR (COND nil A) A nil) nil ) A nil)
(CAR (COND t (CAR (COND t A) A t) t ) A t)
(CAR (COND (cons t t) (CAR (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 B) B 1) 1 ) B 1)
(CAR (COND 2 (CAR (COND 2 B) B 2) 2 ) B 2)
(CAR (COND nil (CAR (COND nil B) B nil) nil ) B nil)
(CAR (COND t (CAR (COND t B) B t) t ) B t)
(CAR (COND (cons t t) (CAR (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 C) C 1) 1 ) C 1)
(CAR (COND 2 (CAR (COND 2 C) C 2) 2 ) C 2)
(CAR (COND nil (CAR (COND nil C) C nil) nil ) C nil)
(CAR (COND t (CAR (COND t C) C t) t ) C t)
(CAR (COND (cons t t) (CAR (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 1) 1 1) 1 ) 1 1)
(CAR (COND 2 (CAR (COND 2 1) 1 2) 2 ) 1 2)
(CAR (COND nil (CAR (COND nil 1) 1 nil) nil ) 1 nil)
(CAR (COND t (CAR (COND t 1) 1 t) t ) 1 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 2) 2 1) 1 ) 2 1)
(CAR (COND 2 (CAR (COND 2 2) 2 2) 2 ) 2 2)
(CAR (COND nil (CAR (COND nil 2) 2 nil) nil ) 2 nil)
(CAR (COND t (CAR (COND t 2) 2 t) t ) 2 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 3) 3 1) 1 ) 3 1)
(CAR (COND 2 (CAR (COND 2 3) 3 2) 2 ) 3 2)
(CAR (COND nil (CAR (COND nil 3) 3 nil) nil ) 3 nil)
(CAR (COND t (CAR (COND t 3) 3 t) t ) 3 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 ()) () 1) 1 ) () 1)
(CAR (COND 2 (CAR (COND 2 ()) () 2) 2 ) () 2)
(CAR (COND nil (CAR (COND nil ()) () nil) nil ) () nil)
(CAR (COND t (CAR (COND t ()) () t) t ) () t)
(CAR (COND (cons t t) (CAR (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 (())) (()) 1) 1 ) (()) 1)
(CAR (COND 2 (CAR (COND 2 (())) (()) 2) 2 ) (()) 2)
(CAR (COND nil (CAR (COND nil (())) (()) nil) nil ) (()) nil)
(CAR (COND t (CAR (COND t (())) (()) t) t ) (()) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CAR (COND 2 (CAR (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CAR (COND nil (CAR (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(CAR (COND t (CAR (COND t ((()))) ((())) t) t ) ((())) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CAR (COND 2 (CAR (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CAR (COND nil (CAR (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CAR (COND t (CAR (COND t (((())))) (((()))) t) t ) (((()))) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 'A) 'A 1) 1 ) 'A 1)
(CAR (COND 2 (CAR (COND 2 'A) 'A 2) 2 ) 'A 2)
(CAR (COND nil (CAR (COND nil 'A) 'A nil) nil ) 'A nil)
(CAR (COND t (CAR (COND t 'A) 'A t) t ) 'A t)
(CAR (COND (cons t t) (CAR (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 'B) 'B 1) 1 ) 'B 1)
(CAR (COND 2 (CAR (COND 2 'B) 'B 2) 2 ) 'B 2)
(CAR (COND nil (CAR (COND nil 'B) 'B nil) nil ) 'B nil)
(CAR (COND t (CAR (COND t 'B) 'B t) t ) 'B t)
(CAR (COND (cons t t) (CAR (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 'C) 'C 1) 1 ) 'C 1)
(CAR (COND 2 (CAR (COND 2 'C) 'C 2) 2 ) 'C 2)
(CAR (COND nil (CAR (COND nil 'C) 'C nil) nil ) 'C nil)
(CAR (COND t (CAR (COND t 'C) 'C t) t ) 'C t)
(CAR (COND (cons t t) (CAR (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 '1) '1 1) 1 ) '1 1)
(CAR (COND 2 (CAR (COND 2 '1) '1 2) 2 ) '1 2)
(CAR (COND nil (CAR (COND nil '1) '1 nil) nil ) '1 nil)
(CAR (COND t (CAR (COND t '1) '1 t) t ) '1 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 '2) '2 1) 1 ) '2 1)
(CAR (COND 2 (CAR (COND 2 '2) '2 2) 2 ) '2 2)
(CAR (COND nil (CAR (COND nil '2) '2 nil) nil ) '2 nil)
(CAR (COND t (CAR (COND t '2) '2 t) t ) '2 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 '3) '3 1) 1 ) '3 1)
(CAR (COND 2 (CAR (COND 2 '3) '3 2) 2 ) '3 2)
(CAR (COND nil (CAR (COND nil '3) '3 nil) nil ) '3 nil)
(CAR (COND t (CAR (COND t '3) '3 t) t ) '3 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 '()) '() 1) 1 ) '() 1)
(CAR (COND 2 (CAR (COND 2 '()) '() 2) 2 ) '() 2)
(CAR (COND nil (CAR (COND nil '()) '() nil) nil ) '() nil)
(CAR (COND t (CAR (COND t '()) '() t) t ) '() t)
(CAR (COND (cons t t) (CAR (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(CAR (COND 2 (CAR (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(CAR (COND nil (CAR (COND nil '(())) '(()) nil) nil ) '(()) nil)
(CAR (COND t (CAR (COND t '(())) '(()) t) t ) '(()) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CAR (COND 2 (CAR (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CAR (COND nil (CAR (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(CAR (COND t (CAR (COND t '((()))) '((())) t) t ) '((())) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CAR (COND 2 (CAR (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CAR (COND nil (CAR (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CAR (COND t (CAR (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 ,A) ,A 1) 1 ) ,A 1)
(CAR (COND 2 (CAR (COND 2 ,A) ,A 2) 2 ) ,A 2)
(CAR (COND nil (CAR (COND nil ,A) ,A nil) nil ) ,A nil)
(CAR (COND t (CAR (COND t ,A) ,A t) t ) ,A t)
(CAR (COND (cons t t) (CAR (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 ,1) ,1 1) 1 ) ,1 1)
(CAR (COND 2 (CAR (COND 2 ,1) ,1 2) 2 ) ,1 2)
(CAR (COND nil (CAR (COND nil ,1) ,1 nil) nil ) ,1 nil)
(CAR (COND t (CAR (COND t ,1) ,1 t) t ) ,1 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 ,()) ,() 1) 1 ) ,() 1)
(CAR (COND 2 (CAR (COND 2 ,()) ,() 2) 2 ) ,() 2)
(CAR (COND nil (CAR (COND nil ,()) ,() nil) nil ) ,() nil)
(CAR (COND t (CAR (COND t ,()) ,() t) t ) ,() t)
(CAR (COND (cons t t) (CAR (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CAR (COND 2 (CAR (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CAR (COND nil (CAR (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CAR (COND t (CAR (COND t ,(())) ,(()) t) t ) ,(()) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'A) `'A 1) 1 ) `'A 1)
(CAR (COND 2 (CAR (COND 2 `'A) `'A 2) 2 ) `'A 2)
(CAR (COND nil (CAR (COND nil `'A) `'A nil) nil ) `'A nil)
(CAR (COND t (CAR (COND t `'A) `'A t) t ) `'A t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'B) `'B 1) 1 ) `'B 1)
(CAR (COND 2 (CAR (COND 2 `'B) `'B 2) 2 ) `'B 2)
(CAR (COND nil (CAR (COND nil `'B) `'B nil) nil ) `'B nil)
(CAR (COND t (CAR (COND t `'B) `'B t) t ) `'B t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'C) `'C 1) 1 ) `'C 1)
(CAR (COND 2 (CAR (COND 2 `'C) `'C 2) 2 ) `'C 2)
(CAR (COND nil (CAR (COND nil `'C) `'C nil) nil ) `'C nil)
(CAR (COND t (CAR (COND t `'C) `'C t) t ) `'C t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'1) `'1 1) 1 ) `'1 1)
(CAR (COND 2 (CAR (COND 2 `'1) `'1 2) 2 ) `'1 2)
(CAR (COND nil (CAR (COND nil `'1) `'1 nil) nil ) `'1 nil)
(CAR (COND t (CAR (COND t `'1) `'1 t) t ) `'1 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'2) `'2 1) 1 ) `'2 1)
(CAR (COND 2 (CAR (COND 2 `'2) `'2 2) 2 ) `'2 2)
(CAR (COND nil (CAR (COND nil `'2) `'2 nil) nil ) `'2 nil)
(CAR (COND t (CAR (COND t `'2) `'2 t) t ) `'2 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'3) `'3 1) 1 ) `'3 1)
(CAR (COND 2 (CAR (COND 2 `'3) `'3 2) 2 ) `'3 2)
(CAR (COND nil (CAR (COND nil `'3) `'3 nil) nil ) `'3 nil)
(CAR (COND t (CAR (COND t `'3) `'3 t) t ) `'3 t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'()) `'() 1) 1 ) `'() 1)
(CAR (COND 2 (CAR (COND 2 `'()) `'() 2) 2 ) `'() 2)
(CAR (COND nil (CAR (COND nil `'()) `'() nil) nil ) `'() nil)
(CAR (COND t (CAR (COND t `'()) `'() t) t ) `'() t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CAR (COND 2 (CAR (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CAR (COND nil (CAR (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CAR (COND t (CAR (COND t `'(())) `'(()) t) t ) `'(()) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CAR (COND 2 (CAR (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CAR (COND nil (CAR (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CAR (COND t (CAR (COND t `'((()))) `'((())) t) t ) `'((())) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CAR (COND 1 (CAR (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CAR (COND 2 (CAR (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CAR (COND nil (CAR (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CAR (COND t (CAR (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CAR (COND (cons t t) (CAR (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CAR (COND (cons nil t) (CAR (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CAR (COND (cons nil nil) (CAR (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CAR (COND (cons 0 0) (CAR (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CAR (COND (cons 1 1) (CAR (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CAR (COND (list 1 2 3) (CAR (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CAR (COND (list (cons 1 1 ) ) (CAR (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 T) T 1) 1 ) T 1)
(CDR (COND 2 (CDR (COND 2 T) T 2) 2 ) T 2)
(CDR (COND nil (CDR (COND nil T) T nil) nil ) T nil)
(CDR (COND t (CDR (COND t T) T t) t ) T t)
(CDR (COND (cons t t) (CDR (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 NIL) NIL 1) 1 ) NIL 1)
(CDR (COND 2 (CDR (COND 2 NIL) NIL 2) 2 ) NIL 2)
(CDR (COND nil (CDR (COND nil NIL) NIL nil) nil ) NIL nil)
(CDR (COND t (CDR (COND t NIL) NIL t) t ) NIL t)
(CDR (COND (cons t t) (CDR (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 A) A 1) 1 ) A 1)
(CDR (COND 2 (CDR (COND 2 A) A 2) 2 ) A 2)
(CDR (COND nil (CDR (COND nil A) A nil) nil ) A nil)
(CDR (COND t (CDR (COND t A) A t) t ) A t)
(CDR (COND (cons t t) (CDR (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 B) B 1) 1 ) B 1)
(CDR (COND 2 (CDR (COND 2 B) B 2) 2 ) B 2)
(CDR (COND nil (CDR (COND nil B) B nil) nil ) B nil)
(CDR (COND t (CDR (COND t B) B t) t ) B t)
(CDR (COND (cons t t) (CDR (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 C) C 1) 1 ) C 1)
(CDR (COND 2 (CDR (COND 2 C) C 2) 2 ) C 2)
(CDR (COND nil (CDR (COND nil C) C nil) nil ) C nil)
(CDR (COND t (CDR (COND t C) C t) t ) C t)
(CDR (COND (cons t t) (CDR (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 1) 1 1) 1 ) 1 1)
(CDR (COND 2 (CDR (COND 2 1) 1 2) 2 ) 1 2)
(CDR (COND nil (CDR (COND nil 1) 1 nil) nil ) 1 nil)
(CDR (COND t (CDR (COND t 1) 1 t) t ) 1 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 2) 2 1) 1 ) 2 1)
(CDR (COND 2 (CDR (COND 2 2) 2 2) 2 ) 2 2)
(CDR (COND nil (CDR (COND nil 2) 2 nil) nil ) 2 nil)
(CDR (COND t (CDR (COND t 2) 2 t) t ) 2 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 3) 3 1) 1 ) 3 1)
(CDR (COND 2 (CDR (COND 2 3) 3 2) 2 ) 3 2)
(CDR (COND nil (CDR (COND nil 3) 3 nil) nil ) 3 nil)
(CDR (COND t (CDR (COND t 3) 3 t) t ) 3 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 ()) () 1) 1 ) () 1)
(CDR (COND 2 (CDR (COND 2 ()) () 2) 2 ) () 2)
(CDR (COND nil (CDR (COND nil ()) () nil) nil ) () nil)
(CDR (COND t (CDR (COND t ()) () t) t ) () t)
(CDR (COND (cons t t) (CDR (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 (())) (()) 1) 1 ) (()) 1)
(CDR (COND 2 (CDR (COND 2 (())) (()) 2) 2 ) (()) 2)
(CDR (COND nil (CDR (COND nil (())) (()) nil) nil ) (()) nil)
(CDR (COND t (CDR (COND t (())) (()) t) t ) (()) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CDR (COND 2 (CDR (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CDR (COND nil (CDR (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(CDR (COND t (CDR (COND t ((()))) ((())) t) t ) ((())) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CDR (COND 2 (CDR (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CDR (COND nil (CDR (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CDR (COND t (CDR (COND t (((())))) (((()))) t) t ) (((()))) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 'A) 'A 1) 1 ) 'A 1)
(CDR (COND 2 (CDR (COND 2 'A) 'A 2) 2 ) 'A 2)
(CDR (COND nil (CDR (COND nil 'A) 'A nil) nil ) 'A nil)
(CDR (COND t (CDR (COND t 'A) 'A t) t ) 'A t)
(CDR (COND (cons t t) (CDR (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 'B) 'B 1) 1 ) 'B 1)
(CDR (COND 2 (CDR (COND 2 'B) 'B 2) 2 ) 'B 2)
(CDR (COND nil (CDR (COND nil 'B) 'B nil) nil ) 'B nil)
(CDR (COND t (CDR (COND t 'B) 'B t) t ) 'B t)
(CDR (COND (cons t t) (CDR (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 'C) 'C 1) 1 ) 'C 1)
(CDR (COND 2 (CDR (COND 2 'C) 'C 2) 2 ) 'C 2)
(CDR (COND nil (CDR (COND nil 'C) 'C nil) nil ) 'C nil)
(CDR (COND t (CDR (COND t 'C) 'C t) t ) 'C t)
(CDR (COND (cons t t) (CDR (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 '1) '1 1) 1 ) '1 1)
(CDR (COND 2 (CDR (COND 2 '1) '1 2) 2 ) '1 2)
(CDR (COND nil (CDR (COND nil '1) '1 nil) nil ) '1 nil)
(CDR (COND t (CDR (COND t '1) '1 t) t ) '1 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 '2) '2 1) 1 ) '2 1)
(CDR (COND 2 (CDR (COND 2 '2) '2 2) 2 ) '2 2)
(CDR (COND nil (CDR (COND nil '2) '2 nil) nil ) '2 nil)
(CDR (COND t (CDR (COND t '2) '2 t) t ) '2 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 '3) '3 1) 1 ) '3 1)
(CDR (COND 2 (CDR (COND 2 '3) '3 2) 2 ) '3 2)
(CDR (COND nil (CDR (COND nil '3) '3 nil) nil ) '3 nil)
(CDR (COND t (CDR (COND t '3) '3 t) t ) '3 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 '()) '() 1) 1 ) '() 1)
(CDR (COND 2 (CDR (COND 2 '()) '() 2) 2 ) '() 2)
(CDR (COND nil (CDR (COND nil '()) '() nil) nil ) '() nil)
(CDR (COND t (CDR (COND t '()) '() t) t ) '() t)
(CDR (COND (cons t t) (CDR (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(CDR (COND 2 (CDR (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(CDR (COND nil (CDR (COND nil '(())) '(()) nil) nil ) '(()) nil)
(CDR (COND t (CDR (COND t '(())) '(()) t) t ) '(()) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CDR (COND 2 (CDR (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CDR (COND nil (CDR (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(CDR (COND t (CDR (COND t '((()))) '((())) t) t ) '((())) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CDR (COND 2 (CDR (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CDR (COND nil (CDR (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CDR (COND t (CDR (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 ,A) ,A 1) 1 ) ,A 1)
(CDR (COND 2 (CDR (COND 2 ,A) ,A 2) 2 ) ,A 2)
(CDR (COND nil (CDR (COND nil ,A) ,A nil) nil ) ,A nil)
(CDR (COND t (CDR (COND t ,A) ,A t) t ) ,A t)
(CDR (COND (cons t t) (CDR (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 ,1) ,1 1) 1 ) ,1 1)
(CDR (COND 2 (CDR (COND 2 ,1) ,1 2) 2 ) ,1 2)
(CDR (COND nil (CDR (COND nil ,1) ,1 nil) nil ) ,1 nil)
(CDR (COND t (CDR (COND t ,1) ,1 t) t ) ,1 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 ,()) ,() 1) 1 ) ,() 1)
(CDR (COND 2 (CDR (COND 2 ,()) ,() 2) 2 ) ,() 2)
(CDR (COND nil (CDR (COND nil ,()) ,() nil) nil ) ,() nil)
(CDR (COND t (CDR (COND t ,()) ,() t) t ) ,() t)
(CDR (COND (cons t t) (CDR (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CDR (COND 2 (CDR (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CDR (COND nil (CDR (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CDR (COND t (CDR (COND t ,(())) ,(()) t) t ) ,(()) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'A) `'A 1) 1 ) `'A 1)
(CDR (COND 2 (CDR (COND 2 `'A) `'A 2) 2 ) `'A 2)
(CDR (COND nil (CDR (COND nil `'A) `'A nil) nil ) `'A nil)
(CDR (COND t (CDR (COND t `'A) `'A t) t ) `'A t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'B) `'B 1) 1 ) `'B 1)
(CDR (COND 2 (CDR (COND 2 `'B) `'B 2) 2 ) `'B 2)
(CDR (COND nil (CDR (COND nil `'B) `'B nil) nil ) `'B nil)
(CDR (COND t (CDR (COND t `'B) `'B t) t ) `'B t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'C) `'C 1) 1 ) `'C 1)
(CDR (COND 2 (CDR (COND 2 `'C) `'C 2) 2 ) `'C 2)
(CDR (COND nil (CDR (COND nil `'C) `'C nil) nil ) `'C nil)
(CDR (COND t (CDR (COND t `'C) `'C t) t ) `'C t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'1) `'1 1) 1 ) `'1 1)
(CDR (COND 2 (CDR (COND 2 `'1) `'1 2) 2 ) `'1 2)
(CDR (COND nil (CDR (COND nil `'1) `'1 nil) nil ) `'1 nil)
(CDR (COND t (CDR (COND t `'1) `'1 t) t ) `'1 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'2) `'2 1) 1 ) `'2 1)
(CDR (COND 2 (CDR (COND 2 `'2) `'2 2) 2 ) `'2 2)
(CDR (COND nil (CDR (COND nil `'2) `'2 nil) nil ) `'2 nil)
(CDR (COND t (CDR (COND t `'2) `'2 t) t ) `'2 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'3) `'3 1) 1 ) `'3 1)
(CDR (COND 2 (CDR (COND 2 `'3) `'3 2) 2 ) `'3 2)
(CDR (COND nil (CDR (COND nil `'3) `'3 nil) nil ) `'3 nil)
(CDR (COND t (CDR (COND t `'3) `'3 t) t ) `'3 t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'()) `'() 1) 1 ) `'() 1)
(CDR (COND 2 (CDR (COND 2 `'()) `'() 2) 2 ) `'() 2)
(CDR (COND nil (CDR (COND nil `'()) `'() nil) nil ) `'() nil)
(CDR (COND t (CDR (COND t `'()) `'() t) t ) `'() t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CDR (COND 2 (CDR (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CDR (COND nil (CDR (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CDR (COND t (CDR (COND t `'(())) `'(()) t) t ) `'(()) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CDR (COND 2 (CDR (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CDR (COND nil (CDR (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CDR (COND t (CDR (COND t `'((()))) `'((())) t) t ) `'((())) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CDR (COND 1 (CDR (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CDR (COND 2 (CDR (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CDR (COND nil (CDR (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CDR (COND t (CDR (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CDR (COND (cons t t) (CDR (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CDR (COND (cons nil t) (CDR (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CDR (COND (cons nil nil) (CDR (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CDR (COND (cons 0 0) (CDR (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CDR (COND (cons 1 1) (CDR (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CDR (COND (list 1 2 3) (CDR (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CDR (COND (list (cons 1 1 ) ) (CDR (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 T) T 1) 1 ) T 1)
(COMMA (COND 2 (COMMA (COND 2 T) T 2) 2 ) T 2)
(COMMA (COND nil (COMMA (COND nil T) T nil) nil ) T nil)
(COMMA (COND t (COMMA (COND t T) T t) t ) T t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 NIL) NIL 1) 1 ) NIL 1)
(COMMA (COND 2 (COMMA (COND 2 NIL) NIL 2) 2 ) NIL 2)
(COMMA (COND nil (COMMA (COND nil NIL) NIL nil) nil ) NIL nil)
(COMMA (COND t (COMMA (COND t NIL) NIL t) t ) NIL t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 A) A 1) 1 ) A 1)
(COMMA (COND 2 (COMMA (COND 2 A) A 2) 2 ) A 2)
(COMMA (COND nil (COMMA (COND nil A) A nil) nil ) A nil)
(COMMA (COND t (COMMA (COND t A) A t) t ) A t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 B) B 1) 1 ) B 1)
(COMMA (COND 2 (COMMA (COND 2 B) B 2) 2 ) B 2)
(COMMA (COND nil (COMMA (COND nil B) B nil) nil ) B nil)
(COMMA (COND t (COMMA (COND t B) B t) t ) B t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 C) C 1) 1 ) C 1)
(COMMA (COND 2 (COMMA (COND 2 C) C 2) 2 ) C 2)
(COMMA (COND nil (COMMA (COND nil C) C nil) nil ) C nil)
(COMMA (COND t (COMMA (COND t C) C t) t ) C t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 1) 1 1) 1 ) 1 1)
(COMMA (COND 2 (COMMA (COND 2 1) 1 2) 2 ) 1 2)
(COMMA (COND nil (COMMA (COND nil 1) 1 nil) nil ) 1 nil)
(COMMA (COND t (COMMA (COND t 1) 1 t) t ) 1 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 2) 2 1) 1 ) 2 1)
(COMMA (COND 2 (COMMA (COND 2 2) 2 2) 2 ) 2 2)
(COMMA (COND nil (COMMA (COND nil 2) 2 nil) nil ) 2 nil)
(COMMA (COND t (COMMA (COND t 2) 2 t) t ) 2 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 3) 3 1) 1 ) 3 1)
(COMMA (COND 2 (COMMA (COND 2 3) 3 2) 2 ) 3 2)
(COMMA (COND nil (COMMA (COND nil 3) 3 nil) nil ) 3 nil)
(COMMA (COND t (COMMA (COND t 3) 3 t) t ) 3 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 ()) () 1) 1 ) () 1)
(COMMA (COND 2 (COMMA (COND 2 ()) () 2) 2 ) () 2)
(COMMA (COND nil (COMMA (COND nil ()) () nil) nil ) () nil)
(COMMA (COND t (COMMA (COND t ()) () t) t ) () t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 (())) (()) 1) 1 ) (()) 1)
(COMMA (COND 2 (COMMA (COND 2 (())) (()) 2) 2 ) (()) 2)
(COMMA (COND nil (COMMA (COND nil (())) (()) nil) nil ) (()) nil)
(COMMA (COND t (COMMA (COND t (())) (()) t) t ) (()) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COMMA (COND 2 (COMMA (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COMMA (COND nil (COMMA (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(COMMA (COND t (COMMA (COND t ((()))) ((())) t) t ) ((())) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COMMA (COND 2 (COMMA (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COMMA (COND nil (COMMA (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COMMA (COND t (COMMA (COND t (((())))) (((()))) t) t ) (((()))) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 'A) 'A 1) 1 ) 'A 1)
(COMMA (COND 2 (COMMA (COND 2 'A) 'A 2) 2 ) 'A 2)
(COMMA (COND nil (COMMA (COND nil 'A) 'A nil) nil ) 'A nil)
(COMMA (COND t (COMMA (COND t 'A) 'A t) t ) 'A t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 'B) 'B 1) 1 ) 'B 1)
(COMMA (COND 2 (COMMA (COND 2 'B) 'B 2) 2 ) 'B 2)
(COMMA (COND nil (COMMA (COND nil 'B) 'B nil) nil ) 'B nil)
(COMMA (COND t (COMMA (COND t 'B) 'B t) t ) 'B t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 'C) 'C 1) 1 ) 'C 1)
(COMMA (COND 2 (COMMA (COND 2 'C) 'C 2) 2 ) 'C 2)
(COMMA (COND nil (COMMA (COND nil 'C) 'C nil) nil ) 'C nil)
(COMMA (COND t (COMMA (COND t 'C) 'C t) t ) 'C t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 '1) '1 1) 1 ) '1 1)
(COMMA (COND 2 (COMMA (COND 2 '1) '1 2) 2 ) '1 2)
(COMMA (COND nil (COMMA (COND nil '1) '1 nil) nil ) '1 nil)
(COMMA (COND t (COMMA (COND t '1) '1 t) t ) '1 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 '2) '2 1) 1 ) '2 1)
(COMMA (COND 2 (COMMA (COND 2 '2) '2 2) 2 ) '2 2)
(COMMA (COND nil (COMMA (COND nil '2) '2 nil) nil ) '2 nil)
(COMMA (COND t (COMMA (COND t '2) '2 t) t ) '2 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 '3) '3 1) 1 ) '3 1)
(COMMA (COND 2 (COMMA (COND 2 '3) '3 2) 2 ) '3 2)
(COMMA (COND nil (COMMA (COND nil '3) '3 nil) nil ) '3 nil)
(COMMA (COND t (COMMA (COND t '3) '3 t) t ) '3 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 '()) '() 1) 1 ) '() 1)
(COMMA (COND 2 (COMMA (COND 2 '()) '() 2) 2 ) '() 2)
(COMMA (COND nil (COMMA (COND nil '()) '() nil) nil ) '() nil)
(COMMA (COND t (COMMA (COND t '()) '() t) t ) '() t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(COMMA (COND 2 (COMMA (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(COMMA (COND nil (COMMA (COND nil '(())) '(()) nil) nil ) '(()) nil)
(COMMA (COND t (COMMA (COND t '(())) '(()) t) t ) '(()) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COMMA (COND 2 (COMMA (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COMMA (COND nil (COMMA (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(COMMA (COND t (COMMA (COND t '((()))) '((())) t) t ) '((())) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COMMA (COND 2 (COMMA (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COMMA (COND nil (COMMA (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COMMA (COND t (COMMA (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 ,A) ,A 1) 1 ) ,A 1)
(COMMA (COND 2 (COMMA (COND 2 ,A) ,A 2) 2 ) ,A 2)
(COMMA (COND nil (COMMA (COND nil ,A) ,A nil) nil ) ,A nil)
(COMMA (COND t (COMMA (COND t ,A) ,A t) t ) ,A t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 ,1) ,1 1) 1 ) ,1 1)
(COMMA (COND 2 (COMMA (COND 2 ,1) ,1 2) 2 ) ,1 2)
(COMMA (COND nil (COMMA (COND nil ,1) ,1 nil) nil ) ,1 nil)
(COMMA (COND t (COMMA (COND t ,1) ,1 t) t ) ,1 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 ,()) ,() 1) 1 ) ,() 1)
(COMMA (COND 2 (COMMA (COND 2 ,()) ,() 2) 2 ) ,() 2)
(COMMA (COND nil (COMMA (COND nil ,()) ,() nil) nil ) ,() nil)
(COMMA (COND t (COMMA (COND t ,()) ,() t) t ) ,() t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COMMA (COND 2 (COMMA (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COMMA (COND nil (COMMA (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COMMA (COND t (COMMA (COND t ,(())) ,(()) t) t ) ,(()) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'A) `'A 1) 1 ) `'A 1)
(COMMA (COND 2 (COMMA (COND 2 `'A) `'A 2) 2 ) `'A 2)
(COMMA (COND nil (COMMA (COND nil `'A) `'A nil) nil ) `'A nil)
(COMMA (COND t (COMMA (COND t `'A) `'A t) t ) `'A t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'B) `'B 1) 1 ) `'B 1)
(COMMA (COND 2 (COMMA (COND 2 `'B) `'B 2) 2 ) `'B 2)
(COMMA (COND nil (COMMA (COND nil `'B) `'B nil) nil ) `'B nil)
(COMMA (COND t (COMMA (COND t `'B) `'B t) t ) `'B t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'C) `'C 1) 1 ) `'C 1)
(COMMA (COND 2 (COMMA (COND 2 `'C) `'C 2) 2 ) `'C 2)
(COMMA (COND nil (COMMA (COND nil `'C) `'C nil) nil ) `'C nil)
(COMMA (COND t (COMMA (COND t `'C) `'C t) t ) `'C t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'1) `'1 1) 1 ) `'1 1)
(COMMA (COND 2 (COMMA (COND 2 `'1) `'1 2) 2 ) `'1 2)
(COMMA (COND nil (COMMA (COND nil `'1) `'1 nil) nil ) `'1 nil)
(COMMA (COND t (COMMA (COND t `'1) `'1 t) t ) `'1 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'2) `'2 1) 1 ) `'2 1)
(COMMA (COND 2 (COMMA (COND 2 `'2) `'2 2) 2 ) `'2 2)
(COMMA (COND nil (COMMA (COND nil `'2) `'2 nil) nil ) `'2 nil)
(COMMA (COND t (COMMA (COND t `'2) `'2 t) t ) `'2 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'3) `'3 1) 1 ) `'3 1)
(COMMA (COND 2 (COMMA (COND 2 `'3) `'3 2) 2 ) `'3 2)
(COMMA (COND nil (COMMA (COND nil `'3) `'3 nil) nil ) `'3 nil)
(COMMA (COND t (COMMA (COND t `'3) `'3 t) t ) `'3 t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'()) `'() 1) 1 ) `'() 1)
(COMMA (COND 2 (COMMA (COND 2 `'()) `'() 2) 2 ) `'() 2)
(COMMA (COND nil (COMMA (COND nil `'()) `'() nil) nil ) `'() nil)
(COMMA (COND t (COMMA (COND t `'()) `'() t) t ) `'() t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COMMA (COND 2 (COMMA (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COMMA (COND nil (COMMA (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COMMA (COND t (COMMA (COND t `'(())) `'(()) t) t ) `'(()) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COMMA (COND 2 (COMMA (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COMMA (COND nil (COMMA (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COMMA (COND t (COMMA (COND t `'((()))) `'((())) t) t ) `'((())) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COMMA (COND 1 (COMMA (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COMMA (COND 2 (COMMA (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COMMA (COND nil (COMMA (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COMMA (COND t (COMMA (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COMMA (COND (cons t t) (COMMA (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COMMA (COND (cons nil t) (COMMA (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COMMA (COND (cons nil nil) (COMMA (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COMMA (COND (cons 0 0) (COMMA (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COMMA (COND (cons 1 1) (COMMA (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COMMA (COND (list 1 2 3) (COMMA (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COMMA (COND (list (cons 1 1 ) ) (COMMA (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 T) T 1) 1 ) T 1)
(COND (* 2 (COND (* 2 T) T 2) 2 ) T 2)
(COND (* nil (COND (* nil T) T nil) nil ) T nil)
(COND (* t (COND (* t T) T t) t ) T t)
(COND (* (cons t t) (COND (* (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 NIL) NIL 1) 1 ) NIL 1)
(COND (* 2 (COND (* 2 NIL) NIL 2) 2 ) NIL 2)
(COND (* nil (COND (* nil NIL) NIL nil) nil ) NIL nil)
(COND (* t (COND (* t NIL) NIL t) t ) NIL t)
(COND (* (cons t t) (COND (* (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 A) A 1) 1 ) A 1)
(COND (* 2 (COND (* 2 A) A 2) 2 ) A 2)
(COND (* nil (COND (* nil A) A nil) nil ) A nil)
(COND (* t (COND (* t A) A t) t ) A t)
(COND (* (cons t t) (COND (* (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 B) B 1) 1 ) B 1)
(COND (* 2 (COND (* 2 B) B 2) 2 ) B 2)
(COND (* nil (COND (* nil B) B nil) nil ) B nil)
(COND (* t (COND (* t B) B t) t ) B t)
(COND (* (cons t t) (COND (* (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 C) C 1) 1 ) C 1)
(COND (* 2 (COND (* 2 C) C 2) 2 ) C 2)
(COND (* nil (COND (* nil C) C nil) nil ) C nil)
(COND (* t (COND (* t C) C t) t ) C t)
(COND (* (cons t t) (COND (* (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 1) 1 1) 1 ) 1 1)
(COND (* 2 (COND (* 2 1) 1 2) 2 ) 1 2)
(COND (* nil (COND (* nil 1) 1 nil) nil ) 1 nil)
(COND (* t (COND (* t 1) 1 t) t ) 1 t)
(COND (* (cons t t) (COND (* (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 2) 2 1) 1 ) 2 1)
(COND (* 2 (COND (* 2 2) 2 2) 2 ) 2 2)
(COND (* nil (COND (* nil 2) 2 nil) nil ) 2 nil)
(COND (* t (COND (* t 2) 2 t) t ) 2 t)
(COND (* (cons t t) (COND (* (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 3) 3 1) 1 ) 3 1)
(COND (* 2 (COND (* 2 3) 3 2) 2 ) 3 2)
(COND (* nil (COND (* nil 3) 3 nil) nil ) 3 nil)
(COND (* t (COND (* t 3) 3 t) t ) 3 t)
(COND (* (cons t t) (COND (* (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 ()) () 1) 1 ) () 1)
(COND (* 2 (COND (* 2 ()) () 2) 2 ) () 2)
(COND (* nil (COND (* nil ()) () nil) nil ) () nil)
(COND (* t (COND (* t ()) () t) t ) () t)
(COND (* (cons t t) (COND (* (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 (())) (()) 1) 1 ) (()) 1)
(COND (* 2 (COND (* 2 (())) (()) 2) 2 ) (()) 2)
(COND (* nil (COND (* nil (())) (()) nil) nil ) (()) nil)
(COND (* t (COND (* t (())) (()) t) t ) (()) t)
(COND (* (cons t t) (COND (* (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (* 2 (COND (* 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (* nil (COND (* nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (* t (COND (* t ((()))) ((())) t) t ) ((())) t)
(COND (* (cons t t) (COND (* (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (* 2 (COND (* 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (* nil (COND (* nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (* t (COND (* t (((())))) (((()))) t) t ) (((()))) t)
(COND (* (cons t t) (COND (* (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 'A) 'A 1) 1 ) 'A 1)
(COND (* 2 (COND (* 2 'A) 'A 2) 2 ) 'A 2)
(COND (* nil (COND (* nil 'A) 'A nil) nil ) 'A nil)
(COND (* t (COND (* t 'A) 'A t) t ) 'A t)
(COND (* (cons t t) (COND (* (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 'B) 'B 1) 1 ) 'B 1)
(COND (* 2 (COND (* 2 'B) 'B 2) 2 ) 'B 2)
(COND (* nil (COND (* nil 'B) 'B nil) nil ) 'B nil)
(COND (* t (COND (* t 'B) 'B t) t ) 'B t)
(COND (* (cons t t) (COND (* (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 'C) 'C 1) 1 ) 'C 1)
(COND (* 2 (COND (* 2 'C) 'C 2) 2 ) 'C 2)
(COND (* nil (COND (* nil 'C) 'C nil) nil ) 'C nil)
(COND (* t (COND (* t 'C) 'C t) t ) 'C t)
(COND (* (cons t t) (COND (* (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 '1) '1 1) 1 ) '1 1)
(COND (* 2 (COND (* 2 '1) '1 2) 2 ) '1 2)
(COND (* nil (COND (* nil '1) '1 nil) nil ) '1 nil)
(COND (* t (COND (* t '1) '1 t) t ) '1 t)
(COND (* (cons t t) (COND (* (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 '2) '2 1) 1 ) '2 1)
(COND (* 2 (COND (* 2 '2) '2 2) 2 ) '2 2)
(COND (* nil (COND (* nil '2) '2 nil) nil ) '2 nil)
(COND (* t (COND (* t '2) '2 t) t ) '2 t)
(COND (* (cons t t) (COND (* (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 '3) '3 1) 1 ) '3 1)
(COND (* 2 (COND (* 2 '3) '3 2) 2 ) '3 2)
(COND (* nil (COND (* nil '3) '3 nil) nil ) '3 nil)
(COND (* t (COND (* t '3) '3 t) t ) '3 t)
(COND (* (cons t t) (COND (* (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 '()) '() 1) 1 ) '() 1)
(COND (* 2 (COND (* 2 '()) '() 2) 2 ) '() 2)
(COND (* nil (COND (* nil '()) '() nil) nil ) '() nil)
(COND (* t (COND (* t '()) '() t) t ) '() t)
(COND (* (cons t t) (COND (* (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (* 2 (COND (* 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (* nil (COND (* nil '(())) '(()) nil) nil ) '(()) nil)
(COND (* t (COND (* t '(())) '(()) t) t ) '(()) t)
(COND (* (cons t t) (COND (* (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (* 2 (COND (* 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (* nil (COND (* nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (* t (COND (* t '((()))) '((())) t) t ) '((())) t)
(COND (* (cons t t) (COND (* (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (* 2 (COND (* 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (* nil (COND (* nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (* t (COND (* t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (* (cons t t) (COND (* (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 ,A) ,A 1) 1 ) ,A 1)
(COND (* 2 (COND (* 2 ,A) ,A 2) 2 ) ,A 2)
(COND (* nil (COND (* nil ,A) ,A nil) nil ) ,A nil)
(COND (* t (COND (* t ,A) ,A t) t ) ,A t)
(COND (* (cons t t) (COND (* (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 ,1) ,1 1) 1 ) ,1 1)
(COND (* 2 (COND (* 2 ,1) ,1 2) 2 ) ,1 2)
(COND (* nil (COND (* nil ,1) ,1 nil) nil ) ,1 nil)
(COND (* t (COND (* t ,1) ,1 t) t ) ,1 t)
(COND (* (cons t t) (COND (* (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 ,()) ,() 1) 1 ) ,() 1)
(COND (* 2 (COND (* 2 ,()) ,() 2) 2 ) ,() 2)
(COND (* nil (COND (* nil ,()) ,() nil) nil ) ,() nil)
(COND (* t (COND (* t ,()) ,() t) t ) ,() t)
(COND (* (cons t t) (COND (* (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (* 2 (COND (* 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (* nil (COND (* nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (* t (COND (* t ,(())) ,(()) t) t ) ,(()) t)
(COND (* (cons t t) (COND (* (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'A) `'A 1) 1 ) `'A 1)
(COND (* 2 (COND (* 2 `'A) `'A 2) 2 ) `'A 2)
(COND (* nil (COND (* nil `'A) `'A nil) nil ) `'A nil)
(COND (* t (COND (* t `'A) `'A t) t ) `'A t)
(COND (* (cons t t) (COND (* (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'B) `'B 1) 1 ) `'B 1)
(COND (* 2 (COND (* 2 `'B) `'B 2) 2 ) `'B 2)
(COND (* nil (COND (* nil `'B) `'B nil) nil ) `'B nil)
(COND (* t (COND (* t `'B) `'B t) t ) `'B t)
(COND (* (cons t t) (COND (* (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'C) `'C 1) 1 ) `'C 1)
(COND (* 2 (COND (* 2 `'C) `'C 2) 2 ) `'C 2)
(COND (* nil (COND (* nil `'C) `'C nil) nil ) `'C nil)
(COND (* t (COND (* t `'C) `'C t) t ) `'C t)
(COND (* (cons t t) (COND (* (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'1) `'1 1) 1 ) `'1 1)
(COND (* 2 (COND (* 2 `'1) `'1 2) 2 ) `'1 2)
(COND (* nil (COND (* nil `'1) `'1 nil) nil ) `'1 nil)
(COND (* t (COND (* t `'1) `'1 t) t ) `'1 t)
(COND (* (cons t t) (COND (* (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'2) `'2 1) 1 ) `'2 1)
(COND (* 2 (COND (* 2 `'2) `'2 2) 2 ) `'2 2)
(COND (* nil (COND (* nil `'2) `'2 nil) nil ) `'2 nil)
(COND (* t (COND (* t `'2) `'2 t) t ) `'2 t)
(COND (* (cons t t) (COND (* (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'3) `'3 1) 1 ) `'3 1)
(COND (* 2 (COND (* 2 `'3) `'3 2) 2 ) `'3 2)
(COND (* nil (COND (* nil `'3) `'3 nil) nil ) `'3 nil)
(COND (* t (COND (* t `'3) `'3 t) t ) `'3 t)
(COND (* (cons t t) (COND (* (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'()) `'() 1) 1 ) `'() 1)
(COND (* 2 (COND (* 2 `'()) `'() 2) 2 ) `'() 2)
(COND (* nil (COND (* nil `'()) `'() nil) nil ) `'() nil)
(COND (* t (COND (* t `'()) `'() t) t ) `'() t)
(COND (* (cons t t) (COND (* (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (* 2 (COND (* 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (* nil (COND (* nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (* t (COND (* t `'(())) `'(()) t) t ) `'(()) t)
(COND (* (cons t t) (COND (* (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (* 2 (COND (* 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (* nil (COND (* nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (* t (COND (* t `'((()))) `'((())) t) t ) `'((())) t)
(COND (* (cons t t) (COND (* (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (* 1 (COND (* 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (* 2 (COND (* 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (* nil (COND (* nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (* t (COND (* t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (* (cons t t) (COND (* (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (* (cons nil t) (COND (* (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (* (cons nil nil) (COND (* (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (* (cons 0 0) (COND (* (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (* (cons 1 1) (COND (* (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (* (list 1 2 3) (COND (* (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (* (list (cons 1 1 ) ) (COND (* (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 T) T 1) 1 ) T 1)
(COND (+ 2 (COND (+ 2 T) T 2) 2 ) T 2)
(COND (+ nil (COND (+ nil T) T nil) nil ) T nil)
(COND (+ t (COND (+ t T) T t) t ) T t)
(COND (+ (cons t t) (COND (+ (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 NIL) NIL 1) 1 ) NIL 1)
(COND (+ 2 (COND (+ 2 NIL) NIL 2) 2 ) NIL 2)
(COND (+ nil (COND (+ nil NIL) NIL nil) nil ) NIL nil)
(COND (+ t (COND (+ t NIL) NIL t) t ) NIL t)
(COND (+ (cons t t) (COND (+ (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 A) A 1) 1 ) A 1)
(COND (+ 2 (COND (+ 2 A) A 2) 2 ) A 2)
(COND (+ nil (COND (+ nil A) A nil) nil ) A nil)
(COND (+ t (COND (+ t A) A t) t ) A t)
(COND (+ (cons t t) (COND (+ (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 B) B 1) 1 ) B 1)
(COND (+ 2 (COND (+ 2 B) B 2) 2 ) B 2)
(COND (+ nil (COND (+ nil B) B nil) nil ) B nil)
(COND (+ t (COND (+ t B) B t) t ) B t)
(COND (+ (cons t t) (COND (+ (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 C) C 1) 1 ) C 1)
(COND (+ 2 (COND (+ 2 C) C 2) 2 ) C 2)
(COND (+ nil (COND (+ nil C) C nil) nil ) C nil)
(COND (+ t (COND (+ t C) C t) t ) C t)
(COND (+ (cons t t) (COND (+ (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 1) 1 1) 1 ) 1 1)
(COND (+ 2 (COND (+ 2 1) 1 2) 2 ) 1 2)
(COND (+ nil (COND (+ nil 1) 1 nil) nil ) 1 nil)
(COND (+ t (COND (+ t 1) 1 t) t ) 1 t)
(COND (+ (cons t t) (COND (+ (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 2) 2 1) 1 ) 2 1)
(COND (+ 2 (COND (+ 2 2) 2 2) 2 ) 2 2)
(COND (+ nil (COND (+ nil 2) 2 nil) nil ) 2 nil)
(COND (+ t (COND (+ t 2) 2 t) t ) 2 t)
(COND (+ (cons t t) (COND (+ (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 3) 3 1) 1 ) 3 1)
(COND (+ 2 (COND (+ 2 3) 3 2) 2 ) 3 2)
(COND (+ nil (COND (+ nil 3) 3 nil) nil ) 3 nil)
(COND (+ t (COND (+ t 3) 3 t) t ) 3 t)
(COND (+ (cons t t) (COND (+ (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 ()) () 1) 1 ) () 1)
(COND (+ 2 (COND (+ 2 ()) () 2) 2 ) () 2)
(COND (+ nil (COND (+ nil ()) () nil) nil ) () nil)
(COND (+ t (COND (+ t ()) () t) t ) () t)
(COND (+ (cons t t) (COND (+ (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 (())) (()) 1) 1 ) (()) 1)
(COND (+ 2 (COND (+ 2 (())) (()) 2) 2 ) (()) 2)
(COND (+ nil (COND (+ nil (())) (()) nil) nil ) (()) nil)
(COND (+ t (COND (+ t (())) (()) t) t ) (()) t)
(COND (+ (cons t t) (COND (+ (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (+ 2 (COND (+ 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (+ nil (COND (+ nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (+ t (COND (+ t ((()))) ((())) t) t ) ((())) t)
(COND (+ (cons t t) (COND (+ (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (+ 2 (COND (+ 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (+ nil (COND (+ nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (+ t (COND (+ t (((())))) (((()))) t) t ) (((()))) t)
(COND (+ (cons t t) (COND (+ (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 'A) 'A 1) 1 ) 'A 1)
(COND (+ 2 (COND (+ 2 'A) 'A 2) 2 ) 'A 2)
(COND (+ nil (COND (+ nil 'A) 'A nil) nil ) 'A nil)
(COND (+ t (COND (+ t 'A) 'A t) t ) 'A t)
(COND (+ (cons t t) (COND (+ (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 'B) 'B 1) 1 ) 'B 1)
(COND (+ 2 (COND (+ 2 'B) 'B 2) 2 ) 'B 2)
(COND (+ nil (COND (+ nil 'B) 'B nil) nil ) 'B nil)
(COND (+ t (COND (+ t 'B) 'B t) t ) 'B t)
(COND (+ (cons t t) (COND (+ (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 'C) 'C 1) 1 ) 'C 1)
(COND (+ 2 (COND (+ 2 'C) 'C 2) 2 ) 'C 2)
(COND (+ nil (COND (+ nil 'C) 'C nil) nil ) 'C nil)
(COND (+ t (COND (+ t 'C) 'C t) t ) 'C t)
(COND (+ (cons t t) (COND (+ (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 '1) '1 1) 1 ) '1 1)
(COND (+ 2 (COND (+ 2 '1) '1 2) 2 ) '1 2)
(COND (+ nil (COND (+ nil '1) '1 nil) nil ) '1 nil)
(COND (+ t (COND (+ t '1) '1 t) t ) '1 t)
(COND (+ (cons t t) (COND (+ (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 '2) '2 1) 1 ) '2 1)
(COND (+ 2 (COND (+ 2 '2) '2 2) 2 ) '2 2)
(COND (+ nil (COND (+ nil '2) '2 nil) nil ) '2 nil)
(COND (+ t (COND (+ t '2) '2 t) t ) '2 t)
(COND (+ (cons t t) (COND (+ (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 '3) '3 1) 1 ) '3 1)
(COND (+ 2 (COND (+ 2 '3) '3 2) 2 ) '3 2)
(COND (+ nil (COND (+ nil '3) '3 nil) nil ) '3 nil)
(COND (+ t (COND (+ t '3) '3 t) t ) '3 t)
(COND (+ (cons t t) (COND (+ (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 '()) '() 1) 1 ) '() 1)
(COND (+ 2 (COND (+ 2 '()) '() 2) 2 ) '() 2)
(COND (+ nil (COND (+ nil '()) '() nil) nil ) '() nil)
(COND (+ t (COND (+ t '()) '() t) t ) '() t)
(COND (+ (cons t t) (COND (+ (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (+ 2 (COND (+ 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (+ nil (COND (+ nil '(())) '(()) nil) nil ) '(()) nil)
(COND (+ t (COND (+ t '(())) '(()) t) t ) '(()) t)
(COND (+ (cons t t) (COND (+ (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (+ 2 (COND (+ 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (+ nil (COND (+ nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (+ t (COND (+ t '((()))) '((())) t) t ) '((())) t)
(COND (+ (cons t t) (COND (+ (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (+ 2 (COND (+ 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (+ nil (COND (+ nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (+ t (COND (+ t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (+ (cons t t) (COND (+ (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 ,A) ,A 1) 1 ) ,A 1)
(COND (+ 2 (COND (+ 2 ,A) ,A 2) 2 ) ,A 2)
(COND (+ nil (COND (+ nil ,A) ,A nil) nil ) ,A nil)
(COND (+ t (COND (+ t ,A) ,A t) t ) ,A t)
(COND (+ (cons t t) (COND (+ (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 ,1) ,1 1) 1 ) ,1 1)
(COND (+ 2 (COND (+ 2 ,1) ,1 2) 2 ) ,1 2)
(COND (+ nil (COND (+ nil ,1) ,1 nil) nil ) ,1 nil)
(COND (+ t (COND (+ t ,1) ,1 t) t ) ,1 t)
(COND (+ (cons t t) (COND (+ (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 ,()) ,() 1) 1 ) ,() 1)
(COND (+ 2 (COND (+ 2 ,()) ,() 2) 2 ) ,() 2)
(COND (+ nil (COND (+ nil ,()) ,() nil) nil ) ,() nil)
(COND (+ t (COND (+ t ,()) ,() t) t ) ,() t)
(COND (+ (cons t t) (COND (+ (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (+ 2 (COND (+ 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (+ nil (COND (+ nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (+ t (COND (+ t ,(())) ,(()) t) t ) ,(()) t)
(COND (+ (cons t t) (COND (+ (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'A) `'A 1) 1 ) `'A 1)
(COND (+ 2 (COND (+ 2 `'A) `'A 2) 2 ) `'A 2)
(COND (+ nil (COND (+ nil `'A) `'A nil) nil ) `'A nil)
(COND (+ t (COND (+ t `'A) `'A t) t ) `'A t)
(COND (+ (cons t t) (COND (+ (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'B) `'B 1) 1 ) `'B 1)
(COND (+ 2 (COND (+ 2 `'B) `'B 2) 2 ) `'B 2)
(COND (+ nil (COND (+ nil `'B) `'B nil) nil ) `'B nil)
(COND (+ t (COND (+ t `'B) `'B t) t ) `'B t)
(COND (+ (cons t t) (COND (+ (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'C) `'C 1) 1 ) `'C 1)
(COND (+ 2 (COND (+ 2 `'C) `'C 2) 2 ) `'C 2)
(COND (+ nil (COND (+ nil `'C) `'C nil) nil ) `'C nil)
(COND (+ t (COND (+ t `'C) `'C t) t ) `'C t)
(COND (+ (cons t t) (COND (+ (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'1) `'1 1) 1 ) `'1 1)
(COND (+ 2 (COND (+ 2 `'1) `'1 2) 2 ) `'1 2)
(COND (+ nil (COND (+ nil `'1) `'1 nil) nil ) `'1 nil)
(COND (+ t (COND (+ t `'1) `'1 t) t ) `'1 t)
(COND (+ (cons t t) (COND (+ (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'2) `'2 1) 1 ) `'2 1)
(COND (+ 2 (COND (+ 2 `'2) `'2 2) 2 ) `'2 2)
(COND (+ nil (COND (+ nil `'2) `'2 nil) nil ) `'2 nil)
(COND (+ t (COND (+ t `'2) `'2 t) t ) `'2 t)
(COND (+ (cons t t) (COND (+ (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'3) `'3 1) 1 ) `'3 1)
(COND (+ 2 (COND (+ 2 `'3) `'3 2) 2 ) `'3 2)
(COND (+ nil (COND (+ nil `'3) `'3 nil) nil ) `'3 nil)
(COND (+ t (COND (+ t `'3) `'3 t) t ) `'3 t)
(COND (+ (cons t t) (COND (+ (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'()) `'() 1) 1 ) `'() 1)
(COND (+ 2 (COND (+ 2 `'()) `'() 2) 2 ) `'() 2)
(COND (+ nil (COND (+ nil `'()) `'() nil) nil ) `'() nil)
(COND (+ t (COND (+ t `'()) `'() t) t ) `'() t)
(COND (+ (cons t t) (COND (+ (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (+ 2 (COND (+ 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (+ nil (COND (+ nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (+ t (COND (+ t `'(())) `'(()) t) t ) `'(()) t)
(COND (+ (cons t t) (COND (+ (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (+ 2 (COND (+ 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (+ nil (COND (+ nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (+ t (COND (+ t `'((()))) `'((())) t) t ) `'((())) t)
(COND (+ (cons t t) (COND (+ (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (+ 1 (COND (+ 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (+ 2 (COND (+ 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (+ nil (COND (+ nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (+ t (COND (+ t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (+ (cons t t) (COND (+ (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (+ (cons nil t) (COND (+ (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (+ (cons nil nil) (COND (+ (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (+ (cons 0 0) (COND (+ (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (+ (cons 1 1) (COND (+ (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (+ (list 1 2 3) (COND (+ (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (+ (list (cons 1 1 ) ) (COND (+ (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 T) T 1) 1 ) T 1)
(COND (< 2 (COND (< 2 T) T 2) 2 ) T 2)
(COND (< nil (COND (< nil T) T nil) nil ) T nil)
(COND (< t (COND (< t T) T t) t ) T t)
(COND (< (cons t t) (COND (< (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 NIL) NIL 1) 1 ) NIL 1)
(COND (< 2 (COND (< 2 NIL) NIL 2) 2 ) NIL 2)
(COND (< nil (COND (< nil NIL) NIL nil) nil ) NIL nil)
(COND (< t (COND (< t NIL) NIL t) t ) NIL t)
(COND (< (cons t t) (COND (< (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 A) A 1) 1 ) A 1)
(COND (< 2 (COND (< 2 A) A 2) 2 ) A 2)
(COND (< nil (COND (< nil A) A nil) nil ) A nil)
(COND (< t (COND (< t A) A t) t ) A t)
(COND (< (cons t t) (COND (< (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 B) B 1) 1 ) B 1)
(COND (< 2 (COND (< 2 B) B 2) 2 ) B 2)
(COND (< nil (COND (< nil B) B nil) nil ) B nil)
(COND (< t (COND (< t B) B t) t ) B t)
(COND (< (cons t t) (COND (< (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 C) C 1) 1 ) C 1)
(COND (< 2 (COND (< 2 C) C 2) 2 ) C 2)
(COND (< nil (COND (< nil C) C nil) nil ) C nil)
(COND (< t (COND (< t C) C t) t ) C t)
(COND (< (cons t t) (COND (< (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 1) 1 1) 1 ) 1 1)
(COND (< 2 (COND (< 2 1) 1 2) 2 ) 1 2)
(COND (< nil (COND (< nil 1) 1 nil) nil ) 1 nil)
(COND (< t (COND (< t 1) 1 t) t ) 1 t)
(COND (< (cons t t) (COND (< (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 2) 2 1) 1 ) 2 1)
(COND (< 2 (COND (< 2 2) 2 2) 2 ) 2 2)
(COND (< nil (COND (< nil 2) 2 nil) nil ) 2 nil)
(COND (< t (COND (< t 2) 2 t) t ) 2 t)
(COND (< (cons t t) (COND (< (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 3) 3 1) 1 ) 3 1)
(COND (< 2 (COND (< 2 3) 3 2) 2 ) 3 2)
(COND (< nil (COND (< nil 3) 3 nil) nil ) 3 nil)
(COND (< t (COND (< t 3) 3 t) t ) 3 t)
(COND (< (cons t t) (COND (< (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 ()) () 1) 1 ) () 1)
(COND (< 2 (COND (< 2 ()) () 2) 2 ) () 2)
(COND (< nil (COND (< nil ()) () nil) nil ) () nil)
(COND (< t (COND (< t ()) () t) t ) () t)
(COND (< (cons t t) (COND (< (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 (())) (()) 1) 1 ) (()) 1)
(COND (< 2 (COND (< 2 (())) (()) 2) 2 ) (()) 2)
(COND (< nil (COND (< nil (())) (()) nil) nil ) (()) nil)
(COND (< t (COND (< t (())) (()) t) t ) (()) t)
(COND (< (cons t t) (COND (< (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (< 2 (COND (< 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (< nil (COND (< nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (< t (COND (< t ((()))) ((())) t) t ) ((())) t)
(COND (< (cons t t) (COND (< (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (< 2 (COND (< 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (< nil (COND (< nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (< t (COND (< t (((())))) (((()))) t) t ) (((()))) t)
(COND (< (cons t t) (COND (< (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 'A) 'A 1) 1 ) 'A 1)
(COND (< 2 (COND (< 2 'A) 'A 2) 2 ) 'A 2)
(COND (< nil (COND (< nil 'A) 'A nil) nil ) 'A nil)
(COND (< t (COND (< t 'A) 'A t) t ) 'A t)
(COND (< (cons t t) (COND (< (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 'B) 'B 1) 1 ) 'B 1)
(COND (< 2 (COND (< 2 'B) 'B 2) 2 ) 'B 2)
(COND (< nil (COND (< nil 'B) 'B nil) nil ) 'B nil)
(COND (< t (COND (< t 'B) 'B t) t ) 'B t)
(COND (< (cons t t) (COND (< (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 'C) 'C 1) 1 ) 'C 1)
(COND (< 2 (COND (< 2 'C) 'C 2) 2 ) 'C 2)
(COND (< nil (COND (< nil 'C) 'C nil) nil ) 'C nil)
(COND (< t (COND (< t 'C) 'C t) t ) 'C t)
(COND (< (cons t t) (COND (< (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 '1) '1 1) 1 ) '1 1)
(COND (< 2 (COND (< 2 '1) '1 2) 2 ) '1 2)
(COND (< nil (COND (< nil '1) '1 nil) nil ) '1 nil)
(COND (< t (COND (< t '1) '1 t) t ) '1 t)
(COND (< (cons t t) (COND (< (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 '2) '2 1) 1 ) '2 1)
(COND (< 2 (COND (< 2 '2) '2 2) 2 ) '2 2)
(COND (< nil (COND (< nil '2) '2 nil) nil ) '2 nil)
(COND (< t (COND (< t '2) '2 t) t ) '2 t)
(COND (< (cons t t) (COND (< (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 '3) '3 1) 1 ) '3 1)
(COND (< 2 (COND (< 2 '3) '3 2) 2 ) '3 2)
(COND (< nil (COND (< nil '3) '3 nil) nil ) '3 nil)
(COND (< t (COND (< t '3) '3 t) t ) '3 t)
(COND (< (cons t t) (COND (< (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 '()) '() 1) 1 ) '() 1)
(COND (< 2 (COND (< 2 '()) '() 2) 2 ) '() 2)
(COND (< nil (COND (< nil '()) '() nil) nil ) '() nil)
(COND (< t (COND (< t '()) '() t) t ) '() t)
(COND (< (cons t t) (COND (< (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (< 2 (COND (< 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (< nil (COND (< nil '(())) '(()) nil) nil ) '(()) nil)
(COND (< t (COND (< t '(())) '(()) t) t ) '(()) t)
(COND (< (cons t t) (COND (< (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (< 2 (COND (< 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (< nil (COND (< nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (< t (COND (< t '((()))) '((())) t) t ) '((())) t)
(COND (< (cons t t) (COND (< (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (< 2 (COND (< 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (< nil (COND (< nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (< t (COND (< t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (< (cons t t) (COND (< (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 ,A) ,A 1) 1 ) ,A 1)
(COND (< 2 (COND (< 2 ,A) ,A 2) 2 ) ,A 2)
(COND (< nil (COND (< nil ,A) ,A nil) nil ) ,A nil)
(COND (< t (COND (< t ,A) ,A t) t ) ,A t)
(COND (< (cons t t) (COND (< (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 ,1) ,1 1) 1 ) ,1 1)
(COND (< 2 (COND (< 2 ,1) ,1 2) 2 ) ,1 2)
(COND (< nil (COND (< nil ,1) ,1 nil) nil ) ,1 nil)
(COND (< t (COND (< t ,1) ,1 t) t ) ,1 t)
(COND (< (cons t t) (COND (< (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 ,()) ,() 1) 1 ) ,() 1)
(COND (< 2 (COND (< 2 ,()) ,() 2) 2 ) ,() 2)
(COND (< nil (COND (< nil ,()) ,() nil) nil ) ,() nil)
(COND (< t (COND (< t ,()) ,() t) t ) ,() t)
(COND (< (cons t t) (COND (< (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (< 2 (COND (< 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (< nil (COND (< nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (< t (COND (< t ,(())) ,(()) t) t ) ,(()) t)
(COND (< (cons t t) (COND (< (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'A) `'A 1) 1 ) `'A 1)
(COND (< 2 (COND (< 2 `'A) `'A 2) 2 ) `'A 2)
(COND (< nil (COND (< nil `'A) `'A nil) nil ) `'A nil)
(COND (< t (COND (< t `'A) `'A t) t ) `'A t)
(COND (< (cons t t) (COND (< (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'B) `'B 1) 1 ) `'B 1)
(COND (< 2 (COND (< 2 `'B) `'B 2) 2 ) `'B 2)
(COND (< nil (COND (< nil `'B) `'B nil) nil ) `'B nil)
(COND (< t (COND (< t `'B) `'B t) t ) `'B t)
(COND (< (cons t t) (COND (< (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'C) `'C 1) 1 ) `'C 1)
(COND (< 2 (COND (< 2 `'C) `'C 2) 2 ) `'C 2)
(COND (< nil (COND (< nil `'C) `'C nil) nil ) `'C nil)
(COND (< t (COND (< t `'C) `'C t) t ) `'C t)
(COND (< (cons t t) (COND (< (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'1) `'1 1) 1 ) `'1 1)
(COND (< 2 (COND (< 2 `'1) `'1 2) 2 ) `'1 2)
(COND (< nil (COND (< nil `'1) `'1 nil) nil ) `'1 nil)
(COND (< t (COND (< t `'1) `'1 t) t ) `'1 t)
(COND (< (cons t t) (COND (< (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'2) `'2 1) 1 ) `'2 1)
(COND (< 2 (COND (< 2 `'2) `'2 2) 2 ) `'2 2)
(COND (< nil (COND (< nil `'2) `'2 nil) nil ) `'2 nil)
(COND (< t (COND (< t `'2) `'2 t) t ) `'2 t)
(COND (< (cons t t) (COND (< (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'3) `'3 1) 1 ) `'3 1)
(COND (< 2 (COND (< 2 `'3) `'3 2) 2 ) `'3 2)
(COND (< nil (COND (< nil `'3) `'3 nil) nil ) `'3 nil)
(COND (< t (COND (< t `'3) `'3 t) t ) `'3 t)
(COND (< (cons t t) (COND (< (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'()) `'() 1) 1 ) `'() 1)
(COND (< 2 (COND (< 2 `'()) `'() 2) 2 ) `'() 2)
(COND (< nil (COND (< nil `'()) `'() nil) nil ) `'() nil)
(COND (< t (COND (< t `'()) `'() t) t ) `'() t)
(COND (< (cons t t) (COND (< (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (< 2 (COND (< 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (< nil (COND (< nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (< t (COND (< t `'(())) `'(()) t) t ) `'(()) t)
(COND (< (cons t t) (COND (< (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (< 2 (COND (< 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (< nil (COND (< nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (< t (COND (< t `'((()))) `'((())) t) t ) `'((())) t)
(COND (< (cons t t) (COND (< (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (< 1 (COND (< 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (< 2 (COND (< 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (< nil (COND (< nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (< t (COND (< t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (< (cons t t) (COND (< (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (< (cons nil t) (COND (< (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (< (cons nil nil) (COND (< (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (< (cons 0 0) (COND (< (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (< (cons 1 1) (COND (< (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (< (list 1 2 3) (COND (< (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (< (list (cons 1 1 ) ) (COND (< (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 T) T 1) 1 ) T 1)
(COND (<= 2 (COND (<= 2 T) T 2) 2 ) T 2)
(COND (<= nil (COND (<= nil T) T nil) nil ) T nil)
(COND (<= t (COND (<= t T) T t) t ) T t)
(COND (<= (cons t t) (COND (<= (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 NIL) NIL 1) 1 ) NIL 1)
(COND (<= 2 (COND (<= 2 NIL) NIL 2) 2 ) NIL 2)
(COND (<= nil (COND (<= nil NIL) NIL nil) nil ) NIL nil)
(COND (<= t (COND (<= t NIL) NIL t) t ) NIL t)
(COND (<= (cons t t) (COND (<= (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 A) A 1) 1 ) A 1)
(COND (<= 2 (COND (<= 2 A) A 2) 2 ) A 2)
(COND (<= nil (COND (<= nil A) A nil) nil ) A nil)
(COND (<= t (COND (<= t A) A t) t ) A t)
(COND (<= (cons t t) (COND (<= (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 B) B 1) 1 ) B 1)
(COND (<= 2 (COND (<= 2 B) B 2) 2 ) B 2)
(COND (<= nil (COND (<= nil B) B nil) nil ) B nil)
(COND (<= t (COND (<= t B) B t) t ) B t)
(COND (<= (cons t t) (COND (<= (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 C) C 1) 1 ) C 1)
(COND (<= 2 (COND (<= 2 C) C 2) 2 ) C 2)
(COND (<= nil (COND (<= nil C) C nil) nil ) C nil)
(COND (<= t (COND (<= t C) C t) t ) C t)
(COND (<= (cons t t) (COND (<= (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 1) 1 1) 1 ) 1 1)
(COND (<= 2 (COND (<= 2 1) 1 2) 2 ) 1 2)
(COND (<= nil (COND (<= nil 1) 1 nil) nil ) 1 nil)
(COND (<= t (COND (<= t 1) 1 t) t ) 1 t)
(COND (<= (cons t t) (COND (<= (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 2) 2 1) 1 ) 2 1)
(COND (<= 2 (COND (<= 2 2) 2 2) 2 ) 2 2)
(COND (<= nil (COND (<= nil 2) 2 nil) nil ) 2 nil)
(COND (<= t (COND (<= t 2) 2 t) t ) 2 t)
(COND (<= (cons t t) (COND (<= (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 3) 3 1) 1 ) 3 1)
(COND (<= 2 (COND (<= 2 3) 3 2) 2 ) 3 2)
(COND (<= nil (COND (<= nil 3) 3 nil) nil ) 3 nil)
(COND (<= t (COND (<= t 3) 3 t) t ) 3 t)
(COND (<= (cons t t) (COND (<= (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 ()) () 1) 1 ) () 1)
(COND (<= 2 (COND (<= 2 ()) () 2) 2 ) () 2)
(COND (<= nil (COND (<= nil ()) () nil) nil ) () nil)
(COND (<= t (COND (<= t ()) () t) t ) () t)
(COND (<= (cons t t) (COND (<= (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 (())) (()) 1) 1 ) (()) 1)
(COND (<= 2 (COND (<= 2 (())) (()) 2) 2 ) (()) 2)
(COND (<= nil (COND (<= nil (())) (()) nil) nil ) (()) nil)
(COND (<= t (COND (<= t (())) (()) t) t ) (()) t)
(COND (<= (cons t t) (COND (<= (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (<= 2 (COND (<= 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (<= nil (COND (<= nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (<= t (COND (<= t ((()))) ((())) t) t ) ((())) t)
(COND (<= (cons t t) (COND (<= (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (<= 2 (COND (<= 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (<= nil (COND (<= nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (<= t (COND (<= t (((())))) (((()))) t) t ) (((()))) t)
(COND (<= (cons t t) (COND (<= (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 'A) 'A 1) 1 ) 'A 1)
(COND (<= 2 (COND (<= 2 'A) 'A 2) 2 ) 'A 2)
(COND (<= nil (COND (<= nil 'A) 'A nil) nil ) 'A nil)
(COND (<= t (COND (<= t 'A) 'A t) t ) 'A t)
(COND (<= (cons t t) (COND (<= (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 'B) 'B 1) 1 ) 'B 1)
(COND (<= 2 (COND (<= 2 'B) 'B 2) 2 ) 'B 2)
(COND (<= nil (COND (<= nil 'B) 'B nil) nil ) 'B nil)
(COND (<= t (COND (<= t 'B) 'B t) t ) 'B t)
(COND (<= (cons t t) (COND (<= (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 'C) 'C 1) 1 ) 'C 1)
(COND (<= 2 (COND (<= 2 'C) 'C 2) 2 ) 'C 2)
(COND (<= nil (COND (<= nil 'C) 'C nil) nil ) 'C nil)
(COND (<= t (COND (<= t 'C) 'C t) t ) 'C t)
(COND (<= (cons t t) (COND (<= (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 '1) '1 1) 1 ) '1 1)
(COND (<= 2 (COND (<= 2 '1) '1 2) 2 ) '1 2)
(COND (<= nil (COND (<= nil '1) '1 nil) nil ) '1 nil)
(COND (<= t (COND (<= t '1) '1 t) t ) '1 t)
(COND (<= (cons t t) (COND (<= (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 '2) '2 1) 1 ) '2 1)
(COND (<= 2 (COND (<= 2 '2) '2 2) 2 ) '2 2)
(COND (<= nil (COND (<= nil '2) '2 nil) nil ) '2 nil)
(COND (<= t (COND (<= t '2) '2 t) t ) '2 t)
(COND (<= (cons t t) (COND (<= (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 '3) '3 1) 1 ) '3 1)
(COND (<= 2 (COND (<= 2 '3) '3 2) 2 ) '3 2)
(COND (<= nil (COND (<= nil '3) '3 nil) nil ) '3 nil)
(COND (<= t (COND (<= t '3) '3 t) t ) '3 t)
(COND (<= (cons t t) (COND (<= (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 '()) '() 1) 1 ) '() 1)
(COND (<= 2 (COND (<= 2 '()) '() 2) 2 ) '() 2)
(COND (<= nil (COND (<= nil '()) '() nil) nil ) '() nil)
(COND (<= t (COND (<= t '()) '() t) t ) '() t)
(COND (<= (cons t t) (COND (<= (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (<= 2 (COND (<= 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (<= nil (COND (<= nil '(())) '(()) nil) nil ) '(()) nil)
(COND (<= t (COND (<= t '(())) '(()) t) t ) '(()) t)
(COND (<= (cons t t) (COND (<= (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (<= 2 (COND (<= 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (<= nil (COND (<= nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (<= t (COND (<= t '((()))) '((())) t) t ) '((())) t)
(COND (<= (cons t t) (COND (<= (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (<= 2 (COND (<= 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (<= nil (COND (<= nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (<= t (COND (<= t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (<= (cons t t) (COND (<= (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 ,A) ,A 1) 1 ) ,A 1)
(COND (<= 2 (COND (<= 2 ,A) ,A 2) 2 ) ,A 2)
(COND (<= nil (COND (<= nil ,A) ,A nil) nil ) ,A nil)
(COND (<= t (COND (<= t ,A) ,A t) t ) ,A t)
(COND (<= (cons t t) (COND (<= (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 ,1) ,1 1) 1 ) ,1 1)
(COND (<= 2 (COND (<= 2 ,1) ,1 2) 2 ) ,1 2)
(COND (<= nil (COND (<= nil ,1) ,1 nil) nil ) ,1 nil)
(COND (<= t (COND (<= t ,1) ,1 t) t ) ,1 t)
(COND (<= (cons t t) (COND (<= (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 ,()) ,() 1) 1 ) ,() 1)
(COND (<= 2 (COND (<= 2 ,()) ,() 2) 2 ) ,() 2)
(COND (<= nil (COND (<= nil ,()) ,() nil) nil ) ,() nil)
(COND (<= t (COND (<= t ,()) ,() t) t ) ,() t)
(COND (<= (cons t t) (COND (<= (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (<= 2 (COND (<= 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (<= nil (COND (<= nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (<= t (COND (<= t ,(())) ,(()) t) t ) ,(()) t)
(COND (<= (cons t t) (COND (<= (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'A) `'A 1) 1 ) `'A 1)
(COND (<= 2 (COND (<= 2 `'A) `'A 2) 2 ) `'A 2)
(COND (<= nil (COND (<= nil `'A) `'A nil) nil ) `'A nil)
(COND (<= t (COND (<= t `'A) `'A t) t ) `'A t)
(COND (<= (cons t t) (COND (<= (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'B) `'B 1) 1 ) `'B 1)
(COND (<= 2 (COND (<= 2 `'B) `'B 2) 2 ) `'B 2)
(COND (<= nil (COND (<= nil `'B) `'B nil) nil ) `'B nil)
(COND (<= t (COND (<= t `'B) `'B t) t ) `'B t)
(COND (<= (cons t t) (COND (<= (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'C) `'C 1) 1 ) `'C 1)
(COND (<= 2 (COND (<= 2 `'C) `'C 2) 2 ) `'C 2)
(COND (<= nil (COND (<= nil `'C) `'C nil) nil ) `'C nil)
(COND (<= t (COND (<= t `'C) `'C t) t ) `'C t)
(COND (<= (cons t t) (COND (<= (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'1) `'1 1) 1 ) `'1 1)
(COND (<= 2 (COND (<= 2 `'1) `'1 2) 2 ) `'1 2)
(COND (<= nil (COND (<= nil `'1) `'1 nil) nil ) `'1 nil)
(COND (<= t (COND (<= t `'1) `'1 t) t ) `'1 t)
(COND (<= (cons t t) (COND (<= (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'2) `'2 1) 1 ) `'2 1)
(COND (<= 2 (COND (<= 2 `'2) `'2 2) 2 ) `'2 2)
(COND (<= nil (COND (<= nil `'2) `'2 nil) nil ) `'2 nil)
(COND (<= t (COND (<= t `'2) `'2 t) t ) `'2 t)
(COND (<= (cons t t) (COND (<= (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'3) `'3 1) 1 ) `'3 1)
(COND (<= 2 (COND (<= 2 `'3) `'3 2) 2 ) `'3 2)
(COND (<= nil (COND (<= nil `'3) `'3 nil) nil ) `'3 nil)
(COND (<= t (COND (<= t `'3) `'3 t) t ) `'3 t)
(COND (<= (cons t t) (COND (<= (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'()) `'() 1) 1 ) `'() 1)
(COND (<= 2 (COND (<= 2 `'()) `'() 2) 2 ) `'() 2)
(COND (<= nil (COND (<= nil `'()) `'() nil) nil ) `'() nil)
(COND (<= t (COND (<= t `'()) `'() t) t ) `'() t)
(COND (<= (cons t t) (COND (<= (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (<= 2 (COND (<= 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (<= nil (COND (<= nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (<= t (COND (<= t `'(())) `'(()) t) t ) `'(()) t)
(COND (<= (cons t t) (COND (<= (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (<= 2 (COND (<= 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (<= nil (COND (<= nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (<= t (COND (<= t `'((()))) `'((())) t) t ) `'((())) t)
(COND (<= (cons t t) (COND (<= (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (<= 1 (COND (<= 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (<= 2 (COND (<= 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (<= nil (COND (<= nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (<= t (COND (<= t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (<= (cons t t) (COND (<= (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (<= (cons nil t) (COND (<= (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (<= (cons nil nil) (COND (<= (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (<= (cons 0 0) (COND (<= (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (<= (cons 1 1) (COND (<= (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (<= (list 1 2 3) (COND (<= (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (<= (list (cons 1 1 ) ) (COND (<= (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 T) T 1) 1 ) T 1)
(COND (= 2 (COND (= 2 T) T 2) 2 ) T 2)
(COND (= nil (COND (= nil T) T nil) nil ) T nil)
(COND (= t (COND (= t T) T t) t ) T t)
(COND (= (cons t t) (COND (= (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 NIL) NIL 1) 1 ) NIL 1)
(COND (= 2 (COND (= 2 NIL) NIL 2) 2 ) NIL 2)
(COND (= nil (COND (= nil NIL) NIL nil) nil ) NIL nil)
(COND (= t (COND (= t NIL) NIL t) t ) NIL t)
(COND (= (cons t t) (COND (= (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 A) A 1) 1 ) A 1)
(COND (= 2 (COND (= 2 A) A 2) 2 ) A 2)
(COND (= nil (COND (= nil A) A nil) nil ) A nil)
(COND (= t (COND (= t A) A t) t ) A t)
(COND (= (cons t t) (COND (= (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 B) B 1) 1 ) B 1)
(COND (= 2 (COND (= 2 B) B 2) 2 ) B 2)
(COND (= nil (COND (= nil B) B nil) nil ) B nil)
(COND (= t (COND (= t B) B t) t ) B t)
(COND (= (cons t t) (COND (= (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 C) C 1) 1 ) C 1)
(COND (= 2 (COND (= 2 C) C 2) 2 ) C 2)
(COND (= nil (COND (= nil C) C nil) nil ) C nil)
(COND (= t (COND (= t C) C t) t ) C t)
(COND (= (cons t t) (COND (= (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 1) 1 1) 1 ) 1 1)
(COND (= 2 (COND (= 2 1) 1 2) 2 ) 1 2)
(COND (= nil (COND (= nil 1) 1 nil) nil ) 1 nil)
(COND (= t (COND (= t 1) 1 t) t ) 1 t)
(COND (= (cons t t) (COND (= (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 2) 2 1) 1 ) 2 1)
(COND (= 2 (COND (= 2 2) 2 2) 2 ) 2 2)
(COND (= nil (COND (= nil 2) 2 nil) nil ) 2 nil)
(COND (= t (COND (= t 2) 2 t) t ) 2 t)
(COND (= (cons t t) (COND (= (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 3) 3 1) 1 ) 3 1)
(COND (= 2 (COND (= 2 3) 3 2) 2 ) 3 2)
(COND (= nil (COND (= nil 3) 3 nil) nil ) 3 nil)
(COND (= t (COND (= t 3) 3 t) t ) 3 t)
(COND (= (cons t t) (COND (= (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 ()) () 1) 1 ) () 1)
(COND (= 2 (COND (= 2 ()) () 2) 2 ) () 2)
(COND (= nil (COND (= nil ()) () nil) nil ) () nil)
(COND (= t (COND (= t ()) () t) t ) () t)
(COND (= (cons t t) (COND (= (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 (())) (()) 1) 1 ) (()) 1)
(COND (= 2 (COND (= 2 (())) (()) 2) 2 ) (()) 2)
(COND (= nil (COND (= nil (())) (()) nil) nil ) (()) nil)
(COND (= t (COND (= t (())) (()) t) t ) (()) t)
(COND (= (cons t t) (COND (= (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (= 2 (COND (= 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (= nil (COND (= nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (= t (COND (= t ((()))) ((())) t) t ) ((())) t)
(COND (= (cons t t) (COND (= (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (= 2 (COND (= 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (= nil (COND (= nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (= t (COND (= t (((())))) (((()))) t) t ) (((()))) t)
(COND (= (cons t t) (COND (= (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 'A) 'A 1) 1 ) 'A 1)
(COND (= 2 (COND (= 2 'A) 'A 2) 2 ) 'A 2)
(COND (= nil (COND (= nil 'A) 'A nil) nil ) 'A nil)
(COND (= t (COND (= t 'A) 'A t) t ) 'A t)
(COND (= (cons t t) (COND (= (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 'B) 'B 1) 1 ) 'B 1)
(COND (= 2 (COND (= 2 'B) 'B 2) 2 ) 'B 2)
(COND (= nil (COND (= nil 'B) 'B nil) nil ) 'B nil)
(COND (= t (COND (= t 'B) 'B t) t ) 'B t)
(COND (= (cons t t) (COND (= (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 'C) 'C 1) 1 ) 'C 1)
(COND (= 2 (COND (= 2 'C) 'C 2) 2 ) 'C 2)
(COND (= nil (COND (= nil 'C) 'C nil) nil ) 'C nil)
(COND (= t (COND (= t 'C) 'C t) t ) 'C t)
(COND (= (cons t t) (COND (= (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 '1) '1 1) 1 ) '1 1)
(COND (= 2 (COND (= 2 '1) '1 2) 2 ) '1 2)
(COND (= nil (COND (= nil '1) '1 nil) nil ) '1 nil)
(COND (= t (COND (= t '1) '1 t) t ) '1 t)
(COND (= (cons t t) (COND (= (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 '2) '2 1) 1 ) '2 1)
(COND (= 2 (COND (= 2 '2) '2 2) 2 ) '2 2)
(COND (= nil (COND (= nil '2) '2 nil) nil ) '2 nil)
(COND (= t (COND (= t '2) '2 t) t ) '2 t)
(COND (= (cons t t) (COND (= (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 '3) '3 1) 1 ) '3 1)
(COND (= 2 (COND (= 2 '3) '3 2) 2 ) '3 2)
(COND (= nil (COND (= nil '3) '3 nil) nil ) '3 nil)
(COND (= t (COND (= t '3) '3 t) t ) '3 t)
(COND (= (cons t t) (COND (= (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 '()) '() 1) 1 ) '() 1)
(COND (= 2 (COND (= 2 '()) '() 2) 2 ) '() 2)
(COND (= nil (COND (= nil '()) '() nil) nil ) '() nil)
(COND (= t (COND (= t '()) '() t) t ) '() t)
(COND (= (cons t t) (COND (= (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (= 2 (COND (= 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (= nil (COND (= nil '(())) '(()) nil) nil ) '(()) nil)
(COND (= t (COND (= t '(())) '(()) t) t ) '(()) t)
(COND (= (cons t t) (COND (= (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (= 2 (COND (= 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (= nil (COND (= nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (= t (COND (= t '((()))) '((())) t) t ) '((())) t)
(COND (= (cons t t) (COND (= (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (= 2 (COND (= 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (= nil (COND (= nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (= t (COND (= t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (= (cons t t) (COND (= (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 ,A) ,A 1) 1 ) ,A 1)
(COND (= 2 (COND (= 2 ,A) ,A 2) 2 ) ,A 2)
(COND (= nil (COND (= nil ,A) ,A nil) nil ) ,A nil)
(COND (= t (COND (= t ,A) ,A t) t ) ,A t)
(COND (= (cons t t) (COND (= (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 ,1) ,1 1) 1 ) ,1 1)
(COND (= 2 (COND (= 2 ,1) ,1 2) 2 ) ,1 2)
(COND (= nil (COND (= nil ,1) ,1 nil) nil ) ,1 nil)
(COND (= t (COND (= t ,1) ,1 t) t ) ,1 t)
(COND (= (cons t t) (COND (= (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 ,()) ,() 1) 1 ) ,() 1)
(COND (= 2 (COND (= 2 ,()) ,() 2) 2 ) ,() 2)
(COND (= nil (COND (= nil ,()) ,() nil) nil ) ,() nil)
(COND (= t (COND (= t ,()) ,() t) t ) ,() t)
(COND (= (cons t t) (COND (= (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (= 2 (COND (= 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (= nil (COND (= nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (= t (COND (= t ,(())) ,(()) t) t ) ,(()) t)
(COND (= (cons t t) (COND (= (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'A) `'A 1) 1 ) `'A 1)
(COND (= 2 (COND (= 2 `'A) `'A 2) 2 ) `'A 2)
(COND (= nil (COND (= nil `'A) `'A nil) nil ) `'A nil)
(COND (= t (COND (= t `'A) `'A t) t ) `'A t)
(COND (= (cons t t) (COND (= (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'B) `'B 1) 1 ) `'B 1)
(COND (= 2 (COND (= 2 `'B) `'B 2) 2 ) `'B 2)
(COND (= nil (COND (= nil `'B) `'B nil) nil ) `'B nil)
(COND (= t (COND (= t `'B) `'B t) t ) `'B t)
(COND (= (cons t t) (COND (= (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'C) `'C 1) 1 ) `'C 1)
(COND (= 2 (COND (= 2 `'C) `'C 2) 2 ) `'C 2)
(COND (= nil (COND (= nil `'C) `'C nil) nil ) `'C nil)
(COND (= t (COND (= t `'C) `'C t) t ) `'C t)
(COND (= (cons t t) (COND (= (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'1) `'1 1) 1 ) `'1 1)
(COND (= 2 (COND (= 2 `'1) `'1 2) 2 ) `'1 2)
(COND (= nil (COND (= nil `'1) `'1 nil) nil ) `'1 nil)
(COND (= t (COND (= t `'1) `'1 t) t ) `'1 t)
(COND (= (cons t t) (COND (= (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'2) `'2 1) 1 ) `'2 1)
(COND (= 2 (COND (= 2 `'2) `'2 2) 2 ) `'2 2)
(COND (= nil (COND (= nil `'2) `'2 nil) nil ) `'2 nil)
(COND (= t (COND (= t `'2) `'2 t) t ) `'2 t)
(COND (= (cons t t) (COND (= (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'3) `'3 1) 1 ) `'3 1)
(COND (= 2 (COND (= 2 `'3) `'3 2) 2 ) `'3 2)
(COND (= nil (COND (= nil `'3) `'3 nil) nil ) `'3 nil)
(COND (= t (COND (= t `'3) `'3 t) t ) `'3 t)
(COND (= (cons t t) (COND (= (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'()) `'() 1) 1 ) `'() 1)
(COND (= 2 (COND (= 2 `'()) `'() 2) 2 ) `'() 2)
(COND (= nil (COND (= nil `'()) `'() nil) nil ) `'() nil)
(COND (= t (COND (= t `'()) `'() t) t ) `'() t)
(COND (= (cons t t) (COND (= (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (= 2 (COND (= 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (= nil (COND (= nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (= t (COND (= t `'(())) `'(()) t) t ) `'(()) t)
(COND (= (cons t t) (COND (= (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (= 2 (COND (= 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (= nil (COND (= nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (= t (COND (= t `'((()))) `'((())) t) t ) `'((())) t)
(COND (= (cons t t) (COND (= (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (= 1 (COND (= 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (= 2 (COND (= 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (= nil (COND (= nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (= t (COND (= t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (= (cons t t) (COND (= (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (= (cons nil t) (COND (= (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (= (cons nil nil) (COND (= (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (= (cons 0 0) (COND (= (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (= (cons 1 1) (COND (= (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (= (list 1 2 3) (COND (= (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (= (list (cons 1 1 ) ) (COND (= (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 T) T 1) 1 ) T 1)
(COND (> 2 (COND (> 2 T) T 2) 2 ) T 2)
(COND (> nil (COND (> nil T) T nil) nil ) T nil)
(COND (> t (COND (> t T) T t) t ) T t)
(COND (> (cons t t) (COND (> (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 NIL) NIL 1) 1 ) NIL 1)
(COND (> 2 (COND (> 2 NIL) NIL 2) 2 ) NIL 2)
(COND (> nil (COND (> nil NIL) NIL nil) nil ) NIL nil)
(COND (> t (COND (> t NIL) NIL t) t ) NIL t)
(COND (> (cons t t) (COND (> (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 A) A 1) 1 ) A 1)
(COND (> 2 (COND (> 2 A) A 2) 2 ) A 2)
(COND (> nil (COND (> nil A) A nil) nil ) A nil)
(COND (> t (COND (> t A) A t) t ) A t)
(COND (> (cons t t) (COND (> (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 B) B 1) 1 ) B 1)
(COND (> 2 (COND (> 2 B) B 2) 2 ) B 2)
(COND (> nil (COND (> nil B) B nil) nil ) B nil)
(COND (> t (COND (> t B) B t) t ) B t)
(COND (> (cons t t) (COND (> (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 C) C 1) 1 ) C 1)
(COND (> 2 (COND (> 2 C) C 2) 2 ) C 2)
(COND (> nil (COND (> nil C) C nil) nil ) C nil)
(COND (> t (COND (> t C) C t) t ) C t)
(COND (> (cons t t) (COND (> (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 1) 1 1) 1 ) 1 1)
(COND (> 2 (COND (> 2 1) 1 2) 2 ) 1 2)
(COND (> nil (COND (> nil 1) 1 nil) nil ) 1 nil)
(COND (> t (COND (> t 1) 1 t) t ) 1 t)
(COND (> (cons t t) (COND (> (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 2) 2 1) 1 ) 2 1)
(COND (> 2 (COND (> 2 2) 2 2) 2 ) 2 2)
(COND (> nil (COND (> nil 2) 2 nil) nil ) 2 nil)
(COND (> t (COND (> t 2) 2 t) t ) 2 t)
(COND (> (cons t t) (COND (> (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 3) 3 1) 1 ) 3 1)
(COND (> 2 (COND (> 2 3) 3 2) 2 ) 3 2)
(COND (> nil (COND (> nil 3) 3 nil) nil ) 3 nil)
(COND (> t (COND (> t 3) 3 t) t ) 3 t)
(COND (> (cons t t) (COND (> (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 ()) () 1) 1 ) () 1)
(COND (> 2 (COND (> 2 ()) () 2) 2 ) () 2)
(COND (> nil (COND (> nil ()) () nil) nil ) () nil)
(COND (> t (COND (> t ()) () t) t ) () t)
(COND (> (cons t t) (COND (> (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 (())) (()) 1) 1 ) (()) 1)
(COND (> 2 (COND (> 2 (())) (()) 2) 2 ) (()) 2)
(COND (> nil (COND (> nil (())) (()) nil) nil ) (()) nil)
(COND (> t (COND (> t (())) (()) t) t ) (()) t)
(COND (> (cons t t) (COND (> (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (> 2 (COND (> 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (> nil (COND (> nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (> t (COND (> t ((()))) ((())) t) t ) ((())) t)
(COND (> (cons t t) (COND (> (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (> 2 (COND (> 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (> nil (COND (> nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (> t (COND (> t (((())))) (((()))) t) t ) (((()))) t)
(COND (> (cons t t) (COND (> (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 'A) 'A 1) 1 ) 'A 1)
(COND (> 2 (COND (> 2 'A) 'A 2) 2 ) 'A 2)
(COND (> nil (COND (> nil 'A) 'A nil) nil ) 'A nil)
(COND (> t (COND (> t 'A) 'A t) t ) 'A t)
(COND (> (cons t t) (COND (> (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 'B) 'B 1) 1 ) 'B 1)
(COND (> 2 (COND (> 2 'B) 'B 2) 2 ) 'B 2)
(COND (> nil (COND (> nil 'B) 'B nil) nil ) 'B nil)
(COND (> t (COND (> t 'B) 'B t) t ) 'B t)
(COND (> (cons t t) (COND (> (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 'C) 'C 1) 1 ) 'C 1)
(COND (> 2 (COND (> 2 'C) 'C 2) 2 ) 'C 2)
(COND (> nil (COND (> nil 'C) 'C nil) nil ) 'C nil)
(COND (> t (COND (> t 'C) 'C t) t ) 'C t)
(COND (> (cons t t) (COND (> (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 '1) '1 1) 1 ) '1 1)
(COND (> 2 (COND (> 2 '1) '1 2) 2 ) '1 2)
(COND (> nil (COND (> nil '1) '1 nil) nil ) '1 nil)
(COND (> t (COND (> t '1) '1 t) t ) '1 t)
(COND (> (cons t t) (COND (> (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 '2) '2 1) 1 ) '2 1)
(COND (> 2 (COND (> 2 '2) '2 2) 2 ) '2 2)
(COND (> nil (COND (> nil '2) '2 nil) nil ) '2 nil)
(COND (> t (COND (> t '2) '2 t) t ) '2 t)
(COND (> (cons t t) (COND (> (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 '3) '3 1) 1 ) '3 1)
(COND (> 2 (COND (> 2 '3) '3 2) 2 ) '3 2)
(COND (> nil (COND (> nil '3) '3 nil) nil ) '3 nil)
(COND (> t (COND (> t '3) '3 t) t ) '3 t)
(COND (> (cons t t) (COND (> (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 '()) '() 1) 1 ) '() 1)
(COND (> 2 (COND (> 2 '()) '() 2) 2 ) '() 2)
(COND (> nil (COND (> nil '()) '() nil) nil ) '() nil)
(COND (> t (COND (> t '()) '() t) t ) '() t)
(COND (> (cons t t) (COND (> (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (> 2 (COND (> 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (> nil (COND (> nil '(())) '(()) nil) nil ) '(()) nil)
(COND (> t (COND (> t '(())) '(()) t) t ) '(()) t)
(COND (> (cons t t) (COND (> (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (> 2 (COND (> 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (> nil (COND (> nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (> t (COND (> t '((()))) '((())) t) t ) '((())) t)
(COND (> (cons t t) (COND (> (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (> 2 (COND (> 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (> nil (COND (> nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (> t (COND (> t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (> (cons t t) (COND (> (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 ,A) ,A 1) 1 ) ,A 1)
(COND (> 2 (COND (> 2 ,A) ,A 2) 2 ) ,A 2)
(COND (> nil (COND (> nil ,A) ,A nil) nil ) ,A nil)
(COND (> t (COND (> t ,A) ,A t) t ) ,A t)
(COND (> (cons t t) (COND (> (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 ,1) ,1 1) 1 ) ,1 1)
(COND (> 2 (COND (> 2 ,1) ,1 2) 2 ) ,1 2)
(COND (> nil (COND (> nil ,1) ,1 nil) nil ) ,1 nil)
(COND (> t (COND (> t ,1) ,1 t) t ) ,1 t)
(COND (> (cons t t) (COND (> (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 ,()) ,() 1) 1 ) ,() 1)
(COND (> 2 (COND (> 2 ,()) ,() 2) 2 ) ,() 2)
(COND (> nil (COND (> nil ,()) ,() nil) nil ) ,() nil)
(COND (> t (COND (> t ,()) ,() t) t ) ,() t)
(COND (> (cons t t) (COND (> (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (> 2 (COND (> 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (> nil (COND (> nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (> t (COND (> t ,(())) ,(()) t) t ) ,(()) t)
(COND (> (cons t t) (COND (> (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'A) `'A 1) 1 ) `'A 1)
(COND (> 2 (COND (> 2 `'A) `'A 2) 2 ) `'A 2)
(COND (> nil (COND (> nil `'A) `'A nil) nil ) `'A nil)
(COND (> t (COND (> t `'A) `'A t) t ) `'A t)
(COND (> (cons t t) (COND (> (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'B) `'B 1) 1 ) `'B 1)
(COND (> 2 (COND (> 2 `'B) `'B 2) 2 ) `'B 2)
(COND (> nil (COND (> nil `'B) `'B nil) nil ) `'B nil)
(COND (> t (COND (> t `'B) `'B t) t ) `'B t)
(COND (> (cons t t) (COND (> (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'C) `'C 1) 1 ) `'C 1)
(COND (> 2 (COND (> 2 `'C) `'C 2) 2 ) `'C 2)
(COND (> nil (COND (> nil `'C) `'C nil) nil ) `'C nil)
(COND (> t (COND (> t `'C) `'C t) t ) `'C t)
(COND (> (cons t t) (COND (> (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'1) `'1 1) 1 ) `'1 1)
(COND (> 2 (COND (> 2 `'1) `'1 2) 2 ) `'1 2)
(COND (> nil (COND (> nil `'1) `'1 nil) nil ) `'1 nil)
(COND (> t (COND (> t `'1) `'1 t) t ) `'1 t)
(COND (> (cons t t) (COND (> (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'2) `'2 1) 1 ) `'2 1)
(COND (> 2 (COND (> 2 `'2) `'2 2) 2 ) `'2 2)
(COND (> nil (COND (> nil `'2) `'2 nil) nil ) `'2 nil)
(COND (> t (COND (> t `'2) `'2 t) t ) `'2 t)
(COND (> (cons t t) (COND (> (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'3) `'3 1) 1 ) `'3 1)
(COND (> 2 (COND (> 2 `'3) `'3 2) 2 ) `'3 2)
(COND (> nil (COND (> nil `'3) `'3 nil) nil ) `'3 nil)
(COND (> t (COND (> t `'3) `'3 t) t ) `'3 t)
(COND (> (cons t t) (COND (> (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'()) `'() 1) 1 ) `'() 1)
(COND (> 2 (COND (> 2 `'()) `'() 2) 2 ) `'() 2)
(COND (> nil (COND (> nil `'()) `'() nil) nil ) `'() nil)
(COND (> t (COND (> t `'()) `'() t) t ) `'() t)
(COND (> (cons t t) (COND (> (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (> 2 (COND (> 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (> nil (COND (> nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (> t (COND (> t `'(())) `'(()) t) t ) `'(()) t)
(COND (> (cons t t) (COND (> (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (> 2 (COND (> 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (> nil (COND (> nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (> t (COND (> t `'((()))) `'((())) t) t ) `'((())) t)
(COND (> (cons t t) (COND (> (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (> 1 (COND (> 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (> 2 (COND (> 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (> nil (COND (> nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (> t (COND (> t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (> (cons t t) (COND (> (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (> (cons nil t) (COND (> (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (> (cons nil nil) (COND (> (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (> (cons 0 0) (COND (> (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (> (cons 1 1) (COND (> (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (> (list 1 2 3) (COND (> (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (> (list (cons 1 1 ) ) (COND (> (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 T) T 1) 1 ) T 1)
(COND (>= 2 (COND (>= 2 T) T 2) 2 ) T 2)
(COND (>= nil (COND (>= nil T) T nil) nil ) T nil)
(COND (>= t (COND (>= t T) T t) t ) T t)
(COND (>= (cons t t) (COND (>= (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 NIL) NIL 1) 1 ) NIL 1)
(COND (>= 2 (COND (>= 2 NIL) NIL 2) 2 ) NIL 2)
(COND (>= nil (COND (>= nil NIL) NIL nil) nil ) NIL nil)
(COND (>= t (COND (>= t NIL) NIL t) t ) NIL t)
(COND (>= (cons t t) (COND (>= (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 A) A 1) 1 ) A 1)
(COND (>= 2 (COND (>= 2 A) A 2) 2 ) A 2)
(COND (>= nil (COND (>= nil A) A nil) nil ) A nil)
(COND (>= t (COND (>= t A) A t) t ) A t)
(COND (>= (cons t t) (COND (>= (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 B) B 1) 1 ) B 1)
(COND (>= 2 (COND (>= 2 B) B 2) 2 ) B 2)
(COND (>= nil (COND (>= nil B) B nil) nil ) B nil)
(COND (>= t (COND (>= t B) B t) t ) B t)
(COND (>= (cons t t) (COND (>= (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 C) C 1) 1 ) C 1)
(COND (>= 2 (COND (>= 2 C) C 2) 2 ) C 2)
(COND (>= nil (COND (>= nil C) C nil) nil ) C nil)
(COND (>= t (COND (>= t C) C t) t ) C t)
(COND (>= (cons t t) (COND (>= (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 1) 1 1) 1 ) 1 1)
(COND (>= 2 (COND (>= 2 1) 1 2) 2 ) 1 2)
(COND (>= nil (COND (>= nil 1) 1 nil) nil ) 1 nil)
(COND (>= t (COND (>= t 1) 1 t) t ) 1 t)
(COND (>= (cons t t) (COND (>= (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 2) 2 1) 1 ) 2 1)
(COND (>= 2 (COND (>= 2 2) 2 2) 2 ) 2 2)
(COND (>= nil (COND (>= nil 2) 2 nil) nil ) 2 nil)
(COND (>= t (COND (>= t 2) 2 t) t ) 2 t)
(COND (>= (cons t t) (COND (>= (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 3) 3 1) 1 ) 3 1)
(COND (>= 2 (COND (>= 2 3) 3 2) 2 ) 3 2)
(COND (>= nil (COND (>= nil 3) 3 nil) nil ) 3 nil)
(COND (>= t (COND (>= t 3) 3 t) t ) 3 t)
(COND (>= (cons t t) (COND (>= (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 ()) () 1) 1 ) () 1)
(COND (>= 2 (COND (>= 2 ()) () 2) 2 ) () 2)
(COND (>= nil (COND (>= nil ()) () nil) nil ) () nil)
(COND (>= t (COND (>= t ()) () t) t ) () t)
(COND (>= (cons t t) (COND (>= (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 (())) (()) 1) 1 ) (()) 1)
(COND (>= 2 (COND (>= 2 (())) (()) 2) 2 ) (()) 2)
(COND (>= nil (COND (>= nil (())) (()) nil) nil ) (()) nil)
(COND (>= t (COND (>= t (())) (()) t) t ) (()) t)
(COND (>= (cons t t) (COND (>= (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (>= 2 (COND (>= 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (>= nil (COND (>= nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (>= t (COND (>= t ((()))) ((())) t) t ) ((())) t)
(COND (>= (cons t t) (COND (>= (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (>= 2 (COND (>= 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (>= nil (COND (>= nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (>= t (COND (>= t (((())))) (((()))) t) t ) (((()))) t)
(COND (>= (cons t t) (COND (>= (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 'A) 'A 1) 1 ) 'A 1)
(COND (>= 2 (COND (>= 2 'A) 'A 2) 2 ) 'A 2)
(COND (>= nil (COND (>= nil 'A) 'A nil) nil ) 'A nil)
(COND (>= t (COND (>= t 'A) 'A t) t ) 'A t)
(COND (>= (cons t t) (COND (>= (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 'B) 'B 1) 1 ) 'B 1)
(COND (>= 2 (COND (>= 2 'B) 'B 2) 2 ) 'B 2)
(COND (>= nil (COND (>= nil 'B) 'B nil) nil ) 'B nil)
(COND (>= t (COND (>= t 'B) 'B t) t ) 'B t)
(COND (>= (cons t t) (COND (>= (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 'C) 'C 1) 1 ) 'C 1)
(COND (>= 2 (COND (>= 2 'C) 'C 2) 2 ) 'C 2)
(COND (>= nil (COND (>= nil 'C) 'C nil) nil ) 'C nil)
(COND (>= t (COND (>= t 'C) 'C t) t ) 'C t)
(COND (>= (cons t t) (COND (>= (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 '1) '1 1) 1 ) '1 1)
(COND (>= 2 (COND (>= 2 '1) '1 2) 2 ) '1 2)
(COND (>= nil (COND (>= nil '1) '1 nil) nil ) '1 nil)
(COND (>= t (COND (>= t '1) '1 t) t ) '1 t)
(COND (>= (cons t t) (COND (>= (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 '2) '2 1) 1 ) '2 1)
(COND (>= 2 (COND (>= 2 '2) '2 2) 2 ) '2 2)
(COND (>= nil (COND (>= nil '2) '2 nil) nil ) '2 nil)
(COND (>= t (COND (>= t '2) '2 t) t ) '2 t)
(COND (>= (cons t t) (COND (>= (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 '3) '3 1) 1 ) '3 1)
(COND (>= 2 (COND (>= 2 '3) '3 2) 2 ) '3 2)
(COND (>= nil (COND (>= nil '3) '3 nil) nil ) '3 nil)
(COND (>= t (COND (>= t '3) '3 t) t ) '3 t)
(COND (>= (cons t t) (COND (>= (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 '()) '() 1) 1 ) '() 1)
(COND (>= 2 (COND (>= 2 '()) '() 2) 2 ) '() 2)
(COND (>= nil (COND (>= nil '()) '() nil) nil ) '() nil)
(COND (>= t (COND (>= t '()) '() t) t ) '() t)
(COND (>= (cons t t) (COND (>= (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (>= 2 (COND (>= 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (>= nil (COND (>= nil '(())) '(()) nil) nil ) '(()) nil)
(COND (>= t (COND (>= t '(())) '(()) t) t ) '(()) t)
(COND (>= (cons t t) (COND (>= (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (>= 2 (COND (>= 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (>= nil (COND (>= nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (>= t (COND (>= t '((()))) '((())) t) t ) '((())) t)
(COND (>= (cons t t) (COND (>= (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (>= 2 (COND (>= 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (>= nil (COND (>= nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (>= t (COND (>= t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (>= (cons t t) (COND (>= (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 ,A) ,A 1) 1 ) ,A 1)
(COND (>= 2 (COND (>= 2 ,A) ,A 2) 2 ) ,A 2)
(COND (>= nil (COND (>= nil ,A) ,A nil) nil ) ,A nil)
(COND (>= t (COND (>= t ,A) ,A t) t ) ,A t)
(COND (>= (cons t t) (COND (>= (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 ,1) ,1 1) 1 ) ,1 1)
(COND (>= 2 (COND (>= 2 ,1) ,1 2) 2 ) ,1 2)
(COND (>= nil (COND (>= nil ,1) ,1 nil) nil ) ,1 nil)
(COND (>= t (COND (>= t ,1) ,1 t) t ) ,1 t)
(COND (>= (cons t t) (COND (>= (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 ,()) ,() 1) 1 ) ,() 1)
(COND (>= 2 (COND (>= 2 ,()) ,() 2) 2 ) ,() 2)
(COND (>= nil (COND (>= nil ,()) ,() nil) nil ) ,() nil)
(COND (>= t (COND (>= t ,()) ,() t) t ) ,() t)
(COND (>= (cons t t) (COND (>= (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (>= 2 (COND (>= 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (>= nil (COND (>= nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (>= t (COND (>= t ,(())) ,(()) t) t ) ,(()) t)
(COND (>= (cons t t) (COND (>= (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'A) `'A 1) 1 ) `'A 1)
(COND (>= 2 (COND (>= 2 `'A) `'A 2) 2 ) `'A 2)
(COND (>= nil (COND (>= nil `'A) `'A nil) nil ) `'A nil)
(COND (>= t (COND (>= t `'A) `'A t) t ) `'A t)
(COND (>= (cons t t) (COND (>= (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'B) `'B 1) 1 ) `'B 1)
(COND (>= 2 (COND (>= 2 `'B) `'B 2) 2 ) `'B 2)
(COND (>= nil (COND (>= nil `'B) `'B nil) nil ) `'B nil)
(COND (>= t (COND (>= t `'B) `'B t) t ) `'B t)
(COND (>= (cons t t) (COND (>= (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'C) `'C 1) 1 ) `'C 1)
(COND (>= 2 (COND (>= 2 `'C) `'C 2) 2 ) `'C 2)
(COND (>= nil (COND (>= nil `'C) `'C nil) nil ) `'C nil)
(COND (>= t (COND (>= t `'C) `'C t) t ) `'C t)
(COND (>= (cons t t) (COND (>= (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'1) `'1 1) 1 ) `'1 1)
(COND (>= 2 (COND (>= 2 `'1) `'1 2) 2 ) `'1 2)
(COND (>= nil (COND (>= nil `'1) `'1 nil) nil ) `'1 nil)
(COND (>= t (COND (>= t `'1) `'1 t) t ) `'1 t)
(COND (>= (cons t t) (COND (>= (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'2) `'2 1) 1 ) `'2 1)
(COND (>= 2 (COND (>= 2 `'2) `'2 2) 2 ) `'2 2)
(COND (>= nil (COND (>= nil `'2) `'2 nil) nil ) `'2 nil)
(COND (>= t (COND (>= t `'2) `'2 t) t ) `'2 t)
(COND (>= (cons t t) (COND (>= (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'3) `'3 1) 1 ) `'3 1)
(COND (>= 2 (COND (>= 2 `'3) `'3 2) 2 ) `'3 2)
(COND (>= nil (COND (>= nil `'3) `'3 nil) nil ) `'3 nil)
(COND (>= t (COND (>= t `'3) `'3 t) t ) `'3 t)
(COND (>= (cons t t) (COND (>= (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'()) `'() 1) 1 ) `'() 1)
(COND (>= 2 (COND (>= 2 `'()) `'() 2) 2 ) `'() 2)
(COND (>= nil (COND (>= nil `'()) `'() nil) nil ) `'() nil)
(COND (>= t (COND (>= t `'()) `'() t) t ) `'() t)
(COND (>= (cons t t) (COND (>= (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (>= 2 (COND (>= 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (>= nil (COND (>= nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (>= t (COND (>= t `'(())) `'(()) t) t ) `'(()) t)
(COND (>= (cons t t) (COND (>= (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (>= 2 (COND (>= 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (>= nil (COND (>= nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (>= t (COND (>= t `'((()))) `'((())) t) t ) `'((())) t)
(COND (>= (cons t t) (COND (>= (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (>= 1 (COND (>= 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (>= 2 (COND (>= 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (>= nil (COND (>= nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (>= t (COND (>= t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (>= (cons t t) (COND (>= (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (>= (cons nil t) (COND (>= (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (>= (cons nil nil) (COND (>= (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (>= (cons 0 0) (COND (>= (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (>= (cons 1 1) (COND (>= (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (>= (list 1 2 3) (COND (>= (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (>= (list (cons 1 1 ) ) (COND (>= (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 T) T 1) 1 ) T 1)
(COND (ADD 2 (COND (ADD 2 T) T 2) 2 ) T 2)
(COND (ADD nil (COND (ADD nil T) T nil) nil ) T nil)
(COND (ADD t (COND (ADD t T) T t) t ) T t)
(COND (ADD (cons t t) (COND (ADD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 NIL) NIL 1) 1 ) NIL 1)
(COND (ADD 2 (COND (ADD 2 NIL) NIL 2) 2 ) NIL 2)
(COND (ADD nil (COND (ADD nil NIL) NIL nil) nil ) NIL nil)
(COND (ADD t (COND (ADD t NIL) NIL t) t ) NIL t)
(COND (ADD (cons t t) (COND (ADD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 A) A 1) 1 ) A 1)
(COND (ADD 2 (COND (ADD 2 A) A 2) 2 ) A 2)
(COND (ADD nil (COND (ADD nil A) A nil) nil ) A nil)
(COND (ADD t (COND (ADD t A) A t) t ) A t)
(COND (ADD (cons t t) (COND (ADD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 B) B 1) 1 ) B 1)
(COND (ADD 2 (COND (ADD 2 B) B 2) 2 ) B 2)
(COND (ADD nil (COND (ADD nil B) B nil) nil ) B nil)
(COND (ADD t (COND (ADD t B) B t) t ) B t)
(COND (ADD (cons t t) (COND (ADD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 C) C 1) 1 ) C 1)
(COND (ADD 2 (COND (ADD 2 C) C 2) 2 ) C 2)
(COND (ADD nil (COND (ADD nil C) C nil) nil ) C nil)
(COND (ADD t (COND (ADD t C) C t) t ) C t)
(COND (ADD (cons t t) (COND (ADD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 1) 1 1) 1 ) 1 1)
(COND (ADD 2 (COND (ADD 2 1) 1 2) 2 ) 1 2)
(COND (ADD nil (COND (ADD nil 1) 1 nil) nil ) 1 nil)
(COND (ADD t (COND (ADD t 1) 1 t) t ) 1 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 2) 2 1) 1 ) 2 1)
(COND (ADD 2 (COND (ADD 2 2) 2 2) 2 ) 2 2)
(COND (ADD nil (COND (ADD nil 2) 2 nil) nil ) 2 nil)
(COND (ADD t (COND (ADD t 2) 2 t) t ) 2 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 3) 3 1) 1 ) 3 1)
(COND (ADD 2 (COND (ADD 2 3) 3 2) 2 ) 3 2)
(COND (ADD nil (COND (ADD nil 3) 3 nil) nil ) 3 nil)
(COND (ADD t (COND (ADD t 3) 3 t) t ) 3 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 ()) () 1) 1 ) () 1)
(COND (ADD 2 (COND (ADD 2 ()) () 2) 2 ) () 2)
(COND (ADD nil (COND (ADD nil ()) () nil) nil ) () nil)
(COND (ADD t (COND (ADD t ()) () t) t ) () t)
(COND (ADD (cons t t) (COND (ADD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 (())) (()) 1) 1 ) (()) 1)
(COND (ADD 2 (COND (ADD 2 (())) (()) 2) 2 ) (()) 2)
(COND (ADD nil (COND (ADD nil (())) (()) nil) nil ) (()) nil)
(COND (ADD t (COND (ADD t (())) (()) t) t ) (()) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (ADD 2 (COND (ADD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (ADD nil (COND (ADD nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (ADD t (COND (ADD t ((()))) ((())) t) t ) ((())) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (ADD 2 (COND (ADD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (ADD nil (COND (ADD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (ADD t (COND (ADD t (((())))) (((()))) t) t ) (((()))) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 'A) 'A 1) 1 ) 'A 1)
(COND (ADD 2 (COND (ADD 2 'A) 'A 2) 2 ) 'A 2)
(COND (ADD nil (COND (ADD nil 'A) 'A nil) nil ) 'A nil)
(COND (ADD t (COND (ADD t 'A) 'A t) t ) 'A t)
(COND (ADD (cons t t) (COND (ADD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 'B) 'B 1) 1 ) 'B 1)
(COND (ADD 2 (COND (ADD 2 'B) 'B 2) 2 ) 'B 2)
(COND (ADD nil (COND (ADD nil 'B) 'B nil) nil ) 'B nil)
(COND (ADD t (COND (ADD t 'B) 'B t) t ) 'B t)
(COND (ADD (cons t t) (COND (ADD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 'C) 'C 1) 1 ) 'C 1)
(COND (ADD 2 (COND (ADD 2 'C) 'C 2) 2 ) 'C 2)
(COND (ADD nil (COND (ADD nil 'C) 'C nil) nil ) 'C nil)
(COND (ADD t (COND (ADD t 'C) 'C t) t ) 'C t)
(COND (ADD (cons t t) (COND (ADD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 '1) '1 1) 1 ) '1 1)
(COND (ADD 2 (COND (ADD 2 '1) '1 2) 2 ) '1 2)
(COND (ADD nil (COND (ADD nil '1) '1 nil) nil ) '1 nil)
(COND (ADD t (COND (ADD t '1) '1 t) t ) '1 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 '2) '2 1) 1 ) '2 1)
(COND (ADD 2 (COND (ADD 2 '2) '2 2) 2 ) '2 2)
(COND (ADD nil (COND (ADD nil '2) '2 nil) nil ) '2 nil)
(COND (ADD t (COND (ADD t '2) '2 t) t ) '2 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 '3) '3 1) 1 ) '3 1)
(COND (ADD 2 (COND (ADD 2 '3) '3 2) 2 ) '3 2)
(COND (ADD nil (COND (ADD nil '3) '3 nil) nil ) '3 nil)
(COND (ADD t (COND (ADD t '3) '3 t) t ) '3 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 '()) '() 1) 1 ) '() 1)
(COND (ADD 2 (COND (ADD 2 '()) '() 2) 2 ) '() 2)
(COND (ADD nil (COND (ADD nil '()) '() nil) nil ) '() nil)
(COND (ADD t (COND (ADD t '()) '() t) t ) '() t)
(COND (ADD (cons t t) (COND (ADD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (ADD 2 (COND (ADD 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (ADD nil (COND (ADD nil '(())) '(()) nil) nil ) '(()) nil)
(COND (ADD t (COND (ADD t '(())) '(()) t) t ) '(()) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (ADD 2 (COND (ADD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (ADD nil (COND (ADD nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (ADD t (COND (ADD t '((()))) '((())) t) t ) '((())) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (ADD 2 (COND (ADD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (ADD nil (COND (ADD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (ADD t (COND (ADD t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 ,A) ,A 1) 1 ) ,A 1)
(COND (ADD 2 (COND (ADD 2 ,A) ,A 2) 2 ) ,A 2)
(COND (ADD nil (COND (ADD nil ,A) ,A nil) nil ) ,A nil)
(COND (ADD t (COND (ADD t ,A) ,A t) t ) ,A t)
(COND (ADD (cons t t) (COND (ADD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 ,1) ,1 1) 1 ) ,1 1)
(COND (ADD 2 (COND (ADD 2 ,1) ,1 2) 2 ) ,1 2)
(COND (ADD nil (COND (ADD nil ,1) ,1 nil) nil ) ,1 nil)
(COND (ADD t (COND (ADD t ,1) ,1 t) t ) ,1 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 ,()) ,() 1) 1 ) ,() 1)
(COND (ADD 2 (COND (ADD 2 ,()) ,() 2) 2 ) ,() 2)
(COND (ADD nil (COND (ADD nil ,()) ,() nil) nil ) ,() nil)
(COND (ADD t (COND (ADD t ,()) ,() t) t ) ,() t)
(COND (ADD (cons t t) (COND (ADD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (ADD 2 (COND (ADD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (ADD nil (COND (ADD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (ADD t (COND (ADD t ,(())) ,(()) t) t ) ,(()) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'A) `'A 1) 1 ) `'A 1)
(COND (ADD 2 (COND (ADD 2 `'A) `'A 2) 2 ) `'A 2)
(COND (ADD nil (COND (ADD nil `'A) `'A nil) nil ) `'A nil)
(COND (ADD t (COND (ADD t `'A) `'A t) t ) `'A t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'B) `'B 1) 1 ) `'B 1)
(COND (ADD 2 (COND (ADD 2 `'B) `'B 2) 2 ) `'B 2)
(COND (ADD nil (COND (ADD nil `'B) `'B nil) nil ) `'B nil)
(COND (ADD t (COND (ADD t `'B) `'B t) t ) `'B t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'C) `'C 1) 1 ) `'C 1)
(COND (ADD 2 (COND (ADD 2 `'C) `'C 2) 2 ) `'C 2)
(COND (ADD nil (COND (ADD nil `'C) `'C nil) nil ) `'C nil)
(COND (ADD t (COND (ADD t `'C) `'C t) t ) `'C t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'1) `'1 1) 1 ) `'1 1)
(COND (ADD 2 (COND (ADD 2 `'1) `'1 2) 2 ) `'1 2)
(COND (ADD nil (COND (ADD nil `'1) `'1 nil) nil ) `'1 nil)
(COND (ADD t (COND (ADD t `'1) `'1 t) t ) `'1 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'2) `'2 1) 1 ) `'2 1)
(COND (ADD 2 (COND (ADD 2 `'2) `'2 2) 2 ) `'2 2)
(COND (ADD nil (COND (ADD nil `'2) `'2 nil) nil ) `'2 nil)
(COND (ADD t (COND (ADD t `'2) `'2 t) t ) `'2 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'3) `'3 1) 1 ) `'3 1)
(COND (ADD 2 (COND (ADD 2 `'3) `'3 2) 2 ) `'3 2)
(COND (ADD nil (COND (ADD nil `'3) `'3 nil) nil ) `'3 nil)
(COND (ADD t (COND (ADD t `'3) `'3 t) t ) `'3 t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'()) `'() 1) 1 ) `'() 1)
(COND (ADD 2 (COND (ADD 2 `'()) `'() 2) 2 ) `'() 2)
(COND (ADD nil (COND (ADD nil `'()) `'() nil) nil ) `'() nil)
(COND (ADD t (COND (ADD t `'()) `'() t) t ) `'() t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (ADD 2 (COND (ADD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (ADD nil (COND (ADD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (ADD t (COND (ADD t `'(())) `'(()) t) t ) `'(()) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (ADD 2 (COND (ADD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (ADD nil (COND (ADD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (ADD t (COND (ADD t `'((()))) `'((())) t) t ) `'((())) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (ADD 1 (COND (ADD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (ADD 2 (COND (ADD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (ADD nil (COND (ADD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (ADD t (COND (ADD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (ADD (cons t t) (COND (ADD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (ADD (cons nil t) (COND (ADD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (ADD (cons nil nil) (COND (ADD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (ADD (cons 0 0) (COND (ADD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (ADD (cons 1 1) (COND (ADD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (ADD (list 1 2 3) (COND (ADD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (ADD (list (cons 1 1 ) ) (COND (ADD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 T) T 1) 1 ) T 1)
(COND (AND 2 (COND (AND 2 T) T 2) 2 ) T 2)
(COND (AND nil (COND (AND nil T) T nil) nil ) T nil)
(COND (AND t (COND (AND t T) T t) t ) T t)
(COND (AND (cons t t) (COND (AND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 NIL) NIL 1) 1 ) NIL 1)
(COND (AND 2 (COND (AND 2 NIL) NIL 2) 2 ) NIL 2)
(COND (AND nil (COND (AND nil NIL) NIL nil) nil ) NIL nil)
(COND (AND t (COND (AND t NIL) NIL t) t ) NIL t)
(COND (AND (cons t t) (COND (AND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 A) A 1) 1 ) A 1)
(COND (AND 2 (COND (AND 2 A) A 2) 2 ) A 2)
(COND (AND nil (COND (AND nil A) A nil) nil ) A nil)
(COND (AND t (COND (AND t A) A t) t ) A t)
(COND (AND (cons t t) (COND (AND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 B) B 1) 1 ) B 1)
(COND (AND 2 (COND (AND 2 B) B 2) 2 ) B 2)
(COND (AND nil (COND (AND nil B) B nil) nil ) B nil)
(COND (AND t (COND (AND t B) B t) t ) B t)
(COND (AND (cons t t) (COND (AND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 C) C 1) 1 ) C 1)
(COND (AND 2 (COND (AND 2 C) C 2) 2 ) C 2)
(COND (AND nil (COND (AND nil C) C nil) nil ) C nil)
(COND (AND t (COND (AND t C) C t) t ) C t)
(COND (AND (cons t t) (COND (AND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 1) 1 1) 1 ) 1 1)
(COND (AND 2 (COND (AND 2 1) 1 2) 2 ) 1 2)
(COND (AND nil (COND (AND nil 1) 1 nil) nil ) 1 nil)
(COND (AND t (COND (AND t 1) 1 t) t ) 1 t)
(COND (AND (cons t t) (COND (AND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 2) 2 1) 1 ) 2 1)
(COND (AND 2 (COND (AND 2 2) 2 2) 2 ) 2 2)
(COND (AND nil (COND (AND nil 2) 2 nil) nil ) 2 nil)
(COND (AND t (COND (AND t 2) 2 t) t ) 2 t)
(COND (AND (cons t t) (COND (AND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 3) 3 1) 1 ) 3 1)
(COND (AND 2 (COND (AND 2 3) 3 2) 2 ) 3 2)
(COND (AND nil (COND (AND nil 3) 3 nil) nil ) 3 nil)
(COND (AND t (COND (AND t 3) 3 t) t ) 3 t)
(COND (AND (cons t t) (COND (AND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 ()) () 1) 1 ) () 1)
(COND (AND 2 (COND (AND 2 ()) () 2) 2 ) () 2)
(COND (AND nil (COND (AND nil ()) () nil) nil ) () nil)
(COND (AND t (COND (AND t ()) () t) t ) () t)
(COND (AND (cons t t) (COND (AND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 (())) (()) 1) 1 ) (()) 1)
(COND (AND 2 (COND (AND 2 (())) (()) 2) 2 ) (()) 2)
(COND (AND nil (COND (AND nil (())) (()) nil) nil ) (()) nil)
(COND (AND t (COND (AND t (())) (()) t) t ) (()) t)
(COND (AND (cons t t) (COND (AND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (AND 2 (COND (AND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (AND nil (COND (AND nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (AND t (COND (AND t ((()))) ((())) t) t ) ((())) t)
(COND (AND (cons t t) (COND (AND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (AND 2 (COND (AND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (AND nil (COND (AND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (AND t (COND (AND t (((())))) (((()))) t) t ) (((()))) t)
(COND (AND (cons t t) (COND (AND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 'A) 'A 1) 1 ) 'A 1)
(COND (AND 2 (COND (AND 2 'A) 'A 2) 2 ) 'A 2)
(COND (AND nil (COND (AND nil 'A) 'A nil) nil ) 'A nil)
(COND (AND t (COND (AND t 'A) 'A t) t ) 'A t)
(COND (AND (cons t t) (COND (AND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 'B) 'B 1) 1 ) 'B 1)
(COND (AND 2 (COND (AND 2 'B) 'B 2) 2 ) 'B 2)
(COND (AND nil (COND (AND nil 'B) 'B nil) nil ) 'B nil)
(COND (AND t (COND (AND t 'B) 'B t) t ) 'B t)
(COND (AND (cons t t) (COND (AND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 'C) 'C 1) 1 ) 'C 1)
(COND (AND 2 (COND (AND 2 'C) 'C 2) 2 ) 'C 2)
(COND (AND nil (COND (AND nil 'C) 'C nil) nil ) 'C nil)
(COND (AND t (COND (AND t 'C) 'C t) t ) 'C t)
(COND (AND (cons t t) (COND (AND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 '1) '1 1) 1 ) '1 1)
(COND (AND 2 (COND (AND 2 '1) '1 2) 2 ) '1 2)
(COND (AND nil (COND (AND nil '1) '1 nil) nil ) '1 nil)
(COND (AND t (COND (AND t '1) '1 t) t ) '1 t)
(COND (AND (cons t t) (COND (AND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 '2) '2 1) 1 ) '2 1)
(COND (AND 2 (COND (AND 2 '2) '2 2) 2 ) '2 2)
(COND (AND nil (COND (AND nil '2) '2 nil) nil ) '2 nil)
(COND (AND t (COND (AND t '2) '2 t) t ) '2 t)
(COND (AND (cons t t) (COND (AND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 '3) '3 1) 1 ) '3 1)
(COND (AND 2 (COND (AND 2 '3) '3 2) 2 ) '3 2)
(COND (AND nil (COND (AND nil '3) '3 nil) nil ) '3 nil)
(COND (AND t (COND (AND t '3) '3 t) t ) '3 t)
(COND (AND (cons t t) (COND (AND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 '()) '() 1) 1 ) '() 1)
(COND (AND 2 (COND (AND 2 '()) '() 2) 2 ) '() 2)
(COND (AND nil (COND (AND nil '()) '() nil) nil ) '() nil)
(COND (AND t (COND (AND t '()) '() t) t ) '() t)
(COND (AND (cons t t) (COND (AND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (AND 2 (COND (AND 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (AND nil (COND (AND nil '(())) '(()) nil) nil ) '(()) nil)
(COND (AND t (COND (AND t '(())) '(()) t) t ) '(()) t)
(COND (AND (cons t t) (COND (AND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (AND 2 (COND (AND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (AND nil (COND (AND nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (AND t (COND (AND t '((()))) '((())) t) t ) '((())) t)
(COND (AND (cons t t) (COND (AND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (AND 2 (COND (AND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (AND nil (COND (AND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (AND t (COND (AND t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (AND (cons t t) (COND (AND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 ,A) ,A 1) 1 ) ,A 1)
(COND (AND 2 (COND (AND 2 ,A) ,A 2) 2 ) ,A 2)
(COND (AND nil (COND (AND nil ,A) ,A nil) nil ) ,A nil)
(COND (AND t (COND (AND t ,A) ,A t) t ) ,A t)
(COND (AND (cons t t) (COND (AND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 ,1) ,1 1) 1 ) ,1 1)
(COND (AND 2 (COND (AND 2 ,1) ,1 2) 2 ) ,1 2)
(COND (AND nil (COND (AND nil ,1) ,1 nil) nil ) ,1 nil)
(COND (AND t (COND (AND t ,1) ,1 t) t ) ,1 t)
(COND (AND (cons t t) (COND (AND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 ,()) ,() 1) 1 ) ,() 1)
(COND (AND 2 (COND (AND 2 ,()) ,() 2) 2 ) ,() 2)
(COND (AND nil (COND (AND nil ,()) ,() nil) nil ) ,() nil)
(COND (AND t (COND (AND t ,()) ,() t) t ) ,() t)
(COND (AND (cons t t) (COND (AND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (AND 2 (COND (AND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (AND nil (COND (AND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (AND t (COND (AND t ,(())) ,(()) t) t ) ,(()) t)
(COND (AND (cons t t) (COND (AND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'A) `'A 1) 1 ) `'A 1)
(COND (AND 2 (COND (AND 2 `'A) `'A 2) 2 ) `'A 2)
(COND (AND nil (COND (AND nil `'A) `'A nil) nil ) `'A nil)
(COND (AND t (COND (AND t `'A) `'A t) t ) `'A t)
(COND (AND (cons t t) (COND (AND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'B) `'B 1) 1 ) `'B 1)
(COND (AND 2 (COND (AND 2 `'B) `'B 2) 2 ) `'B 2)
(COND (AND nil (COND (AND nil `'B) `'B nil) nil ) `'B nil)
(COND (AND t (COND (AND t `'B) `'B t) t ) `'B t)
(COND (AND (cons t t) (COND (AND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'C) `'C 1) 1 ) `'C 1)
(COND (AND 2 (COND (AND 2 `'C) `'C 2) 2 ) `'C 2)
(COND (AND nil (COND (AND nil `'C) `'C nil) nil ) `'C nil)
(COND (AND t (COND (AND t `'C) `'C t) t ) `'C t)
(COND (AND (cons t t) (COND (AND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'1) `'1 1) 1 ) `'1 1)
(COND (AND 2 (COND (AND 2 `'1) `'1 2) 2 ) `'1 2)
(COND (AND nil (COND (AND nil `'1) `'1 nil) nil ) `'1 nil)
(COND (AND t (COND (AND t `'1) `'1 t) t ) `'1 t)
(COND (AND (cons t t) (COND (AND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'2) `'2 1) 1 ) `'2 1)
(COND (AND 2 (COND (AND 2 `'2) `'2 2) 2 ) `'2 2)
(COND (AND nil (COND (AND nil `'2) `'2 nil) nil ) `'2 nil)
(COND (AND t (COND (AND t `'2) `'2 t) t ) `'2 t)
(COND (AND (cons t t) (COND (AND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'3) `'3 1) 1 ) `'3 1)
(COND (AND 2 (COND (AND 2 `'3) `'3 2) 2 ) `'3 2)
(COND (AND nil (COND (AND nil `'3) `'3 nil) nil ) `'3 nil)
(COND (AND t (COND (AND t `'3) `'3 t) t ) `'3 t)
(COND (AND (cons t t) (COND (AND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'()) `'() 1) 1 ) `'() 1)
(COND (AND 2 (COND (AND 2 `'()) `'() 2) 2 ) `'() 2)
(COND (AND nil (COND (AND nil `'()) `'() nil) nil ) `'() nil)
(COND (AND t (COND (AND t `'()) `'() t) t ) `'() t)
(COND (AND (cons t t) (COND (AND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (AND 2 (COND (AND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (AND nil (COND (AND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (AND t (COND (AND t `'(())) `'(()) t) t ) `'(()) t)
(COND (AND (cons t t) (COND (AND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (AND 2 (COND (AND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (AND nil (COND (AND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (AND t (COND (AND t `'((()))) `'((())) t) t ) `'((())) t)
(COND (AND (cons t t) (COND (AND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (AND 1 (COND (AND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (AND 2 (COND (AND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (AND nil (COND (AND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (AND t (COND (AND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (AND (cons t t) (COND (AND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (AND (cons nil t) (COND (AND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (AND (cons nil nil) (COND (AND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (AND (cons 0 0) (COND (AND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (AND (cons 1 1) (COND (AND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (AND (list 1 2 3) (COND (AND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (AND (list (cons 1 1 ) ) (COND (AND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 T) T 1) 1 ) T 1)
(COND (APPEND 2 (COND (APPEND 2 T) T 2) 2 ) T 2)
(COND (APPEND nil (COND (APPEND nil T) T nil) nil ) T nil)
(COND (APPEND t (COND (APPEND t T) T t) t ) T t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 NIL) NIL 1) 1 ) NIL 1)
(COND (APPEND 2 (COND (APPEND 2 NIL) NIL 2) 2 ) NIL 2)
(COND (APPEND nil (COND (APPEND nil NIL) NIL nil) nil ) NIL nil)
(COND (APPEND t (COND (APPEND t NIL) NIL t) t ) NIL t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 A) A 1) 1 ) A 1)
(COND (APPEND 2 (COND (APPEND 2 A) A 2) 2 ) A 2)
(COND (APPEND nil (COND (APPEND nil A) A nil) nil ) A nil)
(COND (APPEND t (COND (APPEND t A) A t) t ) A t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 B) B 1) 1 ) B 1)
(COND (APPEND 2 (COND (APPEND 2 B) B 2) 2 ) B 2)
(COND (APPEND nil (COND (APPEND nil B) B nil) nil ) B nil)
(COND (APPEND t (COND (APPEND t B) B t) t ) B t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 C) C 1) 1 ) C 1)
(COND (APPEND 2 (COND (APPEND 2 C) C 2) 2 ) C 2)
(COND (APPEND nil (COND (APPEND nil C) C nil) nil ) C nil)
(COND (APPEND t (COND (APPEND t C) C t) t ) C t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 1) 1 1) 1 ) 1 1)
(COND (APPEND 2 (COND (APPEND 2 1) 1 2) 2 ) 1 2)
(COND (APPEND nil (COND (APPEND nil 1) 1 nil) nil ) 1 nil)
(COND (APPEND t (COND (APPEND t 1) 1 t) t ) 1 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 2) 2 1) 1 ) 2 1)
(COND (APPEND 2 (COND (APPEND 2 2) 2 2) 2 ) 2 2)
(COND (APPEND nil (COND (APPEND nil 2) 2 nil) nil ) 2 nil)
(COND (APPEND t (COND (APPEND t 2) 2 t) t ) 2 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 3) 3 1) 1 ) 3 1)
(COND (APPEND 2 (COND (APPEND 2 3) 3 2) 2 ) 3 2)
(COND (APPEND nil (COND (APPEND nil 3) 3 nil) nil ) 3 nil)
(COND (APPEND t (COND (APPEND t 3) 3 t) t ) 3 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 ()) () 1) 1 ) () 1)
(COND (APPEND 2 (COND (APPEND 2 ()) () 2) 2 ) () 2)
(COND (APPEND nil (COND (APPEND nil ()) () nil) nil ) () nil)
(COND (APPEND t (COND (APPEND t ()) () t) t ) () t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 (())) (()) 1) 1 ) (()) 1)
(COND (APPEND 2 (COND (APPEND 2 (())) (()) 2) 2 ) (()) 2)
(COND (APPEND nil (COND (APPEND nil (())) (()) nil) nil ) (()) nil)
(COND (APPEND t (COND (APPEND t (())) (()) t) t ) (()) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (APPEND 2 (COND (APPEND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (APPEND nil (COND (APPEND nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (APPEND t (COND (APPEND t ((()))) ((())) t) t ) ((())) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (APPEND 2 (COND (APPEND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (APPEND nil (COND (APPEND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (APPEND t (COND (APPEND t (((())))) (((()))) t) t ) (((()))) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 'A) 'A 1) 1 ) 'A 1)
(COND (APPEND 2 (COND (APPEND 2 'A) 'A 2) 2 ) 'A 2)
(COND (APPEND nil (COND (APPEND nil 'A) 'A nil) nil ) 'A nil)
(COND (APPEND t (COND (APPEND t 'A) 'A t) t ) 'A t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 'B) 'B 1) 1 ) 'B 1)
(COND (APPEND 2 (COND (APPEND 2 'B) 'B 2) 2 ) 'B 2)
(COND (APPEND nil (COND (APPEND nil 'B) 'B nil) nil ) 'B nil)
(COND (APPEND t (COND (APPEND t 'B) 'B t) t ) 'B t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 'C) 'C 1) 1 ) 'C 1)
(COND (APPEND 2 (COND (APPEND 2 'C) 'C 2) 2 ) 'C 2)
(COND (APPEND nil (COND (APPEND nil 'C) 'C nil) nil ) 'C nil)
(COND (APPEND t (COND (APPEND t 'C) 'C t) t ) 'C t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 '1) '1 1) 1 ) '1 1)
(COND (APPEND 2 (COND (APPEND 2 '1) '1 2) 2 ) '1 2)
(COND (APPEND nil (COND (APPEND nil '1) '1 nil) nil ) '1 nil)
(COND (APPEND t (COND (APPEND t '1) '1 t) t ) '1 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 '2) '2 1) 1 ) '2 1)
(COND (APPEND 2 (COND (APPEND 2 '2) '2 2) 2 ) '2 2)
(COND (APPEND nil (COND (APPEND nil '2) '2 nil) nil ) '2 nil)
(COND (APPEND t (COND (APPEND t '2) '2 t) t ) '2 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 '3) '3 1) 1 ) '3 1)
(COND (APPEND 2 (COND (APPEND 2 '3) '3 2) 2 ) '3 2)
(COND (APPEND nil (COND (APPEND nil '3) '3 nil) nil ) '3 nil)
(COND (APPEND t (COND (APPEND t '3) '3 t) t ) '3 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 '()) '() 1) 1 ) '() 1)
(COND (APPEND 2 (COND (APPEND 2 '()) '() 2) 2 ) '() 2)
(COND (APPEND nil (COND (APPEND nil '()) '() nil) nil ) '() nil)
(COND (APPEND t (COND (APPEND t '()) '() t) t ) '() t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (APPEND 2 (COND (APPEND 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (APPEND nil (COND (APPEND nil '(())) '(()) nil) nil ) '(()) nil)
(COND (APPEND t (COND (APPEND t '(())) '(()) t) t ) '(()) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (APPEND 2 (COND (APPEND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (APPEND nil (COND (APPEND nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (APPEND t (COND (APPEND t '((()))) '((())) t) t ) '((())) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (APPEND 2 (COND (APPEND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (APPEND nil (COND (APPEND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (APPEND t (COND (APPEND t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 ,A) ,A 1) 1 ) ,A 1)
(COND (APPEND 2 (COND (APPEND 2 ,A) ,A 2) 2 ) ,A 2)
(COND (APPEND nil (COND (APPEND nil ,A) ,A nil) nil ) ,A nil)
(COND (APPEND t (COND (APPEND t ,A) ,A t) t ) ,A t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 ,1) ,1 1) 1 ) ,1 1)
(COND (APPEND 2 (COND (APPEND 2 ,1) ,1 2) 2 ) ,1 2)
(COND (APPEND nil (COND (APPEND nil ,1) ,1 nil) nil ) ,1 nil)
(COND (APPEND t (COND (APPEND t ,1) ,1 t) t ) ,1 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 ,()) ,() 1) 1 ) ,() 1)
(COND (APPEND 2 (COND (APPEND 2 ,()) ,() 2) 2 ) ,() 2)
(COND (APPEND nil (COND (APPEND nil ,()) ,() nil) nil ) ,() nil)
(COND (APPEND t (COND (APPEND t ,()) ,() t) t ) ,() t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (APPEND 2 (COND (APPEND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (APPEND nil (COND (APPEND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (APPEND t (COND (APPEND t ,(())) ,(()) t) t ) ,(()) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'A) `'A 1) 1 ) `'A 1)
(COND (APPEND 2 (COND (APPEND 2 `'A) `'A 2) 2 ) `'A 2)
(COND (APPEND nil (COND (APPEND nil `'A) `'A nil) nil ) `'A nil)
(COND (APPEND t (COND (APPEND t `'A) `'A t) t ) `'A t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'B) `'B 1) 1 ) `'B 1)
(COND (APPEND 2 (COND (APPEND 2 `'B) `'B 2) 2 ) `'B 2)
(COND (APPEND nil (COND (APPEND nil `'B) `'B nil) nil ) `'B nil)
(COND (APPEND t (COND (APPEND t `'B) `'B t) t ) `'B t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'C) `'C 1) 1 ) `'C 1)
(COND (APPEND 2 (COND (APPEND 2 `'C) `'C 2) 2 ) `'C 2)
(COND (APPEND nil (COND (APPEND nil `'C) `'C nil) nil ) `'C nil)
(COND (APPEND t (COND (APPEND t `'C) `'C t) t ) `'C t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'1) `'1 1) 1 ) `'1 1)
(COND (APPEND 2 (COND (APPEND 2 `'1) `'1 2) 2 ) `'1 2)
(COND (APPEND nil (COND (APPEND nil `'1) `'1 nil) nil ) `'1 nil)
(COND (APPEND t (COND (APPEND t `'1) `'1 t) t ) `'1 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'2) `'2 1) 1 ) `'2 1)
(COND (APPEND 2 (COND (APPEND 2 `'2) `'2 2) 2 ) `'2 2)
(COND (APPEND nil (COND (APPEND nil `'2) `'2 nil) nil ) `'2 nil)
(COND (APPEND t (COND (APPEND t `'2) `'2 t) t ) `'2 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'3) `'3 1) 1 ) `'3 1)
(COND (APPEND 2 (COND (APPEND 2 `'3) `'3 2) 2 ) `'3 2)
(COND (APPEND nil (COND (APPEND nil `'3) `'3 nil) nil ) `'3 nil)
(COND (APPEND t (COND (APPEND t `'3) `'3 t) t ) `'3 t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'()) `'() 1) 1 ) `'() 1)
(COND (APPEND 2 (COND (APPEND 2 `'()) `'() 2) 2 ) `'() 2)
(COND (APPEND nil (COND (APPEND nil `'()) `'() nil) nil ) `'() nil)
(COND (APPEND t (COND (APPEND t `'()) `'() t) t ) `'() t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (APPEND 2 (COND (APPEND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (APPEND nil (COND (APPEND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (APPEND t (COND (APPEND t `'(())) `'(()) t) t ) `'(()) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (APPEND 2 (COND (APPEND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (APPEND nil (COND (APPEND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (APPEND t (COND (APPEND t `'((()))) `'((())) t) t ) `'((())) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (APPEND 1 (COND (APPEND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (APPEND 2 (COND (APPEND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (APPEND nil (COND (APPEND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (APPEND t (COND (APPEND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (APPEND (cons t t) (COND (APPEND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (APPEND (cons nil t) (COND (APPEND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (APPEND (cons nil nil) (COND (APPEND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (APPEND (cons 0 0) (COND (APPEND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (APPEND (cons 1 1) (COND (APPEND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (APPEND (list 1 2 3) (COND (APPEND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (APPEND (list (cons 1 1 ) ) (COND (APPEND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 T) T 1) 1 ) T 1)
(COND (ATOM 2 (COND (ATOM 2 T) T 2) 2 ) T 2)
(COND (ATOM nil (COND (ATOM nil T) T nil) nil ) T nil)
(COND (ATOM t (COND (ATOM t T) T t) t ) T t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 NIL) NIL 1) 1 ) NIL 1)
(COND (ATOM 2 (COND (ATOM 2 NIL) NIL 2) 2 ) NIL 2)
(COND (ATOM nil (COND (ATOM nil NIL) NIL nil) nil ) NIL nil)
(COND (ATOM t (COND (ATOM t NIL) NIL t) t ) NIL t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 A) A 1) 1 ) A 1)
(COND (ATOM 2 (COND (ATOM 2 A) A 2) 2 ) A 2)
(COND (ATOM nil (COND (ATOM nil A) A nil) nil ) A nil)
(COND (ATOM t (COND (ATOM t A) A t) t ) A t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 B) B 1) 1 ) B 1)
(COND (ATOM 2 (COND (ATOM 2 B) B 2) 2 ) B 2)
(COND (ATOM nil (COND (ATOM nil B) B nil) nil ) B nil)
(COND (ATOM t (COND (ATOM t B) B t) t ) B t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 C) C 1) 1 ) C 1)
(COND (ATOM 2 (COND (ATOM 2 C) C 2) 2 ) C 2)
(COND (ATOM nil (COND (ATOM nil C) C nil) nil ) C nil)
(COND (ATOM t (COND (ATOM t C) C t) t ) C t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 1) 1 1) 1 ) 1 1)
(COND (ATOM 2 (COND (ATOM 2 1) 1 2) 2 ) 1 2)
(COND (ATOM nil (COND (ATOM nil 1) 1 nil) nil ) 1 nil)
(COND (ATOM t (COND (ATOM t 1) 1 t) t ) 1 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 2) 2 1) 1 ) 2 1)
(COND (ATOM 2 (COND (ATOM 2 2) 2 2) 2 ) 2 2)
(COND (ATOM nil (COND (ATOM nil 2) 2 nil) nil ) 2 nil)
(COND (ATOM t (COND (ATOM t 2) 2 t) t ) 2 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 3) 3 1) 1 ) 3 1)
(COND (ATOM 2 (COND (ATOM 2 3) 3 2) 2 ) 3 2)
(COND (ATOM nil (COND (ATOM nil 3) 3 nil) nil ) 3 nil)
(COND (ATOM t (COND (ATOM t 3) 3 t) t ) 3 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 ()) () 1) 1 ) () 1)
(COND (ATOM 2 (COND (ATOM 2 ()) () 2) 2 ) () 2)
(COND (ATOM nil (COND (ATOM nil ()) () nil) nil ) () nil)
(COND (ATOM t (COND (ATOM t ()) () t) t ) () t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 (())) (()) 1) 1 ) (()) 1)
(COND (ATOM 2 (COND (ATOM 2 (())) (()) 2) 2 ) (()) 2)
(COND (ATOM nil (COND (ATOM nil (())) (()) nil) nil ) (()) nil)
(COND (ATOM t (COND (ATOM t (())) (()) t) t ) (()) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (ATOM 2 (COND (ATOM 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (ATOM nil (COND (ATOM nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (ATOM t (COND (ATOM t ((()))) ((())) t) t ) ((())) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (ATOM 2 (COND (ATOM 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (ATOM nil (COND (ATOM nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (ATOM t (COND (ATOM t (((())))) (((()))) t) t ) (((()))) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 'A) 'A 1) 1 ) 'A 1)
(COND (ATOM 2 (COND (ATOM 2 'A) 'A 2) 2 ) 'A 2)
(COND (ATOM nil (COND (ATOM nil 'A) 'A nil) nil ) 'A nil)
(COND (ATOM t (COND (ATOM t 'A) 'A t) t ) 'A t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 'B) 'B 1) 1 ) 'B 1)
(COND (ATOM 2 (COND (ATOM 2 'B) 'B 2) 2 ) 'B 2)
(COND (ATOM nil (COND (ATOM nil 'B) 'B nil) nil ) 'B nil)
(COND (ATOM t (COND (ATOM t 'B) 'B t) t ) 'B t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 'C) 'C 1) 1 ) 'C 1)
(COND (ATOM 2 (COND (ATOM 2 'C) 'C 2) 2 ) 'C 2)
(COND (ATOM nil (COND (ATOM nil 'C) 'C nil) nil ) 'C nil)
(COND (ATOM t (COND (ATOM t 'C) 'C t) t ) 'C t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 '1) '1 1) 1 ) '1 1)
(COND (ATOM 2 (COND (ATOM 2 '1) '1 2) 2 ) '1 2)
(COND (ATOM nil (COND (ATOM nil '1) '1 nil) nil ) '1 nil)
(COND (ATOM t (COND (ATOM t '1) '1 t) t ) '1 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 '2) '2 1) 1 ) '2 1)
(COND (ATOM 2 (COND (ATOM 2 '2) '2 2) 2 ) '2 2)
(COND (ATOM nil (COND (ATOM nil '2) '2 nil) nil ) '2 nil)
(COND (ATOM t (COND (ATOM t '2) '2 t) t ) '2 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 '3) '3 1) 1 ) '3 1)
(COND (ATOM 2 (COND (ATOM 2 '3) '3 2) 2 ) '3 2)
(COND (ATOM nil (COND (ATOM nil '3) '3 nil) nil ) '3 nil)
(COND (ATOM t (COND (ATOM t '3) '3 t) t ) '3 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 '()) '() 1) 1 ) '() 1)
(COND (ATOM 2 (COND (ATOM 2 '()) '() 2) 2 ) '() 2)
(COND (ATOM nil (COND (ATOM nil '()) '() nil) nil ) '() nil)
(COND (ATOM t (COND (ATOM t '()) '() t) t ) '() t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (ATOM 2 (COND (ATOM 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (ATOM nil (COND (ATOM nil '(())) '(()) nil) nil ) '(()) nil)
(COND (ATOM t (COND (ATOM t '(())) '(()) t) t ) '(()) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (ATOM 2 (COND (ATOM 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (ATOM nil (COND (ATOM nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (ATOM t (COND (ATOM t '((()))) '((())) t) t ) '((())) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (ATOM 2 (COND (ATOM 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (ATOM nil (COND (ATOM nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (ATOM t (COND (ATOM t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 ,A) ,A 1) 1 ) ,A 1)
(COND (ATOM 2 (COND (ATOM 2 ,A) ,A 2) 2 ) ,A 2)
(COND (ATOM nil (COND (ATOM nil ,A) ,A nil) nil ) ,A nil)
(COND (ATOM t (COND (ATOM t ,A) ,A t) t ) ,A t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 ,1) ,1 1) 1 ) ,1 1)
(COND (ATOM 2 (COND (ATOM 2 ,1) ,1 2) 2 ) ,1 2)
(COND (ATOM nil (COND (ATOM nil ,1) ,1 nil) nil ) ,1 nil)
(COND (ATOM t (COND (ATOM t ,1) ,1 t) t ) ,1 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 ,()) ,() 1) 1 ) ,() 1)
(COND (ATOM 2 (COND (ATOM 2 ,()) ,() 2) 2 ) ,() 2)
(COND (ATOM nil (COND (ATOM nil ,()) ,() nil) nil ) ,() nil)
(COND (ATOM t (COND (ATOM t ,()) ,() t) t ) ,() t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (ATOM 2 (COND (ATOM 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (ATOM nil (COND (ATOM nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (ATOM t (COND (ATOM t ,(())) ,(()) t) t ) ,(()) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'A) `'A 1) 1 ) `'A 1)
(COND (ATOM 2 (COND (ATOM 2 `'A) `'A 2) 2 ) `'A 2)
(COND (ATOM nil (COND (ATOM nil `'A) `'A nil) nil ) `'A nil)
(COND (ATOM t (COND (ATOM t `'A) `'A t) t ) `'A t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'B) `'B 1) 1 ) `'B 1)
(COND (ATOM 2 (COND (ATOM 2 `'B) `'B 2) 2 ) `'B 2)
(COND (ATOM nil (COND (ATOM nil `'B) `'B nil) nil ) `'B nil)
(COND (ATOM t (COND (ATOM t `'B) `'B t) t ) `'B t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'C) `'C 1) 1 ) `'C 1)
(COND (ATOM 2 (COND (ATOM 2 `'C) `'C 2) 2 ) `'C 2)
(COND (ATOM nil (COND (ATOM nil `'C) `'C nil) nil ) `'C nil)
(COND (ATOM t (COND (ATOM t `'C) `'C t) t ) `'C t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'1) `'1 1) 1 ) `'1 1)
(COND (ATOM 2 (COND (ATOM 2 `'1) `'1 2) 2 ) `'1 2)
(COND (ATOM nil (COND (ATOM nil `'1) `'1 nil) nil ) `'1 nil)
(COND (ATOM t (COND (ATOM t `'1) `'1 t) t ) `'1 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'2) `'2 1) 1 ) `'2 1)
(COND (ATOM 2 (COND (ATOM 2 `'2) `'2 2) 2 ) `'2 2)
(COND (ATOM nil (COND (ATOM nil `'2) `'2 nil) nil ) `'2 nil)
(COND (ATOM t (COND (ATOM t `'2) `'2 t) t ) `'2 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'3) `'3 1) 1 ) `'3 1)
(COND (ATOM 2 (COND (ATOM 2 `'3) `'3 2) 2 ) `'3 2)
(COND (ATOM nil (COND (ATOM nil `'3) `'3 nil) nil ) `'3 nil)
(COND (ATOM t (COND (ATOM t `'3) `'3 t) t ) `'3 t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'()) `'() 1) 1 ) `'() 1)
(COND (ATOM 2 (COND (ATOM 2 `'()) `'() 2) 2 ) `'() 2)
(COND (ATOM nil (COND (ATOM nil `'()) `'() nil) nil ) `'() nil)
(COND (ATOM t (COND (ATOM t `'()) `'() t) t ) `'() t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (ATOM 2 (COND (ATOM 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (ATOM nil (COND (ATOM nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (ATOM t (COND (ATOM t `'(())) `'(()) t) t ) `'(()) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (ATOM 2 (COND (ATOM 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (ATOM nil (COND (ATOM nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (ATOM t (COND (ATOM t `'((()))) `'((())) t) t ) `'((())) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (ATOM 1 (COND (ATOM 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (ATOM 2 (COND (ATOM 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (ATOM nil (COND (ATOM nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (ATOM t (COND (ATOM t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (ATOM (cons t t) (COND (ATOM (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (ATOM (cons nil t) (COND (ATOM (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (ATOM (cons nil nil) (COND (ATOM (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (ATOM (cons 0 0) (COND (ATOM (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (ATOM (cons 1 1) (COND (ATOM (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (ATOM (list 1 2 3) (COND (ATOM (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (ATOM (list (cons 1 1 ) ) (COND (ATOM (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 T) T 1) 1 ) T 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 T) T 2) 2 ) T 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil T) T nil) nil ) T nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t T) T t) t ) T t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 NIL) NIL 1) 1 ) NIL 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 NIL) NIL 2) 2 ) NIL 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil NIL) NIL nil) nil ) NIL nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t NIL) NIL t) t ) NIL t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 A) A 1) 1 ) A 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 A) A 2) 2 ) A 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil A) A nil) nil ) A nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t A) A t) t ) A t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 B) B 1) 1 ) B 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 B) B 2) 2 ) B 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil B) B nil) nil ) B nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t B) B t) t ) B t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 C) C 1) 1 ) C 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 C) C 2) 2 ) C 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil C) C nil) nil ) C nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t C) C t) t ) C t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 1) 1 1) 1 ) 1 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 1) 1 2) 2 ) 1 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil 1) 1 nil) nil ) 1 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t 1) 1 t) t ) 1 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 2) 2 1) 1 ) 2 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 2) 2 2) 2 ) 2 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil 2) 2 nil) nil ) 2 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t 2) 2 t) t ) 2 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 3) 3 1) 1 ) 3 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 3) 3 2) 2 ) 3 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil 3) 3 nil) nil ) 3 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t 3) 3 t) t ) 3 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 ()) () 1) 1 ) () 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 ()) () 2) 2 ) () 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil ()) () nil) nil ) () nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t ()) () t) t ) () t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 (())) (()) 1) 1 ) (()) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 (())) (()) 2) 2 ) (()) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil (())) (()) nil) nil ) (()) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t (())) (()) t) t ) (()) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t ((()))) ((())) t) t ) ((())) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t (((())))) (((()))) t) t ) (((()))) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 'A) 'A 1) 1 ) 'A 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 'A) 'A 2) 2 ) 'A 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil 'A) 'A nil) nil ) 'A nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t 'A) 'A t) t ) 'A t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 'B) 'B 1) 1 ) 'B 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 'B) 'B 2) 2 ) 'B 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil 'B) 'B nil) nil ) 'B nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t 'B) 'B t) t ) 'B t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 'C) 'C 1) 1 ) 'C 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 'C) 'C 2) 2 ) 'C 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil 'C) 'C nil) nil ) 'C nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t 'C) 'C t) t ) 'C t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 '1) '1 1) 1 ) '1 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 '1) '1 2) 2 ) '1 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil '1) '1 nil) nil ) '1 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t '1) '1 t) t ) '1 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 '2) '2 1) 1 ) '2 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 '2) '2 2) 2 ) '2 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil '2) '2 nil) nil ) '2 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t '2) '2 t) t ) '2 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 '3) '3 1) 1 ) '3 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 '3) '3 2) 2 ) '3 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil '3) '3 nil) nil ) '3 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t '3) '3 t) t ) '3 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 '()) '() 1) 1 ) '() 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 '()) '() 2) 2 ) '() 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil '()) '() nil) nil ) '() nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t '()) '() t) t ) '() t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil '(())) '(()) nil) nil ) '(()) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t '(())) '(()) t) t ) '(()) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t '((()))) '((())) t) t ) '((())) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 ,A) ,A 1) 1 ) ,A 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 ,A) ,A 2) 2 ) ,A 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil ,A) ,A nil) nil ) ,A nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t ,A) ,A t) t ) ,A t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 ,1) ,1 1) 1 ) ,1 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 ,1) ,1 2) 2 ) ,1 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil ,1) ,1 nil) nil ) ,1 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t ,1) ,1 t) t ) ,1 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 ,()) ,() 1) 1 ) ,() 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 ,()) ,() 2) 2 ) ,() 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil ,()) ,() nil) nil ) ,() nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t ,()) ,() t) t ) ,() t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t ,(())) ,(()) t) t ) ,(()) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'A) `'A 1) 1 ) `'A 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'A) `'A 2) 2 ) `'A 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'A) `'A nil) nil ) `'A nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'A) `'A t) t ) `'A t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'B) `'B 1) 1 ) `'B 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'B) `'B 2) 2 ) `'B 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'B) `'B nil) nil ) `'B nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'B) `'B t) t ) `'B t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'C) `'C 1) 1 ) `'C 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'C) `'C 2) 2 ) `'C 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'C) `'C nil) nil ) `'C nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'C) `'C t) t ) `'C t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'1) `'1 1) 1 ) `'1 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'1) `'1 2) 2 ) `'1 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'1) `'1 nil) nil ) `'1 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'1) `'1 t) t ) `'1 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'2) `'2 1) 1 ) `'2 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'2) `'2 2) 2 ) `'2 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'2) `'2 nil) nil ) `'2 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'2) `'2 t) t ) `'2 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'3) `'3 1) 1 ) `'3 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'3) `'3 2) 2 ) `'3 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'3) `'3 nil) nil ) `'3 nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'3) `'3 t) t ) `'3 t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'()) `'() 1) 1 ) `'() 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'()) `'() 2) 2 ) `'() 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'()) `'() nil) nil ) `'() nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'()) `'() t) t ) `'() t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'(())) `'(()) t) t ) `'(()) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'((()))) `'((())) t) t ) `'((())) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (BACKQUOTE 1 (COND (BACKQUOTE 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (BACKQUOTE 2 (COND (BACKQUOTE 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (BACKQUOTE nil (COND (BACKQUOTE nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (BACKQUOTE t (COND (BACKQUOTE t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (BACKQUOTE (cons t t) (COND (BACKQUOTE (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (BACKQUOTE (cons nil t) (COND (BACKQUOTE (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (BACKQUOTE (cons nil nil) (COND (BACKQUOTE (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (BACKQUOTE (cons 0 0) (COND (BACKQUOTE (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (BACKQUOTE (cons 1 1) (COND (BACKQUOTE (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (BACKQUOTE (list 1 2 3) (COND (BACKQUOTE (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (BACKQUOTE (list (cons 1 1 ) ) (COND (BACKQUOTE (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 T) T 1) 1 ) T 1)
(COND (CAR 2 (COND (CAR 2 T) T 2) 2 ) T 2)
(COND (CAR nil (COND (CAR nil T) T nil) nil ) T nil)
(COND (CAR t (COND (CAR t T) T t) t ) T t)
(COND (CAR (cons t t) (COND (CAR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 NIL) NIL 1) 1 ) NIL 1)
(COND (CAR 2 (COND (CAR 2 NIL) NIL 2) 2 ) NIL 2)
(COND (CAR nil (COND (CAR nil NIL) NIL nil) nil ) NIL nil)
(COND (CAR t (COND (CAR t NIL) NIL t) t ) NIL t)
(COND (CAR (cons t t) (COND (CAR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 A) A 1) 1 ) A 1)
(COND (CAR 2 (COND (CAR 2 A) A 2) 2 ) A 2)
(COND (CAR nil (COND (CAR nil A) A nil) nil ) A nil)
(COND (CAR t (COND (CAR t A) A t) t ) A t)
(COND (CAR (cons t t) (COND (CAR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 B) B 1) 1 ) B 1)
(COND (CAR 2 (COND (CAR 2 B) B 2) 2 ) B 2)
(COND (CAR nil (COND (CAR nil B) B nil) nil ) B nil)
(COND (CAR t (COND (CAR t B) B t) t ) B t)
(COND (CAR (cons t t) (COND (CAR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 C) C 1) 1 ) C 1)
(COND (CAR 2 (COND (CAR 2 C) C 2) 2 ) C 2)
(COND (CAR nil (COND (CAR nil C) C nil) nil ) C nil)
(COND (CAR t (COND (CAR t C) C t) t ) C t)
(COND (CAR (cons t t) (COND (CAR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 1) 1 1) 1 ) 1 1)
(COND (CAR 2 (COND (CAR 2 1) 1 2) 2 ) 1 2)
(COND (CAR nil (COND (CAR nil 1) 1 nil) nil ) 1 nil)
(COND (CAR t (COND (CAR t 1) 1 t) t ) 1 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 2) 2 1) 1 ) 2 1)
(COND (CAR 2 (COND (CAR 2 2) 2 2) 2 ) 2 2)
(COND (CAR nil (COND (CAR nil 2) 2 nil) nil ) 2 nil)
(COND (CAR t (COND (CAR t 2) 2 t) t ) 2 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 3) 3 1) 1 ) 3 1)
(COND (CAR 2 (COND (CAR 2 3) 3 2) 2 ) 3 2)
(COND (CAR nil (COND (CAR nil 3) 3 nil) nil ) 3 nil)
(COND (CAR t (COND (CAR t 3) 3 t) t ) 3 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 ()) () 1) 1 ) () 1)
(COND (CAR 2 (COND (CAR 2 ()) () 2) 2 ) () 2)
(COND (CAR nil (COND (CAR nil ()) () nil) nil ) () nil)
(COND (CAR t (COND (CAR t ()) () t) t ) () t)
(COND (CAR (cons t t) (COND (CAR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 (())) (()) 1) 1 ) (()) 1)
(COND (CAR 2 (COND (CAR 2 (())) (()) 2) 2 ) (()) 2)
(COND (CAR nil (COND (CAR nil (())) (()) nil) nil ) (()) nil)
(COND (CAR t (COND (CAR t (())) (()) t) t ) (()) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (CAR 2 (COND (CAR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (CAR nil (COND (CAR nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (CAR t (COND (CAR t ((()))) ((())) t) t ) ((())) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (CAR 2 (COND (CAR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (CAR nil (COND (CAR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (CAR t (COND (CAR t (((())))) (((()))) t) t ) (((()))) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 'A) 'A 1) 1 ) 'A 1)
(COND (CAR 2 (COND (CAR 2 'A) 'A 2) 2 ) 'A 2)
(COND (CAR nil (COND (CAR nil 'A) 'A nil) nil ) 'A nil)
(COND (CAR t (COND (CAR t 'A) 'A t) t ) 'A t)
(COND (CAR (cons t t) (COND (CAR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 'B) 'B 1) 1 ) 'B 1)
(COND (CAR 2 (COND (CAR 2 'B) 'B 2) 2 ) 'B 2)
(COND (CAR nil (COND (CAR nil 'B) 'B nil) nil ) 'B nil)
(COND (CAR t (COND (CAR t 'B) 'B t) t ) 'B t)
(COND (CAR (cons t t) (COND (CAR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 'C) 'C 1) 1 ) 'C 1)
(COND (CAR 2 (COND (CAR 2 'C) 'C 2) 2 ) 'C 2)
(COND (CAR nil (COND (CAR nil 'C) 'C nil) nil ) 'C nil)
(COND (CAR t (COND (CAR t 'C) 'C t) t ) 'C t)
(COND (CAR (cons t t) (COND (CAR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 '1) '1 1) 1 ) '1 1)
(COND (CAR 2 (COND (CAR 2 '1) '1 2) 2 ) '1 2)
(COND (CAR nil (COND (CAR nil '1) '1 nil) nil ) '1 nil)
(COND (CAR t (COND (CAR t '1) '1 t) t ) '1 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 '2) '2 1) 1 ) '2 1)
(COND (CAR 2 (COND (CAR 2 '2) '2 2) 2 ) '2 2)
(COND (CAR nil (COND (CAR nil '2) '2 nil) nil ) '2 nil)
(COND (CAR t (COND (CAR t '2) '2 t) t ) '2 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 '3) '3 1) 1 ) '3 1)
(COND (CAR 2 (COND (CAR 2 '3) '3 2) 2 ) '3 2)
(COND (CAR nil (COND (CAR nil '3) '3 nil) nil ) '3 nil)
(COND (CAR t (COND (CAR t '3) '3 t) t ) '3 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 '()) '() 1) 1 ) '() 1)
(COND (CAR 2 (COND (CAR 2 '()) '() 2) 2 ) '() 2)
(COND (CAR nil (COND (CAR nil '()) '() nil) nil ) '() nil)
(COND (CAR t (COND (CAR t '()) '() t) t ) '() t)
(COND (CAR (cons t t) (COND (CAR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (CAR 2 (COND (CAR 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (CAR nil (COND (CAR nil '(())) '(()) nil) nil ) '(()) nil)
(COND (CAR t (COND (CAR t '(())) '(()) t) t ) '(()) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (CAR 2 (COND (CAR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (CAR nil (COND (CAR nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (CAR t (COND (CAR t '((()))) '((())) t) t ) '((())) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (CAR 2 (COND (CAR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (CAR nil (COND (CAR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (CAR t (COND (CAR t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 ,A) ,A 1) 1 ) ,A 1)
(COND (CAR 2 (COND (CAR 2 ,A) ,A 2) 2 ) ,A 2)
(COND (CAR nil (COND (CAR nil ,A) ,A nil) nil ) ,A nil)
(COND (CAR t (COND (CAR t ,A) ,A t) t ) ,A t)
(COND (CAR (cons t t) (COND (CAR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 ,1) ,1 1) 1 ) ,1 1)
(COND (CAR 2 (COND (CAR 2 ,1) ,1 2) 2 ) ,1 2)
(COND (CAR nil (COND (CAR nil ,1) ,1 nil) nil ) ,1 nil)
(COND (CAR t (COND (CAR t ,1) ,1 t) t ) ,1 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 ,()) ,() 1) 1 ) ,() 1)
(COND (CAR 2 (COND (CAR 2 ,()) ,() 2) 2 ) ,() 2)
(COND (CAR nil (COND (CAR nil ,()) ,() nil) nil ) ,() nil)
(COND (CAR t (COND (CAR t ,()) ,() t) t ) ,() t)
(COND (CAR (cons t t) (COND (CAR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (CAR 2 (COND (CAR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (CAR nil (COND (CAR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (CAR t (COND (CAR t ,(())) ,(()) t) t ) ,(()) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'A) `'A 1) 1 ) `'A 1)
(COND (CAR 2 (COND (CAR 2 `'A) `'A 2) 2 ) `'A 2)
(COND (CAR nil (COND (CAR nil `'A) `'A nil) nil ) `'A nil)
(COND (CAR t (COND (CAR t `'A) `'A t) t ) `'A t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'B) `'B 1) 1 ) `'B 1)
(COND (CAR 2 (COND (CAR 2 `'B) `'B 2) 2 ) `'B 2)
(COND (CAR nil (COND (CAR nil `'B) `'B nil) nil ) `'B nil)
(COND (CAR t (COND (CAR t `'B) `'B t) t ) `'B t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'C) `'C 1) 1 ) `'C 1)
(COND (CAR 2 (COND (CAR 2 `'C) `'C 2) 2 ) `'C 2)
(COND (CAR nil (COND (CAR nil `'C) `'C nil) nil ) `'C nil)
(COND (CAR t (COND (CAR t `'C) `'C t) t ) `'C t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'1) `'1 1) 1 ) `'1 1)
(COND (CAR 2 (COND (CAR 2 `'1) `'1 2) 2 ) `'1 2)
(COND (CAR nil (COND (CAR nil `'1) `'1 nil) nil ) `'1 nil)
(COND (CAR t (COND (CAR t `'1) `'1 t) t ) `'1 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'2) `'2 1) 1 ) `'2 1)
(COND (CAR 2 (COND (CAR 2 `'2) `'2 2) 2 ) `'2 2)
(COND (CAR nil (COND (CAR nil `'2) `'2 nil) nil ) `'2 nil)
(COND (CAR t (COND (CAR t `'2) `'2 t) t ) `'2 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'3) `'3 1) 1 ) `'3 1)
(COND (CAR 2 (COND (CAR 2 `'3) `'3 2) 2 ) `'3 2)
(COND (CAR nil (COND (CAR nil `'3) `'3 nil) nil ) `'3 nil)
(COND (CAR t (COND (CAR t `'3) `'3 t) t ) `'3 t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'()) `'() 1) 1 ) `'() 1)
(COND (CAR 2 (COND (CAR 2 `'()) `'() 2) 2 ) `'() 2)
(COND (CAR nil (COND (CAR nil `'()) `'() nil) nil ) `'() nil)
(COND (CAR t (COND (CAR t `'()) `'() t) t ) `'() t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (CAR 2 (COND (CAR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (CAR nil (COND (CAR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (CAR t (COND (CAR t `'(())) `'(()) t) t ) `'(()) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (CAR 2 (COND (CAR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (CAR nil (COND (CAR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (CAR t (COND (CAR t `'((()))) `'((())) t) t ) `'((())) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (CAR 1 (COND (CAR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (CAR 2 (COND (CAR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (CAR nil (COND (CAR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (CAR t (COND (CAR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (CAR (cons t t) (COND (CAR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (CAR (cons nil t) (COND (CAR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (CAR (cons nil nil) (COND (CAR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (CAR (cons 0 0) (COND (CAR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (CAR (cons 1 1) (COND (CAR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (CAR (list 1 2 3) (COND (CAR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (CAR (list (cons 1 1 ) ) (COND (CAR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 T) T 1) 1 ) T 1)
(COND (CDR 2 (COND (CDR 2 T) T 2) 2 ) T 2)
(COND (CDR nil (COND (CDR nil T) T nil) nil ) T nil)
(COND (CDR t (COND (CDR t T) T t) t ) T t)
(COND (CDR (cons t t) (COND (CDR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 NIL) NIL 1) 1 ) NIL 1)
(COND (CDR 2 (COND (CDR 2 NIL) NIL 2) 2 ) NIL 2)
(COND (CDR nil (COND (CDR nil NIL) NIL nil) nil ) NIL nil)
(COND (CDR t (COND (CDR t NIL) NIL t) t ) NIL t)
(COND (CDR (cons t t) (COND (CDR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 A) A 1) 1 ) A 1)
(COND (CDR 2 (COND (CDR 2 A) A 2) 2 ) A 2)
(COND (CDR nil (COND (CDR nil A) A nil) nil ) A nil)
(COND (CDR t (COND (CDR t A) A t) t ) A t)
(COND (CDR (cons t t) (COND (CDR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 B) B 1) 1 ) B 1)
(COND (CDR 2 (COND (CDR 2 B) B 2) 2 ) B 2)
(COND (CDR nil (COND (CDR nil B) B nil) nil ) B nil)
(COND (CDR t (COND (CDR t B) B t) t ) B t)
(COND (CDR (cons t t) (COND (CDR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 C) C 1) 1 ) C 1)
(COND (CDR 2 (COND (CDR 2 C) C 2) 2 ) C 2)
(COND (CDR nil (COND (CDR nil C) C nil) nil ) C nil)
(COND (CDR t (COND (CDR t C) C t) t ) C t)
(COND (CDR (cons t t) (COND (CDR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 1) 1 1) 1 ) 1 1)
(COND (CDR 2 (COND (CDR 2 1) 1 2) 2 ) 1 2)
(COND (CDR nil (COND (CDR nil 1) 1 nil) nil ) 1 nil)
(COND (CDR t (COND (CDR t 1) 1 t) t ) 1 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 2) 2 1) 1 ) 2 1)
(COND (CDR 2 (COND (CDR 2 2) 2 2) 2 ) 2 2)
(COND (CDR nil (COND (CDR nil 2) 2 nil) nil ) 2 nil)
(COND (CDR t (COND (CDR t 2) 2 t) t ) 2 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 3) 3 1) 1 ) 3 1)
(COND (CDR 2 (COND (CDR 2 3) 3 2) 2 ) 3 2)
(COND (CDR nil (COND (CDR nil 3) 3 nil) nil ) 3 nil)
(COND (CDR t (COND (CDR t 3) 3 t) t ) 3 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 ()) () 1) 1 ) () 1)
(COND (CDR 2 (COND (CDR 2 ()) () 2) 2 ) () 2)
(COND (CDR nil (COND (CDR nil ()) () nil) nil ) () nil)
(COND (CDR t (COND (CDR t ()) () t) t ) () t)
(COND (CDR (cons t t) (COND (CDR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 (())) (()) 1) 1 ) (()) 1)
(COND (CDR 2 (COND (CDR 2 (())) (()) 2) 2 ) (()) 2)
(COND (CDR nil (COND (CDR nil (())) (()) nil) nil ) (()) nil)
(COND (CDR t (COND (CDR t (())) (()) t) t ) (()) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (CDR 2 (COND (CDR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (CDR nil (COND (CDR nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (CDR t (COND (CDR t ((()))) ((())) t) t ) ((())) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (CDR 2 (COND (CDR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (CDR nil (COND (CDR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (CDR t (COND (CDR t (((())))) (((()))) t) t ) (((()))) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 'A) 'A 1) 1 ) 'A 1)
(COND (CDR 2 (COND (CDR 2 'A) 'A 2) 2 ) 'A 2)
(COND (CDR nil (COND (CDR nil 'A) 'A nil) nil ) 'A nil)
(COND (CDR t (COND (CDR t 'A) 'A t) t ) 'A t)
(COND (CDR (cons t t) (COND (CDR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 'B) 'B 1) 1 ) 'B 1)
(COND (CDR 2 (COND (CDR 2 'B) 'B 2) 2 ) 'B 2)
(COND (CDR nil (COND (CDR nil 'B) 'B nil) nil ) 'B nil)
(COND (CDR t (COND (CDR t 'B) 'B t) t ) 'B t)
(COND (CDR (cons t t) (COND (CDR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 'C) 'C 1) 1 ) 'C 1)
(COND (CDR 2 (COND (CDR 2 'C) 'C 2) 2 ) 'C 2)
(COND (CDR nil (COND (CDR nil 'C) 'C nil) nil ) 'C nil)
(COND (CDR t (COND (CDR t 'C) 'C t) t ) 'C t)
(COND (CDR (cons t t) (COND (CDR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 '1) '1 1) 1 ) '1 1)
(COND (CDR 2 (COND (CDR 2 '1) '1 2) 2 ) '1 2)
(COND (CDR nil (COND (CDR nil '1) '1 nil) nil ) '1 nil)
(COND (CDR t (COND (CDR t '1) '1 t) t ) '1 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 '2) '2 1) 1 ) '2 1)
(COND (CDR 2 (COND (CDR 2 '2) '2 2) 2 ) '2 2)
(COND (CDR nil (COND (CDR nil '2) '2 nil) nil ) '2 nil)
(COND (CDR t (COND (CDR t '2) '2 t) t ) '2 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 '3) '3 1) 1 ) '3 1)
(COND (CDR 2 (COND (CDR 2 '3) '3 2) 2 ) '3 2)
(COND (CDR nil (COND (CDR nil '3) '3 nil) nil ) '3 nil)
(COND (CDR t (COND (CDR t '3) '3 t) t ) '3 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 '()) '() 1) 1 ) '() 1)
(COND (CDR 2 (COND (CDR 2 '()) '() 2) 2 ) '() 2)
(COND (CDR nil (COND (CDR nil '()) '() nil) nil ) '() nil)
(COND (CDR t (COND (CDR t '()) '() t) t ) '() t)
(COND (CDR (cons t t) (COND (CDR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (CDR 2 (COND (CDR 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (CDR nil (COND (CDR nil '(())) '(()) nil) nil ) '(()) nil)
(COND (CDR t (COND (CDR t '(())) '(()) t) t ) '(()) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (CDR 2 (COND (CDR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (CDR nil (COND (CDR nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (CDR t (COND (CDR t '((()))) '((())) t) t ) '((())) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (CDR 2 (COND (CDR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (CDR nil (COND (CDR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (CDR t (COND (CDR t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 ,A) ,A 1) 1 ) ,A 1)
(COND (CDR 2 (COND (CDR 2 ,A) ,A 2) 2 ) ,A 2)
(COND (CDR nil (COND (CDR nil ,A) ,A nil) nil ) ,A nil)
(COND (CDR t (COND (CDR t ,A) ,A t) t ) ,A t)
(COND (CDR (cons t t) (COND (CDR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 ,1) ,1 1) 1 ) ,1 1)
(COND (CDR 2 (COND (CDR 2 ,1) ,1 2) 2 ) ,1 2)
(COND (CDR nil (COND (CDR nil ,1) ,1 nil) nil ) ,1 nil)
(COND (CDR t (COND (CDR t ,1) ,1 t) t ) ,1 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 ,()) ,() 1) 1 ) ,() 1)
(COND (CDR 2 (COND (CDR 2 ,()) ,() 2) 2 ) ,() 2)
(COND (CDR nil (COND (CDR nil ,()) ,() nil) nil ) ,() nil)
(COND (CDR t (COND (CDR t ,()) ,() t) t ) ,() t)
(COND (CDR (cons t t) (COND (CDR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (CDR 2 (COND (CDR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (CDR nil (COND (CDR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (CDR t (COND (CDR t ,(())) ,(()) t) t ) ,(()) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'A) `'A 1) 1 ) `'A 1)
(COND (CDR 2 (COND (CDR 2 `'A) `'A 2) 2 ) `'A 2)
(COND (CDR nil (COND (CDR nil `'A) `'A nil) nil ) `'A nil)
(COND (CDR t (COND (CDR t `'A) `'A t) t ) `'A t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'B) `'B 1) 1 ) `'B 1)
(COND (CDR 2 (COND (CDR 2 `'B) `'B 2) 2 ) `'B 2)
(COND (CDR nil (COND (CDR nil `'B) `'B nil) nil ) `'B nil)
(COND (CDR t (COND (CDR t `'B) `'B t) t ) `'B t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'C) `'C 1) 1 ) `'C 1)
(COND (CDR 2 (COND (CDR 2 `'C) `'C 2) 2 ) `'C 2)
(COND (CDR nil (COND (CDR nil `'C) `'C nil) nil ) `'C nil)
(COND (CDR t (COND (CDR t `'C) `'C t) t ) `'C t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'1) `'1 1) 1 ) `'1 1)
(COND (CDR 2 (COND (CDR 2 `'1) `'1 2) 2 ) `'1 2)
(COND (CDR nil (COND (CDR nil `'1) `'1 nil) nil ) `'1 nil)
(COND (CDR t (COND (CDR t `'1) `'1 t) t ) `'1 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'2) `'2 1) 1 ) `'2 1)
(COND (CDR 2 (COND (CDR 2 `'2) `'2 2) 2 ) `'2 2)
(COND (CDR nil (COND (CDR nil `'2) `'2 nil) nil ) `'2 nil)
(COND (CDR t (COND (CDR t `'2) `'2 t) t ) `'2 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'3) `'3 1) 1 ) `'3 1)
(COND (CDR 2 (COND (CDR 2 `'3) `'3 2) 2 ) `'3 2)
(COND (CDR nil (COND (CDR nil `'3) `'3 nil) nil ) `'3 nil)
(COND (CDR t (COND (CDR t `'3) `'3 t) t ) `'3 t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'()) `'() 1) 1 ) `'() 1)
(COND (CDR 2 (COND (CDR 2 `'()) `'() 2) 2 ) `'() 2)
(COND (CDR nil (COND (CDR nil `'()) `'() nil) nil ) `'() nil)
(COND (CDR t (COND (CDR t `'()) `'() t) t ) `'() t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (CDR 2 (COND (CDR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (CDR nil (COND (CDR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (CDR t (COND (CDR t `'(())) `'(()) t) t ) `'(()) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (CDR 2 (COND (CDR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (CDR nil (COND (CDR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (CDR t (COND (CDR t `'((()))) `'((())) t) t ) `'((())) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (CDR 1 (COND (CDR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (CDR 2 (COND (CDR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (CDR nil (COND (CDR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (CDR t (COND (CDR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (CDR (cons t t) (COND (CDR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (CDR (cons nil t) (COND (CDR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (CDR (cons nil nil) (COND (CDR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (CDR (cons 0 0) (COND (CDR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (CDR (cons 1 1) (COND (CDR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (CDR (list 1 2 3) (COND (CDR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (CDR (list (cons 1 1 ) ) (COND (CDR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 T) T 1) 1 ) T 1)
(COND (COMMA 2 (COND (COMMA 2 T) T 2) 2 ) T 2)
(COND (COMMA nil (COND (COMMA nil T) T nil) nil ) T nil)
(COND (COMMA t (COND (COMMA t T) T t) t ) T t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 NIL) NIL 1) 1 ) NIL 1)
(COND (COMMA 2 (COND (COMMA 2 NIL) NIL 2) 2 ) NIL 2)
(COND (COMMA nil (COND (COMMA nil NIL) NIL nil) nil ) NIL nil)
(COND (COMMA t (COND (COMMA t NIL) NIL t) t ) NIL t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 A) A 1) 1 ) A 1)
(COND (COMMA 2 (COND (COMMA 2 A) A 2) 2 ) A 2)
(COND (COMMA nil (COND (COMMA nil A) A nil) nil ) A nil)
(COND (COMMA t (COND (COMMA t A) A t) t ) A t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 B) B 1) 1 ) B 1)
(COND (COMMA 2 (COND (COMMA 2 B) B 2) 2 ) B 2)
(COND (COMMA nil (COND (COMMA nil B) B nil) nil ) B nil)
(COND (COMMA t (COND (COMMA t B) B t) t ) B t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 C) C 1) 1 ) C 1)
(COND (COMMA 2 (COND (COMMA 2 C) C 2) 2 ) C 2)
(COND (COMMA nil (COND (COMMA nil C) C nil) nil ) C nil)
(COND (COMMA t (COND (COMMA t C) C t) t ) C t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 1) 1 1) 1 ) 1 1)
(COND (COMMA 2 (COND (COMMA 2 1) 1 2) 2 ) 1 2)
(COND (COMMA nil (COND (COMMA nil 1) 1 nil) nil ) 1 nil)
(COND (COMMA t (COND (COMMA t 1) 1 t) t ) 1 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 2) 2 1) 1 ) 2 1)
(COND (COMMA 2 (COND (COMMA 2 2) 2 2) 2 ) 2 2)
(COND (COMMA nil (COND (COMMA nil 2) 2 nil) nil ) 2 nil)
(COND (COMMA t (COND (COMMA t 2) 2 t) t ) 2 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 3) 3 1) 1 ) 3 1)
(COND (COMMA 2 (COND (COMMA 2 3) 3 2) 2 ) 3 2)
(COND (COMMA nil (COND (COMMA nil 3) 3 nil) nil ) 3 nil)
(COND (COMMA t (COND (COMMA t 3) 3 t) t ) 3 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 ()) () 1) 1 ) () 1)
(COND (COMMA 2 (COND (COMMA 2 ()) () 2) 2 ) () 2)
(COND (COMMA nil (COND (COMMA nil ()) () nil) nil ) () nil)
(COND (COMMA t (COND (COMMA t ()) () t) t ) () t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 (())) (()) 1) 1 ) (()) 1)
(COND (COMMA 2 (COND (COMMA 2 (())) (()) 2) 2 ) (()) 2)
(COND (COMMA nil (COND (COMMA nil (())) (()) nil) nil ) (()) nil)
(COND (COMMA t (COND (COMMA t (())) (()) t) t ) (()) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (COMMA 2 (COND (COMMA 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (COMMA nil (COND (COMMA nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (COMMA t (COND (COMMA t ((()))) ((())) t) t ) ((())) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (COMMA 2 (COND (COMMA 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (COMMA nil (COND (COMMA nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (COMMA t (COND (COMMA t (((())))) (((()))) t) t ) (((()))) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 'A) 'A 1) 1 ) 'A 1)
(COND (COMMA 2 (COND (COMMA 2 'A) 'A 2) 2 ) 'A 2)
(COND (COMMA nil (COND (COMMA nil 'A) 'A nil) nil ) 'A nil)
(COND (COMMA t (COND (COMMA t 'A) 'A t) t ) 'A t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 'B) 'B 1) 1 ) 'B 1)
(COND (COMMA 2 (COND (COMMA 2 'B) 'B 2) 2 ) 'B 2)
(COND (COMMA nil (COND (COMMA nil 'B) 'B nil) nil ) 'B nil)
(COND (COMMA t (COND (COMMA t 'B) 'B t) t ) 'B t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 'C) 'C 1) 1 ) 'C 1)
(COND (COMMA 2 (COND (COMMA 2 'C) 'C 2) 2 ) 'C 2)
(COND (COMMA nil (COND (COMMA nil 'C) 'C nil) nil ) 'C nil)
(COND (COMMA t (COND (COMMA t 'C) 'C t) t ) 'C t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 '1) '1 1) 1 ) '1 1)
(COND (COMMA 2 (COND (COMMA 2 '1) '1 2) 2 ) '1 2)
(COND (COMMA nil (COND (COMMA nil '1) '1 nil) nil ) '1 nil)
(COND (COMMA t (COND (COMMA t '1) '1 t) t ) '1 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 '2) '2 1) 1 ) '2 1)
(COND (COMMA 2 (COND (COMMA 2 '2) '2 2) 2 ) '2 2)
(COND (COMMA nil (COND (COMMA nil '2) '2 nil) nil ) '2 nil)
(COND (COMMA t (COND (COMMA t '2) '2 t) t ) '2 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 '3) '3 1) 1 ) '3 1)
(COND (COMMA 2 (COND (COMMA 2 '3) '3 2) 2 ) '3 2)
(COND (COMMA nil (COND (COMMA nil '3) '3 nil) nil ) '3 nil)
(COND (COMMA t (COND (COMMA t '3) '3 t) t ) '3 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 '()) '() 1) 1 ) '() 1)
(COND (COMMA 2 (COND (COMMA 2 '()) '() 2) 2 ) '() 2)
(COND (COMMA nil (COND (COMMA nil '()) '() nil) nil ) '() nil)
(COND (COMMA t (COND (COMMA t '()) '() t) t ) '() t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (COMMA 2 (COND (COMMA 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (COMMA nil (COND (COMMA nil '(())) '(()) nil) nil ) '(()) nil)
(COND (COMMA t (COND (COMMA t '(())) '(()) t) t ) '(()) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (COMMA 2 (COND (COMMA 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (COMMA nil (COND (COMMA nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (COMMA t (COND (COMMA t '((()))) '((())) t) t ) '((())) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (COMMA 2 (COND (COMMA 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (COMMA nil (COND (COMMA nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (COMMA t (COND (COMMA t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 ,A) ,A 1) 1 ) ,A 1)
(COND (COMMA 2 (COND (COMMA 2 ,A) ,A 2) 2 ) ,A 2)
(COND (COMMA nil (COND (COMMA nil ,A) ,A nil) nil ) ,A nil)
(COND (COMMA t (COND (COMMA t ,A) ,A t) t ) ,A t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 ,1) ,1 1) 1 ) ,1 1)
(COND (COMMA 2 (COND (COMMA 2 ,1) ,1 2) 2 ) ,1 2)
(COND (COMMA nil (COND (COMMA nil ,1) ,1 nil) nil ) ,1 nil)
(COND (COMMA t (COND (COMMA t ,1) ,1 t) t ) ,1 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 ,()) ,() 1) 1 ) ,() 1)
(COND (COMMA 2 (COND (COMMA 2 ,()) ,() 2) 2 ) ,() 2)
(COND (COMMA nil (COND (COMMA nil ,()) ,() nil) nil ) ,() nil)
(COND (COMMA t (COND (COMMA t ,()) ,() t) t ) ,() t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (COMMA 2 (COND (COMMA 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (COMMA nil (COND (COMMA nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (COMMA t (COND (COMMA t ,(())) ,(()) t) t ) ,(()) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'A) `'A 1) 1 ) `'A 1)
(COND (COMMA 2 (COND (COMMA 2 `'A) `'A 2) 2 ) `'A 2)
(COND (COMMA nil (COND (COMMA nil `'A) `'A nil) nil ) `'A nil)
(COND (COMMA t (COND (COMMA t `'A) `'A t) t ) `'A t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'B) `'B 1) 1 ) `'B 1)
(COND (COMMA 2 (COND (COMMA 2 `'B) `'B 2) 2 ) `'B 2)
(COND (COMMA nil (COND (COMMA nil `'B) `'B nil) nil ) `'B nil)
(COND (COMMA t (COND (COMMA t `'B) `'B t) t ) `'B t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'C) `'C 1) 1 ) `'C 1)
(COND (COMMA 2 (COND (COMMA 2 `'C) `'C 2) 2 ) `'C 2)
(COND (COMMA nil (COND (COMMA nil `'C) `'C nil) nil ) `'C nil)
(COND (COMMA t (COND (COMMA t `'C) `'C t) t ) `'C t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'1) `'1 1) 1 ) `'1 1)
(COND (COMMA 2 (COND (COMMA 2 `'1) `'1 2) 2 ) `'1 2)
(COND (COMMA nil (COND (COMMA nil `'1) `'1 nil) nil ) `'1 nil)
(COND (COMMA t (COND (COMMA t `'1) `'1 t) t ) `'1 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'2) `'2 1) 1 ) `'2 1)
(COND (COMMA 2 (COND (COMMA 2 `'2) `'2 2) 2 ) `'2 2)
(COND (COMMA nil (COND (COMMA nil `'2) `'2 nil) nil ) `'2 nil)
(COND (COMMA t (COND (COMMA t `'2) `'2 t) t ) `'2 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'3) `'3 1) 1 ) `'3 1)
(COND (COMMA 2 (COND (COMMA 2 `'3) `'3 2) 2 ) `'3 2)
(COND (COMMA nil (COND (COMMA nil `'3) `'3 nil) nil ) `'3 nil)
(COND (COMMA t (COND (COMMA t `'3) `'3 t) t ) `'3 t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'()) `'() 1) 1 ) `'() 1)
(COND (COMMA 2 (COND (COMMA 2 `'()) `'() 2) 2 ) `'() 2)
(COND (COMMA nil (COND (COMMA nil `'()) `'() nil) nil ) `'() nil)
(COND (COMMA t (COND (COMMA t `'()) `'() t) t ) `'() t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (COMMA 2 (COND (COMMA 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (COMMA nil (COND (COMMA nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (COMMA t (COND (COMMA t `'(())) `'(()) t) t ) `'(()) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (COMMA 2 (COND (COMMA 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (COMMA nil (COND (COMMA nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (COMMA t (COND (COMMA t `'((()))) `'((())) t) t ) `'((())) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (COMMA 1 (COND (COMMA 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (COMMA 2 (COND (COMMA 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (COMMA nil (COND (COMMA nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (COMMA t (COND (COMMA t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (COMMA (cons t t) (COND (COMMA (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (COMMA (cons nil t) (COND (COMMA (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (COMMA (cons nil nil) (COND (COMMA (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (COMMA (cons 0 0) (COND (COMMA (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (COMMA (cons 1 1) (COND (COMMA (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (COMMA (list 1 2 3) (COND (COMMA (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (COMMA (list (cons 1 1 ) ) (COND (COMMA (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 T) T 1) 1 ) T 1)
(COND (COND 2 (COND (COND 2 T) T 2) 2 ) T 2)
(COND (COND nil (COND (COND nil T) T nil) nil ) T nil)
(COND (COND t (COND (COND t T) T t) t ) T t)
(COND (COND (cons t t) (COND (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 NIL) NIL 1) 1 ) NIL 1)
(COND (COND 2 (COND (COND 2 NIL) NIL 2) 2 ) NIL 2)
(COND (COND nil (COND (COND nil NIL) NIL nil) nil ) NIL nil)
(COND (COND t (COND (COND t NIL) NIL t) t ) NIL t)
(COND (COND (cons t t) (COND (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 A) A 1) 1 ) A 1)
(COND (COND 2 (COND (COND 2 A) A 2) 2 ) A 2)
(COND (COND nil (COND (COND nil A) A nil) nil ) A nil)
(COND (COND t (COND (COND t A) A t) t ) A t)
(COND (COND (cons t t) (COND (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 B) B 1) 1 ) B 1)
(COND (COND 2 (COND (COND 2 B) B 2) 2 ) B 2)
(COND (COND nil (COND (COND nil B) B nil) nil ) B nil)
(COND (COND t (COND (COND t B) B t) t ) B t)
(COND (COND (cons t t) (COND (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 C) C 1) 1 ) C 1)
(COND (COND 2 (COND (COND 2 C) C 2) 2 ) C 2)
(COND (COND nil (COND (COND nil C) C nil) nil ) C nil)
(COND (COND t (COND (COND t C) C t) t ) C t)
(COND (COND (cons t t) (COND (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 1) 1 1) 1 ) 1 1)
(COND (COND 2 (COND (COND 2 1) 1 2) 2 ) 1 2)
(COND (COND nil (COND (COND nil 1) 1 nil) nil ) 1 nil)
(COND (COND t (COND (COND t 1) 1 t) t ) 1 t)
(COND (COND (cons t t) (COND (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 2) 2 1) 1 ) 2 1)
(COND (COND 2 (COND (COND 2 2) 2 2) 2 ) 2 2)
(COND (COND nil (COND (COND nil 2) 2 nil) nil ) 2 nil)
(COND (COND t (COND (COND t 2) 2 t) t ) 2 t)
(COND (COND (cons t t) (COND (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 3) 3 1) 1 ) 3 1)
(COND (COND 2 (COND (COND 2 3) 3 2) 2 ) 3 2)
(COND (COND nil (COND (COND nil 3) 3 nil) nil ) 3 nil)
(COND (COND t (COND (COND t 3) 3 t) t ) 3 t)
(COND (COND (cons t t) (COND (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 ()) () 1) 1 ) () 1)
(COND (COND 2 (COND (COND 2 ()) () 2) 2 ) () 2)
(COND (COND nil (COND (COND nil ()) () nil) nil ) () nil)
(COND (COND t (COND (COND t ()) () t) t ) () t)
(COND (COND (cons t t) (COND (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 (())) (()) 1) 1 ) (()) 1)
(COND (COND 2 (COND (COND 2 (())) (()) 2) 2 ) (()) 2)
(COND (COND nil (COND (COND nil (())) (()) nil) nil ) (()) nil)
(COND (COND t (COND (COND t (())) (()) t) t ) (()) t)
(COND (COND (cons t t) (COND (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (COND 2 (COND (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (COND nil (COND (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (COND t (COND (COND t ((()))) ((())) t) t ) ((())) t)
(COND (COND (cons t t) (COND (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (COND 2 (COND (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (COND nil (COND (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (COND t (COND (COND t (((())))) (((()))) t) t ) (((()))) t)
(COND (COND (cons t t) (COND (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 'A) 'A 1) 1 ) 'A 1)
(COND (COND 2 (COND (COND 2 'A) 'A 2) 2 ) 'A 2)
(COND (COND nil (COND (COND nil 'A) 'A nil) nil ) 'A nil)
(COND (COND t (COND (COND t 'A) 'A t) t ) 'A t)
(COND (COND (cons t t) (COND (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 'B) 'B 1) 1 ) 'B 1)
(COND (COND 2 (COND (COND 2 'B) 'B 2) 2 ) 'B 2)
(COND (COND nil (COND (COND nil 'B) 'B nil) nil ) 'B nil)
(COND (COND t (COND (COND t 'B) 'B t) t ) 'B t)
(COND (COND (cons t t) (COND (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 'C) 'C 1) 1 ) 'C 1)
(COND (COND 2 (COND (COND 2 'C) 'C 2) 2 ) 'C 2)
(COND (COND nil (COND (COND nil 'C) 'C nil) nil ) 'C nil)
(COND (COND t (COND (COND t 'C) 'C t) t ) 'C t)
(COND (COND (cons t t) (COND (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 '1) '1 1) 1 ) '1 1)
(COND (COND 2 (COND (COND 2 '1) '1 2) 2 ) '1 2)
(COND (COND nil (COND (COND nil '1) '1 nil) nil ) '1 nil)
(COND (COND t (COND (COND t '1) '1 t) t ) '1 t)
(COND (COND (cons t t) (COND (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 '2) '2 1) 1 ) '2 1)
(COND (COND 2 (COND (COND 2 '2) '2 2) 2 ) '2 2)
(COND (COND nil (COND (COND nil '2) '2 nil) nil ) '2 nil)
(COND (COND t (COND (COND t '2) '2 t) t ) '2 t)
(COND (COND (cons t t) (COND (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 '3) '3 1) 1 ) '3 1)
(COND (COND 2 (COND (COND 2 '3) '3 2) 2 ) '3 2)
(COND (COND nil (COND (COND nil '3) '3 nil) nil ) '3 nil)
(COND (COND t (COND (COND t '3) '3 t) t ) '3 t)
(COND (COND (cons t t) (COND (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 '()) '() 1) 1 ) '() 1)
(COND (COND 2 (COND (COND 2 '()) '() 2) 2 ) '() 2)
(COND (COND nil (COND (COND nil '()) '() nil) nil ) '() nil)
(COND (COND t (COND (COND t '()) '() t) t ) '() t)
(COND (COND (cons t t) (COND (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (COND 2 (COND (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (COND nil (COND (COND nil '(())) '(()) nil) nil ) '(()) nil)
(COND (COND t (COND (COND t '(())) '(()) t) t ) '(()) t)
(COND (COND (cons t t) (COND (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (COND 2 (COND (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (COND nil (COND (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (COND t (COND (COND t '((()))) '((())) t) t ) '((())) t)
(COND (COND (cons t t) (COND (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (COND 2 (COND (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (COND nil (COND (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (COND t (COND (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (COND (cons t t) (COND (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 ,A) ,A 1) 1 ) ,A 1)
(COND (COND 2 (COND (COND 2 ,A) ,A 2) 2 ) ,A 2)
(COND (COND nil (COND (COND nil ,A) ,A nil) nil ) ,A nil)
(COND (COND t (COND (COND t ,A) ,A t) t ) ,A t)
(COND (COND (cons t t) (COND (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 ,1) ,1 1) 1 ) ,1 1)
(COND (COND 2 (COND (COND 2 ,1) ,1 2) 2 ) ,1 2)
(COND (COND nil (COND (COND nil ,1) ,1 nil) nil ) ,1 nil)
(COND (COND t (COND (COND t ,1) ,1 t) t ) ,1 t)
(COND (COND (cons t t) (COND (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 ,()) ,() 1) 1 ) ,() 1)
(COND (COND 2 (COND (COND 2 ,()) ,() 2) 2 ) ,() 2)
(COND (COND nil (COND (COND nil ,()) ,() nil) nil ) ,() nil)
(COND (COND t (COND (COND t ,()) ,() t) t ) ,() t)
(COND (COND (cons t t) (COND (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (COND 2 (COND (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (COND nil (COND (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (COND t (COND (COND t ,(())) ,(()) t) t ) ,(()) t)
(COND (COND (cons t t) (COND (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'A) `'A 1) 1 ) `'A 1)
(COND (COND 2 (COND (COND 2 `'A) `'A 2) 2 ) `'A 2)
(COND (COND nil (COND (COND nil `'A) `'A nil) nil ) `'A nil)
(COND (COND t (COND (COND t `'A) `'A t) t ) `'A t)
(COND (COND (cons t t) (COND (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'B) `'B 1) 1 ) `'B 1)
(COND (COND 2 (COND (COND 2 `'B) `'B 2) 2 ) `'B 2)
(COND (COND nil (COND (COND nil `'B) `'B nil) nil ) `'B nil)
(COND (COND t (COND (COND t `'B) `'B t) t ) `'B t)
(COND (COND (cons t t) (COND (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'C) `'C 1) 1 ) `'C 1)
(COND (COND 2 (COND (COND 2 `'C) `'C 2) 2 ) `'C 2)
(COND (COND nil (COND (COND nil `'C) `'C nil) nil ) `'C nil)
(COND (COND t (COND (COND t `'C) `'C t) t ) `'C t)
(COND (COND (cons t t) (COND (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'1) `'1 1) 1 ) `'1 1)
(COND (COND 2 (COND (COND 2 `'1) `'1 2) 2 ) `'1 2)
(COND (COND nil (COND (COND nil `'1) `'1 nil) nil ) `'1 nil)
(COND (COND t (COND (COND t `'1) `'1 t) t ) `'1 t)
(COND (COND (cons t t) (COND (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'2) `'2 1) 1 ) `'2 1)
(COND (COND 2 (COND (COND 2 `'2) `'2 2) 2 ) `'2 2)
(COND (COND nil (COND (COND nil `'2) `'2 nil) nil ) `'2 nil)
(COND (COND t (COND (COND t `'2) `'2 t) t ) `'2 t)
(COND (COND (cons t t) (COND (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'3) `'3 1) 1 ) `'3 1)
(COND (COND 2 (COND (COND 2 `'3) `'3 2) 2 ) `'3 2)
(COND (COND nil (COND (COND nil `'3) `'3 nil) nil ) `'3 nil)
(COND (COND t (COND (COND t `'3) `'3 t) t ) `'3 t)
(COND (COND (cons t t) (COND (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'()) `'() 1) 1 ) `'() 1)
(COND (COND 2 (COND (COND 2 `'()) `'() 2) 2 ) `'() 2)
(COND (COND nil (COND (COND nil `'()) `'() nil) nil ) `'() nil)
(COND (COND t (COND (COND t `'()) `'() t) t ) `'() t)
(COND (COND (cons t t) (COND (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (COND 2 (COND (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (COND nil (COND (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (COND t (COND (COND t `'(())) `'(()) t) t ) `'(()) t)
(COND (COND (cons t t) (COND (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (COND 2 (COND (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (COND nil (COND (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (COND t (COND (COND t `'((()))) `'((())) t) t ) `'((())) t)
(COND (COND (cons t t) (COND (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (COND 1 (COND (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (COND 2 (COND (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (COND nil (COND (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (COND t (COND (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (COND (cons t t) (COND (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (COND (cons nil t) (COND (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (COND (cons nil nil) (COND (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (COND (cons 0 0) (COND (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (COND (cons 1 1) (COND (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (COND (list 1 2 3) (COND (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (COND (list (cons 1 1 ) ) (COND (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 T) T 1) 1 ) T 1)
(COND (CONS 2 (COND (CONS 2 T) T 2) 2 ) T 2)
(COND (CONS nil (COND (CONS nil T) T nil) nil ) T nil)
(COND (CONS t (COND (CONS t T) T t) t ) T t)
(COND (CONS (cons t t) (COND (CONS (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 NIL) NIL 1) 1 ) NIL 1)
(COND (CONS 2 (COND (CONS 2 NIL) NIL 2) 2 ) NIL 2)
(COND (CONS nil (COND (CONS nil NIL) NIL nil) nil ) NIL nil)
(COND (CONS t (COND (CONS t NIL) NIL t) t ) NIL t)
(COND (CONS (cons t t) (COND (CONS (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 A) A 1) 1 ) A 1)
(COND (CONS 2 (COND (CONS 2 A) A 2) 2 ) A 2)
(COND (CONS nil (COND (CONS nil A) A nil) nil ) A nil)
(COND (CONS t (COND (CONS t A) A t) t ) A t)
(COND (CONS (cons t t) (COND (CONS (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 B) B 1) 1 ) B 1)
(COND (CONS 2 (COND (CONS 2 B) B 2) 2 ) B 2)
(COND (CONS nil (COND (CONS nil B) B nil) nil ) B nil)
(COND (CONS t (COND (CONS t B) B t) t ) B t)
(COND (CONS (cons t t) (COND (CONS (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 C) C 1) 1 ) C 1)
(COND (CONS 2 (COND (CONS 2 C) C 2) 2 ) C 2)
(COND (CONS nil (COND (CONS nil C) C nil) nil ) C nil)
(COND (CONS t (COND (CONS t C) C t) t ) C t)
(COND (CONS (cons t t) (COND (CONS (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 1) 1 1) 1 ) 1 1)
(COND (CONS 2 (COND (CONS 2 1) 1 2) 2 ) 1 2)
(COND (CONS nil (COND (CONS nil 1) 1 nil) nil ) 1 nil)
(COND (CONS t (COND (CONS t 1) 1 t) t ) 1 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 2) 2 1) 1 ) 2 1)
(COND (CONS 2 (COND (CONS 2 2) 2 2) 2 ) 2 2)
(COND (CONS nil (COND (CONS nil 2) 2 nil) nil ) 2 nil)
(COND (CONS t (COND (CONS t 2) 2 t) t ) 2 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 3) 3 1) 1 ) 3 1)
(COND (CONS 2 (COND (CONS 2 3) 3 2) 2 ) 3 2)
(COND (CONS nil (COND (CONS nil 3) 3 nil) nil ) 3 nil)
(COND (CONS t (COND (CONS t 3) 3 t) t ) 3 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 ()) () 1) 1 ) () 1)
(COND (CONS 2 (COND (CONS 2 ()) () 2) 2 ) () 2)
(COND (CONS nil (COND (CONS nil ()) () nil) nil ) () nil)
(COND (CONS t (COND (CONS t ()) () t) t ) () t)
(COND (CONS (cons t t) (COND (CONS (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 (())) (()) 1) 1 ) (()) 1)
(COND (CONS 2 (COND (CONS 2 (())) (()) 2) 2 ) (()) 2)
(COND (CONS nil (COND (CONS nil (())) (()) nil) nil ) (()) nil)
(COND (CONS t (COND (CONS t (())) (()) t) t ) (()) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (CONS 2 (COND (CONS 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (CONS nil (COND (CONS nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (CONS t (COND (CONS t ((()))) ((())) t) t ) ((())) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (CONS 2 (COND (CONS 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (CONS nil (COND (CONS nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (CONS t (COND (CONS t (((())))) (((()))) t) t ) (((()))) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 'A) 'A 1) 1 ) 'A 1)
(COND (CONS 2 (COND (CONS 2 'A) 'A 2) 2 ) 'A 2)
(COND (CONS nil (COND (CONS nil 'A) 'A nil) nil ) 'A nil)
(COND (CONS t (COND (CONS t 'A) 'A t) t ) 'A t)
(COND (CONS (cons t t) (COND (CONS (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 'B) 'B 1) 1 ) 'B 1)
(COND (CONS 2 (COND (CONS 2 'B) 'B 2) 2 ) 'B 2)
(COND (CONS nil (COND (CONS nil 'B) 'B nil) nil ) 'B nil)
(COND (CONS t (COND (CONS t 'B) 'B t) t ) 'B t)
(COND (CONS (cons t t) (COND (CONS (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 'C) 'C 1) 1 ) 'C 1)
(COND (CONS 2 (COND (CONS 2 'C) 'C 2) 2 ) 'C 2)
(COND (CONS nil (COND (CONS nil 'C) 'C nil) nil ) 'C nil)
(COND (CONS t (COND (CONS t 'C) 'C t) t ) 'C t)
(COND (CONS (cons t t) (COND (CONS (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 '1) '1 1) 1 ) '1 1)
(COND (CONS 2 (COND (CONS 2 '1) '1 2) 2 ) '1 2)
(COND (CONS nil (COND (CONS nil '1) '1 nil) nil ) '1 nil)
(COND (CONS t (COND (CONS t '1) '1 t) t ) '1 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 '2) '2 1) 1 ) '2 1)
(COND (CONS 2 (COND (CONS 2 '2) '2 2) 2 ) '2 2)
(COND (CONS nil (COND (CONS nil '2) '2 nil) nil ) '2 nil)
(COND (CONS t (COND (CONS t '2) '2 t) t ) '2 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 '3) '3 1) 1 ) '3 1)
(COND (CONS 2 (COND (CONS 2 '3) '3 2) 2 ) '3 2)
(COND (CONS nil (COND (CONS nil '3) '3 nil) nil ) '3 nil)
(COND (CONS t (COND (CONS t '3) '3 t) t ) '3 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 '()) '() 1) 1 ) '() 1)
(COND (CONS 2 (COND (CONS 2 '()) '() 2) 2 ) '() 2)
(COND (CONS nil (COND (CONS nil '()) '() nil) nil ) '() nil)
(COND (CONS t (COND (CONS t '()) '() t) t ) '() t)
(COND (CONS (cons t t) (COND (CONS (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (CONS 2 (COND (CONS 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (CONS nil (COND (CONS nil '(())) '(()) nil) nil ) '(()) nil)
(COND (CONS t (COND (CONS t '(())) '(()) t) t ) '(()) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (CONS 2 (COND (CONS 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (CONS nil (COND (CONS nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (CONS t (COND (CONS t '((()))) '((())) t) t ) '((())) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (CONS 2 (COND (CONS 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (CONS nil (COND (CONS nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (CONS t (COND (CONS t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 ,A) ,A 1) 1 ) ,A 1)
(COND (CONS 2 (COND (CONS 2 ,A) ,A 2) 2 ) ,A 2)
(COND (CONS nil (COND (CONS nil ,A) ,A nil) nil ) ,A nil)
(COND (CONS t (COND (CONS t ,A) ,A t) t ) ,A t)
(COND (CONS (cons t t) (COND (CONS (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 ,1) ,1 1) 1 ) ,1 1)
(COND (CONS 2 (COND (CONS 2 ,1) ,1 2) 2 ) ,1 2)
(COND (CONS nil (COND (CONS nil ,1) ,1 nil) nil ) ,1 nil)
(COND (CONS t (COND (CONS t ,1) ,1 t) t ) ,1 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 ,()) ,() 1) 1 ) ,() 1)
(COND (CONS 2 (COND (CONS 2 ,()) ,() 2) 2 ) ,() 2)
(COND (CONS nil (COND (CONS nil ,()) ,() nil) nil ) ,() nil)
(COND (CONS t (COND (CONS t ,()) ,() t) t ) ,() t)
(COND (CONS (cons t t) (COND (CONS (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (CONS 2 (COND (CONS 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (CONS nil (COND (CONS nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (CONS t (COND (CONS t ,(())) ,(()) t) t ) ,(()) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'A) `'A 1) 1 ) `'A 1)
(COND (CONS 2 (COND (CONS 2 `'A) `'A 2) 2 ) `'A 2)
(COND (CONS nil (COND (CONS nil `'A) `'A nil) nil ) `'A nil)
(COND (CONS t (COND (CONS t `'A) `'A t) t ) `'A t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'B) `'B 1) 1 ) `'B 1)
(COND (CONS 2 (COND (CONS 2 `'B) `'B 2) 2 ) `'B 2)
(COND (CONS nil (COND (CONS nil `'B) `'B nil) nil ) `'B nil)
(COND (CONS t (COND (CONS t `'B) `'B t) t ) `'B t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'C) `'C 1) 1 ) `'C 1)
(COND (CONS 2 (COND (CONS 2 `'C) `'C 2) 2 ) `'C 2)
(COND (CONS nil (COND (CONS nil `'C) `'C nil) nil ) `'C nil)
(COND (CONS t (COND (CONS t `'C) `'C t) t ) `'C t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'1) `'1 1) 1 ) `'1 1)
(COND (CONS 2 (COND (CONS 2 `'1) `'1 2) 2 ) `'1 2)
(COND (CONS nil (COND (CONS nil `'1) `'1 nil) nil ) `'1 nil)
(COND (CONS t (COND (CONS t `'1) `'1 t) t ) `'1 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'2) `'2 1) 1 ) `'2 1)
(COND (CONS 2 (COND (CONS 2 `'2) `'2 2) 2 ) `'2 2)
(COND (CONS nil (COND (CONS nil `'2) `'2 nil) nil ) `'2 nil)
(COND (CONS t (COND (CONS t `'2) `'2 t) t ) `'2 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'3) `'3 1) 1 ) `'3 1)
(COND (CONS 2 (COND (CONS 2 `'3) `'3 2) 2 ) `'3 2)
(COND (CONS nil (COND (CONS nil `'3) `'3 nil) nil ) `'3 nil)
(COND (CONS t (COND (CONS t `'3) `'3 t) t ) `'3 t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'()) `'() 1) 1 ) `'() 1)
(COND (CONS 2 (COND (CONS 2 `'()) `'() 2) 2 ) `'() 2)
(COND (CONS nil (COND (CONS nil `'()) `'() nil) nil ) `'() nil)
(COND (CONS t (COND (CONS t `'()) `'() t) t ) `'() t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (CONS 2 (COND (CONS 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (CONS nil (COND (CONS nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (CONS t (COND (CONS t `'(())) `'(()) t) t ) `'(()) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (CONS 2 (COND (CONS 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (CONS nil (COND (CONS nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (CONS t (COND (CONS t `'((()))) `'((())) t) t ) `'((())) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (CONS 1 (COND (CONS 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (CONS 2 (COND (CONS 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (CONS nil (COND (CONS nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (CONS t (COND (CONS t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (CONS (cons t t) (COND (CONS (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (CONS (cons nil t) (COND (CONS (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (CONS (cons nil nil) (COND (CONS (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (CONS (cons 0 0) (COND (CONS (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (CONS (cons 1 1) (COND (CONS (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (CONS (list 1 2 3) (COND (CONS (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (CONS (list (cons 1 1 ) ) (COND (CONS (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 T) T 1) 1 ) T 1)
(COND (CONSP 2 (COND (CONSP 2 T) T 2) 2 ) T 2)
(COND (CONSP nil (COND (CONSP nil T) T nil) nil ) T nil)
(COND (CONSP t (COND (CONSP t T) T t) t ) T t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 NIL) NIL 1) 1 ) NIL 1)
(COND (CONSP 2 (COND (CONSP 2 NIL) NIL 2) 2 ) NIL 2)
(COND (CONSP nil (COND (CONSP nil NIL) NIL nil) nil ) NIL nil)
(COND (CONSP t (COND (CONSP t NIL) NIL t) t ) NIL t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 A) A 1) 1 ) A 1)
(COND (CONSP 2 (COND (CONSP 2 A) A 2) 2 ) A 2)
(COND (CONSP nil (COND (CONSP nil A) A nil) nil ) A nil)
(COND (CONSP t (COND (CONSP t A) A t) t ) A t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 B) B 1) 1 ) B 1)
(COND (CONSP 2 (COND (CONSP 2 B) B 2) 2 ) B 2)
(COND (CONSP nil (COND (CONSP nil B) B nil) nil ) B nil)
(COND (CONSP t (COND (CONSP t B) B t) t ) B t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 C) C 1) 1 ) C 1)
(COND (CONSP 2 (COND (CONSP 2 C) C 2) 2 ) C 2)
(COND (CONSP nil (COND (CONSP nil C) C nil) nil ) C nil)
(COND (CONSP t (COND (CONSP t C) C t) t ) C t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 1) 1 1) 1 ) 1 1)
(COND (CONSP 2 (COND (CONSP 2 1) 1 2) 2 ) 1 2)
(COND (CONSP nil (COND (CONSP nil 1) 1 nil) nil ) 1 nil)
(COND (CONSP t (COND (CONSP t 1) 1 t) t ) 1 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 2) 2 1) 1 ) 2 1)
(COND (CONSP 2 (COND (CONSP 2 2) 2 2) 2 ) 2 2)
(COND (CONSP nil (COND (CONSP nil 2) 2 nil) nil ) 2 nil)
(COND (CONSP t (COND (CONSP t 2) 2 t) t ) 2 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 3) 3 1) 1 ) 3 1)
(COND (CONSP 2 (COND (CONSP 2 3) 3 2) 2 ) 3 2)
(COND (CONSP nil (COND (CONSP nil 3) 3 nil) nil ) 3 nil)
(COND (CONSP t (COND (CONSP t 3) 3 t) t ) 3 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 ()) () 1) 1 ) () 1)
(COND (CONSP 2 (COND (CONSP 2 ()) () 2) 2 ) () 2)
(COND (CONSP nil (COND (CONSP nil ()) () nil) nil ) () nil)
(COND (CONSP t (COND (CONSP t ()) () t) t ) () t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 (())) (()) 1) 1 ) (()) 1)
(COND (CONSP 2 (COND (CONSP 2 (())) (()) 2) 2 ) (()) 2)
(COND (CONSP nil (COND (CONSP nil (())) (()) nil) nil ) (()) nil)
(COND (CONSP t (COND (CONSP t (())) (()) t) t ) (()) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (CONSP 2 (COND (CONSP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (CONSP nil (COND (CONSP nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (CONSP t (COND (CONSP t ((()))) ((())) t) t ) ((())) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (CONSP 2 (COND (CONSP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (CONSP nil (COND (CONSP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (CONSP t (COND (CONSP t (((())))) (((()))) t) t ) (((()))) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 'A) 'A 1) 1 ) 'A 1)
(COND (CONSP 2 (COND (CONSP 2 'A) 'A 2) 2 ) 'A 2)
(COND (CONSP nil (COND (CONSP nil 'A) 'A nil) nil ) 'A nil)
(COND (CONSP t (COND (CONSP t 'A) 'A t) t ) 'A t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 'B) 'B 1) 1 ) 'B 1)
(COND (CONSP 2 (COND (CONSP 2 'B) 'B 2) 2 ) 'B 2)
(COND (CONSP nil (COND (CONSP nil 'B) 'B nil) nil ) 'B nil)
(COND (CONSP t (COND (CONSP t 'B) 'B t) t ) 'B t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 'C) 'C 1) 1 ) 'C 1)
(COND (CONSP 2 (COND (CONSP 2 'C) 'C 2) 2 ) 'C 2)
(COND (CONSP nil (COND (CONSP nil 'C) 'C nil) nil ) 'C nil)
(COND (CONSP t (COND (CONSP t 'C) 'C t) t ) 'C t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 '1) '1 1) 1 ) '1 1)
(COND (CONSP 2 (COND (CONSP 2 '1) '1 2) 2 ) '1 2)
(COND (CONSP nil (COND (CONSP nil '1) '1 nil) nil ) '1 nil)
(COND (CONSP t (COND (CONSP t '1) '1 t) t ) '1 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 '2) '2 1) 1 ) '2 1)
(COND (CONSP 2 (COND (CONSP 2 '2) '2 2) 2 ) '2 2)
(COND (CONSP nil (COND (CONSP nil '2) '2 nil) nil ) '2 nil)
(COND (CONSP t (COND (CONSP t '2) '2 t) t ) '2 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 '3) '3 1) 1 ) '3 1)
(COND (CONSP 2 (COND (CONSP 2 '3) '3 2) 2 ) '3 2)
(COND (CONSP nil (COND (CONSP nil '3) '3 nil) nil ) '3 nil)
(COND (CONSP t (COND (CONSP t '3) '3 t) t ) '3 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 '()) '() 1) 1 ) '() 1)
(COND (CONSP 2 (COND (CONSP 2 '()) '() 2) 2 ) '() 2)
(COND (CONSP nil (COND (CONSP nil '()) '() nil) nil ) '() nil)
(COND (CONSP t (COND (CONSP t '()) '() t) t ) '() t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (CONSP 2 (COND (CONSP 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (CONSP nil (COND (CONSP nil '(())) '(()) nil) nil ) '(()) nil)
(COND (CONSP t (COND (CONSP t '(())) '(()) t) t ) '(()) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (CONSP 2 (COND (CONSP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (CONSP nil (COND (CONSP nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (CONSP t (COND (CONSP t '((()))) '((())) t) t ) '((())) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (CONSP 2 (COND (CONSP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (CONSP nil (COND (CONSP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (CONSP t (COND (CONSP t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 ,A) ,A 1) 1 ) ,A 1)
(COND (CONSP 2 (COND (CONSP 2 ,A) ,A 2) 2 ) ,A 2)
(COND (CONSP nil (COND (CONSP nil ,A) ,A nil) nil ) ,A nil)
(COND (CONSP t (COND (CONSP t ,A) ,A t) t ) ,A t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 ,1) ,1 1) 1 ) ,1 1)
(COND (CONSP 2 (COND (CONSP 2 ,1) ,1 2) 2 ) ,1 2)
(COND (CONSP nil (COND (CONSP nil ,1) ,1 nil) nil ) ,1 nil)
(COND (CONSP t (COND (CONSP t ,1) ,1 t) t ) ,1 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 ,()) ,() 1) 1 ) ,() 1)
(COND (CONSP 2 (COND (CONSP 2 ,()) ,() 2) 2 ) ,() 2)
(COND (CONSP nil (COND (CONSP nil ,()) ,() nil) nil ) ,() nil)
(COND (CONSP t (COND (CONSP t ,()) ,() t) t ) ,() t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (CONSP 2 (COND (CONSP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (CONSP nil (COND (CONSP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (CONSP t (COND (CONSP t ,(())) ,(()) t) t ) ,(()) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'A) `'A 1) 1 ) `'A 1)
(COND (CONSP 2 (COND (CONSP 2 `'A) `'A 2) 2 ) `'A 2)
(COND (CONSP nil (COND (CONSP nil `'A) `'A nil) nil ) `'A nil)
(COND (CONSP t (COND (CONSP t `'A) `'A t) t ) `'A t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'B) `'B 1) 1 ) `'B 1)
(COND (CONSP 2 (COND (CONSP 2 `'B) `'B 2) 2 ) `'B 2)
(COND (CONSP nil (COND (CONSP nil `'B) `'B nil) nil ) `'B nil)
(COND (CONSP t (COND (CONSP t `'B) `'B t) t ) `'B t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'C) `'C 1) 1 ) `'C 1)
(COND (CONSP 2 (COND (CONSP 2 `'C) `'C 2) 2 ) `'C 2)
(COND (CONSP nil (COND (CONSP nil `'C) `'C nil) nil ) `'C nil)
(COND (CONSP t (COND (CONSP t `'C) `'C t) t ) `'C t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'1) `'1 1) 1 ) `'1 1)
(COND (CONSP 2 (COND (CONSP 2 `'1) `'1 2) 2 ) `'1 2)
(COND (CONSP nil (COND (CONSP nil `'1) `'1 nil) nil ) `'1 nil)
(COND (CONSP t (COND (CONSP t `'1) `'1 t) t ) `'1 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'2) `'2 1) 1 ) `'2 1)
(COND (CONSP 2 (COND (CONSP 2 `'2) `'2 2) 2 ) `'2 2)
(COND (CONSP nil (COND (CONSP nil `'2) `'2 nil) nil ) `'2 nil)
(COND (CONSP t (COND (CONSP t `'2) `'2 t) t ) `'2 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'3) `'3 1) 1 ) `'3 1)
(COND (CONSP 2 (COND (CONSP 2 `'3) `'3 2) 2 ) `'3 2)
(COND (CONSP nil (COND (CONSP nil `'3) `'3 nil) nil ) `'3 nil)
(COND (CONSP t (COND (CONSP t `'3) `'3 t) t ) `'3 t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'()) `'() 1) 1 ) `'() 1)
(COND (CONSP 2 (COND (CONSP 2 `'()) `'() 2) 2 ) `'() 2)
(COND (CONSP nil (COND (CONSP nil `'()) `'() nil) nil ) `'() nil)
(COND (CONSP t (COND (CONSP t `'()) `'() t) t ) `'() t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (CONSP 2 (COND (CONSP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (CONSP nil (COND (CONSP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (CONSP t (COND (CONSP t `'(())) `'(()) t) t ) `'(()) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (CONSP 2 (COND (CONSP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (CONSP nil (COND (CONSP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (CONSP t (COND (CONSP t `'((()))) `'((())) t) t ) `'((())) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (CONSP 1 (COND (CONSP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (CONSP 2 (COND (CONSP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (CONSP nil (COND (CONSP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (CONSP t (COND (CONSP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (CONSP (cons t t) (COND (CONSP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (CONSP (cons nil t) (COND (CONSP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (CONSP (cons nil nil) (COND (CONSP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (CONSP (cons 0 0) (COND (CONSP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (CONSP (cons 1 1) (COND (CONSP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (CONSP (list 1 2 3) (COND (CONSP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (CONSP (list (cons 1 1 ) ) (COND (CONSP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 T) T 1) 1 ) T 1)
(COND (EQ 2 (COND (EQ 2 T) T 2) 2 ) T 2)
(COND (EQ nil (COND (EQ nil T) T nil) nil ) T nil)
(COND (EQ t (COND (EQ t T) T t) t ) T t)
(COND (EQ (cons t t) (COND (EQ (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 NIL) NIL 1) 1 ) NIL 1)
(COND (EQ 2 (COND (EQ 2 NIL) NIL 2) 2 ) NIL 2)
(COND (EQ nil (COND (EQ nil NIL) NIL nil) nil ) NIL nil)
(COND (EQ t (COND (EQ t NIL) NIL t) t ) NIL t)
(COND (EQ (cons t t) (COND (EQ (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 A) A 1) 1 ) A 1)
(COND (EQ 2 (COND (EQ 2 A) A 2) 2 ) A 2)
(COND (EQ nil (COND (EQ nil A) A nil) nil ) A nil)
(COND (EQ t (COND (EQ t A) A t) t ) A t)
(COND (EQ (cons t t) (COND (EQ (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 B) B 1) 1 ) B 1)
(COND (EQ 2 (COND (EQ 2 B) B 2) 2 ) B 2)
(COND (EQ nil (COND (EQ nil B) B nil) nil ) B nil)
(COND (EQ t (COND (EQ t B) B t) t ) B t)
(COND (EQ (cons t t) (COND (EQ (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 C) C 1) 1 ) C 1)
(COND (EQ 2 (COND (EQ 2 C) C 2) 2 ) C 2)
(COND (EQ nil (COND (EQ nil C) C nil) nil ) C nil)
(COND (EQ t (COND (EQ t C) C t) t ) C t)
(COND (EQ (cons t t) (COND (EQ (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 1) 1 1) 1 ) 1 1)
(COND (EQ 2 (COND (EQ 2 1) 1 2) 2 ) 1 2)
(COND (EQ nil (COND (EQ nil 1) 1 nil) nil ) 1 nil)
(COND (EQ t (COND (EQ t 1) 1 t) t ) 1 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 2) 2 1) 1 ) 2 1)
(COND (EQ 2 (COND (EQ 2 2) 2 2) 2 ) 2 2)
(COND (EQ nil (COND (EQ nil 2) 2 nil) nil ) 2 nil)
(COND (EQ t (COND (EQ t 2) 2 t) t ) 2 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 3) 3 1) 1 ) 3 1)
(COND (EQ 2 (COND (EQ 2 3) 3 2) 2 ) 3 2)
(COND (EQ nil (COND (EQ nil 3) 3 nil) nil ) 3 nil)
(COND (EQ t (COND (EQ t 3) 3 t) t ) 3 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 ()) () 1) 1 ) () 1)
(COND (EQ 2 (COND (EQ 2 ()) () 2) 2 ) () 2)
(COND (EQ nil (COND (EQ nil ()) () nil) nil ) () nil)
(COND (EQ t (COND (EQ t ()) () t) t ) () t)
(COND (EQ (cons t t) (COND (EQ (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 (())) (()) 1) 1 ) (()) 1)
(COND (EQ 2 (COND (EQ 2 (())) (()) 2) 2 ) (()) 2)
(COND (EQ nil (COND (EQ nil (())) (()) nil) nil ) (()) nil)
(COND (EQ t (COND (EQ t (())) (()) t) t ) (()) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (EQ 2 (COND (EQ 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (EQ nil (COND (EQ nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (EQ t (COND (EQ t ((()))) ((())) t) t ) ((())) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (EQ 2 (COND (EQ 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (EQ nil (COND (EQ nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (EQ t (COND (EQ t (((())))) (((()))) t) t ) (((()))) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 'A) 'A 1) 1 ) 'A 1)
(COND (EQ 2 (COND (EQ 2 'A) 'A 2) 2 ) 'A 2)
(COND (EQ nil (COND (EQ nil 'A) 'A nil) nil ) 'A nil)
(COND (EQ t (COND (EQ t 'A) 'A t) t ) 'A t)
(COND (EQ (cons t t) (COND (EQ (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 'B) 'B 1) 1 ) 'B 1)
(COND (EQ 2 (COND (EQ 2 'B) 'B 2) 2 ) 'B 2)
(COND (EQ nil (COND (EQ nil 'B) 'B nil) nil ) 'B nil)
(COND (EQ t (COND (EQ t 'B) 'B t) t ) 'B t)
(COND (EQ (cons t t) (COND (EQ (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 'C) 'C 1) 1 ) 'C 1)
(COND (EQ 2 (COND (EQ 2 'C) 'C 2) 2 ) 'C 2)
(COND (EQ nil (COND (EQ nil 'C) 'C nil) nil ) 'C nil)
(COND (EQ t (COND (EQ t 'C) 'C t) t ) 'C t)
(COND (EQ (cons t t) (COND (EQ (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 '1) '1 1) 1 ) '1 1)
(COND (EQ 2 (COND (EQ 2 '1) '1 2) 2 ) '1 2)
(COND (EQ nil (COND (EQ nil '1) '1 nil) nil ) '1 nil)
(COND (EQ t (COND (EQ t '1) '1 t) t ) '1 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 '2) '2 1) 1 ) '2 1)
(COND (EQ 2 (COND (EQ 2 '2) '2 2) 2 ) '2 2)
(COND (EQ nil (COND (EQ nil '2) '2 nil) nil ) '2 nil)
(COND (EQ t (COND (EQ t '2) '2 t) t ) '2 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 '3) '3 1) 1 ) '3 1)
(COND (EQ 2 (COND (EQ 2 '3) '3 2) 2 ) '3 2)
(COND (EQ nil (COND (EQ nil '3) '3 nil) nil ) '3 nil)
(COND (EQ t (COND (EQ t '3) '3 t) t ) '3 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 '()) '() 1) 1 ) '() 1)
(COND (EQ 2 (COND (EQ 2 '()) '() 2) 2 ) '() 2)
(COND (EQ nil (COND (EQ nil '()) '() nil) nil ) '() nil)
(COND (EQ t (COND (EQ t '()) '() t) t ) '() t)
(COND (EQ (cons t t) (COND (EQ (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (EQ 2 (COND (EQ 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (EQ nil (COND (EQ nil '(())) '(()) nil) nil ) '(()) nil)
(COND (EQ t (COND (EQ t '(())) '(()) t) t ) '(()) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (EQ 2 (COND (EQ 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (EQ nil (COND (EQ nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (EQ t (COND (EQ t '((()))) '((())) t) t ) '((())) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (EQ 2 (COND (EQ 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (EQ nil (COND (EQ nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (EQ t (COND (EQ t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 ,A) ,A 1) 1 ) ,A 1)
(COND (EQ 2 (COND (EQ 2 ,A) ,A 2) 2 ) ,A 2)
(COND (EQ nil (COND (EQ nil ,A) ,A nil) nil ) ,A nil)
(COND (EQ t (COND (EQ t ,A) ,A t) t ) ,A t)
(COND (EQ (cons t t) (COND (EQ (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 ,1) ,1 1) 1 ) ,1 1)
(COND (EQ 2 (COND (EQ 2 ,1) ,1 2) 2 ) ,1 2)
(COND (EQ nil (COND (EQ nil ,1) ,1 nil) nil ) ,1 nil)
(COND (EQ t (COND (EQ t ,1) ,1 t) t ) ,1 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 ,()) ,() 1) 1 ) ,() 1)
(COND (EQ 2 (COND (EQ 2 ,()) ,() 2) 2 ) ,() 2)
(COND (EQ nil (COND (EQ nil ,()) ,() nil) nil ) ,() nil)
(COND (EQ t (COND (EQ t ,()) ,() t) t ) ,() t)
(COND (EQ (cons t t) (COND (EQ (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (EQ 2 (COND (EQ 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (EQ nil (COND (EQ nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (EQ t (COND (EQ t ,(())) ,(()) t) t ) ,(()) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'A) `'A 1) 1 ) `'A 1)
(COND (EQ 2 (COND (EQ 2 `'A) `'A 2) 2 ) `'A 2)
(COND (EQ nil (COND (EQ nil `'A) `'A nil) nil ) `'A nil)
(COND (EQ t (COND (EQ t `'A) `'A t) t ) `'A t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'B) `'B 1) 1 ) `'B 1)
(COND (EQ 2 (COND (EQ 2 `'B) `'B 2) 2 ) `'B 2)
(COND (EQ nil (COND (EQ nil `'B) `'B nil) nil ) `'B nil)
(COND (EQ t (COND (EQ t `'B) `'B t) t ) `'B t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'C) `'C 1) 1 ) `'C 1)
(COND (EQ 2 (COND (EQ 2 `'C) `'C 2) 2 ) `'C 2)
(COND (EQ nil (COND (EQ nil `'C) `'C nil) nil ) `'C nil)
(COND (EQ t (COND (EQ t `'C) `'C t) t ) `'C t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'1) `'1 1) 1 ) `'1 1)
(COND (EQ 2 (COND (EQ 2 `'1) `'1 2) 2 ) `'1 2)
(COND (EQ nil (COND (EQ nil `'1) `'1 nil) nil ) `'1 nil)
(COND (EQ t (COND (EQ t `'1) `'1 t) t ) `'1 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'2) `'2 1) 1 ) `'2 1)
(COND (EQ 2 (COND (EQ 2 `'2) `'2 2) 2 ) `'2 2)
(COND (EQ nil (COND (EQ nil `'2) `'2 nil) nil ) `'2 nil)
(COND (EQ t (COND (EQ t `'2) `'2 t) t ) `'2 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'3) `'3 1) 1 ) `'3 1)
(COND (EQ 2 (COND (EQ 2 `'3) `'3 2) 2 ) `'3 2)
(COND (EQ nil (COND (EQ nil `'3) `'3 nil) nil ) `'3 nil)
(COND (EQ t (COND (EQ t `'3) `'3 t) t ) `'3 t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'()) `'() 1) 1 ) `'() 1)
(COND (EQ 2 (COND (EQ 2 `'()) `'() 2) 2 ) `'() 2)
(COND (EQ nil (COND (EQ nil `'()) `'() nil) nil ) `'() nil)
(COND (EQ t (COND (EQ t `'()) `'() t) t ) `'() t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (EQ 2 (COND (EQ 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (EQ nil (COND (EQ nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (EQ t (COND (EQ t `'(())) `'(()) t) t ) `'(()) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (EQ 2 (COND (EQ 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (EQ nil (COND (EQ nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (EQ t (COND (EQ t `'((()))) `'((())) t) t ) `'((())) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (EQ 1 (COND (EQ 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (EQ 2 (COND (EQ 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (EQ nil (COND (EQ nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (EQ t (COND (EQ t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (EQ (cons t t) (COND (EQ (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (EQ (cons nil t) (COND (EQ (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (EQ (cons nil nil) (COND (EQ (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (EQ (cons 0 0) (COND (EQ (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (EQ (cons 1 1) (COND (EQ (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (EQ (list 1 2 3) (COND (EQ (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (EQ (list (cons 1 1 ) ) (COND (EQ (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 T) T 1) 1 ) T 1)
(COND (EQL 2 (COND (EQL 2 T) T 2) 2 ) T 2)
(COND (EQL nil (COND (EQL nil T) T nil) nil ) T nil)
(COND (EQL t (COND (EQL t T) T t) t ) T t)
(COND (EQL (cons t t) (COND (EQL (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 NIL) NIL 1) 1 ) NIL 1)
(COND (EQL 2 (COND (EQL 2 NIL) NIL 2) 2 ) NIL 2)
(COND (EQL nil (COND (EQL nil NIL) NIL nil) nil ) NIL nil)
(COND (EQL t (COND (EQL t NIL) NIL t) t ) NIL t)
(COND (EQL (cons t t) (COND (EQL (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 A) A 1) 1 ) A 1)
(COND (EQL 2 (COND (EQL 2 A) A 2) 2 ) A 2)
(COND (EQL nil (COND (EQL nil A) A nil) nil ) A nil)
(COND (EQL t (COND (EQL t A) A t) t ) A t)
(COND (EQL (cons t t) (COND (EQL (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 B) B 1) 1 ) B 1)
(COND (EQL 2 (COND (EQL 2 B) B 2) 2 ) B 2)
(COND (EQL nil (COND (EQL nil B) B nil) nil ) B nil)
(COND (EQL t (COND (EQL t B) B t) t ) B t)
(COND (EQL (cons t t) (COND (EQL (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 C) C 1) 1 ) C 1)
(COND (EQL 2 (COND (EQL 2 C) C 2) 2 ) C 2)
(COND (EQL nil (COND (EQL nil C) C nil) nil ) C nil)
(COND (EQL t (COND (EQL t C) C t) t ) C t)
(COND (EQL (cons t t) (COND (EQL (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 1) 1 1) 1 ) 1 1)
(COND (EQL 2 (COND (EQL 2 1) 1 2) 2 ) 1 2)
(COND (EQL nil (COND (EQL nil 1) 1 nil) nil ) 1 nil)
(COND (EQL t (COND (EQL t 1) 1 t) t ) 1 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 2) 2 1) 1 ) 2 1)
(COND (EQL 2 (COND (EQL 2 2) 2 2) 2 ) 2 2)
(COND (EQL nil (COND (EQL nil 2) 2 nil) nil ) 2 nil)
(COND (EQL t (COND (EQL t 2) 2 t) t ) 2 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 3) 3 1) 1 ) 3 1)
(COND (EQL 2 (COND (EQL 2 3) 3 2) 2 ) 3 2)
(COND (EQL nil (COND (EQL nil 3) 3 nil) nil ) 3 nil)
(COND (EQL t (COND (EQL t 3) 3 t) t ) 3 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 ()) () 1) 1 ) () 1)
(COND (EQL 2 (COND (EQL 2 ()) () 2) 2 ) () 2)
(COND (EQL nil (COND (EQL nil ()) () nil) nil ) () nil)
(COND (EQL t (COND (EQL t ()) () t) t ) () t)
(COND (EQL (cons t t) (COND (EQL (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 (())) (()) 1) 1 ) (()) 1)
(COND (EQL 2 (COND (EQL 2 (())) (()) 2) 2 ) (()) 2)
(COND (EQL nil (COND (EQL nil (())) (()) nil) nil ) (()) nil)
(COND (EQL t (COND (EQL t (())) (()) t) t ) (()) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (EQL 2 (COND (EQL 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (EQL nil (COND (EQL nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (EQL t (COND (EQL t ((()))) ((())) t) t ) ((())) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (EQL 2 (COND (EQL 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (EQL nil (COND (EQL nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (EQL t (COND (EQL t (((())))) (((()))) t) t ) (((()))) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 'A) 'A 1) 1 ) 'A 1)
(COND (EQL 2 (COND (EQL 2 'A) 'A 2) 2 ) 'A 2)
(COND (EQL nil (COND (EQL nil 'A) 'A nil) nil ) 'A nil)
(COND (EQL t (COND (EQL t 'A) 'A t) t ) 'A t)
(COND (EQL (cons t t) (COND (EQL (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 'B) 'B 1) 1 ) 'B 1)
(COND (EQL 2 (COND (EQL 2 'B) 'B 2) 2 ) 'B 2)
(COND (EQL nil (COND (EQL nil 'B) 'B nil) nil ) 'B nil)
(COND (EQL t (COND (EQL t 'B) 'B t) t ) 'B t)
(COND (EQL (cons t t) (COND (EQL (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 'C) 'C 1) 1 ) 'C 1)
(COND (EQL 2 (COND (EQL 2 'C) 'C 2) 2 ) 'C 2)
(COND (EQL nil (COND (EQL nil 'C) 'C nil) nil ) 'C nil)
(COND (EQL t (COND (EQL t 'C) 'C t) t ) 'C t)
(COND (EQL (cons t t) (COND (EQL (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 '1) '1 1) 1 ) '1 1)
(COND (EQL 2 (COND (EQL 2 '1) '1 2) 2 ) '1 2)
(COND (EQL nil (COND (EQL nil '1) '1 nil) nil ) '1 nil)
(COND (EQL t (COND (EQL t '1) '1 t) t ) '1 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 '2) '2 1) 1 ) '2 1)
(COND (EQL 2 (COND (EQL 2 '2) '2 2) 2 ) '2 2)
(COND (EQL nil (COND (EQL nil '2) '2 nil) nil ) '2 nil)
(COND (EQL t (COND (EQL t '2) '2 t) t ) '2 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 '3) '3 1) 1 ) '3 1)
(COND (EQL 2 (COND (EQL 2 '3) '3 2) 2 ) '3 2)
(COND (EQL nil (COND (EQL nil '3) '3 nil) nil ) '3 nil)
(COND (EQL t (COND (EQL t '3) '3 t) t ) '3 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 '()) '() 1) 1 ) '() 1)
(COND (EQL 2 (COND (EQL 2 '()) '() 2) 2 ) '() 2)
(COND (EQL nil (COND (EQL nil '()) '() nil) nil ) '() nil)
(COND (EQL t (COND (EQL t '()) '() t) t ) '() t)
(COND (EQL (cons t t) (COND (EQL (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (EQL 2 (COND (EQL 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (EQL nil (COND (EQL nil '(())) '(()) nil) nil ) '(()) nil)
(COND (EQL t (COND (EQL t '(())) '(()) t) t ) '(()) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (EQL 2 (COND (EQL 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (EQL nil (COND (EQL nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (EQL t (COND (EQL t '((()))) '((())) t) t ) '((())) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (EQL 2 (COND (EQL 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (EQL nil (COND (EQL nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (EQL t (COND (EQL t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 ,A) ,A 1) 1 ) ,A 1)
(COND (EQL 2 (COND (EQL 2 ,A) ,A 2) 2 ) ,A 2)
(COND (EQL nil (COND (EQL nil ,A) ,A nil) nil ) ,A nil)
(COND (EQL t (COND (EQL t ,A) ,A t) t ) ,A t)
(COND (EQL (cons t t) (COND (EQL (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 ,1) ,1 1) 1 ) ,1 1)
(COND (EQL 2 (COND (EQL 2 ,1) ,1 2) 2 ) ,1 2)
(COND (EQL nil (COND (EQL nil ,1) ,1 nil) nil ) ,1 nil)
(COND (EQL t (COND (EQL t ,1) ,1 t) t ) ,1 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 ,()) ,() 1) 1 ) ,() 1)
(COND (EQL 2 (COND (EQL 2 ,()) ,() 2) 2 ) ,() 2)
(COND (EQL nil (COND (EQL nil ,()) ,() nil) nil ) ,() nil)
(COND (EQL t (COND (EQL t ,()) ,() t) t ) ,() t)
(COND (EQL (cons t t) (COND (EQL (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (EQL 2 (COND (EQL 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (EQL nil (COND (EQL nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (EQL t (COND (EQL t ,(())) ,(()) t) t ) ,(()) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'A) `'A 1) 1 ) `'A 1)
(COND (EQL 2 (COND (EQL 2 `'A) `'A 2) 2 ) `'A 2)
(COND (EQL nil (COND (EQL nil `'A) `'A nil) nil ) `'A nil)
(COND (EQL t (COND (EQL t `'A) `'A t) t ) `'A t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'B) `'B 1) 1 ) `'B 1)
(COND (EQL 2 (COND (EQL 2 `'B) `'B 2) 2 ) `'B 2)
(COND (EQL nil (COND (EQL nil `'B) `'B nil) nil ) `'B nil)
(COND (EQL t (COND (EQL t `'B) `'B t) t ) `'B t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'C) `'C 1) 1 ) `'C 1)
(COND (EQL 2 (COND (EQL 2 `'C) `'C 2) 2 ) `'C 2)
(COND (EQL nil (COND (EQL nil `'C) `'C nil) nil ) `'C nil)
(COND (EQL t (COND (EQL t `'C) `'C t) t ) `'C t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'1) `'1 1) 1 ) `'1 1)
(COND (EQL 2 (COND (EQL 2 `'1) `'1 2) 2 ) `'1 2)
(COND (EQL nil (COND (EQL nil `'1) `'1 nil) nil ) `'1 nil)
(COND (EQL t (COND (EQL t `'1) `'1 t) t ) `'1 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'2) `'2 1) 1 ) `'2 1)
(COND (EQL 2 (COND (EQL 2 `'2) `'2 2) 2 ) `'2 2)
(COND (EQL nil (COND (EQL nil `'2) `'2 nil) nil ) `'2 nil)
(COND (EQL t (COND (EQL t `'2) `'2 t) t ) `'2 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'3) `'3 1) 1 ) `'3 1)
(COND (EQL 2 (COND (EQL 2 `'3) `'3 2) 2 ) `'3 2)
(COND (EQL nil (COND (EQL nil `'3) `'3 nil) nil ) `'3 nil)
(COND (EQL t (COND (EQL t `'3) `'3 t) t ) `'3 t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'()) `'() 1) 1 ) `'() 1)
(COND (EQL 2 (COND (EQL 2 `'()) `'() 2) 2 ) `'() 2)
(COND (EQL nil (COND (EQL nil `'()) `'() nil) nil ) `'() nil)
(COND (EQL t (COND (EQL t `'()) `'() t) t ) `'() t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (EQL 2 (COND (EQL 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (EQL nil (COND (EQL nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (EQL t (COND (EQL t `'(())) `'(()) t) t ) `'(()) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (EQL 2 (COND (EQL 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (EQL nil (COND (EQL nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (EQL t (COND (EQL t `'((()))) `'((())) t) t ) `'((())) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (EQL 1 (COND (EQL 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (EQL 2 (COND (EQL 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (EQL nil (COND (EQL nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (EQL t (COND (EQL t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (EQL (cons t t) (COND (EQL (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (EQL (cons nil t) (COND (EQL (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (EQL (cons nil nil) (COND (EQL (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (EQL (cons 0 0) (COND (EQL (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (EQL (cons 1 1) (COND (EQL (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (EQL (list 1 2 3) (COND (EQL (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (EQL (list (cons 1 1 ) ) (COND (EQL (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 T) T 1) 1 ) T 1)
(COND (EVAL 2 (COND (EVAL 2 T) T 2) 2 ) T 2)
(COND (EVAL nil (COND (EVAL nil T) T nil) nil ) T nil)
(COND (EVAL t (COND (EVAL t T) T t) t ) T t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 NIL) NIL 1) 1 ) NIL 1)
(COND (EVAL 2 (COND (EVAL 2 NIL) NIL 2) 2 ) NIL 2)
(COND (EVAL nil (COND (EVAL nil NIL) NIL nil) nil ) NIL nil)
(COND (EVAL t (COND (EVAL t NIL) NIL t) t ) NIL t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 A) A 1) 1 ) A 1)
(COND (EVAL 2 (COND (EVAL 2 A) A 2) 2 ) A 2)
(COND (EVAL nil (COND (EVAL nil A) A nil) nil ) A nil)
(COND (EVAL t (COND (EVAL t A) A t) t ) A t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 B) B 1) 1 ) B 1)
(COND (EVAL 2 (COND (EVAL 2 B) B 2) 2 ) B 2)
(COND (EVAL nil (COND (EVAL nil B) B nil) nil ) B nil)
(COND (EVAL t (COND (EVAL t B) B t) t ) B t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 C) C 1) 1 ) C 1)
(COND (EVAL 2 (COND (EVAL 2 C) C 2) 2 ) C 2)
(COND (EVAL nil (COND (EVAL nil C) C nil) nil ) C nil)
(COND (EVAL t (COND (EVAL t C) C t) t ) C t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 1) 1 1) 1 ) 1 1)
(COND (EVAL 2 (COND (EVAL 2 1) 1 2) 2 ) 1 2)
(COND (EVAL nil (COND (EVAL nil 1) 1 nil) nil ) 1 nil)
(COND (EVAL t (COND (EVAL t 1) 1 t) t ) 1 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 2) 2 1) 1 ) 2 1)
(COND (EVAL 2 (COND (EVAL 2 2) 2 2) 2 ) 2 2)
(COND (EVAL nil (COND (EVAL nil 2) 2 nil) nil ) 2 nil)
(COND (EVAL t (COND (EVAL t 2) 2 t) t ) 2 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 3) 3 1) 1 ) 3 1)
(COND (EVAL 2 (COND (EVAL 2 3) 3 2) 2 ) 3 2)
(COND (EVAL nil (COND (EVAL nil 3) 3 nil) nil ) 3 nil)
(COND (EVAL t (COND (EVAL t 3) 3 t) t ) 3 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 ()) () 1) 1 ) () 1)
(COND (EVAL 2 (COND (EVAL 2 ()) () 2) 2 ) () 2)
(COND (EVAL nil (COND (EVAL nil ()) () nil) nil ) () nil)
(COND (EVAL t (COND (EVAL t ()) () t) t ) () t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 (())) (()) 1) 1 ) (()) 1)
(COND (EVAL 2 (COND (EVAL 2 (())) (()) 2) 2 ) (()) 2)
(COND (EVAL nil (COND (EVAL nil (())) (()) nil) nil ) (()) nil)
(COND (EVAL t (COND (EVAL t (())) (()) t) t ) (()) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (EVAL 2 (COND (EVAL 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (EVAL nil (COND (EVAL nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (EVAL t (COND (EVAL t ((()))) ((())) t) t ) ((())) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (EVAL 2 (COND (EVAL 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (EVAL nil (COND (EVAL nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (EVAL t (COND (EVAL t (((())))) (((()))) t) t ) (((()))) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 'A) 'A 1) 1 ) 'A 1)
(COND (EVAL 2 (COND (EVAL 2 'A) 'A 2) 2 ) 'A 2)
(COND (EVAL nil (COND (EVAL nil 'A) 'A nil) nil ) 'A nil)
(COND (EVAL t (COND (EVAL t 'A) 'A t) t ) 'A t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 'B) 'B 1) 1 ) 'B 1)
(COND (EVAL 2 (COND (EVAL 2 'B) 'B 2) 2 ) 'B 2)
(COND (EVAL nil (COND (EVAL nil 'B) 'B nil) nil ) 'B nil)
(COND (EVAL t (COND (EVAL t 'B) 'B t) t ) 'B t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 'C) 'C 1) 1 ) 'C 1)
(COND (EVAL 2 (COND (EVAL 2 'C) 'C 2) 2 ) 'C 2)
(COND (EVAL nil (COND (EVAL nil 'C) 'C nil) nil ) 'C nil)
(COND (EVAL t (COND (EVAL t 'C) 'C t) t ) 'C t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 '1) '1 1) 1 ) '1 1)
(COND (EVAL 2 (COND (EVAL 2 '1) '1 2) 2 ) '1 2)
(COND (EVAL nil (COND (EVAL nil '1) '1 nil) nil ) '1 nil)
(COND (EVAL t (COND (EVAL t '1) '1 t) t ) '1 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 '2) '2 1) 1 ) '2 1)
(COND (EVAL 2 (COND (EVAL 2 '2) '2 2) 2 ) '2 2)
(COND (EVAL nil (COND (EVAL nil '2) '2 nil) nil ) '2 nil)
(COND (EVAL t (COND (EVAL t '2) '2 t) t ) '2 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 '3) '3 1) 1 ) '3 1)
(COND (EVAL 2 (COND (EVAL 2 '3) '3 2) 2 ) '3 2)
(COND (EVAL nil (COND (EVAL nil '3) '3 nil) nil ) '3 nil)
(COND (EVAL t (COND (EVAL t '3) '3 t) t ) '3 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 '()) '() 1) 1 ) '() 1)
(COND (EVAL 2 (COND (EVAL 2 '()) '() 2) 2 ) '() 2)
(COND (EVAL nil (COND (EVAL nil '()) '() nil) nil ) '() nil)
(COND (EVAL t (COND (EVAL t '()) '() t) t ) '() t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (EVAL 2 (COND (EVAL 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (EVAL nil (COND (EVAL nil '(())) '(()) nil) nil ) '(()) nil)
(COND (EVAL t (COND (EVAL t '(())) '(()) t) t ) '(()) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (EVAL 2 (COND (EVAL 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (EVAL nil (COND (EVAL nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (EVAL t (COND (EVAL t '((()))) '((())) t) t ) '((())) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (EVAL 2 (COND (EVAL 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (EVAL nil (COND (EVAL nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (EVAL t (COND (EVAL t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 ,A) ,A 1) 1 ) ,A 1)
(COND (EVAL 2 (COND (EVAL 2 ,A) ,A 2) 2 ) ,A 2)
(COND (EVAL nil (COND (EVAL nil ,A) ,A nil) nil ) ,A nil)
(COND (EVAL t (COND (EVAL t ,A) ,A t) t ) ,A t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 ,1) ,1 1) 1 ) ,1 1)
(COND (EVAL 2 (COND (EVAL 2 ,1) ,1 2) 2 ) ,1 2)
(COND (EVAL nil (COND (EVAL nil ,1) ,1 nil) nil ) ,1 nil)
(COND (EVAL t (COND (EVAL t ,1) ,1 t) t ) ,1 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 ,()) ,() 1) 1 ) ,() 1)
(COND (EVAL 2 (COND (EVAL 2 ,()) ,() 2) 2 ) ,() 2)
(COND (EVAL nil (COND (EVAL nil ,()) ,() nil) nil ) ,() nil)
(COND (EVAL t (COND (EVAL t ,()) ,() t) t ) ,() t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (EVAL 2 (COND (EVAL 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (EVAL nil (COND (EVAL nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (EVAL t (COND (EVAL t ,(())) ,(()) t) t ) ,(()) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'A) `'A 1) 1 ) `'A 1)
(COND (EVAL 2 (COND (EVAL 2 `'A) `'A 2) 2 ) `'A 2)
(COND (EVAL nil (COND (EVAL nil `'A) `'A nil) nil ) `'A nil)
(COND (EVAL t (COND (EVAL t `'A) `'A t) t ) `'A t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'B) `'B 1) 1 ) `'B 1)
(COND (EVAL 2 (COND (EVAL 2 `'B) `'B 2) 2 ) `'B 2)
(COND (EVAL nil (COND (EVAL nil `'B) `'B nil) nil ) `'B nil)
(COND (EVAL t (COND (EVAL t `'B) `'B t) t ) `'B t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'C) `'C 1) 1 ) `'C 1)
(COND (EVAL 2 (COND (EVAL 2 `'C) `'C 2) 2 ) `'C 2)
(COND (EVAL nil (COND (EVAL nil `'C) `'C nil) nil ) `'C nil)
(COND (EVAL t (COND (EVAL t `'C) `'C t) t ) `'C t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'1) `'1 1) 1 ) `'1 1)
(COND (EVAL 2 (COND (EVAL 2 `'1) `'1 2) 2 ) `'1 2)
(COND (EVAL nil (COND (EVAL nil `'1) `'1 nil) nil ) `'1 nil)
(COND (EVAL t (COND (EVAL t `'1) `'1 t) t ) `'1 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'2) `'2 1) 1 ) `'2 1)
(COND (EVAL 2 (COND (EVAL 2 `'2) `'2 2) 2 ) `'2 2)
(COND (EVAL nil (COND (EVAL nil `'2) `'2 nil) nil ) `'2 nil)
(COND (EVAL t (COND (EVAL t `'2) `'2 t) t ) `'2 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'3) `'3 1) 1 ) `'3 1)
(COND (EVAL 2 (COND (EVAL 2 `'3) `'3 2) 2 ) `'3 2)
(COND (EVAL nil (COND (EVAL nil `'3) `'3 nil) nil ) `'3 nil)
(COND (EVAL t (COND (EVAL t `'3) `'3 t) t ) `'3 t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'()) `'() 1) 1 ) `'() 1)
(COND (EVAL 2 (COND (EVAL 2 `'()) `'() 2) 2 ) `'() 2)
(COND (EVAL nil (COND (EVAL nil `'()) `'() nil) nil ) `'() nil)
(COND (EVAL t (COND (EVAL t `'()) `'() t) t ) `'() t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (EVAL 2 (COND (EVAL 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (EVAL nil (COND (EVAL nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (EVAL t (COND (EVAL t `'(())) `'(()) t) t ) `'(()) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (EVAL 2 (COND (EVAL 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (EVAL nil (COND (EVAL nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (EVAL t (COND (EVAL t `'((()))) `'((())) t) t ) `'((())) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (EVAL 1 (COND (EVAL 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (EVAL 2 (COND (EVAL 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (EVAL nil (COND (EVAL nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (EVAL t (COND (EVAL t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (EVAL (cons t t) (COND (EVAL (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (EVAL (cons nil t) (COND (EVAL (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (EVAL (cons nil nil) (COND (EVAL (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (EVAL (cons 0 0) (COND (EVAL (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (EVAL (cons 1 1) (COND (EVAL (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (EVAL (list 1 2 3) (COND (EVAL (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (EVAL (list (cons 1 1 ) ) (COND (EVAL (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 T) T 1) 1 ) T 1)
(COND (IF 2 (COND (IF 2 T) T 2) 2 ) T 2)
(COND (IF nil (COND (IF nil T) T nil) nil ) T nil)
(COND (IF t (COND (IF t T) T t) t ) T t)
(COND (IF (cons t t) (COND (IF (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 NIL) NIL 1) 1 ) NIL 1)
(COND (IF 2 (COND (IF 2 NIL) NIL 2) 2 ) NIL 2)
(COND (IF nil (COND (IF nil NIL) NIL nil) nil ) NIL nil)
(COND (IF t (COND (IF t NIL) NIL t) t ) NIL t)
(COND (IF (cons t t) (COND (IF (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 A) A 1) 1 ) A 1)
(COND (IF 2 (COND (IF 2 A) A 2) 2 ) A 2)
(COND (IF nil (COND (IF nil A) A nil) nil ) A nil)
(COND (IF t (COND (IF t A) A t) t ) A t)
(COND (IF (cons t t) (COND (IF (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 B) B 1) 1 ) B 1)
(COND (IF 2 (COND (IF 2 B) B 2) 2 ) B 2)
(COND (IF nil (COND (IF nil B) B nil) nil ) B nil)
(COND (IF t (COND (IF t B) B t) t ) B t)
(COND (IF (cons t t) (COND (IF (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 C) C 1) 1 ) C 1)
(COND (IF 2 (COND (IF 2 C) C 2) 2 ) C 2)
(COND (IF nil (COND (IF nil C) C nil) nil ) C nil)
(COND (IF t (COND (IF t C) C t) t ) C t)
(COND (IF (cons t t) (COND (IF (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 1) 1 1) 1 ) 1 1)
(COND (IF 2 (COND (IF 2 1) 1 2) 2 ) 1 2)
(COND (IF nil (COND (IF nil 1) 1 nil) nil ) 1 nil)
(COND (IF t (COND (IF t 1) 1 t) t ) 1 t)
(COND (IF (cons t t) (COND (IF (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 2) 2 1) 1 ) 2 1)
(COND (IF 2 (COND (IF 2 2) 2 2) 2 ) 2 2)
(COND (IF nil (COND (IF nil 2) 2 nil) nil ) 2 nil)
(COND (IF t (COND (IF t 2) 2 t) t ) 2 t)
(COND (IF (cons t t) (COND (IF (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 3) 3 1) 1 ) 3 1)
(COND (IF 2 (COND (IF 2 3) 3 2) 2 ) 3 2)
(COND (IF nil (COND (IF nil 3) 3 nil) nil ) 3 nil)
(COND (IF t (COND (IF t 3) 3 t) t ) 3 t)
(COND (IF (cons t t) (COND (IF (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 ()) () 1) 1 ) () 1)
(COND (IF 2 (COND (IF 2 ()) () 2) 2 ) () 2)
(COND (IF nil (COND (IF nil ()) () nil) nil ) () nil)
(COND (IF t (COND (IF t ()) () t) t ) () t)
(COND (IF (cons t t) (COND (IF (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 (())) (()) 1) 1 ) (()) 1)
(COND (IF 2 (COND (IF 2 (())) (()) 2) 2 ) (()) 2)
(COND (IF nil (COND (IF nil (())) (()) nil) nil ) (()) nil)
(COND (IF t (COND (IF t (())) (()) t) t ) (()) t)
(COND (IF (cons t t) (COND (IF (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (IF 2 (COND (IF 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (IF nil (COND (IF nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (IF t (COND (IF t ((()))) ((())) t) t ) ((())) t)
(COND (IF (cons t t) (COND (IF (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (IF 2 (COND (IF 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (IF nil (COND (IF nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (IF t (COND (IF t (((())))) (((()))) t) t ) (((()))) t)
(COND (IF (cons t t) (COND (IF (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 'A) 'A 1) 1 ) 'A 1)
(COND (IF 2 (COND (IF 2 'A) 'A 2) 2 ) 'A 2)
(COND (IF nil (COND (IF nil 'A) 'A nil) nil ) 'A nil)
(COND (IF t (COND (IF t 'A) 'A t) t ) 'A t)
(COND (IF (cons t t) (COND (IF (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 'B) 'B 1) 1 ) 'B 1)
(COND (IF 2 (COND (IF 2 'B) 'B 2) 2 ) 'B 2)
(COND (IF nil (COND (IF nil 'B) 'B nil) nil ) 'B nil)
(COND (IF t (COND (IF t 'B) 'B t) t ) 'B t)
(COND (IF (cons t t) (COND (IF (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 'C) 'C 1) 1 ) 'C 1)
(COND (IF 2 (COND (IF 2 'C) 'C 2) 2 ) 'C 2)
(COND (IF nil (COND (IF nil 'C) 'C nil) nil ) 'C nil)
(COND (IF t (COND (IF t 'C) 'C t) t ) 'C t)
(COND (IF (cons t t) (COND (IF (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 '1) '1 1) 1 ) '1 1)
(COND (IF 2 (COND (IF 2 '1) '1 2) 2 ) '1 2)
(COND (IF nil (COND (IF nil '1) '1 nil) nil ) '1 nil)
(COND (IF t (COND (IF t '1) '1 t) t ) '1 t)
(COND (IF (cons t t) (COND (IF (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 '2) '2 1) 1 ) '2 1)
(COND (IF 2 (COND (IF 2 '2) '2 2) 2 ) '2 2)
(COND (IF nil (COND (IF nil '2) '2 nil) nil ) '2 nil)
(COND (IF t (COND (IF t '2) '2 t) t ) '2 t)
(COND (IF (cons t t) (COND (IF (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 '3) '3 1) 1 ) '3 1)
(COND (IF 2 (COND (IF 2 '3) '3 2) 2 ) '3 2)
(COND (IF nil (COND (IF nil '3) '3 nil) nil ) '3 nil)
(COND (IF t (COND (IF t '3) '3 t) t ) '3 t)
(COND (IF (cons t t) (COND (IF (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 '()) '() 1) 1 ) '() 1)
(COND (IF 2 (COND (IF 2 '()) '() 2) 2 ) '() 2)
(COND (IF nil (COND (IF nil '()) '() nil) nil ) '() nil)
(COND (IF t (COND (IF t '()) '() t) t ) '() t)
(COND (IF (cons t t) (COND (IF (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (IF 2 (COND (IF 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (IF nil (COND (IF nil '(())) '(()) nil) nil ) '(()) nil)
(COND (IF t (COND (IF t '(())) '(()) t) t ) '(()) t)
(COND (IF (cons t t) (COND (IF (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (IF 2 (COND (IF 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (IF nil (COND (IF nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (IF t (COND (IF t '((()))) '((())) t) t ) '((())) t)
(COND (IF (cons t t) (COND (IF (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (IF 2 (COND (IF 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (IF nil (COND (IF nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (IF t (COND (IF t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (IF (cons t t) (COND (IF (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 ,A) ,A 1) 1 ) ,A 1)
(COND (IF 2 (COND (IF 2 ,A) ,A 2) 2 ) ,A 2)
(COND (IF nil (COND (IF nil ,A) ,A nil) nil ) ,A nil)
(COND (IF t (COND (IF t ,A) ,A t) t ) ,A t)
(COND (IF (cons t t) (COND (IF (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 ,1) ,1 1) 1 ) ,1 1)
(COND (IF 2 (COND (IF 2 ,1) ,1 2) 2 ) ,1 2)
(COND (IF nil (COND (IF nil ,1) ,1 nil) nil ) ,1 nil)
(COND (IF t (COND (IF t ,1) ,1 t) t ) ,1 t)
(COND (IF (cons t t) (COND (IF (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 ,()) ,() 1) 1 ) ,() 1)
(COND (IF 2 (COND (IF 2 ,()) ,() 2) 2 ) ,() 2)
(COND (IF nil (COND (IF nil ,()) ,() nil) nil ) ,() nil)
(COND (IF t (COND (IF t ,()) ,() t) t ) ,() t)
(COND (IF (cons t t) (COND (IF (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (IF 2 (COND (IF 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (IF nil (COND (IF nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (IF t (COND (IF t ,(())) ,(()) t) t ) ,(()) t)
(COND (IF (cons t t) (COND (IF (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'A) `'A 1) 1 ) `'A 1)
(COND (IF 2 (COND (IF 2 `'A) `'A 2) 2 ) `'A 2)
(COND (IF nil (COND (IF nil `'A) `'A nil) nil ) `'A nil)
(COND (IF t (COND (IF t `'A) `'A t) t ) `'A t)
(COND (IF (cons t t) (COND (IF (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'B) `'B 1) 1 ) `'B 1)
(COND (IF 2 (COND (IF 2 `'B) `'B 2) 2 ) `'B 2)
(COND (IF nil (COND (IF nil `'B) `'B nil) nil ) `'B nil)
(COND (IF t (COND (IF t `'B) `'B t) t ) `'B t)
(COND (IF (cons t t) (COND (IF (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'C) `'C 1) 1 ) `'C 1)
(COND (IF 2 (COND (IF 2 `'C) `'C 2) 2 ) `'C 2)
(COND (IF nil (COND (IF nil `'C) `'C nil) nil ) `'C nil)
(COND (IF t (COND (IF t `'C) `'C t) t ) `'C t)
(COND (IF (cons t t) (COND (IF (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'1) `'1 1) 1 ) `'1 1)
(COND (IF 2 (COND (IF 2 `'1) `'1 2) 2 ) `'1 2)
(COND (IF nil (COND (IF nil `'1) `'1 nil) nil ) `'1 nil)
(COND (IF t (COND (IF t `'1) `'1 t) t ) `'1 t)
(COND (IF (cons t t) (COND (IF (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'2) `'2 1) 1 ) `'2 1)
(COND (IF 2 (COND (IF 2 `'2) `'2 2) 2 ) `'2 2)
(COND (IF nil (COND (IF nil `'2) `'2 nil) nil ) `'2 nil)
(COND (IF t (COND (IF t `'2) `'2 t) t ) `'2 t)
(COND (IF (cons t t) (COND (IF (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'3) `'3 1) 1 ) `'3 1)
(COND (IF 2 (COND (IF 2 `'3) `'3 2) 2 ) `'3 2)
(COND (IF nil (COND (IF nil `'3) `'3 nil) nil ) `'3 nil)
(COND (IF t (COND (IF t `'3) `'3 t) t ) `'3 t)
(COND (IF (cons t t) (COND (IF (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'()) `'() 1) 1 ) `'() 1)
(COND (IF 2 (COND (IF 2 `'()) `'() 2) 2 ) `'() 2)
(COND (IF nil (COND (IF nil `'()) `'() nil) nil ) `'() nil)
(COND (IF t (COND (IF t `'()) `'() t) t ) `'() t)
(COND (IF (cons t t) (COND (IF (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (IF 2 (COND (IF 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (IF nil (COND (IF nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (IF t (COND (IF t `'(())) `'(()) t) t ) `'(()) t)
(COND (IF (cons t t) (COND (IF (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (IF 2 (COND (IF 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (IF nil (COND (IF nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (IF t (COND (IF t `'((()))) `'((())) t) t ) `'((())) t)
(COND (IF (cons t t) (COND (IF (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (IF 1 (COND (IF 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (IF 2 (COND (IF 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (IF nil (COND (IF nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (IF t (COND (IF t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (IF (cons t t) (COND (IF (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (IF (cons nil t) (COND (IF (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (IF (cons nil nil) (COND (IF (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (IF (cons 0 0) (COND (IF (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (IF (cons 1 1) (COND (IF (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (IF (list 1 2 3) (COND (IF (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (IF (list (cons 1 1 ) ) (COND (IF (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 T) T 1) 1 ) T 1)
(COND (LABELS 2 (COND (LABELS 2 T) T 2) 2 ) T 2)
(COND (LABELS nil (COND (LABELS nil T) T nil) nil ) T nil)
(COND (LABELS t (COND (LABELS t T) T t) t ) T t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 NIL) NIL 1) 1 ) NIL 1)
(COND (LABELS 2 (COND (LABELS 2 NIL) NIL 2) 2 ) NIL 2)
(COND (LABELS nil (COND (LABELS nil NIL) NIL nil) nil ) NIL nil)
(COND (LABELS t (COND (LABELS t NIL) NIL t) t ) NIL t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 A) A 1) 1 ) A 1)
(COND (LABELS 2 (COND (LABELS 2 A) A 2) 2 ) A 2)
(COND (LABELS nil (COND (LABELS nil A) A nil) nil ) A nil)
(COND (LABELS t (COND (LABELS t A) A t) t ) A t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 B) B 1) 1 ) B 1)
(COND (LABELS 2 (COND (LABELS 2 B) B 2) 2 ) B 2)
(COND (LABELS nil (COND (LABELS nil B) B nil) nil ) B nil)
(COND (LABELS t (COND (LABELS t B) B t) t ) B t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 C) C 1) 1 ) C 1)
(COND (LABELS 2 (COND (LABELS 2 C) C 2) 2 ) C 2)
(COND (LABELS nil (COND (LABELS nil C) C nil) nil ) C nil)
(COND (LABELS t (COND (LABELS t C) C t) t ) C t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 1) 1 1) 1 ) 1 1)
(COND (LABELS 2 (COND (LABELS 2 1) 1 2) 2 ) 1 2)
(COND (LABELS nil (COND (LABELS nil 1) 1 nil) nil ) 1 nil)
(COND (LABELS t (COND (LABELS t 1) 1 t) t ) 1 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 2) 2 1) 1 ) 2 1)
(COND (LABELS 2 (COND (LABELS 2 2) 2 2) 2 ) 2 2)
(COND (LABELS nil (COND (LABELS nil 2) 2 nil) nil ) 2 nil)
(COND (LABELS t (COND (LABELS t 2) 2 t) t ) 2 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 3) 3 1) 1 ) 3 1)
(COND (LABELS 2 (COND (LABELS 2 3) 3 2) 2 ) 3 2)
(COND (LABELS nil (COND (LABELS nil 3) 3 nil) nil ) 3 nil)
(COND (LABELS t (COND (LABELS t 3) 3 t) t ) 3 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 ()) () 1) 1 ) () 1)
(COND (LABELS 2 (COND (LABELS 2 ()) () 2) 2 ) () 2)
(COND (LABELS nil (COND (LABELS nil ()) () nil) nil ) () nil)
(COND (LABELS t (COND (LABELS t ()) () t) t ) () t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 (())) (()) 1) 1 ) (()) 1)
(COND (LABELS 2 (COND (LABELS 2 (())) (()) 2) 2 ) (()) 2)
(COND (LABELS nil (COND (LABELS nil (())) (()) nil) nil ) (()) nil)
(COND (LABELS t (COND (LABELS t (())) (()) t) t ) (()) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (LABELS 2 (COND (LABELS 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (LABELS nil (COND (LABELS nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (LABELS t (COND (LABELS t ((()))) ((())) t) t ) ((())) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (LABELS 2 (COND (LABELS 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (LABELS nil (COND (LABELS nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (LABELS t (COND (LABELS t (((())))) (((()))) t) t ) (((()))) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 'A) 'A 1) 1 ) 'A 1)
(COND (LABELS 2 (COND (LABELS 2 'A) 'A 2) 2 ) 'A 2)
(COND (LABELS nil (COND (LABELS nil 'A) 'A nil) nil ) 'A nil)
(COND (LABELS t (COND (LABELS t 'A) 'A t) t ) 'A t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 'B) 'B 1) 1 ) 'B 1)
(COND (LABELS 2 (COND (LABELS 2 'B) 'B 2) 2 ) 'B 2)
(COND (LABELS nil (COND (LABELS nil 'B) 'B nil) nil ) 'B nil)
(COND (LABELS t (COND (LABELS t 'B) 'B t) t ) 'B t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 'C) 'C 1) 1 ) 'C 1)
(COND (LABELS 2 (COND (LABELS 2 'C) 'C 2) 2 ) 'C 2)
(COND (LABELS nil (COND (LABELS nil 'C) 'C nil) nil ) 'C nil)
(COND (LABELS t (COND (LABELS t 'C) 'C t) t ) 'C t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 '1) '1 1) 1 ) '1 1)
(COND (LABELS 2 (COND (LABELS 2 '1) '1 2) 2 ) '1 2)
(COND (LABELS nil (COND (LABELS nil '1) '1 nil) nil ) '1 nil)
(COND (LABELS t (COND (LABELS t '1) '1 t) t ) '1 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 '2) '2 1) 1 ) '2 1)
(COND (LABELS 2 (COND (LABELS 2 '2) '2 2) 2 ) '2 2)
(COND (LABELS nil (COND (LABELS nil '2) '2 nil) nil ) '2 nil)
(COND (LABELS t (COND (LABELS t '2) '2 t) t ) '2 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 '3) '3 1) 1 ) '3 1)
(COND (LABELS 2 (COND (LABELS 2 '3) '3 2) 2 ) '3 2)
(COND (LABELS nil (COND (LABELS nil '3) '3 nil) nil ) '3 nil)
(COND (LABELS t (COND (LABELS t '3) '3 t) t ) '3 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 '()) '() 1) 1 ) '() 1)
(COND (LABELS 2 (COND (LABELS 2 '()) '() 2) 2 ) '() 2)
(COND (LABELS nil (COND (LABELS nil '()) '() nil) nil ) '() nil)
(COND (LABELS t (COND (LABELS t '()) '() t) t ) '() t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (LABELS 2 (COND (LABELS 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (LABELS nil (COND (LABELS nil '(())) '(()) nil) nil ) '(()) nil)
(COND (LABELS t (COND (LABELS t '(())) '(()) t) t ) '(()) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (LABELS 2 (COND (LABELS 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (LABELS nil (COND (LABELS nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (LABELS t (COND (LABELS t '((()))) '((())) t) t ) '((())) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (LABELS 2 (COND (LABELS 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (LABELS nil (COND (LABELS nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (LABELS t (COND (LABELS t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 ,A) ,A 1) 1 ) ,A 1)
(COND (LABELS 2 (COND (LABELS 2 ,A) ,A 2) 2 ) ,A 2)
(COND (LABELS nil (COND (LABELS nil ,A) ,A nil) nil ) ,A nil)
(COND (LABELS t (COND (LABELS t ,A) ,A t) t ) ,A t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 ,1) ,1 1) 1 ) ,1 1)
(COND (LABELS 2 (COND (LABELS 2 ,1) ,1 2) 2 ) ,1 2)
(COND (LABELS nil (COND (LABELS nil ,1) ,1 nil) nil ) ,1 nil)
(COND (LABELS t (COND (LABELS t ,1) ,1 t) t ) ,1 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 ,()) ,() 1) 1 ) ,() 1)
(COND (LABELS 2 (COND (LABELS 2 ,()) ,() 2) 2 ) ,() 2)
(COND (LABELS nil (COND (LABELS nil ,()) ,() nil) nil ) ,() nil)
(COND (LABELS t (COND (LABELS t ,()) ,() t) t ) ,() t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (LABELS 2 (COND (LABELS 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (LABELS nil (COND (LABELS nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (LABELS t (COND (LABELS t ,(())) ,(()) t) t ) ,(()) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'A) `'A 1) 1 ) `'A 1)
(COND (LABELS 2 (COND (LABELS 2 `'A) `'A 2) 2 ) `'A 2)
(COND (LABELS nil (COND (LABELS nil `'A) `'A nil) nil ) `'A nil)
(COND (LABELS t (COND (LABELS t `'A) `'A t) t ) `'A t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'B) `'B 1) 1 ) `'B 1)
(COND (LABELS 2 (COND (LABELS 2 `'B) `'B 2) 2 ) `'B 2)
(COND (LABELS nil (COND (LABELS nil `'B) `'B nil) nil ) `'B nil)
(COND (LABELS t (COND (LABELS t `'B) `'B t) t ) `'B t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'C) `'C 1) 1 ) `'C 1)
(COND (LABELS 2 (COND (LABELS 2 `'C) `'C 2) 2 ) `'C 2)
(COND (LABELS nil (COND (LABELS nil `'C) `'C nil) nil ) `'C nil)
(COND (LABELS t (COND (LABELS t `'C) `'C t) t ) `'C t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'1) `'1 1) 1 ) `'1 1)
(COND (LABELS 2 (COND (LABELS 2 `'1) `'1 2) 2 ) `'1 2)
(COND (LABELS nil (COND (LABELS nil `'1) `'1 nil) nil ) `'1 nil)
(COND (LABELS t (COND (LABELS t `'1) `'1 t) t ) `'1 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'2) `'2 1) 1 ) `'2 1)
(COND (LABELS 2 (COND (LABELS 2 `'2) `'2 2) 2 ) `'2 2)
(COND (LABELS nil (COND (LABELS nil `'2) `'2 nil) nil ) `'2 nil)
(COND (LABELS t (COND (LABELS t `'2) `'2 t) t ) `'2 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'3) `'3 1) 1 ) `'3 1)
(COND (LABELS 2 (COND (LABELS 2 `'3) `'3 2) 2 ) `'3 2)
(COND (LABELS nil (COND (LABELS nil `'3) `'3 nil) nil ) `'3 nil)
(COND (LABELS t (COND (LABELS t `'3) `'3 t) t ) `'3 t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'()) `'() 1) 1 ) `'() 1)
(COND (LABELS 2 (COND (LABELS 2 `'()) `'() 2) 2 ) `'() 2)
(COND (LABELS nil (COND (LABELS nil `'()) `'() nil) nil ) `'() nil)
(COND (LABELS t (COND (LABELS t `'()) `'() t) t ) `'() t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (LABELS 2 (COND (LABELS 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (LABELS nil (COND (LABELS nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (LABELS t (COND (LABELS t `'(())) `'(()) t) t ) `'(()) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (LABELS 2 (COND (LABELS 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (LABELS nil (COND (LABELS nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (LABELS t (COND (LABELS t `'((()))) `'((())) t) t ) `'((())) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (LABELS 1 (COND (LABELS 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (LABELS 2 (COND (LABELS 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (LABELS nil (COND (LABELS nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (LABELS t (COND (LABELS t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (LABELS (cons t t) (COND (LABELS (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (LABELS (cons nil t) (COND (LABELS (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (LABELS (cons nil nil) (COND (LABELS (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (LABELS (cons 0 0) (COND (LABELS (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (LABELS (cons 1 1) (COND (LABELS (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (LABELS (list 1 2 3) (COND (LABELS (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (LABELS (list (cons 1 1 ) ) (COND (LABELS (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 T) T 1) 1 ) T 1)
(COND (LET 2 (COND (LET 2 T) T 2) 2 ) T 2)
(COND (LET nil (COND (LET nil T) T nil) nil ) T nil)
(COND (LET t (COND (LET t T) T t) t ) T t)
(COND (LET (cons t t) (COND (LET (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 NIL) NIL 1) 1 ) NIL 1)
(COND (LET 2 (COND (LET 2 NIL) NIL 2) 2 ) NIL 2)
(COND (LET nil (COND (LET nil NIL) NIL nil) nil ) NIL nil)
(COND (LET t (COND (LET t NIL) NIL t) t ) NIL t)
(COND (LET (cons t t) (COND (LET (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 A) A 1) 1 ) A 1)
(COND (LET 2 (COND (LET 2 A) A 2) 2 ) A 2)
(COND (LET nil (COND (LET nil A) A nil) nil ) A nil)
(COND (LET t (COND (LET t A) A t) t ) A t)
(COND (LET (cons t t) (COND (LET (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 B) B 1) 1 ) B 1)
(COND (LET 2 (COND (LET 2 B) B 2) 2 ) B 2)
(COND (LET nil (COND (LET nil B) B nil) nil ) B nil)
(COND (LET t (COND (LET t B) B t) t ) B t)
(COND (LET (cons t t) (COND (LET (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 C) C 1) 1 ) C 1)
(COND (LET 2 (COND (LET 2 C) C 2) 2 ) C 2)
(COND (LET nil (COND (LET nil C) C nil) nil ) C nil)
(COND (LET t (COND (LET t C) C t) t ) C t)
(COND (LET (cons t t) (COND (LET (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 1) 1 1) 1 ) 1 1)
(COND (LET 2 (COND (LET 2 1) 1 2) 2 ) 1 2)
(COND (LET nil (COND (LET nil 1) 1 nil) nil ) 1 nil)
(COND (LET t (COND (LET t 1) 1 t) t ) 1 t)
(COND (LET (cons t t) (COND (LET (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 2) 2 1) 1 ) 2 1)
(COND (LET 2 (COND (LET 2 2) 2 2) 2 ) 2 2)
(COND (LET nil (COND (LET nil 2) 2 nil) nil ) 2 nil)
(COND (LET t (COND (LET t 2) 2 t) t ) 2 t)
(COND (LET (cons t t) (COND (LET (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 3) 3 1) 1 ) 3 1)
(COND (LET 2 (COND (LET 2 3) 3 2) 2 ) 3 2)
(COND (LET nil (COND (LET nil 3) 3 nil) nil ) 3 nil)
(COND (LET t (COND (LET t 3) 3 t) t ) 3 t)
(COND (LET (cons t t) (COND (LET (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 ()) () 1) 1 ) () 1)
(COND (LET 2 (COND (LET 2 ()) () 2) 2 ) () 2)
(COND (LET nil (COND (LET nil ()) () nil) nil ) () nil)
(COND (LET t (COND (LET t ()) () t) t ) () t)
(COND (LET (cons t t) (COND (LET (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 (())) (()) 1) 1 ) (()) 1)
(COND (LET 2 (COND (LET 2 (())) (()) 2) 2 ) (()) 2)
(COND (LET nil (COND (LET nil (())) (()) nil) nil ) (()) nil)
(COND (LET t (COND (LET t (())) (()) t) t ) (()) t)
(COND (LET (cons t t) (COND (LET (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (LET 2 (COND (LET 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (LET nil (COND (LET nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (LET t (COND (LET t ((()))) ((())) t) t ) ((())) t)
(COND (LET (cons t t) (COND (LET (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (LET 2 (COND (LET 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (LET nil (COND (LET nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (LET t (COND (LET t (((())))) (((()))) t) t ) (((()))) t)
(COND (LET (cons t t) (COND (LET (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 'A) 'A 1) 1 ) 'A 1)
(COND (LET 2 (COND (LET 2 'A) 'A 2) 2 ) 'A 2)
(COND (LET nil (COND (LET nil 'A) 'A nil) nil ) 'A nil)
(COND (LET t (COND (LET t 'A) 'A t) t ) 'A t)
(COND (LET (cons t t) (COND (LET (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 'B) 'B 1) 1 ) 'B 1)
(COND (LET 2 (COND (LET 2 'B) 'B 2) 2 ) 'B 2)
(COND (LET nil (COND (LET nil 'B) 'B nil) nil ) 'B nil)
(COND (LET t (COND (LET t 'B) 'B t) t ) 'B t)
(COND (LET (cons t t) (COND (LET (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 'C) 'C 1) 1 ) 'C 1)
(COND (LET 2 (COND (LET 2 'C) 'C 2) 2 ) 'C 2)
(COND (LET nil (COND (LET nil 'C) 'C nil) nil ) 'C nil)
(COND (LET t (COND (LET t 'C) 'C t) t ) 'C t)
(COND (LET (cons t t) (COND (LET (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 '1) '1 1) 1 ) '1 1)
(COND (LET 2 (COND (LET 2 '1) '1 2) 2 ) '1 2)
(COND (LET nil (COND (LET nil '1) '1 nil) nil ) '1 nil)
(COND (LET t (COND (LET t '1) '1 t) t ) '1 t)
(COND (LET (cons t t) (COND (LET (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 '2) '2 1) 1 ) '2 1)
(COND (LET 2 (COND (LET 2 '2) '2 2) 2 ) '2 2)
(COND (LET nil (COND (LET nil '2) '2 nil) nil ) '2 nil)
(COND (LET t (COND (LET t '2) '2 t) t ) '2 t)
(COND (LET (cons t t) (COND (LET (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 '3) '3 1) 1 ) '3 1)
(COND (LET 2 (COND (LET 2 '3) '3 2) 2 ) '3 2)
(COND (LET nil (COND (LET nil '3) '3 nil) nil ) '3 nil)
(COND (LET t (COND (LET t '3) '3 t) t ) '3 t)
(COND (LET (cons t t) (COND (LET (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 '()) '() 1) 1 ) '() 1)
(COND (LET 2 (COND (LET 2 '()) '() 2) 2 ) '() 2)
(COND (LET nil (COND (LET nil '()) '() nil) nil ) '() nil)
(COND (LET t (COND (LET t '()) '() t) t ) '() t)
(COND (LET (cons t t) (COND (LET (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (LET 2 (COND (LET 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (LET nil (COND (LET nil '(())) '(()) nil) nil ) '(()) nil)
(COND (LET t (COND (LET t '(())) '(()) t) t ) '(()) t)
(COND (LET (cons t t) (COND (LET (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (LET 2 (COND (LET 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (LET nil (COND (LET nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (LET t (COND (LET t '((()))) '((())) t) t ) '((())) t)
(COND (LET (cons t t) (COND (LET (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (LET 2 (COND (LET 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (LET nil (COND (LET nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (LET t (COND (LET t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (LET (cons t t) (COND (LET (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 ,A) ,A 1) 1 ) ,A 1)
(COND (LET 2 (COND (LET 2 ,A) ,A 2) 2 ) ,A 2)
(COND (LET nil (COND (LET nil ,A) ,A nil) nil ) ,A nil)
(COND (LET t (COND (LET t ,A) ,A t) t ) ,A t)
(COND (LET (cons t t) (COND (LET (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 ,1) ,1 1) 1 ) ,1 1)
(COND (LET 2 (COND (LET 2 ,1) ,1 2) 2 ) ,1 2)
(COND (LET nil (COND (LET nil ,1) ,1 nil) nil ) ,1 nil)
(COND (LET t (COND (LET t ,1) ,1 t) t ) ,1 t)
(COND (LET (cons t t) (COND (LET (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 ,()) ,() 1) 1 ) ,() 1)
(COND (LET 2 (COND (LET 2 ,()) ,() 2) 2 ) ,() 2)
(COND (LET nil (COND (LET nil ,()) ,() nil) nil ) ,() nil)
(COND (LET t (COND (LET t ,()) ,() t) t ) ,() t)
(COND (LET (cons t t) (COND (LET (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (LET 2 (COND (LET 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (LET nil (COND (LET nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (LET t (COND (LET t ,(())) ,(()) t) t ) ,(()) t)
(COND (LET (cons t t) (COND (LET (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'A) `'A 1) 1 ) `'A 1)
(COND (LET 2 (COND (LET 2 `'A) `'A 2) 2 ) `'A 2)
(COND (LET nil (COND (LET nil `'A) `'A nil) nil ) `'A nil)
(COND (LET t (COND (LET t `'A) `'A t) t ) `'A t)
(COND (LET (cons t t) (COND (LET (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'B) `'B 1) 1 ) `'B 1)
(COND (LET 2 (COND (LET 2 `'B) `'B 2) 2 ) `'B 2)
(COND (LET nil (COND (LET nil `'B) `'B nil) nil ) `'B nil)
(COND (LET t (COND (LET t `'B) `'B t) t ) `'B t)
(COND (LET (cons t t) (COND (LET (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'C) `'C 1) 1 ) `'C 1)
(COND (LET 2 (COND (LET 2 `'C) `'C 2) 2 ) `'C 2)
(COND (LET nil (COND (LET nil `'C) `'C nil) nil ) `'C nil)
(COND (LET t (COND (LET t `'C) `'C t) t ) `'C t)
(COND (LET (cons t t) (COND (LET (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'1) `'1 1) 1 ) `'1 1)
(COND (LET 2 (COND (LET 2 `'1) `'1 2) 2 ) `'1 2)
(COND (LET nil (COND (LET nil `'1) `'1 nil) nil ) `'1 nil)
(COND (LET t (COND (LET t `'1) `'1 t) t ) `'1 t)
(COND (LET (cons t t) (COND (LET (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'2) `'2 1) 1 ) `'2 1)
(COND (LET 2 (COND (LET 2 `'2) `'2 2) 2 ) `'2 2)
(COND (LET nil (COND (LET nil `'2) `'2 nil) nil ) `'2 nil)
(COND (LET t (COND (LET t `'2) `'2 t) t ) `'2 t)
(COND (LET (cons t t) (COND (LET (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'3) `'3 1) 1 ) `'3 1)
(COND (LET 2 (COND (LET 2 `'3) `'3 2) 2 ) `'3 2)
(COND (LET nil (COND (LET nil `'3) `'3 nil) nil ) `'3 nil)
(COND (LET t (COND (LET t `'3) `'3 t) t ) `'3 t)
(COND (LET (cons t t) (COND (LET (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'()) `'() 1) 1 ) `'() 1)
(COND (LET 2 (COND (LET 2 `'()) `'() 2) 2 ) `'() 2)
(COND (LET nil (COND (LET nil `'()) `'() nil) nil ) `'() nil)
(COND (LET t (COND (LET t `'()) `'() t) t ) `'() t)
(COND (LET (cons t t) (COND (LET (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (LET 2 (COND (LET 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (LET nil (COND (LET nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (LET t (COND (LET t `'(())) `'(()) t) t ) `'(()) t)
(COND (LET (cons t t) (COND (LET (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (LET 2 (COND (LET 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (LET nil (COND (LET nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (LET t (COND (LET t `'((()))) `'((())) t) t ) `'((())) t)
(COND (LET (cons t t) (COND (LET (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (LET 1 (COND (LET 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (LET 2 (COND (LET 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (LET nil (COND (LET nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (LET t (COND (LET t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (LET (cons t t) (COND (LET (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (LET (cons nil t) (COND (LET (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (LET (cons nil nil) (COND (LET (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (LET (cons 0 0) (COND (LET (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (LET (cons 1 1) (COND (LET (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (LET (list 1 2 3) (COND (LET (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (LET (list (cons 1 1 ) ) (COND (LET (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 T) T 1) 1 ) T 1)
(COND (LIST 2 (COND (LIST 2 T) T 2) 2 ) T 2)
(COND (LIST nil (COND (LIST nil T) T nil) nil ) T nil)
(COND (LIST t (COND (LIST t T) T t) t ) T t)
(COND (LIST (cons t t) (COND (LIST (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 NIL) NIL 1) 1 ) NIL 1)
(COND (LIST 2 (COND (LIST 2 NIL) NIL 2) 2 ) NIL 2)
(COND (LIST nil (COND (LIST nil NIL) NIL nil) nil ) NIL nil)
(COND (LIST t (COND (LIST t NIL) NIL t) t ) NIL t)
(COND (LIST (cons t t) (COND (LIST (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 A) A 1) 1 ) A 1)
(COND (LIST 2 (COND (LIST 2 A) A 2) 2 ) A 2)
(COND (LIST nil (COND (LIST nil A) A nil) nil ) A nil)
(COND (LIST t (COND (LIST t A) A t) t ) A t)
(COND (LIST (cons t t) (COND (LIST (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 B) B 1) 1 ) B 1)
(COND (LIST 2 (COND (LIST 2 B) B 2) 2 ) B 2)
(COND (LIST nil (COND (LIST nil B) B nil) nil ) B nil)
(COND (LIST t (COND (LIST t B) B t) t ) B t)
(COND (LIST (cons t t) (COND (LIST (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 C) C 1) 1 ) C 1)
(COND (LIST 2 (COND (LIST 2 C) C 2) 2 ) C 2)
(COND (LIST nil (COND (LIST nil C) C nil) nil ) C nil)
(COND (LIST t (COND (LIST t C) C t) t ) C t)
(COND (LIST (cons t t) (COND (LIST (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 1) 1 1) 1 ) 1 1)
(COND (LIST 2 (COND (LIST 2 1) 1 2) 2 ) 1 2)
(COND (LIST nil (COND (LIST nil 1) 1 nil) nil ) 1 nil)
(COND (LIST t (COND (LIST t 1) 1 t) t ) 1 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 2) 2 1) 1 ) 2 1)
(COND (LIST 2 (COND (LIST 2 2) 2 2) 2 ) 2 2)
(COND (LIST nil (COND (LIST nil 2) 2 nil) nil ) 2 nil)
(COND (LIST t (COND (LIST t 2) 2 t) t ) 2 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 3) 3 1) 1 ) 3 1)
(COND (LIST 2 (COND (LIST 2 3) 3 2) 2 ) 3 2)
(COND (LIST nil (COND (LIST nil 3) 3 nil) nil ) 3 nil)
(COND (LIST t (COND (LIST t 3) 3 t) t ) 3 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 ()) () 1) 1 ) () 1)
(COND (LIST 2 (COND (LIST 2 ()) () 2) 2 ) () 2)
(COND (LIST nil (COND (LIST nil ()) () nil) nil ) () nil)
(COND (LIST t (COND (LIST t ()) () t) t ) () t)
(COND (LIST (cons t t) (COND (LIST (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 (())) (()) 1) 1 ) (()) 1)
(COND (LIST 2 (COND (LIST 2 (())) (()) 2) 2 ) (()) 2)
(COND (LIST nil (COND (LIST nil (())) (()) nil) nil ) (()) nil)
(COND (LIST t (COND (LIST t (())) (()) t) t ) (()) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (LIST 2 (COND (LIST 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (LIST nil (COND (LIST nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (LIST t (COND (LIST t ((()))) ((())) t) t ) ((())) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (LIST 2 (COND (LIST 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (LIST nil (COND (LIST nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (LIST t (COND (LIST t (((())))) (((()))) t) t ) (((()))) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 'A) 'A 1) 1 ) 'A 1)
(COND (LIST 2 (COND (LIST 2 'A) 'A 2) 2 ) 'A 2)
(COND (LIST nil (COND (LIST nil 'A) 'A nil) nil ) 'A nil)
(COND (LIST t (COND (LIST t 'A) 'A t) t ) 'A t)
(COND (LIST (cons t t) (COND (LIST (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 'B) 'B 1) 1 ) 'B 1)
(COND (LIST 2 (COND (LIST 2 'B) 'B 2) 2 ) 'B 2)
(COND (LIST nil (COND (LIST nil 'B) 'B nil) nil ) 'B nil)
(COND (LIST t (COND (LIST t 'B) 'B t) t ) 'B t)
(COND (LIST (cons t t) (COND (LIST (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 'C) 'C 1) 1 ) 'C 1)
(COND (LIST 2 (COND (LIST 2 'C) 'C 2) 2 ) 'C 2)
(COND (LIST nil (COND (LIST nil 'C) 'C nil) nil ) 'C nil)
(COND (LIST t (COND (LIST t 'C) 'C t) t ) 'C t)
(COND (LIST (cons t t) (COND (LIST (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 '1) '1 1) 1 ) '1 1)
(COND (LIST 2 (COND (LIST 2 '1) '1 2) 2 ) '1 2)
(COND (LIST nil (COND (LIST nil '1) '1 nil) nil ) '1 nil)
(COND (LIST t (COND (LIST t '1) '1 t) t ) '1 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 '2) '2 1) 1 ) '2 1)
(COND (LIST 2 (COND (LIST 2 '2) '2 2) 2 ) '2 2)
(COND (LIST nil (COND (LIST nil '2) '2 nil) nil ) '2 nil)
(COND (LIST t (COND (LIST t '2) '2 t) t ) '2 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 '3) '3 1) 1 ) '3 1)
(COND (LIST 2 (COND (LIST 2 '3) '3 2) 2 ) '3 2)
(COND (LIST nil (COND (LIST nil '3) '3 nil) nil ) '3 nil)
(COND (LIST t (COND (LIST t '3) '3 t) t ) '3 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 '()) '() 1) 1 ) '() 1)
(COND (LIST 2 (COND (LIST 2 '()) '() 2) 2 ) '() 2)
(COND (LIST nil (COND (LIST nil '()) '() nil) nil ) '() nil)
(COND (LIST t (COND (LIST t '()) '() t) t ) '() t)
(COND (LIST (cons t t) (COND (LIST (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (LIST 2 (COND (LIST 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (LIST nil (COND (LIST nil '(())) '(()) nil) nil ) '(()) nil)
(COND (LIST t (COND (LIST t '(())) '(()) t) t ) '(()) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (LIST 2 (COND (LIST 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (LIST nil (COND (LIST nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (LIST t (COND (LIST t '((()))) '((())) t) t ) '((())) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (LIST 2 (COND (LIST 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (LIST nil (COND (LIST nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (LIST t (COND (LIST t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 ,A) ,A 1) 1 ) ,A 1)
(COND (LIST 2 (COND (LIST 2 ,A) ,A 2) 2 ) ,A 2)
(COND (LIST nil (COND (LIST nil ,A) ,A nil) nil ) ,A nil)
(COND (LIST t (COND (LIST t ,A) ,A t) t ) ,A t)
(COND (LIST (cons t t) (COND (LIST (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 ,1) ,1 1) 1 ) ,1 1)
(COND (LIST 2 (COND (LIST 2 ,1) ,1 2) 2 ) ,1 2)
(COND (LIST nil (COND (LIST nil ,1) ,1 nil) nil ) ,1 nil)
(COND (LIST t (COND (LIST t ,1) ,1 t) t ) ,1 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 ,()) ,() 1) 1 ) ,() 1)
(COND (LIST 2 (COND (LIST 2 ,()) ,() 2) 2 ) ,() 2)
(COND (LIST nil (COND (LIST nil ,()) ,() nil) nil ) ,() nil)
(COND (LIST t (COND (LIST t ,()) ,() t) t ) ,() t)
(COND (LIST (cons t t) (COND (LIST (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (LIST 2 (COND (LIST 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (LIST nil (COND (LIST nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (LIST t (COND (LIST t ,(())) ,(()) t) t ) ,(()) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'A) `'A 1) 1 ) `'A 1)
(COND (LIST 2 (COND (LIST 2 `'A) `'A 2) 2 ) `'A 2)
(COND (LIST nil (COND (LIST nil `'A) `'A nil) nil ) `'A nil)
(COND (LIST t (COND (LIST t `'A) `'A t) t ) `'A t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'B) `'B 1) 1 ) `'B 1)
(COND (LIST 2 (COND (LIST 2 `'B) `'B 2) 2 ) `'B 2)
(COND (LIST nil (COND (LIST nil `'B) `'B nil) nil ) `'B nil)
(COND (LIST t (COND (LIST t `'B) `'B t) t ) `'B t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'C) `'C 1) 1 ) `'C 1)
(COND (LIST 2 (COND (LIST 2 `'C) `'C 2) 2 ) `'C 2)
(COND (LIST nil (COND (LIST nil `'C) `'C nil) nil ) `'C nil)
(COND (LIST t (COND (LIST t `'C) `'C t) t ) `'C t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'1) `'1 1) 1 ) `'1 1)
(COND (LIST 2 (COND (LIST 2 `'1) `'1 2) 2 ) `'1 2)
(COND (LIST nil (COND (LIST nil `'1) `'1 nil) nil ) `'1 nil)
(COND (LIST t (COND (LIST t `'1) `'1 t) t ) `'1 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'2) `'2 1) 1 ) `'2 1)
(COND (LIST 2 (COND (LIST 2 `'2) `'2 2) 2 ) `'2 2)
(COND (LIST nil (COND (LIST nil `'2) `'2 nil) nil ) `'2 nil)
(COND (LIST t (COND (LIST t `'2) `'2 t) t ) `'2 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'3) `'3 1) 1 ) `'3 1)
(COND (LIST 2 (COND (LIST 2 `'3) `'3 2) 2 ) `'3 2)
(COND (LIST nil (COND (LIST nil `'3) `'3 nil) nil ) `'3 nil)
(COND (LIST t (COND (LIST t `'3) `'3 t) t ) `'3 t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'()) `'() 1) 1 ) `'() 1)
(COND (LIST 2 (COND (LIST 2 `'()) `'() 2) 2 ) `'() 2)
(COND (LIST nil (COND (LIST nil `'()) `'() nil) nil ) `'() nil)
(COND (LIST t (COND (LIST t `'()) `'() t) t ) `'() t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (LIST 2 (COND (LIST 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (LIST nil (COND (LIST nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (LIST t (COND (LIST t `'(())) `'(()) t) t ) `'(()) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (LIST 2 (COND (LIST 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (LIST nil (COND (LIST nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (LIST t (COND (LIST t `'((()))) `'((())) t) t ) `'((())) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (LIST 1 (COND (LIST 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (LIST 2 (COND (LIST 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (LIST nil (COND (LIST nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (LIST t (COND (LIST t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (LIST (cons t t) (COND (LIST (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (LIST (cons nil t) (COND (LIST (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (LIST (cons nil nil) (COND (LIST (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (LIST (cons 0 0) (COND (LIST (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (LIST (cons 1 1) (COND (LIST (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (LIST (list 1 2 3) (COND (LIST (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (LIST (list (cons 1 1 ) ) (COND (LIST (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 T) T 1) 1 ) T 1)
(COND (LISTP 2 (COND (LISTP 2 T) T 2) 2 ) T 2)
(COND (LISTP nil (COND (LISTP nil T) T nil) nil ) T nil)
(COND (LISTP t (COND (LISTP t T) T t) t ) T t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 NIL) NIL 1) 1 ) NIL 1)
(COND (LISTP 2 (COND (LISTP 2 NIL) NIL 2) 2 ) NIL 2)
(COND (LISTP nil (COND (LISTP nil NIL) NIL nil) nil ) NIL nil)
(COND (LISTP t (COND (LISTP t NIL) NIL t) t ) NIL t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 A) A 1) 1 ) A 1)
(COND (LISTP 2 (COND (LISTP 2 A) A 2) 2 ) A 2)
(COND (LISTP nil (COND (LISTP nil A) A nil) nil ) A nil)
(COND (LISTP t (COND (LISTP t A) A t) t ) A t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 B) B 1) 1 ) B 1)
(COND (LISTP 2 (COND (LISTP 2 B) B 2) 2 ) B 2)
(COND (LISTP nil (COND (LISTP nil B) B nil) nil ) B nil)
(COND (LISTP t (COND (LISTP t B) B t) t ) B t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 C) C 1) 1 ) C 1)
(COND (LISTP 2 (COND (LISTP 2 C) C 2) 2 ) C 2)
(COND (LISTP nil (COND (LISTP nil C) C nil) nil ) C nil)
(COND (LISTP t (COND (LISTP t C) C t) t ) C t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 1) 1 1) 1 ) 1 1)
(COND (LISTP 2 (COND (LISTP 2 1) 1 2) 2 ) 1 2)
(COND (LISTP nil (COND (LISTP nil 1) 1 nil) nil ) 1 nil)
(COND (LISTP t (COND (LISTP t 1) 1 t) t ) 1 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 2) 2 1) 1 ) 2 1)
(COND (LISTP 2 (COND (LISTP 2 2) 2 2) 2 ) 2 2)
(COND (LISTP nil (COND (LISTP nil 2) 2 nil) nil ) 2 nil)
(COND (LISTP t (COND (LISTP t 2) 2 t) t ) 2 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 3) 3 1) 1 ) 3 1)
(COND (LISTP 2 (COND (LISTP 2 3) 3 2) 2 ) 3 2)
(COND (LISTP nil (COND (LISTP nil 3) 3 nil) nil ) 3 nil)
(COND (LISTP t (COND (LISTP t 3) 3 t) t ) 3 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 ()) () 1) 1 ) () 1)
(COND (LISTP 2 (COND (LISTP 2 ()) () 2) 2 ) () 2)
(COND (LISTP nil (COND (LISTP nil ()) () nil) nil ) () nil)
(COND (LISTP t (COND (LISTP t ()) () t) t ) () t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 (())) (()) 1) 1 ) (()) 1)
(COND (LISTP 2 (COND (LISTP 2 (())) (()) 2) 2 ) (()) 2)
(COND (LISTP nil (COND (LISTP nil (())) (()) nil) nil ) (()) nil)
(COND (LISTP t (COND (LISTP t (())) (()) t) t ) (()) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (LISTP 2 (COND (LISTP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (LISTP nil (COND (LISTP nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (LISTP t (COND (LISTP t ((()))) ((())) t) t ) ((())) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (LISTP 2 (COND (LISTP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (LISTP nil (COND (LISTP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (LISTP t (COND (LISTP t (((())))) (((()))) t) t ) (((()))) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 'A) 'A 1) 1 ) 'A 1)
(COND (LISTP 2 (COND (LISTP 2 'A) 'A 2) 2 ) 'A 2)
(COND (LISTP nil (COND (LISTP nil 'A) 'A nil) nil ) 'A nil)
(COND (LISTP t (COND (LISTP t 'A) 'A t) t ) 'A t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 'B) 'B 1) 1 ) 'B 1)
(COND (LISTP 2 (COND (LISTP 2 'B) 'B 2) 2 ) 'B 2)
(COND (LISTP nil (COND (LISTP nil 'B) 'B nil) nil ) 'B nil)
(COND (LISTP t (COND (LISTP t 'B) 'B t) t ) 'B t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 'C) 'C 1) 1 ) 'C 1)
(COND (LISTP 2 (COND (LISTP 2 'C) 'C 2) 2 ) 'C 2)
(COND (LISTP nil (COND (LISTP nil 'C) 'C nil) nil ) 'C nil)
(COND (LISTP t (COND (LISTP t 'C) 'C t) t ) 'C t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 '1) '1 1) 1 ) '1 1)
(COND (LISTP 2 (COND (LISTP 2 '1) '1 2) 2 ) '1 2)
(COND (LISTP nil (COND (LISTP nil '1) '1 nil) nil ) '1 nil)
(COND (LISTP t (COND (LISTP t '1) '1 t) t ) '1 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 '2) '2 1) 1 ) '2 1)
(COND (LISTP 2 (COND (LISTP 2 '2) '2 2) 2 ) '2 2)
(COND (LISTP nil (COND (LISTP nil '2) '2 nil) nil ) '2 nil)
(COND (LISTP t (COND (LISTP t '2) '2 t) t ) '2 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 '3) '3 1) 1 ) '3 1)
(COND (LISTP 2 (COND (LISTP 2 '3) '3 2) 2 ) '3 2)
(COND (LISTP nil (COND (LISTP nil '3) '3 nil) nil ) '3 nil)
(COND (LISTP t (COND (LISTP t '3) '3 t) t ) '3 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 '()) '() 1) 1 ) '() 1)
(COND (LISTP 2 (COND (LISTP 2 '()) '() 2) 2 ) '() 2)
(COND (LISTP nil (COND (LISTP nil '()) '() nil) nil ) '() nil)
(COND (LISTP t (COND (LISTP t '()) '() t) t ) '() t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (LISTP 2 (COND (LISTP 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (LISTP nil (COND (LISTP nil '(())) '(()) nil) nil ) '(()) nil)
(COND (LISTP t (COND (LISTP t '(())) '(()) t) t ) '(()) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (LISTP 2 (COND (LISTP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (LISTP nil (COND (LISTP nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (LISTP t (COND (LISTP t '((()))) '((())) t) t ) '((())) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (LISTP 2 (COND (LISTP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (LISTP nil (COND (LISTP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (LISTP t (COND (LISTP t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 ,A) ,A 1) 1 ) ,A 1)
(COND (LISTP 2 (COND (LISTP 2 ,A) ,A 2) 2 ) ,A 2)
(COND (LISTP nil (COND (LISTP nil ,A) ,A nil) nil ) ,A nil)
(COND (LISTP t (COND (LISTP t ,A) ,A t) t ) ,A t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 ,1) ,1 1) 1 ) ,1 1)
(COND (LISTP 2 (COND (LISTP 2 ,1) ,1 2) 2 ) ,1 2)
(COND (LISTP nil (COND (LISTP nil ,1) ,1 nil) nil ) ,1 nil)
(COND (LISTP t (COND (LISTP t ,1) ,1 t) t ) ,1 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 ,()) ,() 1) 1 ) ,() 1)
(COND (LISTP 2 (COND (LISTP 2 ,()) ,() 2) 2 ) ,() 2)
(COND (LISTP nil (COND (LISTP nil ,()) ,() nil) nil ) ,() nil)
(COND (LISTP t (COND (LISTP t ,()) ,() t) t ) ,() t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (LISTP 2 (COND (LISTP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (LISTP nil (COND (LISTP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (LISTP t (COND (LISTP t ,(())) ,(()) t) t ) ,(()) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'A) `'A 1) 1 ) `'A 1)
(COND (LISTP 2 (COND (LISTP 2 `'A) `'A 2) 2 ) `'A 2)
(COND (LISTP nil (COND (LISTP nil `'A) `'A nil) nil ) `'A nil)
(COND (LISTP t (COND (LISTP t `'A) `'A t) t ) `'A t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'B) `'B 1) 1 ) `'B 1)
(COND (LISTP 2 (COND (LISTP 2 `'B) `'B 2) 2 ) `'B 2)
(COND (LISTP nil (COND (LISTP nil `'B) `'B nil) nil ) `'B nil)
(COND (LISTP t (COND (LISTP t `'B) `'B t) t ) `'B t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'C) `'C 1) 1 ) `'C 1)
(COND (LISTP 2 (COND (LISTP 2 `'C) `'C 2) 2 ) `'C 2)
(COND (LISTP nil (COND (LISTP nil `'C) `'C nil) nil ) `'C nil)
(COND (LISTP t (COND (LISTP t `'C) `'C t) t ) `'C t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'1) `'1 1) 1 ) `'1 1)
(COND (LISTP 2 (COND (LISTP 2 `'1) `'1 2) 2 ) `'1 2)
(COND (LISTP nil (COND (LISTP nil `'1) `'1 nil) nil ) `'1 nil)
(COND (LISTP t (COND (LISTP t `'1) `'1 t) t ) `'1 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'2) `'2 1) 1 ) `'2 1)
(COND (LISTP 2 (COND (LISTP 2 `'2) `'2 2) 2 ) `'2 2)
(COND (LISTP nil (COND (LISTP nil `'2) `'2 nil) nil ) `'2 nil)
(COND (LISTP t (COND (LISTP t `'2) `'2 t) t ) `'2 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'3) `'3 1) 1 ) `'3 1)
(COND (LISTP 2 (COND (LISTP 2 `'3) `'3 2) 2 ) `'3 2)
(COND (LISTP nil (COND (LISTP nil `'3) `'3 nil) nil ) `'3 nil)
(COND (LISTP t (COND (LISTP t `'3) `'3 t) t ) `'3 t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'()) `'() 1) 1 ) `'() 1)
(COND (LISTP 2 (COND (LISTP 2 `'()) `'() 2) 2 ) `'() 2)
(COND (LISTP nil (COND (LISTP nil `'()) `'() nil) nil ) `'() nil)
(COND (LISTP t (COND (LISTP t `'()) `'() t) t ) `'() t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (LISTP 2 (COND (LISTP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (LISTP nil (COND (LISTP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (LISTP t (COND (LISTP t `'(())) `'(()) t) t ) `'(()) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (LISTP 2 (COND (LISTP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (LISTP nil (COND (LISTP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (LISTP t (COND (LISTP t `'((()))) `'((())) t) t ) `'((())) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (LISTP 1 (COND (LISTP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (LISTP 2 (COND (LISTP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (LISTP nil (COND (LISTP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (LISTP t (COND (LISTP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (LISTP (cons t t) (COND (LISTP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (LISTP (cons nil t) (COND (LISTP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (LISTP (cons nil nil) (COND (LISTP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (LISTP (cons 0 0) (COND (LISTP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (LISTP (cons 1 1) (COND (LISTP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (LISTP (list 1 2 3) (COND (LISTP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (LISTP (list (cons 1 1 ) ) (COND (LISTP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 T) T 1) 1 ) T 1)
(COND (MAP 2 (COND (MAP 2 T) T 2) 2 ) T 2)
(COND (MAP nil (COND (MAP nil T) T nil) nil ) T nil)
(COND (MAP t (COND (MAP t T) T t) t ) T t)
(COND (MAP (cons t t) (COND (MAP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 NIL) NIL 1) 1 ) NIL 1)
(COND (MAP 2 (COND (MAP 2 NIL) NIL 2) 2 ) NIL 2)
(COND (MAP nil (COND (MAP nil NIL) NIL nil) nil ) NIL nil)
(COND (MAP t (COND (MAP t NIL) NIL t) t ) NIL t)
(COND (MAP (cons t t) (COND (MAP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 A) A 1) 1 ) A 1)
(COND (MAP 2 (COND (MAP 2 A) A 2) 2 ) A 2)
(COND (MAP nil (COND (MAP nil A) A nil) nil ) A nil)
(COND (MAP t (COND (MAP t A) A t) t ) A t)
(COND (MAP (cons t t) (COND (MAP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 B) B 1) 1 ) B 1)
(COND (MAP 2 (COND (MAP 2 B) B 2) 2 ) B 2)
(COND (MAP nil (COND (MAP nil B) B nil) nil ) B nil)
(COND (MAP t (COND (MAP t B) B t) t ) B t)
(COND (MAP (cons t t) (COND (MAP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 C) C 1) 1 ) C 1)
(COND (MAP 2 (COND (MAP 2 C) C 2) 2 ) C 2)
(COND (MAP nil (COND (MAP nil C) C nil) nil ) C nil)
(COND (MAP t (COND (MAP t C) C t) t ) C t)
(COND (MAP (cons t t) (COND (MAP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 1) 1 1) 1 ) 1 1)
(COND (MAP 2 (COND (MAP 2 1) 1 2) 2 ) 1 2)
(COND (MAP nil (COND (MAP nil 1) 1 nil) nil ) 1 nil)
(COND (MAP t (COND (MAP t 1) 1 t) t ) 1 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 2) 2 1) 1 ) 2 1)
(COND (MAP 2 (COND (MAP 2 2) 2 2) 2 ) 2 2)
(COND (MAP nil (COND (MAP nil 2) 2 nil) nil ) 2 nil)
(COND (MAP t (COND (MAP t 2) 2 t) t ) 2 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 3) 3 1) 1 ) 3 1)
(COND (MAP 2 (COND (MAP 2 3) 3 2) 2 ) 3 2)
(COND (MAP nil (COND (MAP nil 3) 3 nil) nil ) 3 nil)
(COND (MAP t (COND (MAP t 3) 3 t) t ) 3 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 ()) () 1) 1 ) () 1)
(COND (MAP 2 (COND (MAP 2 ()) () 2) 2 ) () 2)
(COND (MAP nil (COND (MAP nil ()) () nil) nil ) () nil)
(COND (MAP t (COND (MAP t ()) () t) t ) () t)
(COND (MAP (cons t t) (COND (MAP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 (())) (()) 1) 1 ) (()) 1)
(COND (MAP 2 (COND (MAP 2 (())) (()) 2) 2 ) (()) 2)
(COND (MAP nil (COND (MAP nil (())) (()) nil) nil ) (()) nil)
(COND (MAP t (COND (MAP t (())) (()) t) t ) (()) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (MAP 2 (COND (MAP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (MAP nil (COND (MAP nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (MAP t (COND (MAP t ((()))) ((())) t) t ) ((())) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (MAP 2 (COND (MAP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (MAP nil (COND (MAP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (MAP t (COND (MAP t (((())))) (((()))) t) t ) (((()))) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 'A) 'A 1) 1 ) 'A 1)
(COND (MAP 2 (COND (MAP 2 'A) 'A 2) 2 ) 'A 2)
(COND (MAP nil (COND (MAP nil 'A) 'A nil) nil ) 'A nil)
(COND (MAP t (COND (MAP t 'A) 'A t) t ) 'A t)
(COND (MAP (cons t t) (COND (MAP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 'B) 'B 1) 1 ) 'B 1)
(COND (MAP 2 (COND (MAP 2 'B) 'B 2) 2 ) 'B 2)
(COND (MAP nil (COND (MAP nil 'B) 'B nil) nil ) 'B nil)
(COND (MAP t (COND (MAP t 'B) 'B t) t ) 'B t)
(COND (MAP (cons t t) (COND (MAP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 'C) 'C 1) 1 ) 'C 1)
(COND (MAP 2 (COND (MAP 2 'C) 'C 2) 2 ) 'C 2)
(COND (MAP nil (COND (MAP nil 'C) 'C nil) nil ) 'C nil)
(COND (MAP t (COND (MAP t 'C) 'C t) t ) 'C t)
(COND (MAP (cons t t) (COND (MAP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 '1) '1 1) 1 ) '1 1)
(COND (MAP 2 (COND (MAP 2 '1) '1 2) 2 ) '1 2)
(COND (MAP nil (COND (MAP nil '1) '1 nil) nil ) '1 nil)
(COND (MAP t (COND (MAP t '1) '1 t) t ) '1 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 '2) '2 1) 1 ) '2 1)
(COND (MAP 2 (COND (MAP 2 '2) '2 2) 2 ) '2 2)
(COND (MAP nil (COND (MAP nil '2) '2 nil) nil ) '2 nil)
(COND (MAP t (COND (MAP t '2) '2 t) t ) '2 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 '3) '3 1) 1 ) '3 1)
(COND (MAP 2 (COND (MAP 2 '3) '3 2) 2 ) '3 2)
(COND (MAP nil (COND (MAP nil '3) '3 nil) nil ) '3 nil)
(COND (MAP t (COND (MAP t '3) '3 t) t ) '3 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 '()) '() 1) 1 ) '() 1)
(COND (MAP 2 (COND (MAP 2 '()) '() 2) 2 ) '() 2)
(COND (MAP nil (COND (MAP nil '()) '() nil) nil ) '() nil)
(COND (MAP t (COND (MAP t '()) '() t) t ) '() t)
(COND (MAP (cons t t) (COND (MAP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (MAP 2 (COND (MAP 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (MAP nil (COND (MAP nil '(())) '(()) nil) nil ) '(()) nil)
(COND (MAP t (COND (MAP t '(())) '(()) t) t ) '(()) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (MAP 2 (COND (MAP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (MAP nil (COND (MAP nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (MAP t (COND (MAP t '((()))) '((())) t) t ) '((())) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (MAP 2 (COND (MAP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (MAP nil (COND (MAP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (MAP t (COND (MAP t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 ,A) ,A 1) 1 ) ,A 1)
(COND (MAP 2 (COND (MAP 2 ,A) ,A 2) 2 ) ,A 2)
(COND (MAP nil (COND (MAP nil ,A) ,A nil) nil ) ,A nil)
(COND (MAP t (COND (MAP t ,A) ,A t) t ) ,A t)
(COND (MAP (cons t t) (COND (MAP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 ,1) ,1 1) 1 ) ,1 1)
(COND (MAP 2 (COND (MAP 2 ,1) ,1 2) 2 ) ,1 2)
(COND (MAP nil (COND (MAP nil ,1) ,1 nil) nil ) ,1 nil)
(COND (MAP t (COND (MAP t ,1) ,1 t) t ) ,1 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 ,()) ,() 1) 1 ) ,() 1)
(COND (MAP 2 (COND (MAP 2 ,()) ,() 2) 2 ) ,() 2)
(COND (MAP nil (COND (MAP nil ,()) ,() nil) nil ) ,() nil)
(COND (MAP t (COND (MAP t ,()) ,() t) t ) ,() t)
(COND (MAP (cons t t) (COND (MAP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (MAP 2 (COND (MAP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (MAP nil (COND (MAP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (MAP t (COND (MAP t ,(())) ,(()) t) t ) ,(()) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'A) `'A 1) 1 ) `'A 1)
(COND (MAP 2 (COND (MAP 2 `'A) `'A 2) 2 ) `'A 2)
(COND (MAP nil (COND (MAP nil `'A) `'A nil) nil ) `'A nil)
(COND (MAP t (COND (MAP t `'A) `'A t) t ) `'A t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'B) `'B 1) 1 ) `'B 1)
(COND (MAP 2 (COND (MAP 2 `'B) `'B 2) 2 ) `'B 2)
(COND (MAP nil (COND (MAP nil `'B) `'B nil) nil ) `'B nil)
(COND (MAP t (COND (MAP t `'B) `'B t) t ) `'B t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'C) `'C 1) 1 ) `'C 1)
(COND (MAP 2 (COND (MAP 2 `'C) `'C 2) 2 ) `'C 2)
(COND (MAP nil (COND (MAP nil `'C) `'C nil) nil ) `'C nil)
(COND (MAP t (COND (MAP t `'C) `'C t) t ) `'C t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'1) `'1 1) 1 ) `'1 1)
(COND (MAP 2 (COND (MAP 2 `'1) `'1 2) 2 ) `'1 2)
(COND (MAP nil (COND (MAP nil `'1) `'1 nil) nil ) `'1 nil)
(COND (MAP t (COND (MAP t `'1) `'1 t) t ) `'1 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'2) `'2 1) 1 ) `'2 1)
(COND (MAP 2 (COND (MAP 2 `'2) `'2 2) 2 ) `'2 2)
(COND (MAP nil (COND (MAP nil `'2) `'2 nil) nil ) `'2 nil)
(COND (MAP t (COND (MAP t `'2) `'2 t) t ) `'2 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'3) `'3 1) 1 ) `'3 1)
(COND (MAP 2 (COND (MAP 2 `'3) `'3 2) 2 ) `'3 2)
(COND (MAP nil (COND (MAP nil `'3) `'3 nil) nil ) `'3 nil)
(COND (MAP t (COND (MAP t `'3) `'3 t) t ) `'3 t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'()) `'() 1) 1 ) `'() 1)
(COND (MAP 2 (COND (MAP 2 `'()) `'() 2) 2 ) `'() 2)
(COND (MAP nil (COND (MAP nil `'()) `'() nil) nil ) `'() nil)
(COND (MAP t (COND (MAP t `'()) `'() t) t ) `'() t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (MAP 2 (COND (MAP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (MAP nil (COND (MAP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (MAP t (COND (MAP t `'(())) `'(()) t) t ) `'(()) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (MAP 2 (COND (MAP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (MAP nil (COND (MAP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (MAP t (COND (MAP t `'((()))) `'((())) t) t ) `'((())) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (MAP 1 (COND (MAP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (MAP 2 (COND (MAP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (MAP nil (COND (MAP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (MAP t (COND (MAP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (MAP (cons t t) (COND (MAP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (MAP (cons nil t) (COND (MAP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (MAP (cons nil nil) (COND (MAP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (MAP (cons 0 0) (COND (MAP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (MAP (cons 1 1) (COND (MAP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (MAP (list 1 2 3) (COND (MAP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (MAP (list (cons 1 1 ) ) (COND (MAP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 T) T 1) 1 ) T 1)
(COND (MEMBER 2 (COND (MEMBER 2 T) T 2) 2 ) T 2)
(COND (MEMBER nil (COND (MEMBER nil T) T nil) nil ) T nil)
(COND (MEMBER t (COND (MEMBER t T) T t) t ) T t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 NIL) NIL 1) 1 ) NIL 1)
(COND (MEMBER 2 (COND (MEMBER 2 NIL) NIL 2) 2 ) NIL 2)
(COND (MEMBER nil (COND (MEMBER nil NIL) NIL nil) nil ) NIL nil)
(COND (MEMBER t (COND (MEMBER t NIL) NIL t) t ) NIL t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 A) A 1) 1 ) A 1)
(COND (MEMBER 2 (COND (MEMBER 2 A) A 2) 2 ) A 2)
(COND (MEMBER nil (COND (MEMBER nil A) A nil) nil ) A nil)
(COND (MEMBER t (COND (MEMBER t A) A t) t ) A t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 B) B 1) 1 ) B 1)
(COND (MEMBER 2 (COND (MEMBER 2 B) B 2) 2 ) B 2)
(COND (MEMBER nil (COND (MEMBER nil B) B nil) nil ) B nil)
(COND (MEMBER t (COND (MEMBER t B) B t) t ) B t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 C) C 1) 1 ) C 1)
(COND (MEMBER 2 (COND (MEMBER 2 C) C 2) 2 ) C 2)
(COND (MEMBER nil (COND (MEMBER nil C) C nil) nil ) C nil)
(COND (MEMBER t (COND (MEMBER t C) C t) t ) C t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 1) 1 1) 1 ) 1 1)
(COND (MEMBER 2 (COND (MEMBER 2 1) 1 2) 2 ) 1 2)
(COND (MEMBER nil (COND (MEMBER nil 1) 1 nil) nil ) 1 nil)
(COND (MEMBER t (COND (MEMBER t 1) 1 t) t ) 1 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 2) 2 1) 1 ) 2 1)
(COND (MEMBER 2 (COND (MEMBER 2 2) 2 2) 2 ) 2 2)
(COND (MEMBER nil (COND (MEMBER nil 2) 2 nil) nil ) 2 nil)
(COND (MEMBER t (COND (MEMBER t 2) 2 t) t ) 2 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 3) 3 1) 1 ) 3 1)
(COND (MEMBER 2 (COND (MEMBER 2 3) 3 2) 2 ) 3 2)
(COND (MEMBER nil (COND (MEMBER nil 3) 3 nil) nil ) 3 nil)
(COND (MEMBER t (COND (MEMBER t 3) 3 t) t ) 3 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 ()) () 1) 1 ) () 1)
(COND (MEMBER 2 (COND (MEMBER 2 ()) () 2) 2 ) () 2)
(COND (MEMBER nil (COND (MEMBER nil ()) () nil) nil ) () nil)
(COND (MEMBER t (COND (MEMBER t ()) () t) t ) () t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 (())) (()) 1) 1 ) (()) 1)
(COND (MEMBER 2 (COND (MEMBER 2 (())) (()) 2) 2 ) (()) 2)
(COND (MEMBER nil (COND (MEMBER nil (())) (()) nil) nil ) (()) nil)
(COND (MEMBER t (COND (MEMBER t (())) (()) t) t ) (()) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (MEMBER 2 (COND (MEMBER 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (MEMBER nil (COND (MEMBER nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (MEMBER t (COND (MEMBER t ((()))) ((())) t) t ) ((())) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (MEMBER 2 (COND (MEMBER 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (MEMBER nil (COND (MEMBER nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (MEMBER t (COND (MEMBER t (((())))) (((()))) t) t ) (((()))) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 'A) 'A 1) 1 ) 'A 1)
(COND (MEMBER 2 (COND (MEMBER 2 'A) 'A 2) 2 ) 'A 2)
(COND (MEMBER nil (COND (MEMBER nil 'A) 'A nil) nil ) 'A nil)
(COND (MEMBER t (COND (MEMBER t 'A) 'A t) t ) 'A t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 'B) 'B 1) 1 ) 'B 1)
(COND (MEMBER 2 (COND (MEMBER 2 'B) 'B 2) 2 ) 'B 2)
(COND (MEMBER nil (COND (MEMBER nil 'B) 'B nil) nil ) 'B nil)
(COND (MEMBER t (COND (MEMBER t 'B) 'B t) t ) 'B t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 'C) 'C 1) 1 ) 'C 1)
(COND (MEMBER 2 (COND (MEMBER 2 'C) 'C 2) 2 ) 'C 2)
(COND (MEMBER nil (COND (MEMBER nil 'C) 'C nil) nil ) 'C nil)
(COND (MEMBER t (COND (MEMBER t 'C) 'C t) t ) 'C t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 '1) '1 1) 1 ) '1 1)
(COND (MEMBER 2 (COND (MEMBER 2 '1) '1 2) 2 ) '1 2)
(COND (MEMBER nil (COND (MEMBER nil '1) '1 nil) nil ) '1 nil)
(COND (MEMBER t (COND (MEMBER t '1) '1 t) t ) '1 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 '2) '2 1) 1 ) '2 1)
(COND (MEMBER 2 (COND (MEMBER 2 '2) '2 2) 2 ) '2 2)
(COND (MEMBER nil (COND (MEMBER nil '2) '2 nil) nil ) '2 nil)
(COND (MEMBER t (COND (MEMBER t '2) '2 t) t ) '2 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 '3) '3 1) 1 ) '3 1)
(COND (MEMBER 2 (COND (MEMBER 2 '3) '3 2) 2 ) '3 2)
(COND (MEMBER nil (COND (MEMBER nil '3) '3 nil) nil ) '3 nil)
(COND (MEMBER t (COND (MEMBER t '3) '3 t) t ) '3 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 '()) '() 1) 1 ) '() 1)
(COND (MEMBER 2 (COND (MEMBER 2 '()) '() 2) 2 ) '() 2)
(COND (MEMBER nil (COND (MEMBER nil '()) '() nil) nil ) '() nil)
(COND (MEMBER t (COND (MEMBER t '()) '() t) t ) '() t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (MEMBER 2 (COND (MEMBER 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (MEMBER nil (COND (MEMBER nil '(())) '(()) nil) nil ) '(()) nil)
(COND (MEMBER t (COND (MEMBER t '(())) '(()) t) t ) '(()) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (MEMBER 2 (COND (MEMBER 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (MEMBER nil (COND (MEMBER nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (MEMBER t (COND (MEMBER t '((()))) '((())) t) t ) '((())) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (MEMBER 2 (COND (MEMBER 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (MEMBER nil (COND (MEMBER nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (MEMBER t (COND (MEMBER t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 ,A) ,A 1) 1 ) ,A 1)
(COND (MEMBER 2 (COND (MEMBER 2 ,A) ,A 2) 2 ) ,A 2)
(COND (MEMBER nil (COND (MEMBER nil ,A) ,A nil) nil ) ,A nil)
(COND (MEMBER t (COND (MEMBER t ,A) ,A t) t ) ,A t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 ,1) ,1 1) 1 ) ,1 1)
(COND (MEMBER 2 (COND (MEMBER 2 ,1) ,1 2) 2 ) ,1 2)
(COND (MEMBER nil (COND (MEMBER nil ,1) ,1 nil) nil ) ,1 nil)
(COND (MEMBER t (COND (MEMBER t ,1) ,1 t) t ) ,1 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 ,()) ,() 1) 1 ) ,() 1)
(COND (MEMBER 2 (COND (MEMBER 2 ,()) ,() 2) 2 ) ,() 2)
(COND (MEMBER nil (COND (MEMBER nil ,()) ,() nil) nil ) ,() nil)
(COND (MEMBER t (COND (MEMBER t ,()) ,() t) t ) ,() t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (MEMBER 2 (COND (MEMBER 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (MEMBER nil (COND (MEMBER nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (MEMBER t (COND (MEMBER t ,(())) ,(()) t) t ) ,(()) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'A) `'A 1) 1 ) `'A 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'A) `'A 2) 2 ) `'A 2)
(COND (MEMBER nil (COND (MEMBER nil `'A) `'A nil) nil ) `'A nil)
(COND (MEMBER t (COND (MEMBER t `'A) `'A t) t ) `'A t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'B) `'B 1) 1 ) `'B 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'B) `'B 2) 2 ) `'B 2)
(COND (MEMBER nil (COND (MEMBER nil `'B) `'B nil) nil ) `'B nil)
(COND (MEMBER t (COND (MEMBER t `'B) `'B t) t ) `'B t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'C) `'C 1) 1 ) `'C 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'C) `'C 2) 2 ) `'C 2)
(COND (MEMBER nil (COND (MEMBER nil `'C) `'C nil) nil ) `'C nil)
(COND (MEMBER t (COND (MEMBER t `'C) `'C t) t ) `'C t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'1) `'1 1) 1 ) `'1 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'1) `'1 2) 2 ) `'1 2)
(COND (MEMBER nil (COND (MEMBER nil `'1) `'1 nil) nil ) `'1 nil)
(COND (MEMBER t (COND (MEMBER t `'1) `'1 t) t ) `'1 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'2) `'2 1) 1 ) `'2 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'2) `'2 2) 2 ) `'2 2)
(COND (MEMBER nil (COND (MEMBER nil `'2) `'2 nil) nil ) `'2 nil)
(COND (MEMBER t (COND (MEMBER t `'2) `'2 t) t ) `'2 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'3) `'3 1) 1 ) `'3 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'3) `'3 2) 2 ) `'3 2)
(COND (MEMBER nil (COND (MEMBER nil `'3) `'3 nil) nil ) `'3 nil)
(COND (MEMBER t (COND (MEMBER t `'3) `'3 t) t ) `'3 t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'()) `'() 1) 1 ) `'() 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'()) `'() 2) 2 ) `'() 2)
(COND (MEMBER nil (COND (MEMBER nil `'()) `'() nil) nil ) `'() nil)
(COND (MEMBER t (COND (MEMBER t `'()) `'() t) t ) `'() t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (MEMBER nil (COND (MEMBER nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (MEMBER t (COND (MEMBER t `'(())) `'(()) t) t ) `'(()) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (MEMBER nil (COND (MEMBER nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (MEMBER t (COND (MEMBER t `'((()))) `'((())) t) t ) `'((())) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (MEMBER 1 (COND (MEMBER 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (MEMBER 2 (COND (MEMBER 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (MEMBER nil (COND (MEMBER nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (MEMBER t (COND (MEMBER t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (MEMBER (cons t t) (COND (MEMBER (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (MEMBER (cons nil t) (COND (MEMBER (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (MEMBER (cons nil nil) (COND (MEMBER (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (MEMBER (cons 0 0) (COND (MEMBER (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (MEMBER (cons 1 1) (COND (MEMBER (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (MEMBER (list 1 2 3) (COND (MEMBER (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (MEMBER (list (cons 1 1 ) ) (COND (MEMBER (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 T) T 1) 1 ) T 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 T) T 2) 2 ) T 2)
(COND (MEMBERP nil (COND (MEMBERP nil T) T nil) nil ) T nil)
(COND (MEMBERP t (COND (MEMBERP t T) T t) t ) T t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 NIL) NIL 1) 1 ) NIL 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 NIL) NIL 2) 2 ) NIL 2)
(COND (MEMBERP nil (COND (MEMBERP nil NIL) NIL nil) nil ) NIL nil)
(COND (MEMBERP t (COND (MEMBERP t NIL) NIL t) t ) NIL t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 A) A 1) 1 ) A 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 A) A 2) 2 ) A 2)
(COND (MEMBERP nil (COND (MEMBERP nil A) A nil) nil ) A nil)
(COND (MEMBERP t (COND (MEMBERP t A) A t) t ) A t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 B) B 1) 1 ) B 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 B) B 2) 2 ) B 2)
(COND (MEMBERP nil (COND (MEMBERP nil B) B nil) nil ) B nil)
(COND (MEMBERP t (COND (MEMBERP t B) B t) t ) B t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 C) C 1) 1 ) C 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 C) C 2) 2 ) C 2)
(COND (MEMBERP nil (COND (MEMBERP nil C) C nil) nil ) C nil)
(COND (MEMBERP t (COND (MEMBERP t C) C t) t ) C t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 1) 1 1) 1 ) 1 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 1) 1 2) 2 ) 1 2)
(COND (MEMBERP nil (COND (MEMBERP nil 1) 1 nil) nil ) 1 nil)
(COND (MEMBERP t (COND (MEMBERP t 1) 1 t) t ) 1 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 2) 2 1) 1 ) 2 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 2) 2 2) 2 ) 2 2)
(COND (MEMBERP nil (COND (MEMBERP nil 2) 2 nil) nil ) 2 nil)
(COND (MEMBERP t (COND (MEMBERP t 2) 2 t) t ) 2 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 3) 3 1) 1 ) 3 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 3) 3 2) 2 ) 3 2)
(COND (MEMBERP nil (COND (MEMBERP nil 3) 3 nil) nil ) 3 nil)
(COND (MEMBERP t (COND (MEMBERP t 3) 3 t) t ) 3 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 ()) () 1) 1 ) () 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 ()) () 2) 2 ) () 2)
(COND (MEMBERP nil (COND (MEMBERP nil ()) () nil) nil ) () nil)
(COND (MEMBERP t (COND (MEMBERP t ()) () t) t ) () t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 (())) (()) 1) 1 ) (()) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 (())) (()) 2) 2 ) (()) 2)
(COND (MEMBERP nil (COND (MEMBERP nil (())) (()) nil) nil ) (()) nil)
(COND (MEMBERP t (COND (MEMBERP t (())) (()) t) t ) (()) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (MEMBERP nil (COND (MEMBERP nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (MEMBERP t (COND (MEMBERP t ((()))) ((())) t) t ) ((())) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (MEMBERP nil (COND (MEMBERP nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (MEMBERP t (COND (MEMBERP t (((())))) (((()))) t) t ) (((()))) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 'A) 'A 1) 1 ) 'A 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 'A) 'A 2) 2 ) 'A 2)
(COND (MEMBERP nil (COND (MEMBERP nil 'A) 'A nil) nil ) 'A nil)
(COND (MEMBERP t (COND (MEMBERP t 'A) 'A t) t ) 'A t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 'B) 'B 1) 1 ) 'B 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 'B) 'B 2) 2 ) 'B 2)
(COND (MEMBERP nil (COND (MEMBERP nil 'B) 'B nil) nil ) 'B nil)
(COND (MEMBERP t (COND (MEMBERP t 'B) 'B t) t ) 'B t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 'C) 'C 1) 1 ) 'C 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 'C) 'C 2) 2 ) 'C 2)
(COND (MEMBERP nil (COND (MEMBERP nil 'C) 'C nil) nil ) 'C nil)
(COND (MEMBERP t (COND (MEMBERP t 'C) 'C t) t ) 'C t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 '1) '1 1) 1 ) '1 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 '1) '1 2) 2 ) '1 2)
(COND (MEMBERP nil (COND (MEMBERP nil '1) '1 nil) nil ) '1 nil)
(COND (MEMBERP t (COND (MEMBERP t '1) '1 t) t ) '1 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 '2) '2 1) 1 ) '2 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 '2) '2 2) 2 ) '2 2)
(COND (MEMBERP nil (COND (MEMBERP nil '2) '2 nil) nil ) '2 nil)
(COND (MEMBERP t (COND (MEMBERP t '2) '2 t) t ) '2 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 '3) '3 1) 1 ) '3 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 '3) '3 2) 2 ) '3 2)
(COND (MEMBERP nil (COND (MEMBERP nil '3) '3 nil) nil ) '3 nil)
(COND (MEMBERP t (COND (MEMBERP t '3) '3 t) t ) '3 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 '()) '() 1) 1 ) '() 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 '()) '() 2) 2 ) '() 2)
(COND (MEMBERP nil (COND (MEMBERP nil '()) '() nil) nil ) '() nil)
(COND (MEMBERP t (COND (MEMBERP t '()) '() t) t ) '() t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (MEMBERP nil (COND (MEMBERP nil '(())) '(()) nil) nil ) '(()) nil)
(COND (MEMBERP t (COND (MEMBERP t '(())) '(()) t) t ) '(()) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (MEMBERP nil (COND (MEMBERP nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (MEMBERP t (COND (MEMBERP t '((()))) '((())) t) t ) '((())) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (MEMBERP nil (COND (MEMBERP nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (MEMBERP t (COND (MEMBERP t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 ,A) ,A 1) 1 ) ,A 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 ,A) ,A 2) 2 ) ,A 2)
(COND (MEMBERP nil (COND (MEMBERP nil ,A) ,A nil) nil ) ,A nil)
(COND (MEMBERP t (COND (MEMBERP t ,A) ,A t) t ) ,A t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 ,1) ,1 1) 1 ) ,1 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 ,1) ,1 2) 2 ) ,1 2)
(COND (MEMBERP nil (COND (MEMBERP nil ,1) ,1 nil) nil ) ,1 nil)
(COND (MEMBERP t (COND (MEMBERP t ,1) ,1 t) t ) ,1 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 ,()) ,() 1) 1 ) ,() 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 ,()) ,() 2) 2 ) ,() 2)
(COND (MEMBERP nil (COND (MEMBERP nil ,()) ,() nil) nil ) ,() nil)
(COND (MEMBERP t (COND (MEMBERP t ,()) ,() t) t ) ,() t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (MEMBERP nil (COND (MEMBERP nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (MEMBERP t (COND (MEMBERP t ,(())) ,(()) t) t ) ,(()) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'A) `'A 1) 1 ) `'A 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'A) `'A 2) 2 ) `'A 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'A) `'A nil) nil ) `'A nil)
(COND (MEMBERP t (COND (MEMBERP t `'A) `'A t) t ) `'A t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'B) `'B 1) 1 ) `'B 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'B) `'B 2) 2 ) `'B 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'B) `'B nil) nil ) `'B nil)
(COND (MEMBERP t (COND (MEMBERP t `'B) `'B t) t ) `'B t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'C) `'C 1) 1 ) `'C 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'C) `'C 2) 2 ) `'C 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'C) `'C nil) nil ) `'C nil)
(COND (MEMBERP t (COND (MEMBERP t `'C) `'C t) t ) `'C t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'1) `'1 1) 1 ) `'1 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'1) `'1 2) 2 ) `'1 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'1) `'1 nil) nil ) `'1 nil)
(COND (MEMBERP t (COND (MEMBERP t `'1) `'1 t) t ) `'1 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'2) `'2 1) 1 ) `'2 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'2) `'2 2) 2 ) `'2 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'2) `'2 nil) nil ) `'2 nil)
(COND (MEMBERP t (COND (MEMBERP t `'2) `'2 t) t ) `'2 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'3) `'3 1) 1 ) `'3 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'3) `'3 2) 2 ) `'3 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'3) `'3 nil) nil ) `'3 nil)
(COND (MEMBERP t (COND (MEMBERP t `'3) `'3 t) t ) `'3 t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'()) `'() 1) 1 ) `'() 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'()) `'() 2) 2 ) `'() 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'()) `'() nil) nil ) `'() nil)
(COND (MEMBERP t (COND (MEMBERP t `'()) `'() t) t ) `'() t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (MEMBERP t (COND (MEMBERP t `'(())) `'(()) t) t ) `'(()) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (MEMBERP t (COND (MEMBERP t `'((()))) `'((())) t) t ) `'((())) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (MEMBERP 1 (COND (MEMBERP 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (MEMBERP 2 (COND (MEMBERP 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (MEMBERP nil (COND (MEMBERP nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (MEMBERP t (COND (MEMBERP t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (MEMBERP (cons t t) (COND (MEMBERP (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (MEMBERP (cons nil t) (COND (MEMBERP (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (MEMBERP (cons nil nil) (COND (MEMBERP (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (MEMBERP (cons 0 0) (COND (MEMBERP (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (MEMBERP (cons 1 1) (COND (MEMBERP (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (MEMBERP (list 1 2 3) (COND (MEMBERP (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (MEMBERP (list (cons 1 1 ) ) (COND (MEMBERP (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 T) T 1) 1 ) T 1)
(COND (NOT 2 (COND (NOT 2 T) T 2) 2 ) T 2)
(COND (NOT nil (COND (NOT nil T) T nil) nil ) T nil)
(COND (NOT t (COND (NOT t T) T t) t ) T t)
(COND (NOT (cons t t) (COND (NOT (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 NIL) NIL 1) 1 ) NIL 1)
(COND (NOT 2 (COND (NOT 2 NIL) NIL 2) 2 ) NIL 2)
(COND (NOT nil (COND (NOT nil NIL) NIL nil) nil ) NIL nil)
(COND (NOT t (COND (NOT t NIL) NIL t) t ) NIL t)
(COND (NOT (cons t t) (COND (NOT (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 A) A 1) 1 ) A 1)
(COND (NOT 2 (COND (NOT 2 A) A 2) 2 ) A 2)
(COND (NOT nil (COND (NOT nil A) A nil) nil ) A nil)
(COND (NOT t (COND (NOT t A) A t) t ) A t)
(COND (NOT (cons t t) (COND (NOT (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 B) B 1) 1 ) B 1)
(COND (NOT 2 (COND (NOT 2 B) B 2) 2 ) B 2)
(COND (NOT nil (COND (NOT nil B) B nil) nil ) B nil)
(COND (NOT t (COND (NOT t B) B t) t ) B t)
(COND (NOT (cons t t) (COND (NOT (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 C) C 1) 1 ) C 1)
(COND (NOT 2 (COND (NOT 2 C) C 2) 2 ) C 2)
(COND (NOT nil (COND (NOT nil C) C nil) nil ) C nil)
(COND (NOT t (COND (NOT t C) C t) t ) C t)
(COND (NOT (cons t t) (COND (NOT (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 1) 1 1) 1 ) 1 1)
(COND (NOT 2 (COND (NOT 2 1) 1 2) 2 ) 1 2)
(COND (NOT nil (COND (NOT nil 1) 1 nil) nil ) 1 nil)
(COND (NOT t (COND (NOT t 1) 1 t) t ) 1 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 2) 2 1) 1 ) 2 1)
(COND (NOT 2 (COND (NOT 2 2) 2 2) 2 ) 2 2)
(COND (NOT nil (COND (NOT nil 2) 2 nil) nil ) 2 nil)
(COND (NOT t (COND (NOT t 2) 2 t) t ) 2 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 3) 3 1) 1 ) 3 1)
(COND (NOT 2 (COND (NOT 2 3) 3 2) 2 ) 3 2)
(COND (NOT nil (COND (NOT nil 3) 3 nil) nil ) 3 nil)
(COND (NOT t (COND (NOT t 3) 3 t) t ) 3 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 ()) () 1) 1 ) () 1)
(COND (NOT 2 (COND (NOT 2 ()) () 2) 2 ) () 2)
(COND (NOT nil (COND (NOT nil ()) () nil) nil ) () nil)
(COND (NOT t (COND (NOT t ()) () t) t ) () t)
(COND (NOT (cons t t) (COND (NOT (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 (())) (()) 1) 1 ) (()) 1)
(COND (NOT 2 (COND (NOT 2 (())) (()) 2) 2 ) (()) 2)
(COND (NOT nil (COND (NOT nil (())) (()) nil) nil ) (()) nil)
(COND (NOT t (COND (NOT t (())) (()) t) t ) (()) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (NOT 2 (COND (NOT 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (NOT nil (COND (NOT nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (NOT t (COND (NOT t ((()))) ((())) t) t ) ((())) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (NOT 2 (COND (NOT 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (NOT nil (COND (NOT nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (NOT t (COND (NOT t (((())))) (((()))) t) t ) (((()))) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 'A) 'A 1) 1 ) 'A 1)
(COND (NOT 2 (COND (NOT 2 'A) 'A 2) 2 ) 'A 2)
(COND (NOT nil (COND (NOT nil 'A) 'A nil) nil ) 'A nil)
(COND (NOT t (COND (NOT t 'A) 'A t) t ) 'A t)
(COND (NOT (cons t t) (COND (NOT (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 'B) 'B 1) 1 ) 'B 1)
(COND (NOT 2 (COND (NOT 2 'B) 'B 2) 2 ) 'B 2)
(COND (NOT nil (COND (NOT nil 'B) 'B nil) nil ) 'B nil)
(COND (NOT t (COND (NOT t 'B) 'B t) t ) 'B t)
(COND (NOT (cons t t) (COND (NOT (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 'C) 'C 1) 1 ) 'C 1)
(COND (NOT 2 (COND (NOT 2 'C) 'C 2) 2 ) 'C 2)
(COND (NOT nil (COND (NOT nil 'C) 'C nil) nil ) 'C nil)
(COND (NOT t (COND (NOT t 'C) 'C t) t ) 'C t)
(COND (NOT (cons t t) (COND (NOT (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 '1) '1 1) 1 ) '1 1)
(COND (NOT 2 (COND (NOT 2 '1) '1 2) 2 ) '1 2)
(COND (NOT nil (COND (NOT nil '1) '1 nil) nil ) '1 nil)
(COND (NOT t (COND (NOT t '1) '1 t) t ) '1 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 '2) '2 1) 1 ) '2 1)
(COND (NOT 2 (COND (NOT 2 '2) '2 2) 2 ) '2 2)
(COND (NOT nil (COND (NOT nil '2) '2 nil) nil ) '2 nil)
(COND (NOT t (COND (NOT t '2) '2 t) t ) '2 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 '3) '3 1) 1 ) '3 1)
(COND (NOT 2 (COND (NOT 2 '3) '3 2) 2 ) '3 2)
(COND (NOT nil (COND (NOT nil '3) '3 nil) nil ) '3 nil)
(COND (NOT t (COND (NOT t '3) '3 t) t ) '3 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 '()) '() 1) 1 ) '() 1)
(COND (NOT 2 (COND (NOT 2 '()) '() 2) 2 ) '() 2)
(COND (NOT nil (COND (NOT nil '()) '() nil) nil ) '() nil)
(COND (NOT t (COND (NOT t '()) '() t) t ) '() t)
(COND (NOT (cons t t) (COND (NOT (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (NOT 2 (COND (NOT 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (NOT nil (COND (NOT nil '(())) '(()) nil) nil ) '(()) nil)
(COND (NOT t (COND (NOT t '(())) '(()) t) t ) '(()) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (NOT 2 (COND (NOT 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (NOT nil (COND (NOT nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (NOT t (COND (NOT t '((()))) '((())) t) t ) '((())) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (NOT 2 (COND (NOT 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (NOT nil (COND (NOT nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (NOT t (COND (NOT t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 ,A) ,A 1) 1 ) ,A 1)
(COND (NOT 2 (COND (NOT 2 ,A) ,A 2) 2 ) ,A 2)
(COND (NOT nil (COND (NOT nil ,A) ,A nil) nil ) ,A nil)
(COND (NOT t (COND (NOT t ,A) ,A t) t ) ,A t)
(COND (NOT (cons t t) (COND (NOT (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 ,1) ,1 1) 1 ) ,1 1)
(COND (NOT 2 (COND (NOT 2 ,1) ,1 2) 2 ) ,1 2)
(COND (NOT nil (COND (NOT nil ,1) ,1 nil) nil ) ,1 nil)
(COND (NOT t (COND (NOT t ,1) ,1 t) t ) ,1 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 ,()) ,() 1) 1 ) ,() 1)
(COND (NOT 2 (COND (NOT 2 ,()) ,() 2) 2 ) ,() 2)
(COND (NOT nil (COND (NOT nil ,()) ,() nil) nil ) ,() nil)
(COND (NOT t (COND (NOT t ,()) ,() t) t ) ,() t)
(COND (NOT (cons t t) (COND (NOT (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (NOT 2 (COND (NOT 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (NOT nil (COND (NOT nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (NOT t (COND (NOT t ,(())) ,(()) t) t ) ,(()) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'A) `'A 1) 1 ) `'A 1)
(COND (NOT 2 (COND (NOT 2 `'A) `'A 2) 2 ) `'A 2)
(COND (NOT nil (COND (NOT nil `'A) `'A nil) nil ) `'A nil)
(COND (NOT t (COND (NOT t `'A) `'A t) t ) `'A t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'B) `'B 1) 1 ) `'B 1)
(COND (NOT 2 (COND (NOT 2 `'B) `'B 2) 2 ) `'B 2)
(COND (NOT nil (COND (NOT nil `'B) `'B nil) nil ) `'B nil)
(COND (NOT t (COND (NOT t `'B) `'B t) t ) `'B t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'C) `'C 1) 1 ) `'C 1)
(COND (NOT 2 (COND (NOT 2 `'C) `'C 2) 2 ) `'C 2)
(COND (NOT nil (COND (NOT nil `'C) `'C nil) nil ) `'C nil)
(COND (NOT t (COND (NOT t `'C) `'C t) t ) `'C t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'1) `'1 1) 1 ) `'1 1)
(COND (NOT 2 (COND (NOT 2 `'1) `'1 2) 2 ) `'1 2)
(COND (NOT nil (COND (NOT nil `'1) `'1 nil) nil ) `'1 nil)
(COND (NOT t (COND (NOT t `'1) `'1 t) t ) `'1 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'2) `'2 1) 1 ) `'2 1)
(COND (NOT 2 (COND (NOT 2 `'2) `'2 2) 2 ) `'2 2)
(COND (NOT nil (COND (NOT nil `'2) `'2 nil) nil ) `'2 nil)
(COND (NOT t (COND (NOT t `'2) `'2 t) t ) `'2 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'3) `'3 1) 1 ) `'3 1)
(COND (NOT 2 (COND (NOT 2 `'3) `'3 2) 2 ) `'3 2)
(COND (NOT nil (COND (NOT nil `'3) `'3 nil) nil ) `'3 nil)
(COND (NOT t (COND (NOT t `'3) `'3 t) t ) `'3 t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'()) `'() 1) 1 ) `'() 1)
(COND (NOT 2 (COND (NOT 2 `'()) `'() 2) 2 ) `'() 2)
(COND (NOT nil (COND (NOT nil `'()) `'() nil) nil ) `'() nil)
(COND (NOT t (COND (NOT t `'()) `'() t) t ) `'() t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (NOT 2 (COND (NOT 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (NOT nil (COND (NOT nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (NOT t (COND (NOT t `'(())) `'(()) t) t ) `'(()) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (NOT 2 (COND (NOT 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (NOT nil (COND (NOT nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (NOT t (COND (NOT t `'((()))) `'((())) t) t ) `'((())) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (NOT 1 (COND (NOT 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (NOT 2 (COND (NOT 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (NOT nil (COND (NOT nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (NOT t (COND (NOT t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (NOT (cons t t) (COND (NOT (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (NOT (cons nil t) (COND (NOT (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (NOT (cons nil nil) (COND (NOT (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (NOT (cons 0 0) (COND (NOT (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (NOT (cons 1 1) (COND (NOT (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (NOT (list 1 2 3) (COND (NOT (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (NOT (list (cons 1 1 ) ) (COND (NOT (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 T) T 1) 1 ) T 1)
(COND (NULL 2 (COND (NULL 2 T) T 2) 2 ) T 2)
(COND (NULL nil (COND (NULL nil T) T nil) nil ) T nil)
(COND (NULL t (COND (NULL t T) T t) t ) T t)
(COND (NULL (cons t t) (COND (NULL (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 NIL) NIL 1) 1 ) NIL 1)
(COND (NULL 2 (COND (NULL 2 NIL) NIL 2) 2 ) NIL 2)
(COND (NULL nil (COND (NULL nil NIL) NIL nil) nil ) NIL nil)
(COND (NULL t (COND (NULL t NIL) NIL t) t ) NIL t)
(COND (NULL (cons t t) (COND (NULL (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 A) A 1) 1 ) A 1)
(COND (NULL 2 (COND (NULL 2 A) A 2) 2 ) A 2)
(COND (NULL nil (COND (NULL nil A) A nil) nil ) A nil)
(COND (NULL t (COND (NULL t A) A t) t ) A t)
(COND (NULL (cons t t) (COND (NULL (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 B) B 1) 1 ) B 1)
(COND (NULL 2 (COND (NULL 2 B) B 2) 2 ) B 2)
(COND (NULL nil (COND (NULL nil B) B nil) nil ) B nil)
(COND (NULL t (COND (NULL t B) B t) t ) B t)
(COND (NULL (cons t t) (COND (NULL (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 C) C 1) 1 ) C 1)
(COND (NULL 2 (COND (NULL 2 C) C 2) 2 ) C 2)
(COND (NULL nil (COND (NULL nil C) C nil) nil ) C nil)
(COND (NULL t (COND (NULL t C) C t) t ) C t)
(COND (NULL (cons t t) (COND (NULL (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 1) 1 1) 1 ) 1 1)
(COND (NULL 2 (COND (NULL 2 1) 1 2) 2 ) 1 2)
(COND (NULL nil (COND (NULL nil 1) 1 nil) nil ) 1 nil)
(COND (NULL t (COND (NULL t 1) 1 t) t ) 1 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 2) 2 1) 1 ) 2 1)
(COND (NULL 2 (COND (NULL 2 2) 2 2) 2 ) 2 2)
(COND (NULL nil (COND (NULL nil 2) 2 nil) nil ) 2 nil)
(COND (NULL t (COND (NULL t 2) 2 t) t ) 2 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 3) 3 1) 1 ) 3 1)
(COND (NULL 2 (COND (NULL 2 3) 3 2) 2 ) 3 2)
(COND (NULL nil (COND (NULL nil 3) 3 nil) nil ) 3 nil)
(COND (NULL t (COND (NULL t 3) 3 t) t ) 3 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 ()) () 1) 1 ) () 1)
(COND (NULL 2 (COND (NULL 2 ()) () 2) 2 ) () 2)
(COND (NULL nil (COND (NULL nil ()) () nil) nil ) () nil)
(COND (NULL t (COND (NULL t ()) () t) t ) () t)
(COND (NULL (cons t t) (COND (NULL (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 (())) (()) 1) 1 ) (()) 1)
(COND (NULL 2 (COND (NULL 2 (())) (()) 2) 2 ) (()) 2)
(COND (NULL nil (COND (NULL nil (())) (()) nil) nil ) (()) nil)
(COND (NULL t (COND (NULL t (())) (()) t) t ) (()) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (NULL 2 (COND (NULL 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (NULL nil (COND (NULL nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (NULL t (COND (NULL t ((()))) ((())) t) t ) ((())) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (NULL 2 (COND (NULL 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (NULL nil (COND (NULL nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (NULL t (COND (NULL t (((())))) (((()))) t) t ) (((()))) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 'A) 'A 1) 1 ) 'A 1)
(COND (NULL 2 (COND (NULL 2 'A) 'A 2) 2 ) 'A 2)
(COND (NULL nil (COND (NULL nil 'A) 'A nil) nil ) 'A nil)
(COND (NULL t (COND (NULL t 'A) 'A t) t ) 'A t)
(COND (NULL (cons t t) (COND (NULL (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 'B) 'B 1) 1 ) 'B 1)
(COND (NULL 2 (COND (NULL 2 'B) 'B 2) 2 ) 'B 2)
(COND (NULL nil (COND (NULL nil 'B) 'B nil) nil ) 'B nil)
(COND (NULL t (COND (NULL t 'B) 'B t) t ) 'B t)
(COND (NULL (cons t t) (COND (NULL (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 'C) 'C 1) 1 ) 'C 1)
(COND (NULL 2 (COND (NULL 2 'C) 'C 2) 2 ) 'C 2)
(COND (NULL nil (COND (NULL nil 'C) 'C nil) nil ) 'C nil)
(COND (NULL t (COND (NULL t 'C) 'C t) t ) 'C t)
(COND (NULL (cons t t) (COND (NULL (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 '1) '1 1) 1 ) '1 1)
(COND (NULL 2 (COND (NULL 2 '1) '1 2) 2 ) '1 2)
(COND (NULL nil (COND (NULL nil '1) '1 nil) nil ) '1 nil)
(COND (NULL t (COND (NULL t '1) '1 t) t ) '1 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 '2) '2 1) 1 ) '2 1)
(COND (NULL 2 (COND (NULL 2 '2) '2 2) 2 ) '2 2)
(COND (NULL nil (COND (NULL nil '2) '2 nil) nil ) '2 nil)
(COND (NULL t (COND (NULL t '2) '2 t) t ) '2 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 '3) '3 1) 1 ) '3 1)
(COND (NULL 2 (COND (NULL 2 '3) '3 2) 2 ) '3 2)
(COND (NULL nil (COND (NULL nil '3) '3 nil) nil ) '3 nil)
(COND (NULL t (COND (NULL t '3) '3 t) t ) '3 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 '()) '() 1) 1 ) '() 1)
(COND (NULL 2 (COND (NULL 2 '()) '() 2) 2 ) '() 2)
(COND (NULL nil (COND (NULL nil '()) '() nil) nil ) '() nil)
(COND (NULL t (COND (NULL t '()) '() t) t ) '() t)
(COND (NULL (cons t t) (COND (NULL (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (NULL 2 (COND (NULL 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (NULL nil (COND (NULL nil '(())) '(()) nil) nil ) '(()) nil)
(COND (NULL t (COND (NULL t '(())) '(()) t) t ) '(()) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (NULL 2 (COND (NULL 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (NULL nil (COND (NULL nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (NULL t (COND (NULL t '((()))) '((())) t) t ) '((())) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (NULL 2 (COND (NULL 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (NULL nil (COND (NULL nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (NULL t (COND (NULL t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 ,A) ,A 1) 1 ) ,A 1)
(COND (NULL 2 (COND (NULL 2 ,A) ,A 2) 2 ) ,A 2)
(COND (NULL nil (COND (NULL nil ,A) ,A nil) nil ) ,A nil)
(COND (NULL t (COND (NULL t ,A) ,A t) t ) ,A t)
(COND (NULL (cons t t) (COND (NULL (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 ,1) ,1 1) 1 ) ,1 1)
(COND (NULL 2 (COND (NULL 2 ,1) ,1 2) 2 ) ,1 2)
(COND (NULL nil (COND (NULL nil ,1) ,1 nil) nil ) ,1 nil)
(COND (NULL t (COND (NULL t ,1) ,1 t) t ) ,1 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 ,()) ,() 1) 1 ) ,() 1)
(COND (NULL 2 (COND (NULL 2 ,()) ,() 2) 2 ) ,() 2)
(COND (NULL nil (COND (NULL nil ,()) ,() nil) nil ) ,() nil)
(COND (NULL t (COND (NULL t ,()) ,() t) t ) ,() t)
(COND (NULL (cons t t) (COND (NULL (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (NULL 2 (COND (NULL 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (NULL nil (COND (NULL nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (NULL t (COND (NULL t ,(())) ,(()) t) t ) ,(()) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'A) `'A 1) 1 ) `'A 1)
(COND (NULL 2 (COND (NULL 2 `'A) `'A 2) 2 ) `'A 2)
(COND (NULL nil (COND (NULL nil `'A) `'A nil) nil ) `'A nil)
(COND (NULL t (COND (NULL t `'A) `'A t) t ) `'A t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'B) `'B 1) 1 ) `'B 1)
(COND (NULL 2 (COND (NULL 2 `'B) `'B 2) 2 ) `'B 2)
(COND (NULL nil (COND (NULL nil `'B) `'B nil) nil ) `'B nil)
(COND (NULL t (COND (NULL t `'B) `'B t) t ) `'B t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'C) `'C 1) 1 ) `'C 1)
(COND (NULL 2 (COND (NULL 2 `'C) `'C 2) 2 ) `'C 2)
(COND (NULL nil (COND (NULL nil `'C) `'C nil) nil ) `'C nil)
(COND (NULL t (COND (NULL t `'C) `'C t) t ) `'C t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'1) `'1 1) 1 ) `'1 1)
(COND (NULL 2 (COND (NULL 2 `'1) `'1 2) 2 ) `'1 2)
(COND (NULL nil (COND (NULL nil `'1) `'1 nil) nil ) `'1 nil)
(COND (NULL t (COND (NULL t `'1) `'1 t) t ) `'1 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'2) `'2 1) 1 ) `'2 1)
(COND (NULL 2 (COND (NULL 2 `'2) `'2 2) 2 ) `'2 2)
(COND (NULL nil (COND (NULL nil `'2) `'2 nil) nil ) `'2 nil)
(COND (NULL t (COND (NULL t `'2) `'2 t) t ) `'2 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'3) `'3 1) 1 ) `'3 1)
(COND (NULL 2 (COND (NULL 2 `'3) `'3 2) 2 ) `'3 2)
(COND (NULL nil (COND (NULL nil `'3) `'3 nil) nil ) `'3 nil)
(COND (NULL t (COND (NULL t `'3) `'3 t) t ) `'3 t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'()) `'() 1) 1 ) `'() 1)
(COND (NULL 2 (COND (NULL 2 `'()) `'() 2) 2 ) `'() 2)
(COND (NULL nil (COND (NULL nil `'()) `'() nil) nil ) `'() nil)
(COND (NULL t (COND (NULL t `'()) `'() t) t ) `'() t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (NULL 2 (COND (NULL 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (NULL nil (COND (NULL nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (NULL t (COND (NULL t `'(())) `'(()) t) t ) `'(()) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (NULL 2 (COND (NULL 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (NULL nil (COND (NULL nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (NULL t (COND (NULL t `'((()))) `'((())) t) t ) `'((())) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (NULL 1 (COND (NULL 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (NULL 2 (COND (NULL 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (NULL nil (COND (NULL nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (NULL t (COND (NULL t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (NULL (cons t t) (COND (NULL (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (NULL (cons nil t) (COND (NULL (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (NULL (cons nil nil) (COND (NULL (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (NULL (cons 0 0) (COND (NULL (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (NULL (cons 1 1) (COND (NULL (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (NULL (list 1 2 3) (COND (NULL (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (NULL (list (cons 1 1 ) ) (COND (NULL (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 T) T 1) 1 ) T 1)
(COND (OR 2 (COND (OR 2 T) T 2) 2 ) T 2)
(COND (OR nil (COND (OR nil T) T nil) nil ) T nil)
(COND (OR t (COND (OR t T) T t) t ) T t)
(COND (OR (cons t t) (COND (OR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 NIL) NIL 1) 1 ) NIL 1)
(COND (OR 2 (COND (OR 2 NIL) NIL 2) 2 ) NIL 2)
(COND (OR nil (COND (OR nil NIL) NIL nil) nil ) NIL nil)
(COND (OR t (COND (OR t NIL) NIL t) t ) NIL t)
(COND (OR (cons t t) (COND (OR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 A) A 1) 1 ) A 1)
(COND (OR 2 (COND (OR 2 A) A 2) 2 ) A 2)
(COND (OR nil (COND (OR nil A) A nil) nil ) A nil)
(COND (OR t (COND (OR t A) A t) t ) A t)
(COND (OR (cons t t) (COND (OR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 B) B 1) 1 ) B 1)
(COND (OR 2 (COND (OR 2 B) B 2) 2 ) B 2)
(COND (OR nil (COND (OR nil B) B nil) nil ) B nil)
(COND (OR t (COND (OR t B) B t) t ) B t)
(COND (OR (cons t t) (COND (OR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 C) C 1) 1 ) C 1)
(COND (OR 2 (COND (OR 2 C) C 2) 2 ) C 2)
(COND (OR nil (COND (OR nil C) C nil) nil ) C nil)
(COND (OR t (COND (OR t C) C t) t ) C t)
(COND (OR (cons t t) (COND (OR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 1) 1 1) 1 ) 1 1)
(COND (OR 2 (COND (OR 2 1) 1 2) 2 ) 1 2)
(COND (OR nil (COND (OR nil 1) 1 nil) nil ) 1 nil)
(COND (OR t (COND (OR t 1) 1 t) t ) 1 t)
(COND (OR (cons t t) (COND (OR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 2) 2 1) 1 ) 2 1)
(COND (OR 2 (COND (OR 2 2) 2 2) 2 ) 2 2)
(COND (OR nil (COND (OR nil 2) 2 nil) nil ) 2 nil)
(COND (OR t (COND (OR t 2) 2 t) t ) 2 t)
(COND (OR (cons t t) (COND (OR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 3) 3 1) 1 ) 3 1)
(COND (OR 2 (COND (OR 2 3) 3 2) 2 ) 3 2)
(COND (OR nil (COND (OR nil 3) 3 nil) nil ) 3 nil)
(COND (OR t (COND (OR t 3) 3 t) t ) 3 t)
(COND (OR (cons t t) (COND (OR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 ()) () 1) 1 ) () 1)
(COND (OR 2 (COND (OR 2 ()) () 2) 2 ) () 2)
(COND (OR nil (COND (OR nil ()) () nil) nil ) () nil)
(COND (OR t (COND (OR t ()) () t) t ) () t)
(COND (OR (cons t t) (COND (OR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 (())) (()) 1) 1 ) (()) 1)
(COND (OR 2 (COND (OR 2 (())) (()) 2) 2 ) (()) 2)
(COND (OR nil (COND (OR nil (())) (()) nil) nil ) (()) nil)
(COND (OR t (COND (OR t (())) (()) t) t ) (()) t)
(COND (OR (cons t t) (COND (OR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (OR 2 (COND (OR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (OR nil (COND (OR nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (OR t (COND (OR t ((()))) ((())) t) t ) ((())) t)
(COND (OR (cons t t) (COND (OR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (OR 2 (COND (OR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (OR nil (COND (OR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (OR t (COND (OR t (((())))) (((()))) t) t ) (((()))) t)
(COND (OR (cons t t) (COND (OR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 'A) 'A 1) 1 ) 'A 1)
(COND (OR 2 (COND (OR 2 'A) 'A 2) 2 ) 'A 2)
(COND (OR nil (COND (OR nil 'A) 'A nil) nil ) 'A nil)
(COND (OR t (COND (OR t 'A) 'A t) t ) 'A t)
(COND (OR (cons t t) (COND (OR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 'B) 'B 1) 1 ) 'B 1)
(COND (OR 2 (COND (OR 2 'B) 'B 2) 2 ) 'B 2)
(COND (OR nil (COND (OR nil 'B) 'B nil) nil ) 'B nil)
(COND (OR t (COND (OR t 'B) 'B t) t ) 'B t)
(COND (OR (cons t t) (COND (OR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 'C) 'C 1) 1 ) 'C 1)
(COND (OR 2 (COND (OR 2 'C) 'C 2) 2 ) 'C 2)
(COND (OR nil (COND (OR nil 'C) 'C nil) nil ) 'C nil)
(COND (OR t (COND (OR t 'C) 'C t) t ) 'C t)
(COND (OR (cons t t) (COND (OR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 '1) '1 1) 1 ) '1 1)
(COND (OR 2 (COND (OR 2 '1) '1 2) 2 ) '1 2)
(COND (OR nil (COND (OR nil '1) '1 nil) nil ) '1 nil)
(COND (OR t (COND (OR t '1) '1 t) t ) '1 t)
(COND (OR (cons t t) (COND (OR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 '2) '2 1) 1 ) '2 1)
(COND (OR 2 (COND (OR 2 '2) '2 2) 2 ) '2 2)
(COND (OR nil (COND (OR nil '2) '2 nil) nil ) '2 nil)
(COND (OR t (COND (OR t '2) '2 t) t ) '2 t)
(COND (OR (cons t t) (COND (OR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 '3) '3 1) 1 ) '3 1)
(COND (OR 2 (COND (OR 2 '3) '3 2) 2 ) '3 2)
(COND (OR nil (COND (OR nil '3) '3 nil) nil ) '3 nil)
(COND (OR t (COND (OR t '3) '3 t) t ) '3 t)
(COND (OR (cons t t) (COND (OR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 '()) '() 1) 1 ) '() 1)
(COND (OR 2 (COND (OR 2 '()) '() 2) 2 ) '() 2)
(COND (OR nil (COND (OR nil '()) '() nil) nil ) '() nil)
(COND (OR t (COND (OR t '()) '() t) t ) '() t)
(COND (OR (cons t t) (COND (OR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (OR 2 (COND (OR 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (OR nil (COND (OR nil '(())) '(()) nil) nil ) '(()) nil)
(COND (OR t (COND (OR t '(())) '(()) t) t ) '(()) t)
(COND (OR (cons t t) (COND (OR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (OR 2 (COND (OR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (OR nil (COND (OR nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (OR t (COND (OR t '((()))) '((())) t) t ) '((())) t)
(COND (OR (cons t t) (COND (OR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (OR 2 (COND (OR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (OR nil (COND (OR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (OR t (COND (OR t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (OR (cons t t) (COND (OR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 ,A) ,A 1) 1 ) ,A 1)
(COND (OR 2 (COND (OR 2 ,A) ,A 2) 2 ) ,A 2)
(COND (OR nil (COND (OR nil ,A) ,A nil) nil ) ,A nil)
(COND (OR t (COND (OR t ,A) ,A t) t ) ,A t)
(COND (OR (cons t t) (COND (OR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 ,1) ,1 1) 1 ) ,1 1)
(COND (OR 2 (COND (OR 2 ,1) ,1 2) 2 ) ,1 2)
(COND (OR nil (COND (OR nil ,1) ,1 nil) nil ) ,1 nil)
(COND (OR t (COND (OR t ,1) ,1 t) t ) ,1 t)
(COND (OR (cons t t) (COND (OR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 ,()) ,() 1) 1 ) ,() 1)
(COND (OR 2 (COND (OR 2 ,()) ,() 2) 2 ) ,() 2)
(COND (OR nil (COND (OR nil ,()) ,() nil) nil ) ,() nil)
(COND (OR t (COND (OR t ,()) ,() t) t ) ,() t)
(COND (OR (cons t t) (COND (OR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (OR 2 (COND (OR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (OR nil (COND (OR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (OR t (COND (OR t ,(())) ,(()) t) t ) ,(()) t)
(COND (OR (cons t t) (COND (OR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'A) `'A 1) 1 ) `'A 1)
(COND (OR 2 (COND (OR 2 `'A) `'A 2) 2 ) `'A 2)
(COND (OR nil (COND (OR nil `'A) `'A nil) nil ) `'A nil)
(COND (OR t (COND (OR t `'A) `'A t) t ) `'A t)
(COND (OR (cons t t) (COND (OR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'B) `'B 1) 1 ) `'B 1)
(COND (OR 2 (COND (OR 2 `'B) `'B 2) 2 ) `'B 2)
(COND (OR nil (COND (OR nil `'B) `'B nil) nil ) `'B nil)
(COND (OR t (COND (OR t `'B) `'B t) t ) `'B t)
(COND (OR (cons t t) (COND (OR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'C) `'C 1) 1 ) `'C 1)
(COND (OR 2 (COND (OR 2 `'C) `'C 2) 2 ) `'C 2)
(COND (OR nil (COND (OR nil `'C) `'C nil) nil ) `'C nil)
(COND (OR t (COND (OR t `'C) `'C t) t ) `'C t)
(COND (OR (cons t t) (COND (OR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'1) `'1 1) 1 ) `'1 1)
(COND (OR 2 (COND (OR 2 `'1) `'1 2) 2 ) `'1 2)
(COND (OR nil (COND (OR nil `'1) `'1 nil) nil ) `'1 nil)
(COND (OR t (COND (OR t `'1) `'1 t) t ) `'1 t)
(COND (OR (cons t t) (COND (OR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'2) `'2 1) 1 ) `'2 1)
(COND (OR 2 (COND (OR 2 `'2) `'2 2) 2 ) `'2 2)
(COND (OR nil (COND (OR nil `'2) `'2 nil) nil ) `'2 nil)
(COND (OR t (COND (OR t `'2) `'2 t) t ) `'2 t)
(COND (OR (cons t t) (COND (OR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'3) `'3 1) 1 ) `'3 1)
(COND (OR 2 (COND (OR 2 `'3) `'3 2) 2 ) `'3 2)
(COND (OR nil (COND (OR nil `'3) `'3 nil) nil ) `'3 nil)
(COND (OR t (COND (OR t `'3) `'3 t) t ) `'3 t)
(COND (OR (cons t t) (COND (OR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'()) `'() 1) 1 ) `'() 1)
(COND (OR 2 (COND (OR 2 `'()) `'() 2) 2 ) `'() 2)
(COND (OR nil (COND (OR nil `'()) `'() nil) nil ) `'() nil)
(COND (OR t (COND (OR t `'()) `'() t) t ) `'() t)
(COND (OR (cons t t) (COND (OR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (OR 2 (COND (OR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (OR nil (COND (OR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (OR t (COND (OR t `'(())) `'(()) t) t ) `'(()) t)
(COND (OR (cons t t) (COND (OR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (OR 2 (COND (OR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (OR nil (COND (OR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (OR t (COND (OR t `'((()))) `'((())) t) t ) `'((())) t)
(COND (OR (cons t t) (COND (OR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (OR 1 (COND (OR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (OR 2 (COND (OR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (OR nil (COND (OR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (OR t (COND (OR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (OR (cons t t) (COND (OR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (OR (cons nil t) (COND (OR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (OR (cons nil nil) (COND (OR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (OR (cons 0 0) (COND (OR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (OR (cons 1 1) (COND (OR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (OR (list 1 2 3) (COND (OR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (OR (list (cons 1 1 ) ) (COND (OR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 T) T 1) 1 ) T 1)
(COND (ORD 2 (COND (ORD 2 T) T 2) 2 ) T 2)
(COND (ORD nil (COND (ORD nil T) T nil) nil ) T nil)
(COND (ORD t (COND (ORD t T) T t) t ) T t)
(COND (ORD (cons t t) (COND (ORD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 NIL) NIL 1) 1 ) NIL 1)
(COND (ORD 2 (COND (ORD 2 NIL) NIL 2) 2 ) NIL 2)
(COND (ORD nil (COND (ORD nil NIL) NIL nil) nil ) NIL nil)
(COND (ORD t (COND (ORD t NIL) NIL t) t ) NIL t)
(COND (ORD (cons t t) (COND (ORD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 A) A 1) 1 ) A 1)
(COND (ORD 2 (COND (ORD 2 A) A 2) 2 ) A 2)
(COND (ORD nil (COND (ORD nil A) A nil) nil ) A nil)
(COND (ORD t (COND (ORD t A) A t) t ) A t)
(COND (ORD (cons t t) (COND (ORD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 B) B 1) 1 ) B 1)
(COND (ORD 2 (COND (ORD 2 B) B 2) 2 ) B 2)
(COND (ORD nil (COND (ORD nil B) B nil) nil ) B nil)
(COND (ORD t (COND (ORD t B) B t) t ) B t)
(COND (ORD (cons t t) (COND (ORD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 C) C 1) 1 ) C 1)
(COND (ORD 2 (COND (ORD 2 C) C 2) 2 ) C 2)
(COND (ORD nil (COND (ORD nil C) C nil) nil ) C nil)
(COND (ORD t (COND (ORD t C) C t) t ) C t)
(COND (ORD (cons t t) (COND (ORD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 1) 1 1) 1 ) 1 1)
(COND (ORD 2 (COND (ORD 2 1) 1 2) 2 ) 1 2)
(COND (ORD nil (COND (ORD nil 1) 1 nil) nil ) 1 nil)
(COND (ORD t (COND (ORD t 1) 1 t) t ) 1 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 2) 2 1) 1 ) 2 1)
(COND (ORD 2 (COND (ORD 2 2) 2 2) 2 ) 2 2)
(COND (ORD nil (COND (ORD nil 2) 2 nil) nil ) 2 nil)
(COND (ORD t (COND (ORD t 2) 2 t) t ) 2 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 3) 3 1) 1 ) 3 1)
(COND (ORD 2 (COND (ORD 2 3) 3 2) 2 ) 3 2)
(COND (ORD nil (COND (ORD nil 3) 3 nil) nil ) 3 nil)
(COND (ORD t (COND (ORD t 3) 3 t) t ) 3 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 ()) () 1) 1 ) () 1)
(COND (ORD 2 (COND (ORD 2 ()) () 2) 2 ) () 2)
(COND (ORD nil (COND (ORD nil ()) () nil) nil ) () nil)
(COND (ORD t (COND (ORD t ()) () t) t ) () t)
(COND (ORD (cons t t) (COND (ORD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 (())) (()) 1) 1 ) (()) 1)
(COND (ORD 2 (COND (ORD 2 (())) (()) 2) 2 ) (()) 2)
(COND (ORD nil (COND (ORD nil (())) (()) nil) nil ) (()) nil)
(COND (ORD t (COND (ORD t (())) (()) t) t ) (()) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (ORD 2 (COND (ORD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (ORD nil (COND (ORD nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (ORD t (COND (ORD t ((()))) ((())) t) t ) ((())) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (ORD 2 (COND (ORD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (ORD nil (COND (ORD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (ORD t (COND (ORD t (((())))) (((()))) t) t ) (((()))) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 'A) 'A 1) 1 ) 'A 1)
(COND (ORD 2 (COND (ORD 2 'A) 'A 2) 2 ) 'A 2)
(COND (ORD nil (COND (ORD nil 'A) 'A nil) nil ) 'A nil)
(COND (ORD t (COND (ORD t 'A) 'A t) t ) 'A t)
(COND (ORD (cons t t) (COND (ORD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 'B) 'B 1) 1 ) 'B 1)
(COND (ORD 2 (COND (ORD 2 'B) 'B 2) 2 ) 'B 2)
(COND (ORD nil (COND (ORD nil 'B) 'B nil) nil ) 'B nil)
(COND (ORD t (COND (ORD t 'B) 'B t) t ) 'B t)
(COND (ORD (cons t t) (COND (ORD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 'C) 'C 1) 1 ) 'C 1)
(COND (ORD 2 (COND (ORD 2 'C) 'C 2) 2 ) 'C 2)
(COND (ORD nil (COND (ORD nil 'C) 'C nil) nil ) 'C nil)
(COND (ORD t (COND (ORD t 'C) 'C t) t ) 'C t)
(COND (ORD (cons t t) (COND (ORD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 '1) '1 1) 1 ) '1 1)
(COND (ORD 2 (COND (ORD 2 '1) '1 2) 2 ) '1 2)
(COND (ORD nil (COND (ORD nil '1) '1 nil) nil ) '1 nil)
(COND (ORD t (COND (ORD t '1) '1 t) t ) '1 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 '2) '2 1) 1 ) '2 1)
(COND (ORD 2 (COND (ORD 2 '2) '2 2) 2 ) '2 2)
(COND (ORD nil (COND (ORD nil '2) '2 nil) nil ) '2 nil)
(COND (ORD t (COND (ORD t '2) '2 t) t ) '2 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 '3) '3 1) 1 ) '3 1)
(COND (ORD 2 (COND (ORD 2 '3) '3 2) 2 ) '3 2)
(COND (ORD nil (COND (ORD nil '3) '3 nil) nil ) '3 nil)
(COND (ORD t (COND (ORD t '3) '3 t) t ) '3 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 '()) '() 1) 1 ) '() 1)
(COND (ORD 2 (COND (ORD 2 '()) '() 2) 2 ) '() 2)
(COND (ORD nil (COND (ORD nil '()) '() nil) nil ) '() nil)
(COND (ORD t (COND (ORD t '()) '() t) t ) '() t)
(COND (ORD (cons t t) (COND (ORD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (ORD 2 (COND (ORD 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (ORD nil (COND (ORD nil '(())) '(()) nil) nil ) '(()) nil)
(COND (ORD t (COND (ORD t '(())) '(()) t) t ) '(()) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (ORD 2 (COND (ORD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (ORD nil (COND (ORD nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (ORD t (COND (ORD t '((()))) '((())) t) t ) '((())) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (ORD 2 (COND (ORD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (ORD nil (COND (ORD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (ORD t (COND (ORD t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 ,A) ,A 1) 1 ) ,A 1)
(COND (ORD 2 (COND (ORD 2 ,A) ,A 2) 2 ) ,A 2)
(COND (ORD nil (COND (ORD nil ,A) ,A nil) nil ) ,A nil)
(COND (ORD t (COND (ORD t ,A) ,A t) t ) ,A t)
(COND (ORD (cons t t) (COND (ORD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 ,1) ,1 1) 1 ) ,1 1)
(COND (ORD 2 (COND (ORD 2 ,1) ,1 2) 2 ) ,1 2)
(COND (ORD nil (COND (ORD nil ,1) ,1 nil) nil ) ,1 nil)
(COND (ORD t (COND (ORD t ,1) ,1 t) t ) ,1 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 ,()) ,() 1) 1 ) ,() 1)
(COND (ORD 2 (COND (ORD 2 ,()) ,() 2) 2 ) ,() 2)
(COND (ORD nil (COND (ORD nil ,()) ,() nil) nil ) ,() nil)
(COND (ORD t (COND (ORD t ,()) ,() t) t ) ,() t)
(COND (ORD (cons t t) (COND (ORD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (ORD 2 (COND (ORD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (ORD nil (COND (ORD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (ORD t (COND (ORD t ,(())) ,(()) t) t ) ,(()) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'A) `'A 1) 1 ) `'A 1)
(COND (ORD 2 (COND (ORD 2 `'A) `'A 2) 2 ) `'A 2)
(COND (ORD nil (COND (ORD nil `'A) `'A nil) nil ) `'A nil)
(COND (ORD t (COND (ORD t `'A) `'A t) t ) `'A t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'B) `'B 1) 1 ) `'B 1)
(COND (ORD 2 (COND (ORD 2 `'B) `'B 2) 2 ) `'B 2)
(COND (ORD nil (COND (ORD nil `'B) `'B nil) nil ) `'B nil)
(COND (ORD t (COND (ORD t `'B) `'B t) t ) `'B t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'C) `'C 1) 1 ) `'C 1)
(COND (ORD 2 (COND (ORD 2 `'C) `'C 2) 2 ) `'C 2)
(COND (ORD nil (COND (ORD nil `'C) `'C nil) nil ) `'C nil)
(COND (ORD t (COND (ORD t `'C) `'C t) t ) `'C t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'1) `'1 1) 1 ) `'1 1)
(COND (ORD 2 (COND (ORD 2 `'1) `'1 2) 2 ) `'1 2)
(COND (ORD nil (COND (ORD nil `'1) `'1 nil) nil ) `'1 nil)
(COND (ORD t (COND (ORD t `'1) `'1 t) t ) `'1 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'2) `'2 1) 1 ) `'2 1)
(COND (ORD 2 (COND (ORD 2 `'2) `'2 2) 2 ) `'2 2)
(COND (ORD nil (COND (ORD nil `'2) `'2 nil) nil ) `'2 nil)
(COND (ORD t (COND (ORD t `'2) `'2 t) t ) `'2 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'3) `'3 1) 1 ) `'3 1)
(COND (ORD 2 (COND (ORD 2 `'3) `'3 2) 2 ) `'3 2)
(COND (ORD nil (COND (ORD nil `'3) `'3 nil) nil ) `'3 nil)
(COND (ORD t (COND (ORD t `'3) `'3 t) t ) `'3 t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'()) `'() 1) 1 ) `'() 1)
(COND (ORD 2 (COND (ORD 2 `'()) `'() 2) 2 ) `'() 2)
(COND (ORD nil (COND (ORD nil `'()) `'() nil) nil ) `'() nil)
(COND (ORD t (COND (ORD t `'()) `'() t) t ) `'() t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (ORD 2 (COND (ORD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (ORD nil (COND (ORD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (ORD t (COND (ORD t `'(())) `'(()) t) t ) `'(()) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (ORD 2 (COND (ORD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (ORD nil (COND (ORD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (ORD t (COND (ORD t `'((()))) `'((())) t) t ) `'((())) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (ORD 1 (COND (ORD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (ORD 2 (COND (ORD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (ORD nil (COND (ORD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (ORD t (COND (ORD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (ORD (cons t t) (COND (ORD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (ORD (cons nil t) (COND (ORD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (ORD (cons nil nil) (COND (ORD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (ORD (cons 0 0) (COND (ORD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (ORD (cons 1 1) (COND (ORD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (ORD (list 1 2 3) (COND (ORD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (ORD (list (cons 1 1 ) ) (COND (ORD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 T) T 1) 1 ) T 1)
(COND (PAIR 2 (COND (PAIR 2 T) T 2) 2 ) T 2)
(COND (PAIR nil (COND (PAIR nil T) T nil) nil ) T nil)
(COND (PAIR t (COND (PAIR t T) T t) t ) T t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 NIL) NIL 1) 1 ) NIL 1)
(COND (PAIR 2 (COND (PAIR 2 NIL) NIL 2) 2 ) NIL 2)
(COND (PAIR nil (COND (PAIR nil NIL) NIL nil) nil ) NIL nil)
(COND (PAIR t (COND (PAIR t NIL) NIL t) t ) NIL t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 A) A 1) 1 ) A 1)
(COND (PAIR 2 (COND (PAIR 2 A) A 2) 2 ) A 2)
(COND (PAIR nil (COND (PAIR nil A) A nil) nil ) A nil)
(COND (PAIR t (COND (PAIR t A) A t) t ) A t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 B) B 1) 1 ) B 1)
(COND (PAIR 2 (COND (PAIR 2 B) B 2) 2 ) B 2)
(COND (PAIR nil (COND (PAIR nil B) B nil) nil ) B nil)
(COND (PAIR t (COND (PAIR t B) B t) t ) B t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 C) C 1) 1 ) C 1)
(COND (PAIR 2 (COND (PAIR 2 C) C 2) 2 ) C 2)
(COND (PAIR nil (COND (PAIR nil C) C nil) nil ) C nil)
(COND (PAIR t (COND (PAIR t C) C t) t ) C t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 1) 1 1) 1 ) 1 1)
(COND (PAIR 2 (COND (PAIR 2 1) 1 2) 2 ) 1 2)
(COND (PAIR nil (COND (PAIR nil 1) 1 nil) nil ) 1 nil)
(COND (PAIR t (COND (PAIR t 1) 1 t) t ) 1 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 2) 2 1) 1 ) 2 1)
(COND (PAIR 2 (COND (PAIR 2 2) 2 2) 2 ) 2 2)
(COND (PAIR nil (COND (PAIR nil 2) 2 nil) nil ) 2 nil)
(COND (PAIR t (COND (PAIR t 2) 2 t) t ) 2 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 3) 3 1) 1 ) 3 1)
(COND (PAIR 2 (COND (PAIR 2 3) 3 2) 2 ) 3 2)
(COND (PAIR nil (COND (PAIR nil 3) 3 nil) nil ) 3 nil)
(COND (PAIR t (COND (PAIR t 3) 3 t) t ) 3 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 ()) () 1) 1 ) () 1)
(COND (PAIR 2 (COND (PAIR 2 ()) () 2) 2 ) () 2)
(COND (PAIR nil (COND (PAIR nil ()) () nil) nil ) () nil)
(COND (PAIR t (COND (PAIR t ()) () t) t ) () t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 (())) (()) 1) 1 ) (()) 1)
(COND (PAIR 2 (COND (PAIR 2 (())) (()) 2) 2 ) (()) 2)
(COND (PAIR nil (COND (PAIR nil (())) (()) nil) nil ) (()) nil)
(COND (PAIR t (COND (PAIR t (())) (()) t) t ) (()) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (PAIR 2 (COND (PAIR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (PAIR nil (COND (PAIR nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (PAIR t (COND (PAIR t ((()))) ((())) t) t ) ((())) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (PAIR 2 (COND (PAIR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (PAIR nil (COND (PAIR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (PAIR t (COND (PAIR t (((())))) (((()))) t) t ) (((()))) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 'A) 'A 1) 1 ) 'A 1)
(COND (PAIR 2 (COND (PAIR 2 'A) 'A 2) 2 ) 'A 2)
(COND (PAIR nil (COND (PAIR nil 'A) 'A nil) nil ) 'A nil)
(COND (PAIR t (COND (PAIR t 'A) 'A t) t ) 'A t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 'B) 'B 1) 1 ) 'B 1)
(COND (PAIR 2 (COND (PAIR 2 'B) 'B 2) 2 ) 'B 2)
(COND (PAIR nil (COND (PAIR nil 'B) 'B nil) nil ) 'B nil)
(COND (PAIR t (COND (PAIR t 'B) 'B t) t ) 'B t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 'C) 'C 1) 1 ) 'C 1)
(COND (PAIR 2 (COND (PAIR 2 'C) 'C 2) 2 ) 'C 2)
(COND (PAIR nil (COND (PAIR nil 'C) 'C nil) nil ) 'C nil)
(COND (PAIR t (COND (PAIR t 'C) 'C t) t ) 'C t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 '1) '1 1) 1 ) '1 1)
(COND (PAIR 2 (COND (PAIR 2 '1) '1 2) 2 ) '1 2)
(COND (PAIR nil (COND (PAIR nil '1) '1 nil) nil ) '1 nil)
(COND (PAIR t (COND (PAIR t '1) '1 t) t ) '1 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 '2) '2 1) 1 ) '2 1)
(COND (PAIR 2 (COND (PAIR 2 '2) '2 2) 2 ) '2 2)
(COND (PAIR nil (COND (PAIR nil '2) '2 nil) nil ) '2 nil)
(COND (PAIR t (COND (PAIR t '2) '2 t) t ) '2 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 '3) '3 1) 1 ) '3 1)
(COND (PAIR 2 (COND (PAIR 2 '3) '3 2) 2 ) '3 2)
(COND (PAIR nil (COND (PAIR nil '3) '3 nil) nil ) '3 nil)
(COND (PAIR t (COND (PAIR t '3) '3 t) t ) '3 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 '()) '() 1) 1 ) '() 1)
(COND (PAIR 2 (COND (PAIR 2 '()) '() 2) 2 ) '() 2)
(COND (PAIR nil (COND (PAIR nil '()) '() nil) nil ) '() nil)
(COND (PAIR t (COND (PAIR t '()) '() t) t ) '() t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (PAIR 2 (COND (PAIR 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (PAIR nil (COND (PAIR nil '(())) '(()) nil) nil ) '(()) nil)
(COND (PAIR t (COND (PAIR t '(())) '(()) t) t ) '(()) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (PAIR 2 (COND (PAIR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (PAIR nil (COND (PAIR nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (PAIR t (COND (PAIR t '((()))) '((())) t) t ) '((())) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (PAIR 2 (COND (PAIR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (PAIR nil (COND (PAIR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (PAIR t (COND (PAIR t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 ,A) ,A 1) 1 ) ,A 1)
(COND (PAIR 2 (COND (PAIR 2 ,A) ,A 2) 2 ) ,A 2)
(COND (PAIR nil (COND (PAIR nil ,A) ,A nil) nil ) ,A nil)
(COND (PAIR t (COND (PAIR t ,A) ,A t) t ) ,A t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 ,1) ,1 1) 1 ) ,1 1)
(COND (PAIR 2 (COND (PAIR 2 ,1) ,1 2) 2 ) ,1 2)
(COND (PAIR nil (COND (PAIR nil ,1) ,1 nil) nil ) ,1 nil)
(COND (PAIR t (COND (PAIR t ,1) ,1 t) t ) ,1 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 ,()) ,() 1) 1 ) ,() 1)
(COND (PAIR 2 (COND (PAIR 2 ,()) ,() 2) 2 ) ,() 2)
(COND (PAIR nil (COND (PAIR nil ,()) ,() nil) nil ) ,() nil)
(COND (PAIR t (COND (PAIR t ,()) ,() t) t ) ,() t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (PAIR 2 (COND (PAIR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (PAIR nil (COND (PAIR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (PAIR t (COND (PAIR t ,(())) ,(()) t) t ) ,(()) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'A) `'A 1) 1 ) `'A 1)
(COND (PAIR 2 (COND (PAIR 2 `'A) `'A 2) 2 ) `'A 2)
(COND (PAIR nil (COND (PAIR nil `'A) `'A nil) nil ) `'A nil)
(COND (PAIR t (COND (PAIR t `'A) `'A t) t ) `'A t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'B) `'B 1) 1 ) `'B 1)
(COND (PAIR 2 (COND (PAIR 2 `'B) `'B 2) 2 ) `'B 2)
(COND (PAIR nil (COND (PAIR nil `'B) `'B nil) nil ) `'B nil)
(COND (PAIR t (COND (PAIR t `'B) `'B t) t ) `'B t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'C) `'C 1) 1 ) `'C 1)
(COND (PAIR 2 (COND (PAIR 2 `'C) `'C 2) 2 ) `'C 2)
(COND (PAIR nil (COND (PAIR nil `'C) `'C nil) nil ) `'C nil)
(COND (PAIR t (COND (PAIR t `'C) `'C t) t ) `'C t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'1) `'1 1) 1 ) `'1 1)
(COND (PAIR 2 (COND (PAIR 2 `'1) `'1 2) 2 ) `'1 2)
(COND (PAIR nil (COND (PAIR nil `'1) `'1 nil) nil ) `'1 nil)
(COND (PAIR t (COND (PAIR t `'1) `'1 t) t ) `'1 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'2) `'2 1) 1 ) `'2 1)
(COND (PAIR 2 (COND (PAIR 2 `'2) `'2 2) 2 ) `'2 2)
(COND (PAIR nil (COND (PAIR nil `'2) `'2 nil) nil ) `'2 nil)
(COND (PAIR t (COND (PAIR t `'2) `'2 t) t ) `'2 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'3) `'3 1) 1 ) `'3 1)
(COND (PAIR 2 (COND (PAIR 2 `'3) `'3 2) 2 ) `'3 2)
(COND (PAIR nil (COND (PAIR nil `'3) `'3 nil) nil ) `'3 nil)
(COND (PAIR t (COND (PAIR t `'3) `'3 t) t ) `'3 t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'()) `'() 1) 1 ) `'() 1)
(COND (PAIR 2 (COND (PAIR 2 `'()) `'() 2) 2 ) `'() 2)
(COND (PAIR nil (COND (PAIR nil `'()) `'() nil) nil ) `'() nil)
(COND (PAIR t (COND (PAIR t `'()) `'() t) t ) `'() t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (PAIR 2 (COND (PAIR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (PAIR nil (COND (PAIR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (PAIR t (COND (PAIR t `'(())) `'(()) t) t ) `'(()) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (PAIR 2 (COND (PAIR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (PAIR nil (COND (PAIR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (PAIR t (COND (PAIR t `'((()))) `'((())) t) t ) `'((())) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (PAIR 1 (COND (PAIR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (PAIR 2 (COND (PAIR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (PAIR nil (COND (PAIR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (PAIR t (COND (PAIR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (PAIR (cons t t) (COND (PAIR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (PAIR (cons nil t) (COND (PAIR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (PAIR (cons nil nil) (COND (PAIR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (PAIR (cons 0 0) (COND (PAIR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (PAIR (cons 1 1) (COND (PAIR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (PAIR (list 1 2 3) (COND (PAIR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (PAIR (list (cons 1 1 ) ) (COND (PAIR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 T) T 1) 1 ) T 1)
(COND (PAIR* 2 (COND (PAIR* 2 T) T 2) 2 ) T 2)
(COND (PAIR* nil (COND (PAIR* nil T) T nil) nil ) T nil)
(COND (PAIR* t (COND (PAIR* t T) T t) t ) T t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 NIL) NIL 1) 1 ) NIL 1)
(COND (PAIR* 2 (COND (PAIR* 2 NIL) NIL 2) 2 ) NIL 2)
(COND (PAIR* nil (COND (PAIR* nil NIL) NIL nil) nil ) NIL nil)
(COND (PAIR* t (COND (PAIR* t NIL) NIL t) t ) NIL t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 A) A 1) 1 ) A 1)
(COND (PAIR* 2 (COND (PAIR* 2 A) A 2) 2 ) A 2)
(COND (PAIR* nil (COND (PAIR* nil A) A nil) nil ) A nil)
(COND (PAIR* t (COND (PAIR* t A) A t) t ) A t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 B) B 1) 1 ) B 1)
(COND (PAIR* 2 (COND (PAIR* 2 B) B 2) 2 ) B 2)
(COND (PAIR* nil (COND (PAIR* nil B) B nil) nil ) B nil)
(COND (PAIR* t (COND (PAIR* t B) B t) t ) B t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 C) C 1) 1 ) C 1)
(COND (PAIR* 2 (COND (PAIR* 2 C) C 2) 2 ) C 2)
(COND (PAIR* nil (COND (PAIR* nil C) C nil) nil ) C nil)
(COND (PAIR* t (COND (PAIR* t C) C t) t ) C t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 1) 1 1) 1 ) 1 1)
(COND (PAIR* 2 (COND (PAIR* 2 1) 1 2) 2 ) 1 2)
(COND (PAIR* nil (COND (PAIR* nil 1) 1 nil) nil ) 1 nil)
(COND (PAIR* t (COND (PAIR* t 1) 1 t) t ) 1 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 2) 2 1) 1 ) 2 1)
(COND (PAIR* 2 (COND (PAIR* 2 2) 2 2) 2 ) 2 2)
(COND (PAIR* nil (COND (PAIR* nil 2) 2 nil) nil ) 2 nil)
(COND (PAIR* t (COND (PAIR* t 2) 2 t) t ) 2 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 3) 3 1) 1 ) 3 1)
(COND (PAIR* 2 (COND (PAIR* 2 3) 3 2) 2 ) 3 2)
(COND (PAIR* nil (COND (PAIR* nil 3) 3 nil) nil ) 3 nil)
(COND (PAIR* t (COND (PAIR* t 3) 3 t) t ) 3 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 ()) () 1) 1 ) () 1)
(COND (PAIR* 2 (COND (PAIR* 2 ()) () 2) 2 ) () 2)
(COND (PAIR* nil (COND (PAIR* nil ()) () nil) nil ) () nil)
(COND (PAIR* t (COND (PAIR* t ()) () t) t ) () t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 (())) (()) 1) 1 ) (()) 1)
(COND (PAIR* 2 (COND (PAIR* 2 (())) (()) 2) 2 ) (()) 2)
(COND (PAIR* nil (COND (PAIR* nil (())) (()) nil) nil ) (()) nil)
(COND (PAIR* t (COND (PAIR* t (())) (()) t) t ) (()) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (PAIR* 2 (COND (PAIR* 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (PAIR* nil (COND (PAIR* nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (PAIR* t (COND (PAIR* t ((()))) ((())) t) t ) ((())) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (PAIR* 2 (COND (PAIR* 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (PAIR* nil (COND (PAIR* nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (PAIR* t (COND (PAIR* t (((())))) (((()))) t) t ) (((()))) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 'A) 'A 1) 1 ) 'A 1)
(COND (PAIR* 2 (COND (PAIR* 2 'A) 'A 2) 2 ) 'A 2)
(COND (PAIR* nil (COND (PAIR* nil 'A) 'A nil) nil ) 'A nil)
(COND (PAIR* t (COND (PAIR* t 'A) 'A t) t ) 'A t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 'B) 'B 1) 1 ) 'B 1)
(COND (PAIR* 2 (COND (PAIR* 2 'B) 'B 2) 2 ) 'B 2)
(COND (PAIR* nil (COND (PAIR* nil 'B) 'B nil) nil ) 'B nil)
(COND (PAIR* t (COND (PAIR* t 'B) 'B t) t ) 'B t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 'C) 'C 1) 1 ) 'C 1)
(COND (PAIR* 2 (COND (PAIR* 2 'C) 'C 2) 2 ) 'C 2)
(COND (PAIR* nil (COND (PAIR* nil 'C) 'C nil) nil ) 'C nil)
(COND (PAIR* t (COND (PAIR* t 'C) 'C t) t ) 'C t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 '1) '1 1) 1 ) '1 1)
(COND (PAIR* 2 (COND (PAIR* 2 '1) '1 2) 2 ) '1 2)
(COND (PAIR* nil (COND (PAIR* nil '1) '1 nil) nil ) '1 nil)
(COND (PAIR* t (COND (PAIR* t '1) '1 t) t ) '1 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 '2) '2 1) 1 ) '2 1)
(COND (PAIR* 2 (COND (PAIR* 2 '2) '2 2) 2 ) '2 2)
(COND (PAIR* nil (COND (PAIR* nil '2) '2 nil) nil ) '2 nil)
(COND (PAIR* t (COND (PAIR* t '2) '2 t) t ) '2 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 '3) '3 1) 1 ) '3 1)
(COND (PAIR* 2 (COND (PAIR* 2 '3) '3 2) 2 ) '3 2)
(COND (PAIR* nil (COND (PAIR* nil '3) '3 nil) nil ) '3 nil)
(COND (PAIR* t (COND (PAIR* t '3) '3 t) t ) '3 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 '()) '() 1) 1 ) '() 1)
(COND (PAIR* 2 (COND (PAIR* 2 '()) '() 2) 2 ) '() 2)
(COND (PAIR* nil (COND (PAIR* nil '()) '() nil) nil ) '() nil)
(COND (PAIR* t (COND (PAIR* t '()) '() t) t ) '() t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (PAIR* 2 (COND (PAIR* 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (PAIR* nil (COND (PAIR* nil '(())) '(()) nil) nil ) '(()) nil)
(COND (PAIR* t (COND (PAIR* t '(())) '(()) t) t ) '(()) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (PAIR* 2 (COND (PAIR* 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (PAIR* nil (COND (PAIR* nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (PAIR* t (COND (PAIR* t '((()))) '((())) t) t ) '((())) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (PAIR* 2 (COND (PAIR* 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (PAIR* nil (COND (PAIR* nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (PAIR* t (COND (PAIR* t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 ,A) ,A 1) 1 ) ,A 1)
(COND (PAIR* 2 (COND (PAIR* 2 ,A) ,A 2) 2 ) ,A 2)
(COND (PAIR* nil (COND (PAIR* nil ,A) ,A nil) nil ) ,A nil)
(COND (PAIR* t (COND (PAIR* t ,A) ,A t) t ) ,A t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 ,1) ,1 1) 1 ) ,1 1)
(COND (PAIR* 2 (COND (PAIR* 2 ,1) ,1 2) 2 ) ,1 2)
(COND (PAIR* nil (COND (PAIR* nil ,1) ,1 nil) nil ) ,1 nil)
(COND (PAIR* t (COND (PAIR* t ,1) ,1 t) t ) ,1 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 ,()) ,() 1) 1 ) ,() 1)
(COND (PAIR* 2 (COND (PAIR* 2 ,()) ,() 2) 2 ) ,() 2)
(COND (PAIR* nil (COND (PAIR* nil ,()) ,() nil) nil ) ,() nil)
(COND (PAIR* t (COND (PAIR* t ,()) ,() t) t ) ,() t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (PAIR* 2 (COND (PAIR* 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (PAIR* nil (COND (PAIR* nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (PAIR* t (COND (PAIR* t ,(())) ,(()) t) t ) ,(()) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'A) `'A 1) 1 ) `'A 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'A) `'A 2) 2 ) `'A 2)
(COND (PAIR* nil (COND (PAIR* nil `'A) `'A nil) nil ) `'A nil)
(COND (PAIR* t (COND (PAIR* t `'A) `'A t) t ) `'A t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'B) `'B 1) 1 ) `'B 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'B) `'B 2) 2 ) `'B 2)
(COND (PAIR* nil (COND (PAIR* nil `'B) `'B nil) nil ) `'B nil)
(COND (PAIR* t (COND (PAIR* t `'B) `'B t) t ) `'B t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'C) `'C 1) 1 ) `'C 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'C) `'C 2) 2 ) `'C 2)
(COND (PAIR* nil (COND (PAIR* nil `'C) `'C nil) nil ) `'C nil)
(COND (PAIR* t (COND (PAIR* t `'C) `'C t) t ) `'C t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'1) `'1 1) 1 ) `'1 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'1) `'1 2) 2 ) `'1 2)
(COND (PAIR* nil (COND (PAIR* nil `'1) `'1 nil) nil ) `'1 nil)
(COND (PAIR* t (COND (PAIR* t `'1) `'1 t) t ) `'1 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'2) `'2 1) 1 ) `'2 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'2) `'2 2) 2 ) `'2 2)
(COND (PAIR* nil (COND (PAIR* nil `'2) `'2 nil) nil ) `'2 nil)
(COND (PAIR* t (COND (PAIR* t `'2) `'2 t) t ) `'2 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'3) `'3 1) 1 ) `'3 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'3) `'3 2) 2 ) `'3 2)
(COND (PAIR* nil (COND (PAIR* nil `'3) `'3 nil) nil ) `'3 nil)
(COND (PAIR* t (COND (PAIR* t `'3) `'3 t) t ) `'3 t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'()) `'() 1) 1 ) `'() 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'()) `'() 2) 2 ) `'() 2)
(COND (PAIR* nil (COND (PAIR* nil `'()) `'() nil) nil ) `'() nil)
(COND (PAIR* t (COND (PAIR* t `'()) `'() t) t ) `'() t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (PAIR* nil (COND (PAIR* nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (PAIR* t (COND (PAIR* t `'(())) `'(()) t) t ) `'(()) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (PAIR* nil (COND (PAIR* nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (PAIR* t (COND (PAIR* t `'((()))) `'((())) t) t ) `'((())) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (PAIR* 1 (COND (PAIR* 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (PAIR* 2 (COND (PAIR* 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (PAIR* nil (COND (PAIR* nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (PAIR* t (COND (PAIR* t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (PAIR* (cons t t) (COND (PAIR* (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (PAIR* (cons nil t) (COND (PAIR* (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (PAIR* (cons nil nil) (COND (PAIR* (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (PAIR* (cons 0 0) (COND (PAIR* (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (PAIR* (cons 1 1) (COND (PAIR* (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (PAIR* (list 1 2 3) (COND (PAIR* (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (PAIR* (list (cons 1 1 ) ) (COND (PAIR* (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 T) T 1) 1 ) T 1)
(COND (PROD 2 (COND (PROD 2 T) T 2) 2 ) T 2)
(COND (PROD nil (COND (PROD nil T) T nil) nil ) T nil)
(COND (PROD t (COND (PROD t T) T t) t ) T t)
(COND (PROD (cons t t) (COND (PROD (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 NIL) NIL 1) 1 ) NIL 1)
(COND (PROD 2 (COND (PROD 2 NIL) NIL 2) 2 ) NIL 2)
(COND (PROD nil (COND (PROD nil NIL) NIL nil) nil ) NIL nil)
(COND (PROD t (COND (PROD t NIL) NIL t) t ) NIL t)
(COND (PROD (cons t t) (COND (PROD (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 A) A 1) 1 ) A 1)
(COND (PROD 2 (COND (PROD 2 A) A 2) 2 ) A 2)
(COND (PROD nil (COND (PROD nil A) A nil) nil ) A nil)
(COND (PROD t (COND (PROD t A) A t) t ) A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 B) B 1) 1 ) B 1)
(COND (PROD 2 (COND (PROD 2 B) B 2) 2 ) B 2)
(COND (PROD nil (COND (PROD nil B) B nil) nil ) B nil)
(COND (PROD t (COND (PROD t B) B t) t ) B t)
(COND (PROD (cons t t) (COND (PROD (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 C) C 1) 1 ) C 1)
(COND (PROD 2 (COND (PROD 2 C) C 2) 2 ) C 2)
(COND (PROD nil (COND (PROD nil C) C nil) nil ) C nil)
(COND (PROD t (COND (PROD t C) C t) t ) C t)
(COND (PROD (cons t t) (COND (PROD (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 1) 1 1) 1 ) 1 1)
(COND (PROD 2 (COND (PROD 2 1) 1 2) 2 ) 1 2)
(COND (PROD nil (COND (PROD nil 1) 1 nil) nil ) 1 nil)
(COND (PROD t (COND (PROD t 1) 1 t) t ) 1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 2) 2 1) 1 ) 2 1)
(COND (PROD 2 (COND (PROD 2 2) 2 2) 2 ) 2 2)
(COND (PROD nil (COND (PROD nil 2) 2 nil) nil ) 2 nil)
(COND (PROD t (COND (PROD t 2) 2 t) t ) 2 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 3) 3 1) 1 ) 3 1)
(COND (PROD 2 (COND (PROD 2 3) 3 2) 2 ) 3 2)
(COND (PROD nil (COND (PROD nil 3) 3 nil) nil ) 3 nil)
(COND (PROD t (COND (PROD t 3) 3 t) t ) 3 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ()) () 1) 1 ) () 1)
(COND (PROD 2 (COND (PROD 2 ()) () 2) 2 ) () 2)
(COND (PROD nil (COND (PROD nil ()) () nil) nil ) () nil)
(COND (PROD t (COND (PROD t ()) () t) t ) () t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 (())) (()) 1) 1 ) (()) 1)
(COND (PROD 2 (COND (PROD 2 (())) (()) 2) 2 ) (()) 2)
(COND (PROD nil (COND (PROD nil (())) (()) nil) nil ) (()) nil)
(COND (PROD t (COND (PROD t (())) (()) t) t ) (()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (PROD 2 (COND (PROD 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (PROD nil (COND (PROD nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (PROD t (COND (PROD t ((()))) ((())) t) t ) ((())) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (PROD 2 (COND (PROD 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (PROD nil (COND (PROD nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (PROD t (COND (PROD t (((())))) (((()))) t) t ) (((()))) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 'A) 'A 1) 1 ) 'A 1)
(COND (PROD 2 (COND (PROD 2 'A) 'A 2) 2 ) 'A 2)
(COND (PROD nil (COND (PROD nil 'A) 'A nil) nil ) 'A nil)
(COND (PROD t (COND (PROD t 'A) 'A t) t ) 'A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 'B) 'B 1) 1 ) 'B 1)
(COND (PROD 2 (COND (PROD 2 'B) 'B 2) 2 ) 'B 2)
(COND (PROD nil (COND (PROD nil 'B) 'B nil) nil ) 'B nil)
(COND (PROD t (COND (PROD t 'B) 'B t) t ) 'B t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 'C) 'C 1) 1 ) 'C 1)
(COND (PROD 2 (COND (PROD 2 'C) 'C 2) 2 ) 'C 2)
(COND (PROD nil (COND (PROD nil 'C) 'C nil) nil ) 'C nil)
(COND (PROD t (COND (PROD t 'C) 'C t) t ) 'C t)
(COND (PROD (cons t t) (COND (PROD (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '1) '1 1) 1 ) '1 1)
(COND (PROD 2 (COND (PROD 2 '1) '1 2) 2 ) '1 2)
(COND (PROD nil (COND (PROD nil '1) '1 nil) nil ) '1 nil)
(COND (PROD t (COND (PROD t '1) '1 t) t ) '1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '2) '2 1) 1 ) '2 1)
(COND (PROD 2 (COND (PROD 2 '2) '2 2) 2 ) '2 2)
(COND (PROD nil (COND (PROD nil '2) '2 nil) nil ) '2 nil)
(COND (PROD t (COND (PROD t '2) '2 t) t ) '2 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '3) '3 1) 1 ) '3 1)
(COND (PROD 2 (COND (PROD 2 '3) '3 2) 2 ) '3 2)
(COND (PROD nil (COND (PROD nil '3) '3 nil) nil ) '3 nil)
(COND (PROD t (COND (PROD t '3) '3 t) t ) '3 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '()) '() 1) 1 ) '() 1)
(COND (PROD 2 (COND (PROD 2 '()) '() 2) 2 ) '() 2)
(COND (PROD nil (COND (PROD nil '()) '() nil) nil ) '() nil)
(COND (PROD t (COND (PROD t '()) '() t) t ) '() t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (PROD 2 (COND (PROD 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (PROD nil (COND (PROD nil '(())) '(()) nil) nil ) '(()) nil)
(COND (PROD t (COND (PROD t '(())) '(()) t) t ) '(()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (PROD 2 (COND (PROD 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (PROD nil (COND (PROD nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (PROD t (COND (PROD t '((()))) '((())) t) t ) '((())) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (PROD 2 (COND (PROD 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (PROD nil (COND (PROD nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (PROD t (COND (PROD t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,A) ,A 1) 1 ) ,A 1)
(COND (PROD 2 (COND (PROD 2 ,A) ,A 2) 2 ) ,A 2)
(COND (PROD nil (COND (PROD nil ,A) ,A nil) nil ) ,A nil)
(COND (PROD t (COND (PROD t ,A) ,A t) t ) ,A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,1) ,1 1) 1 ) ,1 1)
(COND (PROD 2 (COND (PROD 2 ,1) ,1 2) 2 ) ,1 2)
(COND (PROD nil (COND (PROD nil ,1) ,1 nil) nil ) ,1 nil)
(COND (PROD t (COND (PROD t ,1) ,1 t) t ) ,1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,()) ,() 1) 1 ) ,() 1)
(COND (PROD 2 (COND (PROD 2 ,()) ,() 2) 2 ) ,() 2)
(COND (PROD nil (COND (PROD nil ,()) ,() nil) nil ) ,() nil)
(COND (PROD t (COND (PROD t ,()) ,() t) t ) ,() t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (PROD 2 (COND (PROD 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (PROD nil (COND (PROD nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (PROD t (COND (PROD t ,(())) ,(()) t) t ) ,(()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'A) `'A 1) 1 ) `'A 1)
(COND (PROD 2 (COND (PROD 2 `'A) `'A 2) 2 ) `'A 2)
(COND (PROD nil (COND (PROD nil `'A) `'A nil) nil ) `'A nil)
(COND (PROD t (COND (PROD t `'A) `'A t) t ) `'A t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'B) `'B 1) 1 ) `'B 1)
(COND (PROD 2 (COND (PROD 2 `'B) `'B 2) 2 ) `'B 2)
(COND (PROD nil (COND (PROD nil `'B) `'B nil) nil ) `'B nil)
(COND (PROD t (COND (PROD t `'B) `'B t) t ) `'B t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'C) `'C 1) 1 ) `'C 1)
(COND (PROD 2 (COND (PROD 2 `'C) `'C 2) 2 ) `'C 2)
(COND (PROD nil (COND (PROD nil `'C) `'C nil) nil ) `'C nil)
(COND (PROD t (COND (PROD t `'C) `'C t) t ) `'C t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'1) `'1 1) 1 ) `'1 1)
(COND (PROD 2 (COND (PROD 2 `'1) `'1 2) 2 ) `'1 2)
(COND (PROD nil (COND (PROD nil `'1) `'1 nil) nil ) `'1 nil)
(COND (PROD t (COND (PROD t `'1) `'1 t) t ) `'1 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'2) `'2 1) 1 ) `'2 1)
(COND (PROD 2 (COND (PROD 2 `'2) `'2 2) 2 ) `'2 2)
(COND (PROD nil (COND (PROD nil `'2) `'2 nil) nil ) `'2 nil)
(COND (PROD t (COND (PROD t `'2) `'2 t) t ) `'2 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'3) `'3 1) 1 ) `'3 1)
(COND (PROD 2 (COND (PROD 2 `'3) `'3 2) 2 ) `'3 2)
(COND (PROD nil (COND (PROD nil `'3) `'3 nil) nil ) `'3 nil)
(COND (PROD t (COND (PROD t `'3) `'3 t) t ) `'3 t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'()) `'() 1) 1 ) `'() 1)
(COND (PROD 2 (COND (PROD 2 `'()) `'() 2) 2 ) `'() 2)
(COND (PROD nil (COND (PROD nil `'()) `'() nil) nil ) `'() nil)
(COND (PROD t (COND (PROD t `'()) `'() t) t ) `'() t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (PROD 2 (COND (PROD 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (PROD nil (COND (PROD nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (PROD t (COND (PROD t `'(())) `'(()) t) t ) `'(()) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (PROD 2 (COND (PROD 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (PROD nil (COND (PROD nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (PROD t (COND (PROD t `'((()))) `'((())) t) t ) `'((())) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (PROD 1 (COND (PROD 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (PROD 2 (COND (PROD 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (PROD nil (COND (PROD nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (PROD t (COND (PROD t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (PROD (cons t t) (COND (PROD (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (PROD (cons nil t) (COND (PROD (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (PROD (cons nil nil) (COND (PROD (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (PROD (cons 0 0) (COND (PROD (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (PROD (cons 1 1) (COND (PROD (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (PROD (list 1 2 3) (COND (PROD (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (PROD (list (cons 1 1 ) ) (COND (PROD (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 T) T 1) 1 ) T 1)
(COND (PROG1 2 (COND (PROG1 2 T) T 2) 2 ) T 2)
(COND (PROG1 nil (COND (PROG1 nil T) T nil) nil ) T nil)
(COND (PROG1 t (COND (PROG1 t T) T t) t ) T t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 NIL) NIL 1) 1 ) NIL 1)
(COND (PROG1 2 (COND (PROG1 2 NIL) NIL 2) 2 ) NIL 2)
(COND (PROG1 nil (COND (PROG1 nil NIL) NIL nil) nil ) NIL nil)
(COND (PROG1 t (COND (PROG1 t NIL) NIL t) t ) NIL t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 A) A 1) 1 ) A 1)
(COND (PROG1 2 (COND (PROG1 2 A) A 2) 2 ) A 2)
(COND (PROG1 nil (COND (PROG1 nil A) A nil) nil ) A nil)
(COND (PROG1 t (COND (PROG1 t A) A t) t ) A t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 B) B 1) 1 ) B 1)
(COND (PROG1 2 (COND (PROG1 2 B) B 2) 2 ) B 2)
(COND (PROG1 nil (COND (PROG1 nil B) B nil) nil ) B nil)
(COND (PROG1 t (COND (PROG1 t B) B t) t ) B t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 C) C 1) 1 ) C 1)
(COND (PROG1 2 (COND (PROG1 2 C) C 2) 2 ) C 2)
(COND (PROG1 nil (COND (PROG1 nil C) C nil) nil ) C nil)
(COND (PROG1 t (COND (PROG1 t C) C t) t ) C t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 1) 1 1) 1 ) 1 1)
(COND (PROG1 2 (COND (PROG1 2 1) 1 2) 2 ) 1 2)
(COND (PROG1 nil (COND (PROG1 nil 1) 1 nil) nil ) 1 nil)
(COND (PROG1 t (COND (PROG1 t 1) 1 t) t ) 1 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 2) 2 1) 1 ) 2 1)
(COND (PROG1 2 (COND (PROG1 2 2) 2 2) 2 ) 2 2)
(COND (PROG1 nil (COND (PROG1 nil 2) 2 nil) nil ) 2 nil)
(COND (PROG1 t (COND (PROG1 t 2) 2 t) t ) 2 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 3) 3 1) 1 ) 3 1)
(COND (PROG1 2 (COND (PROG1 2 3) 3 2) 2 ) 3 2)
(COND (PROG1 nil (COND (PROG1 nil 3) 3 nil) nil ) 3 nil)
(COND (PROG1 t (COND (PROG1 t 3) 3 t) t ) 3 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 ()) () 1) 1 ) () 1)
(COND (PROG1 2 (COND (PROG1 2 ()) () 2) 2 ) () 2)
(COND (PROG1 nil (COND (PROG1 nil ()) () nil) nil ) () nil)
(COND (PROG1 t (COND (PROG1 t ()) () t) t ) () t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 (())) (()) 1) 1 ) (()) 1)
(COND (PROG1 2 (COND (PROG1 2 (())) (()) 2) 2 ) (()) 2)
(COND (PROG1 nil (COND (PROG1 nil (())) (()) nil) nil ) (()) nil)
(COND (PROG1 t (COND (PROG1 t (())) (()) t) t ) (()) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (PROG1 2 (COND (PROG1 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (PROG1 nil (COND (PROG1 nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (PROG1 t (COND (PROG1 t ((()))) ((())) t) t ) ((())) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (PROG1 2 (COND (PROG1 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (PROG1 nil (COND (PROG1 nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (PROG1 t (COND (PROG1 t (((())))) (((()))) t) t ) (((()))) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 'A) 'A 1) 1 ) 'A 1)
(COND (PROG1 2 (COND (PROG1 2 'A) 'A 2) 2 ) 'A 2)
(COND (PROG1 nil (COND (PROG1 nil 'A) 'A nil) nil ) 'A nil)
(COND (PROG1 t (COND (PROG1 t 'A) 'A t) t ) 'A t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 'B) 'B 1) 1 ) 'B 1)
(COND (PROG1 2 (COND (PROG1 2 'B) 'B 2) 2 ) 'B 2)
(COND (PROG1 nil (COND (PROG1 nil 'B) 'B nil) nil ) 'B nil)
(COND (PROG1 t (COND (PROG1 t 'B) 'B t) t ) 'B t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 'C) 'C 1) 1 ) 'C 1)
(COND (PROG1 2 (COND (PROG1 2 'C) 'C 2) 2 ) 'C 2)
(COND (PROG1 nil (COND (PROG1 nil 'C) 'C nil) nil ) 'C nil)
(COND (PROG1 t (COND (PROG1 t 'C) 'C t) t ) 'C t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 '1) '1 1) 1 ) '1 1)
(COND (PROG1 2 (COND (PROG1 2 '1) '1 2) 2 ) '1 2)
(COND (PROG1 nil (COND (PROG1 nil '1) '1 nil) nil ) '1 nil)
(COND (PROG1 t (COND (PROG1 t '1) '1 t) t ) '1 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 '2) '2 1) 1 ) '2 1)
(COND (PROG1 2 (COND (PROG1 2 '2) '2 2) 2 ) '2 2)
(COND (PROG1 nil (COND (PROG1 nil '2) '2 nil) nil ) '2 nil)
(COND (PROG1 t (COND (PROG1 t '2) '2 t) t ) '2 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 '3) '3 1) 1 ) '3 1)
(COND (PROG1 2 (COND (PROG1 2 '3) '3 2) 2 ) '3 2)
(COND (PROG1 nil (COND (PROG1 nil '3) '3 nil) nil ) '3 nil)
(COND (PROG1 t (COND (PROG1 t '3) '3 t) t ) '3 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 '()) '() 1) 1 ) '() 1)
(COND (PROG1 2 (COND (PROG1 2 '()) '() 2) 2 ) '() 2)
(COND (PROG1 nil (COND (PROG1 nil '()) '() nil) nil ) '() nil)
(COND (PROG1 t (COND (PROG1 t '()) '() t) t ) '() t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (PROG1 2 (COND (PROG1 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (PROG1 nil (COND (PROG1 nil '(())) '(()) nil) nil ) '(()) nil)
(COND (PROG1 t (COND (PROG1 t '(())) '(()) t) t ) '(()) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (PROG1 2 (COND (PROG1 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (PROG1 nil (COND (PROG1 nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (PROG1 t (COND (PROG1 t '((()))) '((())) t) t ) '((())) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (PROG1 2 (COND (PROG1 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (PROG1 nil (COND (PROG1 nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (PROG1 t (COND (PROG1 t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 ,A) ,A 1) 1 ) ,A 1)
(COND (PROG1 2 (COND (PROG1 2 ,A) ,A 2) 2 ) ,A 2)
(COND (PROG1 nil (COND (PROG1 nil ,A) ,A nil) nil ) ,A nil)
(COND (PROG1 t (COND (PROG1 t ,A) ,A t) t ) ,A t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 ,1) ,1 1) 1 ) ,1 1)
(COND (PROG1 2 (COND (PROG1 2 ,1) ,1 2) 2 ) ,1 2)
(COND (PROG1 nil (COND (PROG1 nil ,1) ,1 nil) nil ) ,1 nil)
(COND (PROG1 t (COND (PROG1 t ,1) ,1 t) t ) ,1 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 ,()) ,() 1) 1 ) ,() 1)
(COND (PROG1 2 (COND (PROG1 2 ,()) ,() 2) 2 ) ,() 2)
(COND (PROG1 nil (COND (PROG1 nil ,()) ,() nil) nil ) ,() nil)
(COND (PROG1 t (COND (PROG1 t ,()) ,() t) t ) ,() t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (PROG1 2 (COND (PROG1 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (PROG1 nil (COND (PROG1 nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (PROG1 t (COND (PROG1 t ,(())) ,(()) t) t ) ,(()) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'A) `'A 1) 1 ) `'A 1)
(COND (PROG1 2 (COND (PROG1 2 `'A) `'A 2) 2 ) `'A 2)
(COND (PROG1 nil (COND (PROG1 nil `'A) `'A nil) nil ) `'A nil)
(COND (PROG1 t (COND (PROG1 t `'A) `'A t) t ) `'A t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'B) `'B 1) 1 ) `'B 1)
(COND (PROG1 2 (COND (PROG1 2 `'B) `'B 2) 2 ) `'B 2)
(COND (PROG1 nil (COND (PROG1 nil `'B) `'B nil) nil ) `'B nil)
(COND (PROG1 t (COND (PROG1 t `'B) `'B t) t ) `'B t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'C) `'C 1) 1 ) `'C 1)
(COND (PROG1 2 (COND (PROG1 2 `'C) `'C 2) 2 ) `'C 2)
(COND (PROG1 nil (COND (PROG1 nil `'C) `'C nil) nil ) `'C nil)
(COND (PROG1 t (COND (PROG1 t `'C) `'C t) t ) `'C t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'1) `'1 1) 1 ) `'1 1)
(COND (PROG1 2 (COND (PROG1 2 `'1) `'1 2) 2 ) `'1 2)
(COND (PROG1 nil (COND (PROG1 nil `'1) `'1 nil) nil ) `'1 nil)
(COND (PROG1 t (COND (PROG1 t `'1) `'1 t) t ) `'1 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'2) `'2 1) 1 ) `'2 1)
(COND (PROG1 2 (COND (PROG1 2 `'2) `'2 2) 2 ) `'2 2)
(COND (PROG1 nil (COND (PROG1 nil `'2) `'2 nil) nil ) `'2 nil)
(COND (PROG1 t (COND (PROG1 t `'2) `'2 t) t ) `'2 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'3) `'3 1) 1 ) `'3 1)
(COND (PROG1 2 (COND (PROG1 2 `'3) `'3 2) 2 ) `'3 2)
(COND (PROG1 nil (COND (PROG1 nil `'3) `'3 nil) nil ) `'3 nil)
(COND (PROG1 t (COND (PROG1 t `'3) `'3 t) t ) `'3 t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'()) `'() 1) 1 ) `'() 1)
(COND (PROG1 2 (COND (PROG1 2 `'()) `'() 2) 2 ) `'() 2)
(COND (PROG1 nil (COND (PROG1 nil `'()) `'() nil) nil ) `'() nil)
(COND (PROG1 t (COND (PROG1 t `'()) `'() t) t ) `'() t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (PROG1 2 (COND (PROG1 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (PROG1 nil (COND (PROG1 nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (PROG1 t (COND (PROG1 t `'(())) `'(()) t) t ) `'(()) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (PROG1 2 (COND (PROG1 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (PROG1 nil (COND (PROG1 nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (PROG1 t (COND (PROG1 t `'((()))) `'((())) t) t ) `'((())) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (PROG1 1 (COND (PROG1 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (PROG1 2 (COND (PROG1 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (PROG1 nil (COND (PROG1 nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (PROG1 t (COND (PROG1 t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (PROG1 (cons t t) (COND (PROG1 (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (PROG1 (cons nil t) (COND (PROG1 (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (PROG1 (cons nil nil) (COND (PROG1 (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (PROG1 (cons 0 0) (COND (PROG1 (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (PROG1 (cons 1 1) (COND (PROG1 (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (PROG1 (list 1 2 3) (COND (PROG1 (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (PROG1 (list (cons 1 1 ) ) (COND (PROG1 (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 T) T 1) 1 ) T 1)
(COND (PROG2 2 (COND (PROG2 2 T) T 2) 2 ) T 2)
(COND (PROG2 nil (COND (PROG2 nil T) T nil) nil ) T nil)
(COND (PROG2 t (COND (PROG2 t T) T t) t ) T t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 NIL) NIL 1) 1 ) NIL 1)
(COND (PROG2 2 (COND (PROG2 2 NIL) NIL 2) 2 ) NIL 2)
(COND (PROG2 nil (COND (PROG2 nil NIL) NIL nil) nil ) NIL nil)
(COND (PROG2 t (COND (PROG2 t NIL) NIL t) t ) NIL t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 A) A 1) 1 ) A 1)
(COND (PROG2 2 (COND (PROG2 2 A) A 2) 2 ) A 2)
(COND (PROG2 nil (COND (PROG2 nil A) A nil) nil ) A nil)
(COND (PROG2 t (COND (PROG2 t A) A t) t ) A t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 B) B 1) 1 ) B 1)
(COND (PROG2 2 (COND (PROG2 2 B) B 2) 2 ) B 2)
(COND (PROG2 nil (COND (PROG2 nil B) B nil) nil ) B nil)
(COND (PROG2 t (COND (PROG2 t B) B t) t ) B t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 C) C 1) 1 ) C 1)
(COND (PROG2 2 (COND (PROG2 2 C) C 2) 2 ) C 2)
(COND (PROG2 nil (COND (PROG2 nil C) C nil) nil ) C nil)
(COND (PROG2 t (COND (PROG2 t C) C t) t ) C t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 1) 1 1) 1 ) 1 1)
(COND (PROG2 2 (COND (PROG2 2 1) 1 2) 2 ) 1 2)
(COND (PROG2 nil (COND (PROG2 nil 1) 1 nil) nil ) 1 nil)
(COND (PROG2 t (COND (PROG2 t 1) 1 t) t ) 1 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 2) 2 1) 1 ) 2 1)
(COND (PROG2 2 (COND (PROG2 2 2) 2 2) 2 ) 2 2)
(COND (PROG2 nil (COND (PROG2 nil 2) 2 nil) nil ) 2 nil)
(COND (PROG2 t (COND (PROG2 t 2) 2 t) t ) 2 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 3) 3 1) 1 ) 3 1)
(COND (PROG2 2 (COND (PROG2 2 3) 3 2) 2 ) 3 2)
(COND (PROG2 nil (COND (PROG2 nil 3) 3 nil) nil ) 3 nil)
(COND (PROG2 t (COND (PROG2 t 3) 3 t) t ) 3 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 ()) () 1) 1 ) () 1)
(COND (PROG2 2 (COND (PROG2 2 ()) () 2) 2 ) () 2)
(COND (PROG2 nil (COND (PROG2 nil ()) () nil) nil ) () nil)
(COND (PROG2 t (COND (PROG2 t ()) () t) t ) () t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 (())) (()) 1) 1 ) (()) 1)
(COND (PROG2 2 (COND (PROG2 2 (())) (()) 2) 2 ) (()) 2)
(COND (PROG2 nil (COND (PROG2 nil (())) (()) nil) nil ) (()) nil)
(COND (PROG2 t (COND (PROG2 t (())) (()) t) t ) (()) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (PROG2 2 (COND (PROG2 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (PROG2 nil (COND (PROG2 nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (PROG2 t (COND (PROG2 t ((()))) ((())) t) t ) ((())) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (PROG2 2 (COND (PROG2 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (PROG2 nil (COND (PROG2 nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (PROG2 t (COND (PROG2 t (((())))) (((()))) t) t ) (((()))) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 'A) 'A 1) 1 ) 'A 1)
(COND (PROG2 2 (COND (PROG2 2 'A) 'A 2) 2 ) 'A 2)
(COND (PROG2 nil (COND (PROG2 nil 'A) 'A nil) nil ) 'A nil)
(COND (PROG2 t (COND (PROG2 t 'A) 'A t) t ) 'A t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 'B) 'B 1) 1 ) 'B 1)
(COND (PROG2 2 (COND (PROG2 2 'B) 'B 2) 2 ) 'B 2)
(COND (PROG2 nil (COND (PROG2 nil 'B) 'B nil) nil ) 'B nil)
(COND (PROG2 t (COND (PROG2 t 'B) 'B t) t ) 'B t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 'C) 'C 1) 1 ) 'C 1)
(COND (PROG2 2 (COND (PROG2 2 'C) 'C 2) 2 ) 'C 2)
(COND (PROG2 nil (COND (PROG2 nil 'C) 'C nil) nil ) 'C nil)
(COND (PROG2 t (COND (PROG2 t 'C) 'C t) t ) 'C t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 '1) '1 1) 1 ) '1 1)
(COND (PROG2 2 (COND (PROG2 2 '1) '1 2) 2 ) '1 2)
(COND (PROG2 nil (COND (PROG2 nil '1) '1 nil) nil ) '1 nil)
(COND (PROG2 t (COND (PROG2 t '1) '1 t) t ) '1 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 '2) '2 1) 1 ) '2 1)
(COND (PROG2 2 (COND (PROG2 2 '2) '2 2) 2 ) '2 2)
(COND (PROG2 nil (COND (PROG2 nil '2) '2 nil) nil ) '2 nil)
(COND (PROG2 t (COND (PROG2 t '2) '2 t) t ) '2 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 '3) '3 1) 1 ) '3 1)
(COND (PROG2 2 (COND (PROG2 2 '3) '3 2) 2 ) '3 2)
(COND (PROG2 nil (COND (PROG2 nil '3) '3 nil) nil ) '3 nil)
(COND (PROG2 t (COND (PROG2 t '3) '3 t) t ) '3 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 '()) '() 1) 1 ) '() 1)
(COND (PROG2 2 (COND (PROG2 2 '()) '() 2) 2 ) '() 2)
(COND (PROG2 nil (COND (PROG2 nil '()) '() nil) nil ) '() nil)
(COND (PROG2 t (COND (PROG2 t '()) '() t) t ) '() t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (PROG2 2 (COND (PROG2 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (PROG2 nil (COND (PROG2 nil '(())) '(()) nil) nil ) '(()) nil)
(COND (PROG2 t (COND (PROG2 t '(())) '(()) t) t ) '(()) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (PROG2 2 (COND (PROG2 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (PROG2 nil (COND (PROG2 nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (PROG2 t (COND (PROG2 t '((()))) '((())) t) t ) '((())) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (PROG2 2 (COND (PROG2 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (PROG2 nil (COND (PROG2 nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (PROG2 t (COND (PROG2 t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 ,A) ,A 1) 1 ) ,A 1)
(COND (PROG2 2 (COND (PROG2 2 ,A) ,A 2) 2 ) ,A 2)
(COND (PROG2 nil (COND (PROG2 nil ,A) ,A nil) nil ) ,A nil)
(COND (PROG2 t (COND (PROG2 t ,A) ,A t) t ) ,A t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 ,1) ,1 1) 1 ) ,1 1)
(COND (PROG2 2 (COND (PROG2 2 ,1) ,1 2) 2 ) ,1 2)
(COND (PROG2 nil (COND (PROG2 nil ,1) ,1 nil) nil ) ,1 nil)
(COND (PROG2 t (COND (PROG2 t ,1) ,1 t) t ) ,1 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 ,()) ,() 1) 1 ) ,() 1)
(COND (PROG2 2 (COND (PROG2 2 ,()) ,() 2) 2 ) ,() 2)
(COND (PROG2 nil (COND (PROG2 nil ,()) ,() nil) nil ) ,() nil)
(COND (PROG2 t (COND (PROG2 t ,()) ,() t) t ) ,() t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (PROG2 2 (COND (PROG2 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (PROG2 nil (COND (PROG2 nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (PROG2 t (COND (PROG2 t ,(())) ,(()) t) t ) ,(()) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'A) `'A 1) 1 ) `'A 1)
(COND (PROG2 2 (COND (PROG2 2 `'A) `'A 2) 2 ) `'A 2)
(COND (PROG2 nil (COND (PROG2 nil `'A) `'A nil) nil ) `'A nil)
(COND (PROG2 t (COND (PROG2 t `'A) `'A t) t ) `'A t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'B) `'B 1) 1 ) `'B 1)
(COND (PROG2 2 (COND (PROG2 2 `'B) `'B 2) 2 ) `'B 2)
(COND (PROG2 nil (COND (PROG2 nil `'B) `'B nil) nil ) `'B nil)
(COND (PROG2 t (COND (PROG2 t `'B) `'B t) t ) `'B t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'C) `'C 1) 1 ) `'C 1)
(COND (PROG2 2 (COND (PROG2 2 `'C) `'C 2) 2 ) `'C 2)
(COND (PROG2 nil (COND (PROG2 nil `'C) `'C nil) nil ) `'C nil)
(COND (PROG2 t (COND (PROG2 t `'C) `'C t) t ) `'C t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'1) `'1 1) 1 ) `'1 1)
(COND (PROG2 2 (COND (PROG2 2 `'1) `'1 2) 2 ) `'1 2)
(COND (PROG2 nil (COND (PROG2 nil `'1) `'1 nil) nil ) `'1 nil)
(COND (PROG2 t (COND (PROG2 t `'1) `'1 t) t ) `'1 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'2) `'2 1) 1 ) `'2 1)
(COND (PROG2 2 (COND (PROG2 2 `'2) `'2 2) 2 ) `'2 2)
(COND (PROG2 nil (COND (PROG2 nil `'2) `'2 nil) nil ) `'2 nil)
(COND (PROG2 t (COND (PROG2 t `'2) `'2 t) t ) `'2 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'3) `'3 1) 1 ) `'3 1)
(COND (PROG2 2 (COND (PROG2 2 `'3) `'3 2) 2 ) `'3 2)
(COND (PROG2 nil (COND (PROG2 nil `'3) `'3 nil) nil ) `'3 nil)
(COND (PROG2 t (COND (PROG2 t `'3) `'3 t) t ) `'3 t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'()) `'() 1) 1 ) `'() 1)
(COND (PROG2 2 (COND (PROG2 2 `'()) `'() 2) 2 ) `'() 2)
(COND (PROG2 nil (COND (PROG2 nil `'()) `'() nil) nil ) `'() nil)
(COND (PROG2 t (COND (PROG2 t `'()) `'() t) t ) `'() t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (PROG2 2 (COND (PROG2 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (PROG2 nil (COND (PROG2 nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (PROG2 t (COND (PROG2 t `'(())) `'(()) t) t ) `'(()) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (PROG2 2 (COND (PROG2 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (PROG2 nil (COND (PROG2 nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (PROG2 t (COND (PROG2 t `'((()))) `'((())) t) t ) `'((())) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (PROG2 1 (COND (PROG2 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (PROG2 2 (COND (PROG2 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (PROG2 nil (COND (PROG2 nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (PROG2 t (COND (PROG2 t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (PROG2 (cons t t) (COND (PROG2 (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (PROG2 (cons nil t) (COND (PROG2 (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (PROG2 (cons nil nil) (COND (PROG2 (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (PROG2 (cons 0 0) (COND (PROG2 (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (PROG2 (cons 1 1) (COND (PROG2 (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (PROG2 (list 1 2 3) (COND (PROG2 (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (PROG2 (list (cons 1 1 ) ) (COND (PROG2 (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 T) T 1) 1 ) T 1)
(COND (PROGN 2 (COND (PROGN 2 T) T 2) 2 ) T 2)
(COND (PROGN nil (COND (PROGN nil T) T nil) nil ) T nil)
(COND (PROGN t (COND (PROGN t T) T t) t ) T t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 NIL) NIL 1) 1 ) NIL 1)
(COND (PROGN 2 (COND (PROGN 2 NIL) NIL 2) 2 ) NIL 2)
(COND (PROGN nil (COND (PROGN nil NIL) NIL nil) nil ) NIL nil)
(COND (PROGN t (COND (PROGN t NIL) NIL t) t ) NIL t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 A) A 1) 1 ) A 1)
(COND (PROGN 2 (COND (PROGN 2 A) A 2) 2 ) A 2)
(COND (PROGN nil (COND (PROGN nil A) A nil) nil ) A nil)
(COND (PROGN t (COND (PROGN t A) A t) t ) A t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 B) B 1) 1 ) B 1)
(COND (PROGN 2 (COND (PROGN 2 B) B 2) 2 ) B 2)
(COND (PROGN nil (COND (PROGN nil B) B nil) nil ) B nil)
(COND (PROGN t (COND (PROGN t B) B t) t ) B t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 C) C 1) 1 ) C 1)
(COND (PROGN 2 (COND (PROGN 2 C) C 2) 2 ) C 2)
(COND (PROGN nil (COND (PROGN nil C) C nil) nil ) C nil)
(COND (PROGN t (COND (PROGN t C) C t) t ) C t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 1) 1 1) 1 ) 1 1)
(COND (PROGN 2 (COND (PROGN 2 1) 1 2) 2 ) 1 2)
(COND (PROGN nil (COND (PROGN nil 1) 1 nil) nil ) 1 nil)
(COND (PROGN t (COND (PROGN t 1) 1 t) t ) 1 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 2) 2 1) 1 ) 2 1)
(COND (PROGN 2 (COND (PROGN 2 2) 2 2) 2 ) 2 2)
(COND (PROGN nil (COND (PROGN nil 2) 2 nil) nil ) 2 nil)
(COND (PROGN t (COND (PROGN t 2) 2 t) t ) 2 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 3) 3 1) 1 ) 3 1)
(COND (PROGN 2 (COND (PROGN 2 3) 3 2) 2 ) 3 2)
(COND (PROGN nil (COND (PROGN nil 3) 3 nil) nil ) 3 nil)
(COND (PROGN t (COND (PROGN t 3) 3 t) t ) 3 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 ()) () 1) 1 ) () 1)
(COND (PROGN 2 (COND (PROGN 2 ()) () 2) 2 ) () 2)
(COND (PROGN nil (COND (PROGN nil ()) () nil) nil ) () nil)
(COND (PROGN t (COND (PROGN t ()) () t) t ) () t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 (())) (()) 1) 1 ) (()) 1)
(COND (PROGN 2 (COND (PROGN 2 (())) (()) 2) 2 ) (()) 2)
(COND (PROGN nil (COND (PROGN nil (())) (()) nil) nil ) (()) nil)
(COND (PROGN t (COND (PROGN t (())) (()) t) t ) (()) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (PROGN 2 (COND (PROGN 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (PROGN nil (COND (PROGN nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (PROGN t (COND (PROGN t ((()))) ((())) t) t ) ((())) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (PROGN 2 (COND (PROGN 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (PROGN nil (COND (PROGN nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (PROGN t (COND (PROGN t (((())))) (((()))) t) t ) (((()))) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 'A) 'A 1) 1 ) 'A 1)
(COND (PROGN 2 (COND (PROGN 2 'A) 'A 2) 2 ) 'A 2)
(COND (PROGN nil (COND (PROGN nil 'A) 'A nil) nil ) 'A nil)
(COND (PROGN t (COND (PROGN t 'A) 'A t) t ) 'A t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 'B) 'B 1) 1 ) 'B 1)
(COND (PROGN 2 (COND (PROGN 2 'B) 'B 2) 2 ) 'B 2)
(COND (PROGN nil (COND (PROGN nil 'B) 'B nil) nil ) 'B nil)
(COND (PROGN t (COND (PROGN t 'B) 'B t) t ) 'B t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 'C) 'C 1) 1 ) 'C 1)
(COND (PROGN 2 (COND (PROGN 2 'C) 'C 2) 2 ) 'C 2)
(COND (PROGN nil (COND (PROGN nil 'C) 'C nil) nil ) 'C nil)
(COND (PROGN t (COND (PROGN t 'C) 'C t) t ) 'C t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 '1) '1 1) 1 ) '1 1)
(COND (PROGN 2 (COND (PROGN 2 '1) '1 2) 2 ) '1 2)
(COND (PROGN nil (COND (PROGN nil '1) '1 nil) nil ) '1 nil)
(COND (PROGN t (COND (PROGN t '1) '1 t) t ) '1 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 '2) '2 1) 1 ) '2 1)
(COND (PROGN 2 (COND (PROGN 2 '2) '2 2) 2 ) '2 2)
(COND (PROGN nil (COND (PROGN nil '2) '2 nil) nil ) '2 nil)
(COND (PROGN t (COND (PROGN t '2) '2 t) t ) '2 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 '3) '3 1) 1 ) '3 1)
(COND (PROGN 2 (COND (PROGN 2 '3) '3 2) 2 ) '3 2)
(COND (PROGN nil (COND (PROGN nil '3) '3 nil) nil ) '3 nil)
(COND (PROGN t (COND (PROGN t '3) '3 t) t ) '3 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 '()) '() 1) 1 ) '() 1)
(COND (PROGN 2 (COND (PROGN 2 '()) '() 2) 2 ) '() 2)
(COND (PROGN nil (COND (PROGN nil '()) '() nil) nil ) '() nil)
(COND (PROGN t (COND (PROGN t '()) '() t) t ) '() t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (PROGN 2 (COND (PROGN 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (PROGN nil (COND (PROGN nil '(())) '(()) nil) nil ) '(()) nil)
(COND (PROGN t (COND (PROGN t '(())) '(()) t) t ) '(()) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (PROGN 2 (COND (PROGN 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (PROGN nil (COND (PROGN nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (PROGN t (COND (PROGN t '((()))) '((())) t) t ) '((())) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (PROGN 2 (COND (PROGN 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (PROGN nil (COND (PROGN nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (PROGN t (COND (PROGN t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 ,A) ,A 1) 1 ) ,A 1)
(COND (PROGN 2 (COND (PROGN 2 ,A) ,A 2) 2 ) ,A 2)
(COND (PROGN nil (COND (PROGN nil ,A) ,A nil) nil ) ,A nil)
(COND (PROGN t (COND (PROGN t ,A) ,A t) t ) ,A t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 ,1) ,1 1) 1 ) ,1 1)
(COND (PROGN 2 (COND (PROGN 2 ,1) ,1 2) 2 ) ,1 2)
(COND (PROGN nil (COND (PROGN nil ,1) ,1 nil) nil ) ,1 nil)
(COND (PROGN t (COND (PROGN t ,1) ,1 t) t ) ,1 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 ,()) ,() 1) 1 ) ,() 1)
(COND (PROGN 2 (COND (PROGN 2 ,()) ,() 2) 2 ) ,() 2)
(COND (PROGN nil (COND (PROGN nil ,()) ,() nil) nil ) ,() nil)
(COND (PROGN t (COND (PROGN t ,()) ,() t) t ) ,() t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (PROGN 2 (COND (PROGN 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (PROGN nil (COND (PROGN nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (PROGN t (COND (PROGN t ,(())) ,(()) t) t ) ,(()) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'A) `'A 1) 1 ) `'A 1)
(COND (PROGN 2 (COND (PROGN 2 `'A) `'A 2) 2 ) `'A 2)
(COND (PROGN nil (COND (PROGN nil `'A) `'A nil) nil ) `'A nil)
(COND (PROGN t (COND (PROGN t `'A) `'A t) t ) `'A t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'B) `'B 1) 1 ) `'B 1)
(COND (PROGN 2 (COND (PROGN 2 `'B) `'B 2) 2 ) `'B 2)
(COND (PROGN nil (COND (PROGN nil `'B) `'B nil) nil ) `'B nil)
(COND (PROGN t (COND (PROGN t `'B) `'B t) t ) `'B t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'C) `'C 1) 1 ) `'C 1)
(COND (PROGN 2 (COND (PROGN 2 `'C) `'C 2) 2 ) `'C 2)
(COND (PROGN nil (COND (PROGN nil `'C) `'C nil) nil ) `'C nil)
(COND (PROGN t (COND (PROGN t `'C) `'C t) t ) `'C t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'1) `'1 1) 1 ) `'1 1)
(COND (PROGN 2 (COND (PROGN 2 `'1) `'1 2) 2 ) `'1 2)
(COND (PROGN nil (COND (PROGN nil `'1) `'1 nil) nil ) `'1 nil)
(COND (PROGN t (COND (PROGN t `'1) `'1 t) t ) `'1 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'2) `'2 1) 1 ) `'2 1)
(COND (PROGN 2 (COND (PROGN 2 `'2) `'2 2) 2 ) `'2 2)
(COND (PROGN nil (COND (PROGN nil `'2) `'2 nil) nil ) `'2 nil)
(COND (PROGN t (COND (PROGN t `'2) `'2 t) t ) `'2 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'3) `'3 1) 1 ) `'3 1)
(COND (PROGN 2 (COND (PROGN 2 `'3) `'3 2) 2 ) `'3 2)
(COND (PROGN nil (COND (PROGN nil `'3) `'3 nil) nil ) `'3 nil)
(COND (PROGN t (COND (PROGN t `'3) `'3 t) t ) `'3 t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'()) `'() 1) 1 ) `'() 1)
(COND (PROGN 2 (COND (PROGN 2 `'()) `'() 2) 2 ) `'() 2)
(COND (PROGN nil (COND (PROGN nil `'()) `'() nil) nil ) `'() nil)
(COND (PROGN t (COND (PROGN t `'()) `'() t) t ) `'() t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (PROGN 2 (COND (PROGN 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (PROGN nil (COND (PROGN nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (PROGN t (COND (PROGN t `'(())) `'(()) t) t ) `'(()) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (PROGN 2 (COND (PROGN 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (PROGN nil (COND (PROGN nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (PROGN t (COND (PROGN t `'((()))) `'((())) t) t ) `'((())) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (PROGN 1 (COND (PROGN 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (PROGN 2 (COND (PROGN 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (PROGN nil (COND (PROGN nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (PROGN t (COND (PROGN t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (PROGN (cons t t) (COND (PROGN (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (PROGN (cons nil t) (COND (PROGN (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (PROGN (cons nil nil) (COND (PROGN (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (PROGN (cons 0 0) (COND (PROGN (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (PROGN (cons 1 1) (COND (PROGN (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (PROGN (list 1 2 3) (COND (PROGN (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (PROGN (list (cons 1 1 ) ) (COND (PROGN (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 T) T 1) 1 ) T 1)
(COND (QUOTE 2 (COND (QUOTE 2 T) T 2) 2 ) T 2)
(COND (QUOTE nil (COND (QUOTE nil T) T nil) nil ) T nil)
(COND (QUOTE t (COND (QUOTE t T) T t) t ) T t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 NIL) NIL 1) 1 ) NIL 1)
(COND (QUOTE 2 (COND (QUOTE 2 NIL) NIL 2) 2 ) NIL 2)
(COND (QUOTE nil (COND (QUOTE nil NIL) NIL nil) nil ) NIL nil)
(COND (QUOTE t (COND (QUOTE t NIL) NIL t) t ) NIL t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 A) A 1) 1 ) A 1)
(COND (QUOTE 2 (COND (QUOTE 2 A) A 2) 2 ) A 2)
(COND (QUOTE nil (COND (QUOTE nil A) A nil) nil ) A nil)
(COND (QUOTE t (COND (QUOTE t A) A t) t ) A t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 B) B 1) 1 ) B 1)
(COND (QUOTE 2 (COND (QUOTE 2 B) B 2) 2 ) B 2)
(COND (QUOTE nil (COND (QUOTE nil B) B nil) nil ) B nil)
(COND (QUOTE t (COND (QUOTE t B) B t) t ) B t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 C) C 1) 1 ) C 1)
(COND (QUOTE 2 (COND (QUOTE 2 C) C 2) 2 ) C 2)
(COND (QUOTE nil (COND (QUOTE nil C) C nil) nil ) C nil)
(COND (QUOTE t (COND (QUOTE t C) C t) t ) C t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 1) 1 1) 1 ) 1 1)
(COND (QUOTE 2 (COND (QUOTE 2 1) 1 2) 2 ) 1 2)
(COND (QUOTE nil (COND (QUOTE nil 1) 1 nil) nil ) 1 nil)
(COND (QUOTE t (COND (QUOTE t 1) 1 t) t ) 1 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 2) 2 1) 1 ) 2 1)
(COND (QUOTE 2 (COND (QUOTE 2 2) 2 2) 2 ) 2 2)
(COND (QUOTE nil (COND (QUOTE nil 2) 2 nil) nil ) 2 nil)
(COND (QUOTE t (COND (QUOTE t 2) 2 t) t ) 2 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 3) 3 1) 1 ) 3 1)
(COND (QUOTE 2 (COND (QUOTE 2 3) 3 2) 2 ) 3 2)
(COND (QUOTE nil (COND (QUOTE nil 3) 3 nil) nil ) 3 nil)
(COND (QUOTE t (COND (QUOTE t 3) 3 t) t ) 3 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 ()) () 1) 1 ) () 1)
(COND (QUOTE 2 (COND (QUOTE 2 ()) () 2) 2 ) () 2)
(COND (QUOTE nil (COND (QUOTE nil ()) () nil) nil ) () nil)
(COND (QUOTE t (COND (QUOTE t ()) () t) t ) () t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 (())) (()) 1) 1 ) (()) 1)
(COND (QUOTE 2 (COND (QUOTE 2 (())) (()) 2) 2 ) (()) 2)
(COND (QUOTE nil (COND (QUOTE nil (())) (()) nil) nil ) (()) nil)
(COND (QUOTE t (COND (QUOTE t (())) (()) t) t ) (()) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (QUOTE 2 (COND (QUOTE 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (QUOTE nil (COND (QUOTE nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (QUOTE t (COND (QUOTE t ((()))) ((())) t) t ) ((())) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (QUOTE 2 (COND (QUOTE 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (QUOTE nil (COND (QUOTE nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (QUOTE t (COND (QUOTE t (((())))) (((()))) t) t ) (((()))) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 'A) 'A 1) 1 ) 'A 1)
(COND (QUOTE 2 (COND (QUOTE 2 'A) 'A 2) 2 ) 'A 2)
(COND (QUOTE nil (COND (QUOTE nil 'A) 'A nil) nil ) 'A nil)
(COND (QUOTE t (COND (QUOTE t 'A) 'A t) t ) 'A t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 'B) 'B 1) 1 ) 'B 1)
(COND (QUOTE 2 (COND (QUOTE 2 'B) 'B 2) 2 ) 'B 2)
(COND (QUOTE nil (COND (QUOTE nil 'B) 'B nil) nil ) 'B nil)
(COND (QUOTE t (COND (QUOTE t 'B) 'B t) t ) 'B t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 'C) 'C 1) 1 ) 'C 1)
(COND (QUOTE 2 (COND (QUOTE 2 'C) 'C 2) 2 ) 'C 2)
(COND (QUOTE nil (COND (QUOTE nil 'C) 'C nil) nil ) 'C nil)
(COND (QUOTE t (COND (QUOTE t 'C) 'C t) t ) 'C t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 '1) '1 1) 1 ) '1 1)
(COND (QUOTE 2 (COND (QUOTE 2 '1) '1 2) 2 ) '1 2)
(COND (QUOTE nil (COND (QUOTE nil '1) '1 nil) nil ) '1 nil)
(COND (QUOTE t (COND (QUOTE t '1) '1 t) t ) '1 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 '2) '2 1) 1 ) '2 1)
(COND (QUOTE 2 (COND (QUOTE 2 '2) '2 2) 2 ) '2 2)
(COND (QUOTE nil (COND (QUOTE nil '2) '2 nil) nil ) '2 nil)
(COND (QUOTE t (COND (QUOTE t '2) '2 t) t ) '2 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 '3) '3 1) 1 ) '3 1)
(COND (QUOTE 2 (COND (QUOTE 2 '3) '3 2) 2 ) '3 2)
(COND (QUOTE nil (COND (QUOTE nil '3) '3 nil) nil ) '3 nil)
(COND (QUOTE t (COND (QUOTE t '3) '3 t) t ) '3 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 '()) '() 1) 1 ) '() 1)
(COND (QUOTE 2 (COND (QUOTE 2 '()) '() 2) 2 ) '() 2)
(COND (QUOTE nil (COND (QUOTE nil '()) '() nil) nil ) '() nil)
(COND (QUOTE t (COND (QUOTE t '()) '() t) t ) '() t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (QUOTE 2 (COND (QUOTE 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (QUOTE nil (COND (QUOTE nil '(())) '(()) nil) nil ) '(()) nil)
(COND (QUOTE t (COND (QUOTE t '(())) '(()) t) t ) '(()) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (QUOTE 2 (COND (QUOTE 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (QUOTE nil (COND (QUOTE nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (QUOTE t (COND (QUOTE t '((()))) '((())) t) t ) '((())) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (QUOTE 2 (COND (QUOTE 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (QUOTE nil (COND (QUOTE nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (QUOTE t (COND (QUOTE t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 ,A) ,A 1) 1 ) ,A 1)
(COND (QUOTE 2 (COND (QUOTE 2 ,A) ,A 2) 2 ) ,A 2)
(COND (QUOTE nil (COND (QUOTE nil ,A) ,A nil) nil ) ,A nil)
(COND (QUOTE t (COND (QUOTE t ,A) ,A t) t ) ,A t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 ,1) ,1 1) 1 ) ,1 1)
(COND (QUOTE 2 (COND (QUOTE 2 ,1) ,1 2) 2 ) ,1 2)
(COND (QUOTE nil (COND (QUOTE nil ,1) ,1 nil) nil ) ,1 nil)
(COND (QUOTE t (COND (QUOTE t ,1) ,1 t) t ) ,1 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 ,()) ,() 1) 1 ) ,() 1)
(COND (QUOTE 2 (COND (QUOTE 2 ,()) ,() 2) 2 ) ,() 2)
(COND (QUOTE nil (COND (QUOTE nil ,()) ,() nil) nil ) ,() nil)
(COND (QUOTE t (COND (QUOTE t ,()) ,() t) t ) ,() t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (QUOTE 2 (COND (QUOTE 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (QUOTE nil (COND (QUOTE nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (QUOTE t (COND (QUOTE t ,(())) ,(()) t) t ) ,(()) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'A) `'A 1) 1 ) `'A 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'A) `'A 2) 2 ) `'A 2)
(COND (QUOTE nil (COND (QUOTE nil `'A) `'A nil) nil ) `'A nil)
(COND (QUOTE t (COND (QUOTE t `'A) `'A t) t ) `'A t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'B) `'B 1) 1 ) `'B 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'B) `'B 2) 2 ) `'B 2)
(COND (QUOTE nil (COND (QUOTE nil `'B) `'B nil) nil ) `'B nil)
(COND (QUOTE t (COND (QUOTE t `'B) `'B t) t ) `'B t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'C) `'C 1) 1 ) `'C 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'C) `'C 2) 2 ) `'C 2)
(COND (QUOTE nil (COND (QUOTE nil `'C) `'C nil) nil ) `'C nil)
(COND (QUOTE t (COND (QUOTE t `'C) `'C t) t ) `'C t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'1) `'1 1) 1 ) `'1 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'1) `'1 2) 2 ) `'1 2)
(COND (QUOTE nil (COND (QUOTE nil `'1) `'1 nil) nil ) `'1 nil)
(COND (QUOTE t (COND (QUOTE t `'1) `'1 t) t ) `'1 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'2) `'2 1) 1 ) `'2 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'2) `'2 2) 2 ) `'2 2)
(COND (QUOTE nil (COND (QUOTE nil `'2) `'2 nil) nil ) `'2 nil)
(COND (QUOTE t (COND (QUOTE t `'2) `'2 t) t ) `'2 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'3) `'3 1) 1 ) `'3 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'3) `'3 2) 2 ) `'3 2)
(COND (QUOTE nil (COND (QUOTE nil `'3) `'3 nil) nil ) `'3 nil)
(COND (QUOTE t (COND (QUOTE t `'3) `'3 t) t ) `'3 t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'()) `'() 1) 1 ) `'() 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'()) `'() 2) 2 ) `'() 2)
(COND (QUOTE nil (COND (QUOTE nil `'()) `'() nil) nil ) `'() nil)
(COND (QUOTE t (COND (QUOTE t `'()) `'() t) t ) `'() t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (QUOTE nil (COND (QUOTE nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (QUOTE t (COND (QUOTE t `'(())) `'(()) t) t ) `'(()) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (QUOTE nil (COND (QUOTE nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (QUOTE t (COND (QUOTE t `'((()))) `'((())) t) t ) `'((())) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (QUOTE 1 (COND (QUOTE 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (QUOTE 2 (COND (QUOTE 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (QUOTE nil (COND (QUOTE nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (QUOTE t (COND (QUOTE t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (QUOTE (cons t t) (COND (QUOTE (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (QUOTE (cons nil t) (COND (QUOTE (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (QUOTE (cons nil nil) (COND (QUOTE (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (QUOTE (cons 0 0) (COND (QUOTE (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (QUOTE (cons 1 1) (COND (QUOTE (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (QUOTE (list 1 2 3) (COND (QUOTE (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (QUOTE (list (cons 1 1 ) ) (COND (QUOTE (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 T) T 1) 1 ) T 1)
(COND (SUBST 2 (COND (SUBST 2 T) T 2) 2 ) T 2)
(COND (SUBST nil (COND (SUBST nil T) T nil) nil ) T nil)
(COND (SUBST t (COND (SUBST t T) T t) t ) T t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 NIL) NIL 1) 1 ) NIL 1)
(COND (SUBST 2 (COND (SUBST 2 NIL) NIL 2) 2 ) NIL 2)
(COND (SUBST nil (COND (SUBST nil NIL) NIL nil) nil ) NIL nil)
(COND (SUBST t (COND (SUBST t NIL) NIL t) t ) NIL t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 A) A 1) 1 ) A 1)
(COND (SUBST 2 (COND (SUBST 2 A) A 2) 2 ) A 2)
(COND (SUBST nil (COND (SUBST nil A) A nil) nil ) A nil)
(COND (SUBST t (COND (SUBST t A) A t) t ) A t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 B) B 1) 1 ) B 1)
(COND (SUBST 2 (COND (SUBST 2 B) B 2) 2 ) B 2)
(COND (SUBST nil (COND (SUBST nil B) B nil) nil ) B nil)
(COND (SUBST t (COND (SUBST t B) B t) t ) B t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 C) C 1) 1 ) C 1)
(COND (SUBST 2 (COND (SUBST 2 C) C 2) 2 ) C 2)
(COND (SUBST nil (COND (SUBST nil C) C nil) nil ) C nil)
(COND (SUBST t (COND (SUBST t C) C t) t ) C t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 1) 1 1) 1 ) 1 1)
(COND (SUBST 2 (COND (SUBST 2 1) 1 2) 2 ) 1 2)
(COND (SUBST nil (COND (SUBST nil 1) 1 nil) nil ) 1 nil)
(COND (SUBST t (COND (SUBST t 1) 1 t) t ) 1 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 2) 2 1) 1 ) 2 1)
(COND (SUBST 2 (COND (SUBST 2 2) 2 2) 2 ) 2 2)
(COND (SUBST nil (COND (SUBST nil 2) 2 nil) nil ) 2 nil)
(COND (SUBST t (COND (SUBST t 2) 2 t) t ) 2 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 3) 3 1) 1 ) 3 1)
(COND (SUBST 2 (COND (SUBST 2 3) 3 2) 2 ) 3 2)
(COND (SUBST nil (COND (SUBST nil 3) 3 nil) nil ) 3 nil)
(COND (SUBST t (COND (SUBST t 3) 3 t) t ) 3 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 ()) () 1) 1 ) () 1)
(COND (SUBST 2 (COND (SUBST 2 ()) () 2) 2 ) () 2)
(COND (SUBST nil (COND (SUBST nil ()) () nil) nil ) () nil)
(COND (SUBST t (COND (SUBST t ()) () t) t ) () t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 (())) (()) 1) 1 ) (()) 1)
(COND (SUBST 2 (COND (SUBST 2 (())) (()) 2) 2 ) (()) 2)
(COND (SUBST nil (COND (SUBST nil (())) (()) nil) nil ) (()) nil)
(COND (SUBST t (COND (SUBST t (())) (()) t) t ) (()) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (SUBST 2 (COND (SUBST 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (SUBST nil (COND (SUBST nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (SUBST t (COND (SUBST t ((()))) ((())) t) t ) ((())) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (SUBST 2 (COND (SUBST 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (SUBST nil (COND (SUBST nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (SUBST t (COND (SUBST t (((())))) (((()))) t) t ) (((()))) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 'A) 'A 1) 1 ) 'A 1)
(COND (SUBST 2 (COND (SUBST 2 'A) 'A 2) 2 ) 'A 2)
(COND (SUBST nil (COND (SUBST nil 'A) 'A nil) nil ) 'A nil)
(COND (SUBST t (COND (SUBST t 'A) 'A t) t ) 'A t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 'B) 'B 1) 1 ) 'B 1)
(COND (SUBST 2 (COND (SUBST 2 'B) 'B 2) 2 ) 'B 2)
(COND (SUBST nil (COND (SUBST nil 'B) 'B nil) nil ) 'B nil)
(COND (SUBST t (COND (SUBST t 'B) 'B t) t ) 'B t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 'C) 'C 1) 1 ) 'C 1)
(COND (SUBST 2 (COND (SUBST 2 'C) 'C 2) 2 ) 'C 2)
(COND (SUBST nil (COND (SUBST nil 'C) 'C nil) nil ) 'C nil)
(COND (SUBST t (COND (SUBST t 'C) 'C t) t ) 'C t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 '1) '1 1) 1 ) '1 1)
(COND (SUBST 2 (COND (SUBST 2 '1) '1 2) 2 ) '1 2)
(COND (SUBST nil (COND (SUBST nil '1) '1 nil) nil ) '1 nil)
(COND (SUBST t (COND (SUBST t '1) '1 t) t ) '1 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 '2) '2 1) 1 ) '2 1)
(COND (SUBST 2 (COND (SUBST 2 '2) '2 2) 2 ) '2 2)
(COND (SUBST nil (COND (SUBST nil '2) '2 nil) nil ) '2 nil)
(COND (SUBST t (COND (SUBST t '2) '2 t) t ) '2 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 '3) '3 1) 1 ) '3 1)
(COND (SUBST 2 (COND (SUBST 2 '3) '3 2) 2 ) '3 2)
(COND (SUBST nil (COND (SUBST nil '3) '3 nil) nil ) '3 nil)
(COND (SUBST t (COND (SUBST t '3) '3 t) t ) '3 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 '()) '() 1) 1 ) '() 1)
(COND (SUBST 2 (COND (SUBST 2 '()) '() 2) 2 ) '() 2)
(COND (SUBST nil (COND (SUBST nil '()) '() nil) nil ) '() nil)
(COND (SUBST t (COND (SUBST t '()) '() t) t ) '() t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (SUBST 2 (COND (SUBST 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (SUBST nil (COND (SUBST nil '(())) '(()) nil) nil ) '(()) nil)
(COND (SUBST t (COND (SUBST t '(())) '(()) t) t ) '(()) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (SUBST 2 (COND (SUBST 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (SUBST nil (COND (SUBST nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (SUBST t (COND (SUBST t '((()))) '((())) t) t ) '((())) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (SUBST 2 (COND (SUBST 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (SUBST nil (COND (SUBST nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (SUBST t (COND (SUBST t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 ,A) ,A 1) 1 ) ,A 1)
(COND (SUBST 2 (COND (SUBST 2 ,A) ,A 2) 2 ) ,A 2)
(COND (SUBST nil (COND (SUBST nil ,A) ,A nil) nil ) ,A nil)
(COND (SUBST t (COND (SUBST t ,A) ,A t) t ) ,A t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 ,1) ,1 1) 1 ) ,1 1)
(COND (SUBST 2 (COND (SUBST 2 ,1) ,1 2) 2 ) ,1 2)
(COND (SUBST nil (COND (SUBST nil ,1) ,1 nil) nil ) ,1 nil)
(COND (SUBST t (COND (SUBST t ,1) ,1 t) t ) ,1 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 ,()) ,() 1) 1 ) ,() 1)
(COND (SUBST 2 (COND (SUBST 2 ,()) ,() 2) 2 ) ,() 2)
(COND (SUBST nil (COND (SUBST nil ,()) ,() nil) nil ) ,() nil)
(COND (SUBST t (COND (SUBST t ,()) ,() t) t ) ,() t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (SUBST 2 (COND (SUBST 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (SUBST nil (COND (SUBST nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (SUBST t (COND (SUBST t ,(())) ,(()) t) t ) ,(()) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'A) `'A 1) 1 ) `'A 1)
(COND (SUBST 2 (COND (SUBST 2 `'A) `'A 2) 2 ) `'A 2)
(COND (SUBST nil (COND (SUBST nil `'A) `'A nil) nil ) `'A nil)
(COND (SUBST t (COND (SUBST t `'A) `'A t) t ) `'A t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'B) `'B 1) 1 ) `'B 1)
(COND (SUBST 2 (COND (SUBST 2 `'B) `'B 2) 2 ) `'B 2)
(COND (SUBST nil (COND (SUBST nil `'B) `'B nil) nil ) `'B nil)
(COND (SUBST t (COND (SUBST t `'B) `'B t) t ) `'B t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'C) `'C 1) 1 ) `'C 1)
(COND (SUBST 2 (COND (SUBST 2 `'C) `'C 2) 2 ) `'C 2)
(COND (SUBST nil (COND (SUBST nil `'C) `'C nil) nil ) `'C nil)
(COND (SUBST t (COND (SUBST t `'C) `'C t) t ) `'C t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'1) `'1 1) 1 ) `'1 1)
(COND (SUBST 2 (COND (SUBST 2 `'1) `'1 2) 2 ) `'1 2)
(COND (SUBST nil (COND (SUBST nil `'1) `'1 nil) nil ) `'1 nil)
(COND (SUBST t (COND (SUBST t `'1) `'1 t) t ) `'1 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'2) `'2 1) 1 ) `'2 1)
(COND (SUBST 2 (COND (SUBST 2 `'2) `'2 2) 2 ) `'2 2)
(COND (SUBST nil (COND (SUBST nil `'2) `'2 nil) nil ) `'2 nil)
(COND (SUBST t (COND (SUBST t `'2) `'2 t) t ) `'2 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'3) `'3 1) 1 ) `'3 1)
(COND (SUBST 2 (COND (SUBST 2 `'3) `'3 2) 2 ) `'3 2)
(COND (SUBST nil (COND (SUBST nil `'3) `'3 nil) nil ) `'3 nil)
(COND (SUBST t (COND (SUBST t `'3) `'3 t) t ) `'3 t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'()) `'() 1) 1 ) `'() 1)
(COND (SUBST 2 (COND (SUBST 2 `'()) `'() 2) 2 ) `'() 2)
(COND (SUBST nil (COND (SUBST nil `'()) `'() nil) nil ) `'() nil)
(COND (SUBST t (COND (SUBST t `'()) `'() t) t ) `'() t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (SUBST 2 (COND (SUBST 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (SUBST nil (COND (SUBST nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (SUBST t (COND (SUBST t `'(())) `'(()) t) t ) `'(()) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (SUBST 2 (COND (SUBST 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (SUBST nil (COND (SUBST nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (SUBST t (COND (SUBST t `'((()))) `'((())) t) t ) `'((())) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (SUBST 1 (COND (SUBST 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (SUBST 2 (COND (SUBST 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (SUBST nil (COND (SUBST nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (SUBST t (COND (SUBST t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (SUBST (cons t t) (COND (SUBST (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (SUBST (cons nil t) (COND (SUBST (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (SUBST (cons nil nil) (COND (SUBST (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (SUBST (cons 0 0) (COND (SUBST (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (SUBST (cons 1 1) (COND (SUBST (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (SUBST (list 1 2 3) (COND (SUBST (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (SUBST (list (cons 1 1 ) ) (COND (SUBST (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 T) T 1) 1 ) T 1)
(COND (UNLESS 2 (COND (UNLESS 2 T) T 2) 2 ) T 2)
(COND (UNLESS nil (COND (UNLESS nil T) T nil) nil ) T nil)
(COND (UNLESS t (COND (UNLESS t T) T t) t ) T t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 NIL) NIL 1) 1 ) NIL 1)
(COND (UNLESS 2 (COND (UNLESS 2 NIL) NIL 2) 2 ) NIL 2)
(COND (UNLESS nil (COND (UNLESS nil NIL) NIL nil) nil ) NIL nil)
(COND (UNLESS t (COND (UNLESS t NIL) NIL t) t ) NIL t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 A) A 1) 1 ) A 1)
(COND (UNLESS 2 (COND (UNLESS 2 A) A 2) 2 ) A 2)
(COND (UNLESS nil (COND (UNLESS nil A) A nil) nil ) A nil)
(COND (UNLESS t (COND (UNLESS t A) A t) t ) A t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 B) B 1) 1 ) B 1)
(COND (UNLESS 2 (COND (UNLESS 2 B) B 2) 2 ) B 2)
(COND (UNLESS nil (COND (UNLESS nil B) B nil) nil ) B nil)
(COND (UNLESS t (COND (UNLESS t B) B t) t ) B t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 C) C 1) 1 ) C 1)
(COND (UNLESS 2 (COND (UNLESS 2 C) C 2) 2 ) C 2)
(COND (UNLESS nil (COND (UNLESS nil C) C nil) nil ) C nil)
(COND (UNLESS t (COND (UNLESS t C) C t) t ) C t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 1) 1 1) 1 ) 1 1)
(COND (UNLESS 2 (COND (UNLESS 2 1) 1 2) 2 ) 1 2)
(COND (UNLESS nil (COND (UNLESS nil 1) 1 nil) nil ) 1 nil)
(COND (UNLESS t (COND (UNLESS t 1) 1 t) t ) 1 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 2) 2 1) 1 ) 2 1)
(COND (UNLESS 2 (COND (UNLESS 2 2) 2 2) 2 ) 2 2)
(COND (UNLESS nil (COND (UNLESS nil 2) 2 nil) nil ) 2 nil)
(COND (UNLESS t (COND (UNLESS t 2) 2 t) t ) 2 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 3) 3 1) 1 ) 3 1)
(COND (UNLESS 2 (COND (UNLESS 2 3) 3 2) 2 ) 3 2)
(COND (UNLESS nil (COND (UNLESS nil 3) 3 nil) nil ) 3 nil)
(COND (UNLESS t (COND (UNLESS t 3) 3 t) t ) 3 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 ()) () 1) 1 ) () 1)
(COND (UNLESS 2 (COND (UNLESS 2 ()) () 2) 2 ) () 2)
(COND (UNLESS nil (COND (UNLESS nil ()) () nil) nil ) () nil)
(COND (UNLESS t (COND (UNLESS t ()) () t) t ) () t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 (())) (()) 1) 1 ) (()) 1)
(COND (UNLESS 2 (COND (UNLESS 2 (())) (()) 2) 2 ) (()) 2)
(COND (UNLESS nil (COND (UNLESS nil (())) (()) nil) nil ) (()) nil)
(COND (UNLESS t (COND (UNLESS t (())) (()) t) t ) (()) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (UNLESS 2 (COND (UNLESS 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (UNLESS nil (COND (UNLESS nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (UNLESS t (COND (UNLESS t ((()))) ((())) t) t ) ((())) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (UNLESS 2 (COND (UNLESS 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (UNLESS nil (COND (UNLESS nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (UNLESS t (COND (UNLESS t (((())))) (((()))) t) t ) (((()))) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 'A) 'A 1) 1 ) 'A 1)
(COND (UNLESS 2 (COND (UNLESS 2 'A) 'A 2) 2 ) 'A 2)
(COND (UNLESS nil (COND (UNLESS nil 'A) 'A nil) nil ) 'A nil)
(COND (UNLESS t (COND (UNLESS t 'A) 'A t) t ) 'A t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 'B) 'B 1) 1 ) 'B 1)
(COND (UNLESS 2 (COND (UNLESS 2 'B) 'B 2) 2 ) 'B 2)
(COND (UNLESS nil (COND (UNLESS nil 'B) 'B nil) nil ) 'B nil)
(COND (UNLESS t (COND (UNLESS t 'B) 'B t) t ) 'B t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 'C) 'C 1) 1 ) 'C 1)
(COND (UNLESS 2 (COND (UNLESS 2 'C) 'C 2) 2 ) 'C 2)
(COND (UNLESS nil (COND (UNLESS nil 'C) 'C nil) nil ) 'C nil)
(COND (UNLESS t (COND (UNLESS t 'C) 'C t) t ) 'C t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 '1) '1 1) 1 ) '1 1)
(COND (UNLESS 2 (COND (UNLESS 2 '1) '1 2) 2 ) '1 2)
(COND (UNLESS nil (COND (UNLESS nil '1) '1 nil) nil ) '1 nil)
(COND (UNLESS t (COND (UNLESS t '1) '1 t) t ) '1 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 '2) '2 1) 1 ) '2 1)
(COND (UNLESS 2 (COND (UNLESS 2 '2) '2 2) 2 ) '2 2)
(COND (UNLESS nil (COND (UNLESS nil '2) '2 nil) nil ) '2 nil)
(COND (UNLESS t (COND (UNLESS t '2) '2 t) t ) '2 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 '3) '3 1) 1 ) '3 1)
(COND (UNLESS 2 (COND (UNLESS 2 '3) '3 2) 2 ) '3 2)
(COND (UNLESS nil (COND (UNLESS nil '3) '3 nil) nil ) '3 nil)
(COND (UNLESS t (COND (UNLESS t '3) '3 t) t ) '3 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 '()) '() 1) 1 ) '() 1)
(COND (UNLESS 2 (COND (UNLESS 2 '()) '() 2) 2 ) '() 2)
(COND (UNLESS nil (COND (UNLESS nil '()) '() nil) nil ) '() nil)
(COND (UNLESS t (COND (UNLESS t '()) '() t) t ) '() t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (UNLESS 2 (COND (UNLESS 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (UNLESS nil (COND (UNLESS nil '(())) '(()) nil) nil ) '(()) nil)
(COND (UNLESS t (COND (UNLESS t '(())) '(()) t) t ) '(()) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (UNLESS 2 (COND (UNLESS 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (UNLESS nil (COND (UNLESS nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (UNLESS t (COND (UNLESS t '((()))) '((())) t) t ) '((())) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (UNLESS 2 (COND (UNLESS 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (UNLESS nil (COND (UNLESS nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (UNLESS t (COND (UNLESS t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 ,A) ,A 1) 1 ) ,A 1)
(COND (UNLESS 2 (COND (UNLESS 2 ,A) ,A 2) 2 ) ,A 2)
(COND (UNLESS nil (COND (UNLESS nil ,A) ,A nil) nil ) ,A nil)
(COND (UNLESS t (COND (UNLESS t ,A) ,A t) t ) ,A t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 ,1) ,1 1) 1 ) ,1 1)
(COND (UNLESS 2 (COND (UNLESS 2 ,1) ,1 2) 2 ) ,1 2)
(COND (UNLESS nil (COND (UNLESS nil ,1) ,1 nil) nil ) ,1 nil)
(COND (UNLESS t (COND (UNLESS t ,1) ,1 t) t ) ,1 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 ,()) ,() 1) 1 ) ,() 1)
(COND (UNLESS 2 (COND (UNLESS 2 ,()) ,() 2) 2 ) ,() 2)
(COND (UNLESS nil (COND (UNLESS nil ,()) ,() nil) nil ) ,() nil)
(COND (UNLESS t (COND (UNLESS t ,()) ,() t) t ) ,() t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (UNLESS 2 (COND (UNLESS 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (UNLESS nil (COND (UNLESS nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (UNLESS t (COND (UNLESS t ,(())) ,(()) t) t ) ,(()) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'A) `'A 1) 1 ) `'A 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'A) `'A 2) 2 ) `'A 2)
(COND (UNLESS nil (COND (UNLESS nil `'A) `'A nil) nil ) `'A nil)
(COND (UNLESS t (COND (UNLESS t `'A) `'A t) t ) `'A t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'B) `'B 1) 1 ) `'B 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'B) `'B 2) 2 ) `'B 2)
(COND (UNLESS nil (COND (UNLESS nil `'B) `'B nil) nil ) `'B nil)
(COND (UNLESS t (COND (UNLESS t `'B) `'B t) t ) `'B t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'C) `'C 1) 1 ) `'C 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'C) `'C 2) 2 ) `'C 2)
(COND (UNLESS nil (COND (UNLESS nil `'C) `'C nil) nil ) `'C nil)
(COND (UNLESS t (COND (UNLESS t `'C) `'C t) t ) `'C t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'1) `'1 1) 1 ) `'1 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'1) `'1 2) 2 ) `'1 2)
(COND (UNLESS nil (COND (UNLESS nil `'1) `'1 nil) nil ) `'1 nil)
(COND (UNLESS t (COND (UNLESS t `'1) `'1 t) t ) `'1 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'2) `'2 1) 1 ) `'2 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'2) `'2 2) 2 ) `'2 2)
(COND (UNLESS nil (COND (UNLESS nil `'2) `'2 nil) nil ) `'2 nil)
(COND (UNLESS t (COND (UNLESS t `'2) `'2 t) t ) `'2 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'3) `'3 1) 1 ) `'3 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'3) `'3 2) 2 ) `'3 2)
(COND (UNLESS nil (COND (UNLESS nil `'3) `'3 nil) nil ) `'3 nil)
(COND (UNLESS t (COND (UNLESS t `'3) `'3 t) t ) `'3 t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'()) `'() 1) 1 ) `'() 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'()) `'() 2) 2 ) `'() 2)
(COND (UNLESS nil (COND (UNLESS nil `'()) `'() nil) nil ) `'() nil)
(COND (UNLESS t (COND (UNLESS t `'()) `'() t) t ) `'() t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (UNLESS nil (COND (UNLESS nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (UNLESS t (COND (UNLESS t `'(())) `'(()) t) t ) `'(()) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (UNLESS nil (COND (UNLESS nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (UNLESS t (COND (UNLESS t `'((()))) `'((())) t) t ) `'((())) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (UNLESS 1 (COND (UNLESS 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (UNLESS 2 (COND (UNLESS 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (UNLESS nil (COND (UNLESS nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (UNLESS t (COND (UNLESS t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (UNLESS (cons t t) (COND (UNLESS (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (UNLESS (cons nil t) (COND (UNLESS (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (UNLESS (cons nil nil) (COND (UNLESS (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (UNLESS (cons 0 0) (COND (UNLESS (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (UNLESS (cons 1 1) (COND (UNLESS (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (UNLESS (list 1 2 3) (COND (UNLESS (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (UNLESS (list (cons 1 1 ) ) (COND (UNLESS (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 T) T 1) 1 ) T 1)
(COND (XOR 2 (COND (XOR 2 T) T 2) 2 ) T 2)
(COND (XOR nil (COND (XOR nil T) T nil) nil ) T nil)
(COND (XOR t (COND (XOR t T) T t) t ) T t)
(COND (XOR (cons t t) (COND (XOR (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 NIL) NIL 1) 1 ) NIL 1)
(COND (XOR 2 (COND (XOR 2 NIL) NIL 2) 2 ) NIL 2)
(COND (XOR nil (COND (XOR nil NIL) NIL nil) nil ) NIL nil)
(COND (XOR t (COND (XOR t NIL) NIL t) t ) NIL t)
(COND (XOR (cons t t) (COND (XOR (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 A) A 1) 1 ) A 1)
(COND (XOR 2 (COND (XOR 2 A) A 2) 2 ) A 2)
(COND (XOR nil (COND (XOR nil A) A nil) nil ) A nil)
(COND (XOR t (COND (XOR t A) A t) t ) A t)
(COND (XOR (cons t t) (COND (XOR (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 B) B 1) 1 ) B 1)
(COND (XOR 2 (COND (XOR 2 B) B 2) 2 ) B 2)
(COND (XOR nil (COND (XOR nil B) B nil) nil ) B nil)
(COND (XOR t (COND (XOR t B) B t) t ) B t)
(COND (XOR (cons t t) (COND (XOR (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 C) C 1) 1 ) C 1)
(COND (XOR 2 (COND (XOR 2 C) C 2) 2 ) C 2)
(COND (XOR nil (COND (XOR nil C) C nil) nil ) C nil)
(COND (XOR t (COND (XOR t C) C t) t ) C t)
(COND (XOR (cons t t) (COND (XOR (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 1) 1 1) 1 ) 1 1)
(COND (XOR 2 (COND (XOR 2 1) 1 2) 2 ) 1 2)
(COND (XOR nil (COND (XOR nil 1) 1 nil) nil ) 1 nil)
(COND (XOR t (COND (XOR t 1) 1 t) t ) 1 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 2) 2 1) 1 ) 2 1)
(COND (XOR 2 (COND (XOR 2 2) 2 2) 2 ) 2 2)
(COND (XOR nil (COND (XOR nil 2) 2 nil) nil ) 2 nil)
(COND (XOR t (COND (XOR t 2) 2 t) t ) 2 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 3) 3 1) 1 ) 3 1)
(COND (XOR 2 (COND (XOR 2 3) 3 2) 2 ) 3 2)
(COND (XOR nil (COND (XOR nil 3) 3 nil) nil ) 3 nil)
(COND (XOR t (COND (XOR t 3) 3 t) t ) 3 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 ()) () 1) 1 ) () 1)
(COND (XOR 2 (COND (XOR 2 ()) () 2) 2 ) () 2)
(COND (XOR nil (COND (XOR nil ()) () nil) nil ) () nil)
(COND (XOR t (COND (XOR t ()) () t) t ) () t)
(COND (XOR (cons t t) (COND (XOR (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 (())) (()) 1) 1 ) (()) 1)
(COND (XOR 2 (COND (XOR 2 (())) (()) 2) 2 ) (()) 2)
(COND (XOR nil (COND (XOR nil (())) (()) nil) nil ) (()) nil)
(COND (XOR t (COND (XOR t (())) (()) t) t ) (()) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 ((()))) ((())) 1) 1 ) ((())) 1)
(COND (XOR 2 (COND (XOR 2 ((()))) ((())) 2) 2 ) ((())) 2)
(COND (XOR nil (COND (XOR nil ((()))) ((())) nil) nil ) ((())) nil)
(COND (XOR t (COND (XOR t ((()))) ((())) t) t ) ((())) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(COND (XOR 2 (COND (XOR 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(COND (XOR nil (COND (XOR nil (((())))) (((()))) nil) nil ) (((()))) nil)
(COND (XOR t (COND (XOR t (((())))) (((()))) t) t ) (((()))) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 'A) 'A 1) 1 ) 'A 1)
(COND (XOR 2 (COND (XOR 2 'A) 'A 2) 2 ) 'A 2)
(COND (XOR nil (COND (XOR nil 'A) 'A nil) nil ) 'A nil)
(COND (XOR t (COND (XOR t 'A) 'A t) t ) 'A t)
(COND (XOR (cons t t) (COND (XOR (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 'B) 'B 1) 1 ) 'B 1)
(COND (XOR 2 (COND (XOR 2 'B) 'B 2) 2 ) 'B 2)
(COND (XOR nil (COND (XOR nil 'B) 'B nil) nil ) 'B nil)
(COND (XOR t (COND (XOR t 'B) 'B t) t ) 'B t)
(COND (XOR (cons t t) (COND (XOR (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 'C) 'C 1) 1 ) 'C 1)
(COND (XOR 2 (COND (XOR 2 'C) 'C 2) 2 ) 'C 2)
(COND (XOR nil (COND (XOR nil 'C) 'C nil) nil ) 'C nil)
(COND (XOR t (COND (XOR t 'C) 'C t) t ) 'C t)
(COND (XOR (cons t t) (COND (XOR (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 '1) '1 1) 1 ) '1 1)
(COND (XOR 2 (COND (XOR 2 '1) '1 2) 2 ) '1 2)
(COND (XOR nil (COND (XOR nil '1) '1 nil) nil ) '1 nil)
(COND (XOR t (COND (XOR t '1) '1 t) t ) '1 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 '2) '2 1) 1 ) '2 1)
(COND (XOR 2 (COND (XOR 2 '2) '2 2) 2 ) '2 2)
(COND (XOR nil (COND (XOR nil '2) '2 nil) nil ) '2 nil)
(COND (XOR t (COND (XOR t '2) '2 t) t ) '2 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 '3) '3 1) 1 ) '3 1)
(COND (XOR 2 (COND (XOR 2 '3) '3 2) 2 ) '3 2)
(COND (XOR nil (COND (XOR nil '3) '3 nil) nil ) '3 nil)
(COND (XOR t (COND (XOR t '3) '3 t) t ) '3 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 '()) '() 1) 1 ) '() 1)
(COND (XOR 2 (COND (XOR 2 '()) '() 2) 2 ) '() 2)
(COND (XOR nil (COND (XOR nil '()) '() nil) nil ) '() nil)
(COND (XOR t (COND (XOR t '()) '() t) t ) '() t)
(COND (XOR (cons t t) (COND (XOR (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 '(())) '(()) 1) 1 ) '(()) 1)
(COND (XOR 2 (COND (XOR 2 '(())) '(()) 2) 2 ) '(()) 2)
(COND (XOR nil (COND (XOR nil '(())) '(()) nil) nil ) '(()) nil)
(COND (XOR t (COND (XOR t '(())) '(()) t) t ) '(()) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 '((()))) '((())) 1) 1 ) '((())) 1)
(COND (XOR 2 (COND (XOR 2 '((()))) '((())) 2) 2 ) '((())) 2)
(COND (XOR nil (COND (XOR nil '((()))) '((())) nil) nil ) '((())) nil)
(COND (XOR t (COND (XOR t '((()))) '((())) t) t ) '((())) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(COND (XOR 2 (COND (XOR 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(COND (XOR nil (COND (XOR nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(COND (XOR t (COND (XOR t '(((())))) '(((()))) t) t ) '(((()))) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 ,A) ,A 1) 1 ) ,A 1)
(COND (XOR 2 (COND (XOR 2 ,A) ,A 2) 2 ) ,A 2)
(COND (XOR nil (COND (XOR nil ,A) ,A nil) nil ) ,A nil)
(COND (XOR t (COND (XOR t ,A) ,A t) t ) ,A t)
(COND (XOR (cons t t) (COND (XOR (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 ,1) ,1 1) 1 ) ,1 1)
(COND (XOR 2 (COND (XOR 2 ,1) ,1 2) 2 ) ,1 2)
(COND (XOR nil (COND (XOR nil ,1) ,1 nil) nil ) ,1 nil)
(COND (XOR t (COND (XOR t ,1) ,1 t) t ) ,1 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 ,()) ,() 1) 1 ) ,() 1)
(COND (XOR 2 (COND (XOR 2 ,()) ,() 2) 2 ) ,() 2)
(COND (XOR nil (COND (XOR nil ,()) ,() nil) nil ) ,() nil)
(COND (XOR t (COND (XOR t ,()) ,() t) t ) ,() t)
(COND (XOR (cons t t) (COND (XOR (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(COND (XOR 2 (COND (XOR 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(COND (XOR nil (COND (XOR nil ,(())) ,(()) nil) nil ) ,(()) nil)
(COND (XOR t (COND (XOR t ,(())) ,(()) t) t ) ,(()) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'A) `'A 1) 1 ) `'A 1)
(COND (XOR 2 (COND (XOR 2 `'A) `'A 2) 2 ) `'A 2)
(COND (XOR nil (COND (XOR nil `'A) `'A nil) nil ) `'A nil)
(COND (XOR t (COND (XOR t `'A) `'A t) t ) `'A t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'B) `'B 1) 1 ) `'B 1)
(COND (XOR 2 (COND (XOR 2 `'B) `'B 2) 2 ) `'B 2)
(COND (XOR nil (COND (XOR nil `'B) `'B nil) nil ) `'B nil)
(COND (XOR t (COND (XOR t `'B) `'B t) t ) `'B t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'C) `'C 1) 1 ) `'C 1)
(COND (XOR 2 (COND (XOR 2 `'C) `'C 2) 2 ) `'C 2)
(COND (XOR nil (COND (XOR nil `'C) `'C nil) nil ) `'C nil)
(COND (XOR t (COND (XOR t `'C) `'C t) t ) `'C t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'1) `'1 1) 1 ) `'1 1)
(COND (XOR 2 (COND (XOR 2 `'1) `'1 2) 2 ) `'1 2)
(COND (XOR nil (COND (XOR nil `'1) `'1 nil) nil ) `'1 nil)
(COND (XOR t (COND (XOR t `'1) `'1 t) t ) `'1 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'2) `'2 1) 1 ) `'2 1)
(COND (XOR 2 (COND (XOR 2 `'2) `'2 2) 2 ) `'2 2)
(COND (XOR nil (COND (XOR nil `'2) `'2 nil) nil ) `'2 nil)
(COND (XOR t (COND (XOR t `'2) `'2 t) t ) `'2 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'3) `'3 1) 1 ) `'3 1)
(COND (XOR 2 (COND (XOR 2 `'3) `'3 2) 2 ) `'3 2)
(COND (XOR nil (COND (XOR nil `'3) `'3 nil) nil ) `'3 nil)
(COND (XOR t (COND (XOR t `'3) `'3 t) t ) `'3 t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'()) `'() 1) 1 ) `'() 1)
(COND (XOR 2 (COND (XOR 2 `'()) `'() 2) 2 ) `'() 2)
(COND (XOR nil (COND (XOR nil `'()) `'() nil) nil ) `'() nil)
(COND (XOR t (COND (XOR t `'()) `'() t) t ) `'() t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(COND (XOR 2 (COND (XOR 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(COND (XOR nil (COND (XOR nil `'(())) `'(()) nil) nil ) `'(()) nil)
(COND (XOR t (COND (XOR t `'(())) `'(()) t) t ) `'(()) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(COND (XOR 2 (COND (XOR 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(COND (XOR nil (COND (XOR nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(COND (XOR t (COND (XOR t `'((()))) `'((())) t) t ) `'((())) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(COND (XOR 1 (COND (XOR 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(COND (XOR 2 (COND (XOR 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(COND (XOR nil (COND (XOR nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(COND (XOR t (COND (XOR t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(COND (XOR (cons t t) (COND (XOR (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(COND (XOR (cons nil t) (COND (XOR (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(COND (XOR (cons nil nil) (COND (XOR (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(COND (XOR (cons 0 0) (COND (XOR (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(COND (XOR (cons 1 1) (COND (XOR (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(COND (XOR (list 1 2 3) (COND (XOR (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(COND (XOR (list (cons 1 1 ) ) (COND (XOR (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 T) T 1) 1 ) T 1)
(CONS (COND 2 (CONS (COND 2 T) T 2) 2 ) T 2)
(CONS (COND nil (CONS (COND nil T) T nil) nil ) T nil)
(CONS (COND t (CONS (COND t T) T t) t ) T t)
(CONS (COND (cons t t) (CONS (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 NIL) NIL 1) 1 ) NIL 1)
(CONS (COND 2 (CONS (COND 2 NIL) NIL 2) 2 ) NIL 2)
(CONS (COND nil (CONS (COND nil NIL) NIL nil) nil ) NIL nil)
(CONS (COND t (CONS (COND t NIL) NIL t) t ) NIL t)
(CONS (COND (cons t t) (CONS (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 A) A 1) 1 ) A 1)
(CONS (COND 2 (CONS (COND 2 A) A 2) 2 ) A 2)
(CONS (COND nil (CONS (COND nil A) A nil) nil ) A nil)
(CONS (COND t (CONS (COND t A) A t) t ) A t)
(CONS (COND (cons t t) (CONS (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 B) B 1) 1 ) B 1)
(CONS (COND 2 (CONS (COND 2 B) B 2) 2 ) B 2)
(CONS (COND nil (CONS (COND nil B) B nil) nil ) B nil)
(CONS (COND t (CONS (COND t B) B t) t ) B t)
(CONS (COND (cons t t) (CONS (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 C) C 1) 1 ) C 1)
(CONS (COND 2 (CONS (COND 2 C) C 2) 2 ) C 2)
(CONS (COND nil (CONS (COND nil C) C nil) nil ) C nil)
(CONS (COND t (CONS (COND t C) C t) t ) C t)
(CONS (COND (cons t t) (CONS (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 1) 1 1) 1 ) 1 1)
(CONS (COND 2 (CONS (COND 2 1) 1 2) 2 ) 1 2)
(CONS (COND nil (CONS (COND nil 1) 1 nil) nil ) 1 nil)
(CONS (COND t (CONS (COND t 1) 1 t) t ) 1 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 2) 2 1) 1 ) 2 1)
(CONS (COND 2 (CONS (COND 2 2) 2 2) 2 ) 2 2)
(CONS (COND nil (CONS (COND nil 2) 2 nil) nil ) 2 nil)
(CONS (COND t (CONS (COND t 2) 2 t) t ) 2 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 3) 3 1) 1 ) 3 1)
(CONS (COND 2 (CONS (COND 2 3) 3 2) 2 ) 3 2)
(CONS (COND nil (CONS (COND nil 3) 3 nil) nil ) 3 nil)
(CONS (COND t (CONS (COND t 3) 3 t) t ) 3 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 ()) () 1) 1 ) () 1)
(CONS (COND 2 (CONS (COND 2 ()) () 2) 2 ) () 2)
(CONS (COND nil (CONS (COND nil ()) () nil) nil ) () nil)
(CONS (COND t (CONS (COND t ()) () t) t ) () t)
(CONS (COND (cons t t) (CONS (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 (())) (()) 1) 1 ) (()) 1)
(CONS (COND 2 (CONS (COND 2 (())) (()) 2) 2 ) (()) 2)
(CONS (COND nil (CONS (COND nil (())) (()) nil) nil ) (()) nil)
(CONS (COND t (CONS (COND t (())) (()) t) t ) (()) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CONS (COND 2 (CONS (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CONS (COND nil (CONS (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(CONS (COND t (CONS (COND t ((()))) ((())) t) t ) ((())) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CONS (COND 2 (CONS (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CONS (COND nil (CONS (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CONS (COND t (CONS (COND t (((())))) (((()))) t) t ) (((()))) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 'A) 'A 1) 1 ) 'A 1)
(CONS (COND 2 (CONS (COND 2 'A) 'A 2) 2 ) 'A 2)
(CONS (COND nil (CONS (COND nil 'A) 'A nil) nil ) 'A nil)
(CONS (COND t (CONS (COND t 'A) 'A t) t ) 'A t)
(CONS (COND (cons t t) (CONS (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 'B) 'B 1) 1 ) 'B 1)
(CONS (COND 2 (CONS (COND 2 'B) 'B 2) 2 ) 'B 2)
(CONS (COND nil (CONS (COND nil 'B) 'B nil) nil ) 'B nil)
(CONS (COND t (CONS (COND t 'B) 'B t) t ) 'B t)
(CONS (COND (cons t t) (CONS (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 'C) 'C 1) 1 ) 'C 1)
(CONS (COND 2 (CONS (COND 2 'C) 'C 2) 2 ) 'C 2)
(CONS (COND nil (CONS (COND nil 'C) 'C nil) nil ) 'C nil)
(CONS (COND t (CONS (COND t 'C) 'C t) t ) 'C t)
(CONS (COND (cons t t) (CONS (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 '1) '1 1) 1 ) '1 1)
(CONS (COND 2 (CONS (COND 2 '1) '1 2) 2 ) '1 2)
(CONS (COND nil (CONS (COND nil '1) '1 nil) nil ) '1 nil)
(CONS (COND t (CONS (COND t '1) '1 t) t ) '1 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 '2) '2 1) 1 ) '2 1)
(CONS (COND 2 (CONS (COND 2 '2) '2 2) 2 ) '2 2)
(CONS (COND nil (CONS (COND nil '2) '2 nil) nil ) '2 nil)
(CONS (COND t (CONS (COND t '2) '2 t) t ) '2 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 '3) '3 1) 1 ) '3 1)
(CONS (COND 2 (CONS (COND 2 '3) '3 2) 2 ) '3 2)
(CONS (COND nil (CONS (COND nil '3) '3 nil) nil ) '3 nil)
(CONS (COND t (CONS (COND t '3) '3 t) t ) '3 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 '()) '() 1) 1 ) '() 1)
(CONS (COND 2 (CONS (COND 2 '()) '() 2) 2 ) '() 2)
(CONS (COND nil (CONS (COND nil '()) '() nil) nil ) '() nil)
(CONS (COND t (CONS (COND t '()) '() t) t ) '() t)
(CONS (COND (cons t t) (CONS (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(CONS (COND 2 (CONS (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(CONS (COND nil (CONS (COND nil '(())) '(()) nil) nil ) '(()) nil)
(CONS (COND t (CONS (COND t '(())) '(()) t) t ) '(()) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CONS (COND 2 (CONS (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CONS (COND nil (CONS (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(CONS (COND t (CONS (COND t '((()))) '((())) t) t ) '((())) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CONS (COND 2 (CONS (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CONS (COND nil (CONS (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CONS (COND t (CONS (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 ,A) ,A 1) 1 ) ,A 1)
(CONS (COND 2 (CONS (COND 2 ,A) ,A 2) 2 ) ,A 2)
(CONS (COND nil (CONS (COND nil ,A) ,A nil) nil ) ,A nil)
(CONS (COND t (CONS (COND t ,A) ,A t) t ) ,A t)
(CONS (COND (cons t t) (CONS (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 ,1) ,1 1) 1 ) ,1 1)
(CONS (COND 2 (CONS (COND 2 ,1) ,1 2) 2 ) ,1 2)
(CONS (COND nil (CONS (COND nil ,1) ,1 nil) nil ) ,1 nil)
(CONS (COND t (CONS (COND t ,1) ,1 t) t ) ,1 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 ,()) ,() 1) 1 ) ,() 1)
(CONS (COND 2 (CONS (COND 2 ,()) ,() 2) 2 ) ,() 2)
(CONS (COND nil (CONS (COND nil ,()) ,() nil) nil ) ,() nil)
(CONS (COND t (CONS (COND t ,()) ,() t) t ) ,() t)
(CONS (COND (cons t t) (CONS (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CONS (COND 2 (CONS (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CONS (COND nil (CONS (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CONS (COND t (CONS (COND t ,(())) ,(()) t) t ) ,(()) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'A) `'A 1) 1 ) `'A 1)
(CONS (COND 2 (CONS (COND 2 `'A) `'A 2) 2 ) `'A 2)
(CONS (COND nil (CONS (COND nil `'A) `'A nil) nil ) `'A nil)
(CONS (COND t (CONS (COND t `'A) `'A t) t ) `'A t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'B) `'B 1) 1 ) `'B 1)
(CONS (COND 2 (CONS (COND 2 `'B) `'B 2) 2 ) `'B 2)
(CONS (COND nil (CONS (COND nil `'B) `'B nil) nil ) `'B nil)
(CONS (COND t (CONS (COND t `'B) `'B t) t ) `'B t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'C) `'C 1) 1 ) `'C 1)
(CONS (COND 2 (CONS (COND 2 `'C) `'C 2) 2 ) `'C 2)
(CONS (COND nil (CONS (COND nil `'C) `'C nil) nil ) `'C nil)
(CONS (COND t (CONS (COND t `'C) `'C t) t ) `'C t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'1) `'1 1) 1 ) `'1 1)
(CONS (COND 2 (CONS (COND 2 `'1) `'1 2) 2 ) `'1 2)
(CONS (COND nil (CONS (COND nil `'1) `'1 nil) nil ) `'1 nil)
(CONS (COND t (CONS (COND t `'1) `'1 t) t ) `'1 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'2) `'2 1) 1 ) `'2 1)
(CONS (COND 2 (CONS (COND 2 `'2) `'2 2) 2 ) `'2 2)
(CONS (COND nil (CONS (COND nil `'2) `'2 nil) nil ) `'2 nil)
(CONS (COND t (CONS (COND t `'2) `'2 t) t ) `'2 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'3) `'3 1) 1 ) `'3 1)
(CONS (COND 2 (CONS (COND 2 `'3) `'3 2) 2 ) `'3 2)
(CONS (COND nil (CONS (COND nil `'3) `'3 nil) nil ) `'3 nil)
(CONS (COND t (CONS (COND t `'3) `'3 t) t ) `'3 t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'()) `'() 1) 1 ) `'() 1)
(CONS (COND 2 (CONS (COND 2 `'()) `'() 2) 2 ) `'() 2)
(CONS (COND nil (CONS (COND nil `'()) `'() nil) nil ) `'() nil)
(CONS (COND t (CONS (COND t `'()) `'() t) t ) `'() t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CONS (COND 2 (CONS (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CONS (COND nil (CONS (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CONS (COND t (CONS (COND t `'(())) `'(()) t) t ) `'(()) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CONS (COND 2 (CONS (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CONS (COND nil (CONS (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CONS (COND t (CONS (COND t `'((()))) `'((())) t) t ) `'((())) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CONS (COND 1 (CONS (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CONS (COND 2 (CONS (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CONS (COND nil (CONS (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CONS (COND t (CONS (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CONS (COND (cons t t) (CONS (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CONS (COND (cons nil t) (CONS (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CONS (COND (cons nil nil) (CONS (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CONS (COND (cons 0 0) (CONS (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CONS (COND (cons 1 1) (CONS (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CONS (COND (list 1 2 3) (CONS (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CONS (COND (list (cons 1 1 ) ) (CONS (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 T) T 1) 1 ) T 1)
(CONSP (COND 2 (CONSP (COND 2 T) T 2) 2 ) T 2)
(CONSP (COND nil (CONSP (COND nil T) T nil) nil ) T nil)
(CONSP (COND t (CONSP (COND t T) T t) t ) T t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 NIL) NIL 1) 1 ) NIL 1)
(CONSP (COND 2 (CONSP (COND 2 NIL) NIL 2) 2 ) NIL 2)
(CONSP (COND nil (CONSP (COND nil NIL) NIL nil) nil ) NIL nil)
(CONSP (COND t (CONSP (COND t NIL) NIL t) t ) NIL t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 A) A 1) 1 ) A 1)
(CONSP (COND 2 (CONSP (COND 2 A) A 2) 2 ) A 2)
(CONSP (COND nil (CONSP (COND nil A) A nil) nil ) A nil)
(CONSP (COND t (CONSP (COND t A) A t) t ) A t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 B) B 1) 1 ) B 1)
(CONSP (COND 2 (CONSP (COND 2 B) B 2) 2 ) B 2)
(CONSP (COND nil (CONSP (COND nil B) B nil) nil ) B nil)
(CONSP (COND t (CONSP (COND t B) B t) t ) B t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 C) C 1) 1 ) C 1)
(CONSP (COND 2 (CONSP (COND 2 C) C 2) 2 ) C 2)
(CONSP (COND nil (CONSP (COND nil C) C nil) nil ) C nil)
(CONSP (COND t (CONSP (COND t C) C t) t ) C t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 1) 1 1) 1 ) 1 1)
(CONSP (COND 2 (CONSP (COND 2 1) 1 2) 2 ) 1 2)
(CONSP (COND nil (CONSP (COND nil 1) 1 nil) nil ) 1 nil)
(CONSP (COND t (CONSP (COND t 1) 1 t) t ) 1 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 2) 2 1) 1 ) 2 1)
(CONSP (COND 2 (CONSP (COND 2 2) 2 2) 2 ) 2 2)
(CONSP (COND nil (CONSP (COND nil 2) 2 nil) nil ) 2 nil)
(CONSP (COND t (CONSP (COND t 2) 2 t) t ) 2 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 3) 3 1) 1 ) 3 1)
(CONSP (COND 2 (CONSP (COND 2 3) 3 2) 2 ) 3 2)
(CONSP (COND nil (CONSP (COND nil 3) 3 nil) nil ) 3 nil)
(CONSP (COND t (CONSP (COND t 3) 3 t) t ) 3 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 ()) () 1) 1 ) () 1)
(CONSP (COND 2 (CONSP (COND 2 ()) () 2) 2 ) () 2)
(CONSP (COND nil (CONSP (COND nil ()) () nil) nil ) () nil)
(CONSP (COND t (CONSP (COND t ()) () t) t ) () t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 (())) (()) 1) 1 ) (()) 1)
(CONSP (COND 2 (CONSP (COND 2 (())) (()) 2) 2 ) (()) 2)
(CONSP (COND nil (CONSP (COND nil (())) (()) nil) nil ) (()) nil)
(CONSP (COND t (CONSP (COND t (())) (()) t) t ) (()) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(CONSP (COND 2 (CONSP (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(CONSP (COND nil (CONSP (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(CONSP (COND t (CONSP (COND t ((()))) ((())) t) t ) ((())) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(CONSP (COND 2 (CONSP (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(CONSP (COND nil (CONSP (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(CONSP (COND t (CONSP (COND t (((())))) (((()))) t) t ) (((()))) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 'A) 'A 1) 1 ) 'A 1)
(CONSP (COND 2 (CONSP (COND 2 'A) 'A 2) 2 ) 'A 2)
(CONSP (COND nil (CONSP (COND nil 'A) 'A nil) nil ) 'A nil)
(CONSP (COND t (CONSP (COND t 'A) 'A t) t ) 'A t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 'B) 'B 1) 1 ) 'B 1)
(CONSP (COND 2 (CONSP (COND 2 'B) 'B 2) 2 ) 'B 2)
(CONSP (COND nil (CONSP (COND nil 'B) 'B nil) nil ) 'B nil)
(CONSP (COND t (CONSP (COND t 'B) 'B t) t ) 'B t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 'C) 'C 1) 1 ) 'C 1)
(CONSP (COND 2 (CONSP (COND 2 'C) 'C 2) 2 ) 'C 2)
(CONSP (COND nil (CONSP (COND nil 'C) 'C nil) nil ) 'C nil)
(CONSP (COND t (CONSP (COND t 'C) 'C t) t ) 'C t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 '1) '1 1) 1 ) '1 1)
(CONSP (COND 2 (CONSP (COND 2 '1) '1 2) 2 ) '1 2)
(CONSP (COND nil (CONSP (COND nil '1) '1 nil) nil ) '1 nil)
(CONSP (COND t (CONSP (COND t '1) '1 t) t ) '1 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 '2) '2 1) 1 ) '2 1)
(CONSP (COND 2 (CONSP (COND 2 '2) '2 2) 2 ) '2 2)
(CONSP (COND nil (CONSP (COND nil '2) '2 nil) nil ) '2 nil)
(CONSP (COND t (CONSP (COND t '2) '2 t) t ) '2 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 '3) '3 1) 1 ) '3 1)
(CONSP (COND 2 (CONSP (COND 2 '3) '3 2) 2 ) '3 2)
(CONSP (COND nil (CONSP (COND nil '3) '3 nil) nil ) '3 nil)
(CONSP (COND t (CONSP (COND t '3) '3 t) t ) '3 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 '()) '() 1) 1 ) '() 1)
(CONSP (COND 2 (CONSP (COND 2 '()) '() 2) 2 ) '() 2)
(CONSP (COND nil (CONSP (COND nil '()) '() nil) nil ) '() nil)
(CONSP (COND t (CONSP (COND t '()) '() t) t ) '() t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(CONSP (COND 2 (CONSP (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(CONSP (COND nil (CONSP (COND nil '(())) '(()) nil) nil ) '(()) nil)
(CONSP (COND t (CONSP (COND t '(())) '(()) t) t ) '(()) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(CONSP (COND 2 (CONSP (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(CONSP (COND nil (CONSP (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(CONSP (COND t (CONSP (COND t '((()))) '((())) t) t ) '((())) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(CONSP (COND 2 (CONSP (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(CONSP (COND nil (CONSP (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(CONSP (COND t (CONSP (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 ,A) ,A 1) 1 ) ,A 1)
(CONSP (COND 2 (CONSP (COND 2 ,A) ,A 2) 2 ) ,A 2)
(CONSP (COND nil (CONSP (COND nil ,A) ,A nil) nil ) ,A nil)
(CONSP (COND t (CONSP (COND t ,A) ,A t) t ) ,A t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 ,1) ,1 1) 1 ) ,1 1)
(CONSP (COND 2 (CONSP (COND 2 ,1) ,1 2) 2 ) ,1 2)
(CONSP (COND nil (CONSP (COND nil ,1) ,1 nil) nil ) ,1 nil)
(CONSP (COND t (CONSP (COND t ,1) ,1 t) t ) ,1 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 ,()) ,() 1) 1 ) ,() 1)
(CONSP (COND 2 (CONSP (COND 2 ,()) ,() 2) 2 ) ,() 2)
(CONSP (COND nil (CONSP (COND nil ,()) ,() nil) nil ) ,() nil)
(CONSP (COND t (CONSP (COND t ,()) ,() t) t ) ,() t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(CONSP (COND 2 (CONSP (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(CONSP (COND nil (CONSP (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(CONSP (COND t (CONSP (COND t ,(())) ,(()) t) t ) ,(()) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'A) `'A 1) 1 ) `'A 1)
(CONSP (COND 2 (CONSP (COND 2 `'A) `'A 2) 2 ) `'A 2)
(CONSP (COND nil (CONSP (COND nil `'A) `'A nil) nil ) `'A nil)
(CONSP (COND t (CONSP (COND t `'A) `'A t) t ) `'A t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'B) `'B 1) 1 ) `'B 1)
(CONSP (COND 2 (CONSP (COND 2 `'B) `'B 2) 2 ) `'B 2)
(CONSP (COND nil (CONSP (COND nil `'B) `'B nil) nil ) `'B nil)
(CONSP (COND t (CONSP (COND t `'B) `'B t) t ) `'B t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'C) `'C 1) 1 ) `'C 1)
(CONSP (COND 2 (CONSP (COND 2 `'C) `'C 2) 2 ) `'C 2)
(CONSP (COND nil (CONSP (COND nil `'C) `'C nil) nil ) `'C nil)
(CONSP (COND t (CONSP (COND t `'C) `'C t) t ) `'C t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'1) `'1 1) 1 ) `'1 1)
(CONSP (COND 2 (CONSP (COND 2 `'1) `'1 2) 2 ) `'1 2)
(CONSP (COND nil (CONSP (COND nil `'1) `'1 nil) nil ) `'1 nil)
(CONSP (COND t (CONSP (COND t `'1) `'1 t) t ) `'1 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'2) `'2 1) 1 ) `'2 1)
(CONSP (COND 2 (CONSP (COND 2 `'2) `'2 2) 2 ) `'2 2)
(CONSP (COND nil (CONSP (COND nil `'2) `'2 nil) nil ) `'2 nil)
(CONSP (COND t (CONSP (COND t `'2) `'2 t) t ) `'2 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'3) `'3 1) 1 ) `'3 1)
(CONSP (COND 2 (CONSP (COND 2 `'3) `'3 2) 2 ) `'3 2)
(CONSP (COND nil (CONSP (COND nil `'3) `'3 nil) nil ) `'3 nil)
(CONSP (COND t (CONSP (COND t `'3) `'3 t) t ) `'3 t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'()) `'() 1) 1 ) `'() 1)
(CONSP (COND 2 (CONSP (COND 2 `'()) `'() 2) 2 ) `'() 2)
(CONSP (COND nil (CONSP (COND nil `'()) `'() nil) nil ) `'() nil)
(CONSP (COND t (CONSP (COND t `'()) `'() t) t ) `'() t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(CONSP (COND 2 (CONSP (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(CONSP (COND nil (CONSP (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(CONSP (COND t (CONSP (COND t `'(())) `'(()) t) t ) `'(()) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(CONSP (COND 2 (CONSP (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(CONSP (COND nil (CONSP (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(CONSP (COND t (CONSP (COND t `'((()))) `'((())) t) t ) `'((())) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(CONSP (COND 1 (CONSP (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(CONSP (COND 2 (CONSP (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(CONSP (COND nil (CONSP (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(CONSP (COND t (CONSP (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(CONSP (COND (cons t t) (CONSP (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(CONSP (COND (cons nil t) (CONSP (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(CONSP (COND (cons nil nil) (CONSP (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(CONSP (COND (cons 0 0) (CONSP (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(CONSP (COND (cons 1 1) (CONSP (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(CONSP (COND (list 1 2 3) (CONSP (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(CONSP (COND (list (cons 1 1 ) ) (CONSP (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 T) T 1) 1 ) T 1)
(EQ (COND 2 (EQ (COND 2 T) T 2) 2 ) T 2)
(EQ (COND nil (EQ (COND nil T) T nil) nil ) T nil)
(EQ (COND t (EQ (COND t T) T t) t ) T t)
(EQ (COND (cons t t) (EQ (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 NIL) NIL 1) 1 ) NIL 1)
(EQ (COND 2 (EQ (COND 2 NIL) NIL 2) 2 ) NIL 2)
(EQ (COND nil (EQ (COND nil NIL) NIL nil) nil ) NIL nil)
(EQ (COND t (EQ (COND t NIL) NIL t) t ) NIL t)
(EQ (COND (cons t t) (EQ (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 A) A 1) 1 ) A 1)
(EQ (COND 2 (EQ (COND 2 A) A 2) 2 ) A 2)
(EQ (COND nil (EQ (COND nil A) A nil) nil ) A nil)
(EQ (COND t (EQ (COND t A) A t) t ) A t)
(EQ (COND (cons t t) (EQ (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 B) B 1) 1 ) B 1)
(EQ (COND 2 (EQ (COND 2 B) B 2) 2 ) B 2)
(EQ (COND nil (EQ (COND nil B) B nil) nil ) B nil)
(EQ (COND t (EQ (COND t B) B t) t ) B t)
(EQ (COND (cons t t) (EQ (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 C) C 1) 1 ) C 1)
(EQ (COND 2 (EQ (COND 2 C) C 2) 2 ) C 2)
(EQ (COND nil (EQ (COND nil C) C nil) nil ) C nil)
(EQ (COND t (EQ (COND t C) C t) t ) C t)
(EQ (COND (cons t t) (EQ (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 1) 1 1) 1 ) 1 1)
(EQ (COND 2 (EQ (COND 2 1) 1 2) 2 ) 1 2)
(EQ (COND nil (EQ (COND nil 1) 1 nil) nil ) 1 nil)
(EQ (COND t (EQ (COND t 1) 1 t) t ) 1 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 2) 2 1) 1 ) 2 1)
(EQ (COND 2 (EQ (COND 2 2) 2 2) 2 ) 2 2)
(EQ (COND nil (EQ (COND nil 2) 2 nil) nil ) 2 nil)
(EQ (COND t (EQ (COND t 2) 2 t) t ) 2 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 3) 3 1) 1 ) 3 1)
(EQ (COND 2 (EQ (COND 2 3) 3 2) 2 ) 3 2)
(EQ (COND nil (EQ (COND nil 3) 3 nil) nil ) 3 nil)
(EQ (COND t (EQ (COND t 3) 3 t) t ) 3 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 ()) () 1) 1 ) () 1)
(EQ (COND 2 (EQ (COND 2 ()) () 2) 2 ) () 2)
(EQ (COND nil (EQ (COND nil ()) () nil) nil ) () nil)
(EQ (COND t (EQ (COND t ()) () t) t ) () t)
(EQ (COND (cons t t) (EQ (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 (())) (()) 1) 1 ) (()) 1)
(EQ (COND 2 (EQ (COND 2 (())) (()) 2) 2 ) (()) 2)
(EQ (COND nil (EQ (COND nil (())) (()) nil) nil ) (()) nil)
(EQ (COND t (EQ (COND t (())) (()) t) t ) (()) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(EQ (COND 2 (EQ (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(EQ (COND nil (EQ (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(EQ (COND t (EQ (COND t ((()))) ((())) t) t ) ((())) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(EQ (COND 2 (EQ (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(EQ (COND nil (EQ (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(EQ (COND t (EQ (COND t (((())))) (((()))) t) t ) (((()))) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 'A) 'A 1) 1 ) 'A 1)
(EQ (COND 2 (EQ (COND 2 'A) 'A 2) 2 ) 'A 2)
(EQ (COND nil (EQ (COND nil 'A) 'A nil) nil ) 'A nil)
(EQ (COND t (EQ (COND t 'A) 'A t) t ) 'A t)
(EQ (COND (cons t t) (EQ (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 'B) 'B 1) 1 ) 'B 1)
(EQ (COND 2 (EQ (COND 2 'B) 'B 2) 2 ) 'B 2)
(EQ (COND nil (EQ (COND nil 'B) 'B nil) nil ) 'B nil)
(EQ (COND t (EQ (COND t 'B) 'B t) t ) 'B t)
(EQ (COND (cons t t) (EQ (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 'C) 'C 1) 1 ) 'C 1)
(EQ (COND 2 (EQ (COND 2 'C) 'C 2) 2 ) 'C 2)
(EQ (COND nil (EQ (COND nil 'C) 'C nil) nil ) 'C nil)
(EQ (COND t (EQ (COND t 'C) 'C t) t ) 'C t)
(EQ (COND (cons t t) (EQ (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 '1) '1 1) 1 ) '1 1)
(EQ (COND 2 (EQ (COND 2 '1) '1 2) 2 ) '1 2)
(EQ (COND nil (EQ (COND nil '1) '1 nil) nil ) '1 nil)
(EQ (COND t (EQ (COND t '1) '1 t) t ) '1 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 '2) '2 1) 1 ) '2 1)
(EQ (COND 2 (EQ (COND 2 '2) '2 2) 2 ) '2 2)
(EQ (COND nil (EQ (COND nil '2) '2 nil) nil ) '2 nil)
(EQ (COND t (EQ (COND t '2) '2 t) t ) '2 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 '3) '3 1) 1 ) '3 1)
(EQ (COND 2 (EQ (COND 2 '3) '3 2) 2 ) '3 2)
(EQ (COND nil (EQ (COND nil '3) '3 nil) nil ) '3 nil)
(EQ (COND t (EQ (COND t '3) '3 t) t ) '3 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 '()) '() 1) 1 ) '() 1)
(EQ (COND 2 (EQ (COND 2 '()) '() 2) 2 ) '() 2)
(EQ (COND nil (EQ (COND nil '()) '() nil) nil ) '() nil)
(EQ (COND t (EQ (COND t '()) '() t) t ) '() t)
(EQ (COND (cons t t) (EQ (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(EQ (COND 2 (EQ (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(EQ (COND nil (EQ (COND nil '(())) '(()) nil) nil ) '(()) nil)
(EQ (COND t (EQ (COND t '(())) '(()) t) t ) '(()) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(EQ (COND 2 (EQ (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(EQ (COND nil (EQ (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(EQ (COND t (EQ (COND t '((()))) '((())) t) t ) '((())) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(EQ (COND 2 (EQ (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(EQ (COND nil (EQ (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(EQ (COND t (EQ (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 ,A) ,A 1) 1 ) ,A 1)
(EQ (COND 2 (EQ (COND 2 ,A) ,A 2) 2 ) ,A 2)
(EQ (COND nil (EQ (COND nil ,A) ,A nil) nil ) ,A nil)
(EQ (COND t (EQ (COND t ,A) ,A t) t ) ,A t)
(EQ (COND (cons t t) (EQ (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 ,1) ,1 1) 1 ) ,1 1)
(EQ (COND 2 (EQ (COND 2 ,1) ,1 2) 2 ) ,1 2)
(EQ (COND nil (EQ (COND nil ,1) ,1 nil) nil ) ,1 nil)
(EQ (COND t (EQ (COND t ,1) ,1 t) t ) ,1 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 ,()) ,() 1) 1 ) ,() 1)
(EQ (COND 2 (EQ (COND 2 ,()) ,() 2) 2 ) ,() 2)
(EQ (COND nil (EQ (COND nil ,()) ,() nil) nil ) ,() nil)
(EQ (COND t (EQ (COND t ,()) ,() t) t ) ,() t)
(EQ (COND (cons t t) (EQ (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(EQ (COND 2 (EQ (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(EQ (COND nil (EQ (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(EQ (COND t (EQ (COND t ,(())) ,(()) t) t ) ,(()) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'A) `'A 1) 1 ) `'A 1)
(EQ (COND 2 (EQ (COND 2 `'A) `'A 2) 2 ) `'A 2)
(EQ (COND nil (EQ (COND nil `'A) `'A nil) nil ) `'A nil)
(EQ (COND t (EQ (COND t `'A) `'A t) t ) `'A t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'B) `'B 1) 1 ) `'B 1)
(EQ (COND 2 (EQ (COND 2 `'B) `'B 2) 2 ) `'B 2)
(EQ (COND nil (EQ (COND nil `'B) `'B nil) nil ) `'B nil)
(EQ (COND t (EQ (COND t `'B) `'B t) t ) `'B t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'C) `'C 1) 1 ) `'C 1)
(EQ (COND 2 (EQ (COND 2 `'C) `'C 2) 2 ) `'C 2)
(EQ (COND nil (EQ (COND nil `'C) `'C nil) nil ) `'C nil)
(EQ (COND t (EQ (COND t `'C) `'C t) t ) `'C t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'1) `'1 1) 1 ) `'1 1)
(EQ (COND 2 (EQ (COND 2 `'1) `'1 2) 2 ) `'1 2)
(EQ (COND nil (EQ (COND nil `'1) `'1 nil) nil ) `'1 nil)
(EQ (COND t (EQ (COND t `'1) `'1 t) t ) `'1 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'2) `'2 1) 1 ) `'2 1)
(EQ (COND 2 (EQ (COND 2 `'2) `'2 2) 2 ) `'2 2)
(EQ (COND nil (EQ (COND nil `'2) `'2 nil) nil ) `'2 nil)
(EQ (COND t (EQ (COND t `'2) `'2 t) t ) `'2 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'3) `'3 1) 1 ) `'3 1)
(EQ (COND 2 (EQ (COND 2 `'3) `'3 2) 2 ) `'3 2)
(EQ (COND nil (EQ (COND nil `'3) `'3 nil) nil ) `'3 nil)
(EQ (COND t (EQ (COND t `'3) `'3 t) t ) `'3 t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'()) `'() 1) 1 ) `'() 1)
(EQ (COND 2 (EQ (COND 2 `'()) `'() 2) 2 ) `'() 2)
(EQ (COND nil (EQ (COND nil `'()) `'() nil) nil ) `'() nil)
(EQ (COND t (EQ (COND t `'()) `'() t) t ) `'() t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(EQ (COND 2 (EQ (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(EQ (COND nil (EQ (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(EQ (COND t (EQ (COND t `'(())) `'(()) t) t ) `'(()) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(EQ (COND 2 (EQ (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(EQ (COND nil (EQ (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(EQ (COND t (EQ (COND t `'((()))) `'((())) t) t ) `'((())) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(EQ (COND 1 (EQ (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(EQ (COND 2 (EQ (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(EQ (COND nil (EQ (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(EQ (COND t (EQ (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(EQ (COND (cons t t) (EQ (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(EQ (COND (cons nil t) (EQ (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(EQ (COND (cons nil nil) (EQ (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(EQ (COND (cons 0 0) (EQ (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(EQ (COND (cons 1 1) (EQ (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(EQ (COND (list 1 2 3) (EQ (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(EQ (COND (list (cons 1 1 ) ) (EQ (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 T) T 1) 1 ) T 1)
(EQL (COND 2 (EQL (COND 2 T) T 2) 2 ) T 2)
(EQL (COND nil (EQL (COND nil T) T nil) nil ) T nil)
(EQL (COND t (EQL (COND t T) T t) t ) T t)
(EQL (COND (cons t t) (EQL (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 NIL) NIL 1) 1 ) NIL 1)
(EQL (COND 2 (EQL (COND 2 NIL) NIL 2) 2 ) NIL 2)
(EQL (COND nil (EQL (COND nil NIL) NIL nil) nil ) NIL nil)
(EQL (COND t (EQL (COND t NIL) NIL t) t ) NIL t)
(EQL (COND (cons t t) (EQL (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 A) A 1) 1 ) A 1)
(EQL (COND 2 (EQL (COND 2 A) A 2) 2 ) A 2)
(EQL (COND nil (EQL (COND nil A) A nil) nil ) A nil)
(EQL (COND t (EQL (COND t A) A t) t ) A t)
(EQL (COND (cons t t) (EQL (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 B) B 1) 1 ) B 1)
(EQL (COND 2 (EQL (COND 2 B) B 2) 2 ) B 2)
(EQL (COND nil (EQL (COND nil B) B nil) nil ) B nil)
(EQL (COND t (EQL (COND t B) B t) t ) B t)
(EQL (COND (cons t t) (EQL (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 C) C 1) 1 ) C 1)
(EQL (COND 2 (EQL (COND 2 C) C 2) 2 ) C 2)
(EQL (COND nil (EQL (COND nil C) C nil) nil ) C nil)
(EQL (COND t (EQL (COND t C) C t) t ) C t)
(EQL (COND (cons t t) (EQL (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 1) 1 1) 1 ) 1 1)
(EQL (COND 2 (EQL (COND 2 1) 1 2) 2 ) 1 2)
(EQL (COND nil (EQL (COND nil 1) 1 nil) nil ) 1 nil)
(EQL (COND t (EQL (COND t 1) 1 t) t ) 1 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 2) 2 1) 1 ) 2 1)
(EQL (COND 2 (EQL (COND 2 2) 2 2) 2 ) 2 2)
(EQL (COND nil (EQL (COND nil 2) 2 nil) nil ) 2 nil)
(EQL (COND t (EQL (COND t 2) 2 t) t ) 2 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 3) 3 1) 1 ) 3 1)
(EQL (COND 2 (EQL (COND 2 3) 3 2) 2 ) 3 2)
(EQL (COND nil (EQL (COND nil 3) 3 nil) nil ) 3 nil)
(EQL (COND t (EQL (COND t 3) 3 t) t ) 3 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 ()) () 1) 1 ) () 1)
(EQL (COND 2 (EQL (COND 2 ()) () 2) 2 ) () 2)
(EQL (COND nil (EQL (COND nil ()) () nil) nil ) () nil)
(EQL (COND t (EQL (COND t ()) () t) t ) () t)
(EQL (COND (cons t t) (EQL (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 (())) (()) 1) 1 ) (()) 1)
(EQL (COND 2 (EQL (COND 2 (())) (()) 2) 2 ) (()) 2)
(EQL (COND nil (EQL (COND nil (())) (()) nil) nil ) (()) nil)
(EQL (COND t (EQL (COND t (())) (()) t) t ) (()) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(EQL (COND 2 (EQL (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(EQL (COND nil (EQL (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(EQL (COND t (EQL (COND t ((()))) ((())) t) t ) ((())) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(EQL (COND 2 (EQL (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(EQL (COND nil (EQL (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(EQL (COND t (EQL (COND t (((())))) (((()))) t) t ) (((()))) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 'A) 'A 1) 1 ) 'A 1)
(EQL (COND 2 (EQL (COND 2 'A) 'A 2) 2 ) 'A 2)
(EQL (COND nil (EQL (COND nil 'A) 'A nil) nil ) 'A nil)
(EQL (COND t (EQL (COND t 'A) 'A t) t ) 'A t)
(EQL (COND (cons t t) (EQL (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 'B) 'B 1) 1 ) 'B 1)
(EQL (COND 2 (EQL (COND 2 'B) 'B 2) 2 ) 'B 2)
(EQL (COND nil (EQL (COND nil 'B) 'B nil) nil ) 'B nil)
(EQL (COND t (EQL (COND t 'B) 'B t) t ) 'B t)
(EQL (COND (cons t t) (EQL (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 'C) 'C 1) 1 ) 'C 1)
(EQL (COND 2 (EQL (COND 2 'C) 'C 2) 2 ) 'C 2)
(EQL (COND nil (EQL (COND nil 'C) 'C nil) nil ) 'C nil)
(EQL (COND t (EQL (COND t 'C) 'C t) t ) 'C t)
(EQL (COND (cons t t) (EQL (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 '1) '1 1) 1 ) '1 1)
(EQL (COND 2 (EQL (COND 2 '1) '1 2) 2 ) '1 2)
(EQL (COND nil (EQL (COND nil '1) '1 nil) nil ) '1 nil)
(EQL (COND t (EQL (COND t '1) '1 t) t ) '1 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 '2) '2 1) 1 ) '2 1)
(EQL (COND 2 (EQL (COND 2 '2) '2 2) 2 ) '2 2)
(EQL (COND nil (EQL (COND nil '2) '2 nil) nil ) '2 nil)
(EQL (COND t (EQL (COND t '2) '2 t) t ) '2 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 '3) '3 1) 1 ) '3 1)
(EQL (COND 2 (EQL (COND 2 '3) '3 2) 2 ) '3 2)
(EQL (COND nil (EQL (COND nil '3) '3 nil) nil ) '3 nil)
(EQL (COND t (EQL (COND t '3) '3 t) t ) '3 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 '()) '() 1) 1 ) '() 1)
(EQL (COND 2 (EQL (COND 2 '()) '() 2) 2 ) '() 2)
(EQL (COND nil (EQL (COND nil '()) '() nil) nil ) '() nil)
(EQL (COND t (EQL (COND t '()) '() t) t ) '() t)
(EQL (COND (cons t t) (EQL (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(EQL (COND 2 (EQL (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(EQL (COND nil (EQL (COND nil '(())) '(()) nil) nil ) '(()) nil)
(EQL (COND t (EQL (COND t '(())) '(()) t) t ) '(()) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(EQL (COND 2 (EQL (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(EQL (COND nil (EQL (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(EQL (COND t (EQL (COND t '((()))) '((())) t) t ) '((())) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(EQL (COND 2 (EQL (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(EQL (COND nil (EQL (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(EQL (COND t (EQL (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 ,A) ,A 1) 1 ) ,A 1)
(EQL (COND 2 (EQL (COND 2 ,A) ,A 2) 2 ) ,A 2)
(EQL (COND nil (EQL (COND nil ,A) ,A nil) nil ) ,A nil)
(EQL (COND t (EQL (COND t ,A) ,A t) t ) ,A t)
(EQL (COND (cons t t) (EQL (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 ,1) ,1 1) 1 ) ,1 1)
(EQL (COND 2 (EQL (COND 2 ,1) ,1 2) 2 ) ,1 2)
(EQL (COND nil (EQL (COND nil ,1) ,1 nil) nil ) ,1 nil)
(EQL (COND t (EQL (COND t ,1) ,1 t) t ) ,1 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 ,()) ,() 1) 1 ) ,() 1)
(EQL (COND 2 (EQL (COND 2 ,()) ,() 2) 2 ) ,() 2)
(EQL (COND nil (EQL (COND nil ,()) ,() nil) nil ) ,() nil)
(EQL (COND t (EQL (COND t ,()) ,() t) t ) ,() t)
(EQL (COND (cons t t) (EQL (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(EQL (COND 2 (EQL (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(EQL (COND nil (EQL (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(EQL (COND t (EQL (COND t ,(())) ,(()) t) t ) ,(()) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'A) `'A 1) 1 ) `'A 1)
(EQL (COND 2 (EQL (COND 2 `'A) `'A 2) 2 ) `'A 2)
(EQL (COND nil (EQL (COND nil `'A) `'A nil) nil ) `'A nil)
(EQL (COND t (EQL (COND t `'A) `'A t) t ) `'A t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'B) `'B 1) 1 ) `'B 1)
(EQL (COND 2 (EQL (COND 2 `'B) `'B 2) 2 ) `'B 2)
(EQL (COND nil (EQL (COND nil `'B) `'B nil) nil ) `'B nil)
(EQL (COND t (EQL (COND t `'B) `'B t) t ) `'B t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'C) `'C 1) 1 ) `'C 1)
(EQL (COND 2 (EQL (COND 2 `'C) `'C 2) 2 ) `'C 2)
(EQL (COND nil (EQL (COND nil `'C) `'C nil) nil ) `'C nil)
(EQL (COND t (EQL (COND t `'C) `'C t) t ) `'C t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'1) `'1 1) 1 ) `'1 1)
(EQL (COND 2 (EQL (COND 2 `'1) `'1 2) 2 ) `'1 2)
(EQL (COND nil (EQL (COND nil `'1) `'1 nil) nil ) `'1 nil)
(EQL (COND t (EQL (COND t `'1) `'1 t) t ) `'1 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'2) `'2 1) 1 ) `'2 1)
(EQL (COND 2 (EQL (COND 2 `'2) `'2 2) 2 ) `'2 2)
(EQL (COND nil (EQL (COND nil `'2) `'2 nil) nil ) `'2 nil)
(EQL (COND t (EQL (COND t `'2) `'2 t) t ) `'2 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'3) `'3 1) 1 ) `'3 1)
(EQL (COND 2 (EQL (COND 2 `'3) `'3 2) 2 ) `'3 2)
(EQL (COND nil (EQL (COND nil `'3) `'3 nil) nil ) `'3 nil)
(EQL (COND t (EQL (COND t `'3) `'3 t) t ) `'3 t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'()) `'() 1) 1 ) `'() 1)
(EQL (COND 2 (EQL (COND 2 `'()) `'() 2) 2 ) `'() 2)
(EQL (COND nil (EQL (COND nil `'()) `'() nil) nil ) `'() nil)
(EQL (COND t (EQL (COND t `'()) `'() t) t ) `'() t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(EQL (COND 2 (EQL (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(EQL (COND nil (EQL (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(EQL (COND t (EQL (COND t `'(())) `'(()) t) t ) `'(()) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(EQL (COND 2 (EQL (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(EQL (COND nil (EQL (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(EQL (COND t (EQL (COND t `'((()))) `'((())) t) t ) `'((())) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(EQL (COND 1 (EQL (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(EQL (COND 2 (EQL (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(EQL (COND nil (EQL (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(EQL (COND t (EQL (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(EQL (COND (cons t t) (EQL (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(EQL (COND (cons nil t) (EQL (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(EQL (COND (cons nil nil) (EQL (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(EQL (COND (cons 0 0) (EQL (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(EQL (COND (cons 1 1) (EQL (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(EQL (COND (list 1 2 3) (EQL (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(EQL (COND (list (cons 1 1 ) ) (EQL (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 T) T 1) 1 ) T 1)
(EVAL (COND 2 (EVAL (COND 2 T) T 2) 2 ) T 2)
(EVAL (COND nil (EVAL (COND nil T) T nil) nil ) T nil)
(EVAL (COND t (EVAL (COND t T) T t) t ) T t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 NIL) NIL 1) 1 ) NIL 1)
(EVAL (COND 2 (EVAL (COND 2 NIL) NIL 2) 2 ) NIL 2)
(EVAL (COND nil (EVAL (COND nil NIL) NIL nil) nil ) NIL nil)
(EVAL (COND t (EVAL (COND t NIL) NIL t) t ) NIL t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 A) A 1) 1 ) A 1)
(EVAL (COND 2 (EVAL (COND 2 A) A 2) 2 ) A 2)
(EVAL (COND nil (EVAL (COND nil A) A nil) nil ) A nil)
(EVAL (COND t (EVAL (COND t A) A t) t ) A t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 B) B 1) 1 ) B 1)
(EVAL (COND 2 (EVAL (COND 2 B) B 2) 2 ) B 2)
(EVAL (COND nil (EVAL (COND nil B) B nil) nil ) B nil)
(EVAL (COND t (EVAL (COND t B) B t) t ) B t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 C) C 1) 1 ) C 1)
(EVAL (COND 2 (EVAL (COND 2 C) C 2) 2 ) C 2)
(EVAL (COND nil (EVAL (COND nil C) C nil) nil ) C nil)
(EVAL (COND t (EVAL (COND t C) C t) t ) C t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 1) 1 1) 1 ) 1 1)
(EVAL (COND 2 (EVAL (COND 2 1) 1 2) 2 ) 1 2)
(EVAL (COND nil (EVAL (COND nil 1) 1 nil) nil ) 1 nil)
(EVAL (COND t (EVAL (COND t 1) 1 t) t ) 1 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 2) 2 1) 1 ) 2 1)
(EVAL (COND 2 (EVAL (COND 2 2) 2 2) 2 ) 2 2)
(EVAL (COND nil (EVAL (COND nil 2) 2 nil) nil ) 2 nil)
(EVAL (COND t (EVAL (COND t 2) 2 t) t ) 2 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 3) 3 1) 1 ) 3 1)
(EVAL (COND 2 (EVAL (COND 2 3) 3 2) 2 ) 3 2)
(EVAL (COND nil (EVAL (COND nil 3) 3 nil) nil ) 3 nil)
(EVAL (COND t (EVAL (COND t 3) 3 t) t ) 3 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 ()) () 1) 1 ) () 1)
(EVAL (COND 2 (EVAL (COND 2 ()) () 2) 2 ) () 2)
(EVAL (COND nil (EVAL (COND nil ()) () nil) nil ) () nil)
(EVAL (COND t (EVAL (COND t ()) () t) t ) () t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 (())) (()) 1) 1 ) (()) 1)
(EVAL (COND 2 (EVAL (COND 2 (())) (()) 2) 2 ) (()) 2)
(EVAL (COND nil (EVAL (COND nil (())) (()) nil) nil ) (()) nil)
(EVAL (COND t (EVAL (COND t (())) (()) t) t ) (()) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(EVAL (COND 2 (EVAL (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(EVAL (COND nil (EVAL (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(EVAL (COND t (EVAL (COND t ((()))) ((())) t) t ) ((())) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(EVAL (COND 2 (EVAL (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(EVAL (COND nil (EVAL (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(EVAL (COND t (EVAL (COND t (((())))) (((()))) t) t ) (((()))) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 'A) 'A 1) 1 ) 'A 1)
(EVAL (COND 2 (EVAL (COND 2 'A) 'A 2) 2 ) 'A 2)
(EVAL (COND nil (EVAL (COND nil 'A) 'A nil) nil ) 'A nil)
(EVAL (COND t (EVAL (COND t 'A) 'A t) t ) 'A t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 'B) 'B 1) 1 ) 'B 1)
(EVAL (COND 2 (EVAL (COND 2 'B) 'B 2) 2 ) 'B 2)
(EVAL (COND nil (EVAL (COND nil 'B) 'B nil) nil ) 'B nil)
(EVAL (COND t (EVAL (COND t 'B) 'B t) t ) 'B t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 'C) 'C 1) 1 ) 'C 1)
(EVAL (COND 2 (EVAL (COND 2 'C) 'C 2) 2 ) 'C 2)
(EVAL (COND nil (EVAL (COND nil 'C) 'C nil) nil ) 'C nil)
(EVAL (COND t (EVAL (COND t 'C) 'C t) t ) 'C t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 '1) '1 1) 1 ) '1 1)
(EVAL (COND 2 (EVAL (COND 2 '1) '1 2) 2 ) '1 2)
(EVAL (COND nil (EVAL (COND nil '1) '1 nil) nil ) '1 nil)
(EVAL (COND t (EVAL (COND t '1) '1 t) t ) '1 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 '2) '2 1) 1 ) '2 1)
(EVAL (COND 2 (EVAL (COND 2 '2) '2 2) 2 ) '2 2)
(EVAL (COND nil (EVAL (COND nil '2) '2 nil) nil ) '2 nil)
(EVAL (COND t (EVAL (COND t '2) '2 t) t ) '2 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 '3) '3 1) 1 ) '3 1)
(EVAL (COND 2 (EVAL (COND 2 '3) '3 2) 2 ) '3 2)
(EVAL (COND nil (EVAL (COND nil '3) '3 nil) nil ) '3 nil)
(EVAL (COND t (EVAL (COND t '3) '3 t) t ) '3 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 '()) '() 1) 1 ) '() 1)
(EVAL (COND 2 (EVAL (COND 2 '()) '() 2) 2 ) '() 2)
(EVAL (COND nil (EVAL (COND nil '()) '() nil) nil ) '() nil)
(EVAL (COND t (EVAL (COND t '()) '() t) t ) '() t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(EVAL (COND 2 (EVAL (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(EVAL (COND nil (EVAL (COND nil '(())) '(()) nil) nil ) '(()) nil)
(EVAL (COND t (EVAL (COND t '(())) '(()) t) t ) '(()) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(EVAL (COND 2 (EVAL (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(EVAL (COND nil (EVAL (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(EVAL (COND t (EVAL (COND t '((()))) '((())) t) t ) '((())) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(EVAL (COND 2 (EVAL (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(EVAL (COND nil (EVAL (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(EVAL (COND t (EVAL (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 ,A) ,A 1) 1 ) ,A 1)
(EVAL (COND 2 (EVAL (COND 2 ,A) ,A 2) 2 ) ,A 2)
(EVAL (COND nil (EVAL (COND nil ,A) ,A nil) nil ) ,A nil)
(EVAL (COND t (EVAL (COND t ,A) ,A t) t ) ,A t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 ,1) ,1 1) 1 ) ,1 1)
(EVAL (COND 2 (EVAL (COND 2 ,1) ,1 2) 2 ) ,1 2)
(EVAL (COND nil (EVAL (COND nil ,1) ,1 nil) nil ) ,1 nil)
(EVAL (COND t (EVAL (COND t ,1) ,1 t) t ) ,1 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 ,()) ,() 1) 1 ) ,() 1)
(EVAL (COND 2 (EVAL (COND 2 ,()) ,() 2) 2 ) ,() 2)
(EVAL (COND nil (EVAL (COND nil ,()) ,() nil) nil ) ,() nil)
(EVAL (COND t (EVAL (COND t ,()) ,() t) t ) ,() t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(EVAL (COND 2 (EVAL (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(EVAL (COND nil (EVAL (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(EVAL (COND t (EVAL (COND t ,(())) ,(()) t) t ) ,(()) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'A) `'A 1) 1 ) `'A 1)
(EVAL (COND 2 (EVAL (COND 2 `'A) `'A 2) 2 ) `'A 2)
(EVAL (COND nil (EVAL (COND nil `'A) `'A nil) nil ) `'A nil)
(EVAL (COND t (EVAL (COND t `'A) `'A t) t ) `'A t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'B) `'B 1) 1 ) `'B 1)
(EVAL (COND 2 (EVAL (COND 2 `'B) `'B 2) 2 ) `'B 2)
(EVAL (COND nil (EVAL (COND nil `'B) `'B nil) nil ) `'B nil)
(EVAL (COND t (EVAL (COND t `'B) `'B t) t ) `'B t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'C) `'C 1) 1 ) `'C 1)
(EVAL (COND 2 (EVAL (COND 2 `'C) `'C 2) 2 ) `'C 2)
(EVAL (COND nil (EVAL (COND nil `'C) `'C nil) nil ) `'C nil)
(EVAL (COND t (EVAL (COND t `'C) `'C t) t ) `'C t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'1) `'1 1) 1 ) `'1 1)
(EVAL (COND 2 (EVAL (COND 2 `'1) `'1 2) 2 ) `'1 2)
(EVAL (COND nil (EVAL (COND nil `'1) `'1 nil) nil ) `'1 nil)
(EVAL (COND t (EVAL (COND t `'1) `'1 t) t ) `'1 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'2) `'2 1) 1 ) `'2 1)
(EVAL (COND 2 (EVAL (COND 2 `'2) `'2 2) 2 ) `'2 2)
(EVAL (COND nil (EVAL (COND nil `'2) `'2 nil) nil ) `'2 nil)
(EVAL (COND t (EVAL (COND t `'2) `'2 t) t ) `'2 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'3) `'3 1) 1 ) `'3 1)
(EVAL (COND 2 (EVAL (COND 2 `'3) `'3 2) 2 ) `'3 2)
(EVAL (COND nil (EVAL (COND nil `'3) `'3 nil) nil ) `'3 nil)
(EVAL (COND t (EVAL (COND t `'3) `'3 t) t ) `'3 t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'()) `'() 1) 1 ) `'() 1)
(EVAL (COND 2 (EVAL (COND 2 `'()) `'() 2) 2 ) `'() 2)
(EVAL (COND nil (EVAL (COND nil `'()) `'() nil) nil ) `'() nil)
(EVAL (COND t (EVAL (COND t `'()) `'() t) t ) `'() t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(EVAL (COND 2 (EVAL (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(EVAL (COND nil (EVAL (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(EVAL (COND t (EVAL (COND t `'(())) `'(()) t) t ) `'(()) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(EVAL (COND 2 (EVAL (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(EVAL (COND nil (EVAL (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(EVAL (COND t (EVAL (COND t `'((()))) `'((())) t) t ) `'((())) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(EVAL (COND 1 (EVAL (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(EVAL (COND 2 (EVAL (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(EVAL (COND nil (EVAL (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(EVAL (COND t (EVAL (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(EVAL (COND (cons t t) (EVAL (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(EVAL (COND (cons nil t) (EVAL (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(EVAL (COND (cons nil nil) (EVAL (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(EVAL (COND (cons 0 0) (EVAL (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(EVAL (COND (cons 1 1) (EVAL (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(EVAL (COND (list 1 2 3) (EVAL (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(EVAL (COND (list (cons 1 1 ) ) (EVAL (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 T) T 1) 1 ) T 1)
(IF (COND 2 (IF (COND 2 T) T 2) 2 ) T 2)
(IF (COND nil (IF (COND nil T) T nil) nil ) T nil)
(IF (COND t (IF (COND t T) T t) t ) T t)
(IF (COND (cons t t) (IF (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 NIL) NIL 1) 1 ) NIL 1)
(IF (COND 2 (IF (COND 2 NIL) NIL 2) 2 ) NIL 2)
(IF (COND nil (IF (COND nil NIL) NIL nil) nil ) NIL nil)
(IF (COND t (IF (COND t NIL) NIL t) t ) NIL t)
(IF (COND (cons t t) (IF (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 A) A 1) 1 ) A 1)
(IF (COND 2 (IF (COND 2 A) A 2) 2 ) A 2)
(IF (COND nil (IF (COND nil A) A nil) nil ) A nil)
(IF (COND t (IF (COND t A) A t) t ) A t)
(IF (COND (cons t t) (IF (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 B) B 1) 1 ) B 1)
(IF (COND 2 (IF (COND 2 B) B 2) 2 ) B 2)
(IF (COND nil (IF (COND nil B) B nil) nil ) B nil)
(IF (COND t (IF (COND t B) B t) t ) B t)
(IF (COND (cons t t) (IF (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 C) C 1) 1 ) C 1)
(IF (COND 2 (IF (COND 2 C) C 2) 2 ) C 2)
(IF (COND nil (IF (COND nil C) C nil) nil ) C nil)
(IF (COND t (IF (COND t C) C t) t ) C t)
(IF (COND (cons t t) (IF (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 1) 1 1) 1 ) 1 1)
(IF (COND 2 (IF (COND 2 1) 1 2) 2 ) 1 2)
(IF (COND nil (IF (COND nil 1) 1 nil) nil ) 1 nil)
(IF (COND t (IF (COND t 1) 1 t) t ) 1 t)
(IF (COND (cons t t) (IF (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 2) 2 1) 1 ) 2 1)
(IF (COND 2 (IF (COND 2 2) 2 2) 2 ) 2 2)
(IF (COND nil (IF (COND nil 2) 2 nil) nil ) 2 nil)
(IF (COND t (IF (COND t 2) 2 t) t ) 2 t)
(IF (COND (cons t t) (IF (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 3) 3 1) 1 ) 3 1)
(IF (COND 2 (IF (COND 2 3) 3 2) 2 ) 3 2)
(IF (COND nil (IF (COND nil 3) 3 nil) nil ) 3 nil)
(IF (COND t (IF (COND t 3) 3 t) t ) 3 t)
(IF (COND (cons t t) (IF (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 ()) () 1) 1 ) () 1)
(IF (COND 2 (IF (COND 2 ()) () 2) 2 ) () 2)
(IF (COND nil (IF (COND nil ()) () nil) nil ) () nil)
(IF (COND t (IF (COND t ()) () t) t ) () t)
(IF (COND (cons t t) (IF (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 (())) (()) 1) 1 ) (()) 1)
(IF (COND 2 (IF (COND 2 (())) (()) 2) 2 ) (()) 2)
(IF (COND nil (IF (COND nil (())) (()) nil) nil ) (()) nil)
(IF (COND t (IF (COND t (())) (()) t) t ) (()) t)
(IF (COND (cons t t) (IF (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(IF (COND 2 (IF (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(IF (COND nil (IF (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(IF (COND t (IF (COND t ((()))) ((())) t) t ) ((())) t)
(IF (COND (cons t t) (IF (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(IF (COND 2 (IF (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(IF (COND nil (IF (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(IF (COND t (IF (COND t (((())))) (((()))) t) t ) (((()))) t)
(IF (COND (cons t t) (IF (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 'A) 'A 1) 1 ) 'A 1)
(IF (COND 2 (IF (COND 2 'A) 'A 2) 2 ) 'A 2)
(IF (COND nil (IF (COND nil 'A) 'A nil) nil ) 'A nil)
(IF (COND t (IF (COND t 'A) 'A t) t ) 'A t)
(IF (COND (cons t t) (IF (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 'B) 'B 1) 1 ) 'B 1)
(IF (COND 2 (IF (COND 2 'B) 'B 2) 2 ) 'B 2)
(IF (COND nil (IF (COND nil 'B) 'B nil) nil ) 'B nil)
(IF (COND t (IF (COND t 'B) 'B t) t ) 'B t)
(IF (COND (cons t t) (IF (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 'C) 'C 1) 1 ) 'C 1)
(IF (COND 2 (IF (COND 2 'C) 'C 2) 2 ) 'C 2)
(IF (COND nil (IF (COND nil 'C) 'C nil) nil ) 'C nil)
(IF (COND t (IF (COND t 'C) 'C t) t ) 'C t)
(IF (COND (cons t t) (IF (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 '1) '1 1) 1 ) '1 1)
(IF (COND 2 (IF (COND 2 '1) '1 2) 2 ) '1 2)
(IF (COND nil (IF (COND nil '1) '1 nil) nil ) '1 nil)
(IF (COND t (IF (COND t '1) '1 t) t ) '1 t)
(IF (COND (cons t t) (IF (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 '2) '2 1) 1 ) '2 1)
(IF (COND 2 (IF (COND 2 '2) '2 2) 2 ) '2 2)
(IF (COND nil (IF (COND nil '2) '2 nil) nil ) '2 nil)
(IF (COND t (IF (COND t '2) '2 t) t ) '2 t)
(IF (COND (cons t t) (IF (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 '3) '3 1) 1 ) '3 1)
(IF (COND 2 (IF (COND 2 '3) '3 2) 2 ) '3 2)
(IF (COND nil (IF (COND nil '3) '3 nil) nil ) '3 nil)
(IF (COND t (IF (COND t '3) '3 t) t ) '3 t)
(IF (COND (cons t t) (IF (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 '()) '() 1) 1 ) '() 1)
(IF (COND 2 (IF (COND 2 '()) '() 2) 2 ) '() 2)
(IF (COND nil (IF (COND nil '()) '() nil) nil ) '() nil)
(IF (COND t (IF (COND t '()) '() t) t ) '() t)
(IF (COND (cons t t) (IF (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(IF (COND 2 (IF (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(IF (COND nil (IF (COND nil '(())) '(()) nil) nil ) '(()) nil)
(IF (COND t (IF (COND t '(())) '(()) t) t ) '(()) t)
(IF (COND (cons t t) (IF (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(IF (COND 2 (IF (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(IF (COND nil (IF (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(IF (COND t (IF (COND t '((()))) '((())) t) t ) '((())) t)
(IF (COND (cons t t) (IF (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(IF (COND 2 (IF (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(IF (COND nil (IF (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(IF (COND t (IF (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(IF (COND (cons t t) (IF (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 ,A) ,A 1) 1 ) ,A 1)
(IF (COND 2 (IF (COND 2 ,A) ,A 2) 2 ) ,A 2)
(IF (COND nil (IF (COND nil ,A) ,A nil) nil ) ,A nil)
(IF (COND t (IF (COND t ,A) ,A t) t ) ,A t)
(IF (COND (cons t t) (IF (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 ,1) ,1 1) 1 ) ,1 1)
(IF (COND 2 (IF (COND 2 ,1) ,1 2) 2 ) ,1 2)
(IF (COND nil (IF (COND nil ,1) ,1 nil) nil ) ,1 nil)
(IF (COND t (IF (COND t ,1) ,1 t) t ) ,1 t)
(IF (COND (cons t t) (IF (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 ,()) ,() 1) 1 ) ,() 1)
(IF (COND 2 (IF (COND 2 ,()) ,() 2) 2 ) ,() 2)
(IF (COND nil (IF (COND nil ,()) ,() nil) nil ) ,() nil)
(IF (COND t (IF (COND t ,()) ,() t) t ) ,() t)
(IF (COND (cons t t) (IF (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(IF (COND 2 (IF (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(IF (COND nil (IF (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(IF (COND t (IF (COND t ,(())) ,(()) t) t ) ,(()) t)
(IF (COND (cons t t) (IF (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'A) `'A 1) 1 ) `'A 1)
(IF (COND 2 (IF (COND 2 `'A) `'A 2) 2 ) `'A 2)
(IF (COND nil (IF (COND nil `'A) `'A nil) nil ) `'A nil)
(IF (COND t (IF (COND t `'A) `'A t) t ) `'A t)
(IF (COND (cons t t) (IF (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'B) `'B 1) 1 ) `'B 1)
(IF (COND 2 (IF (COND 2 `'B) `'B 2) 2 ) `'B 2)
(IF (COND nil (IF (COND nil `'B) `'B nil) nil ) `'B nil)
(IF (COND t (IF (COND t `'B) `'B t) t ) `'B t)
(IF (COND (cons t t) (IF (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'C) `'C 1) 1 ) `'C 1)
(IF (COND 2 (IF (COND 2 `'C) `'C 2) 2 ) `'C 2)
(IF (COND nil (IF (COND nil `'C) `'C nil) nil ) `'C nil)
(IF (COND t (IF (COND t `'C) `'C t) t ) `'C t)
(IF (COND (cons t t) (IF (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'1) `'1 1) 1 ) `'1 1)
(IF (COND 2 (IF (COND 2 `'1) `'1 2) 2 ) `'1 2)
(IF (COND nil (IF (COND nil `'1) `'1 nil) nil ) `'1 nil)
(IF (COND t (IF (COND t `'1) `'1 t) t ) `'1 t)
(IF (COND (cons t t) (IF (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'2) `'2 1) 1 ) `'2 1)
(IF (COND 2 (IF (COND 2 `'2) `'2 2) 2 ) `'2 2)
(IF (COND nil (IF (COND nil `'2) `'2 nil) nil ) `'2 nil)
(IF (COND t (IF (COND t `'2) `'2 t) t ) `'2 t)
(IF (COND (cons t t) (IF (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'3) `'3 1) 1 ) `'3 1)
(IF (COND 2 (IF (COND 2 `'3) `'3 2) 2 ) `'3 2)
(IF (COND nil (IF (COND nil `'3) `'3 nil) nil ) `'3 nil)
(IF (COND t (IF (COND t `'3) `'3 t) t ) `'3 t)
(IF (COND (cons t t) (IF (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'()) `'() 1) 1 ) `'() 1)
(IF (COND 2 (IF (COND 2 `'()) `'() 2) 2 ) `'() 2)
(IF (COND nil (IF (COND nil `'()) `'() nil) nil ) `'() nil)
(IF (COND t (IF (COND t `'()) `'() t) t ) `'() t)
(IF (COND (cons t t) (IF (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(IF (COND 2 (IF (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(IF (COND nil (IF (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(IF (COND t (IF (COND t `'(())) `'(()) t) t ) `'(()) t)
(IF (COND (cons t t) (IF (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(IF (COND 2 (IF (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(IF (COND nil (IF (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(IF (COND t (IF (COND t `'((()))) `'((())) t) t ) `'((())) t)
(IF (COND (cons t t) (IF (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(IF (COND 1 (IF (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(IF (COND 2 (IF (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(IF (COND nil (IF (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(IF (COND t (IF (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(IF (COND (cons t t) (IF (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(IF (COND (cons nil t) (IF (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(IF (COND (cons nil nil) (IF (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(IF (COND (cons 0 0) (IF (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(IF (COND (cons 1 1) (IF (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(IF (COND (list 1 2 3) (IF (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(IF (COND (list (cons 1 1 ) ) (IF (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 T) T 1) 1 ) T 1)
(LABELS (COND 2 (LABELS (COND 2 T) T 2) 2 ) T 2)
(LABELS (COND nil (LABELS (COND nil T) T nil) nil ) T nil)
(LABELS (COND t (LABELS (COND t T) T t) t ) T t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 NIL) NIL 1) 1 ) NIL 1)
(LABELS (COND 2 (LABELS (COND 2 NIL) NIL 2) 2 ) NIL 2)
(LABELS (COND nil (LABELS (COND nil NIL) NIL nil) nil ) NIL nil)
(LABELS (COND t (LABELS (COND t NIL) NIL t) t ) NIL t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 A) A 1) 1 ) A 1)
(LABELS (COND 2 (LABELS (COND 2 A) A 2) 2 ) A 2)
(LABELS (COND nil (LABELS (COND nil A) A nil) nil ) A nil)
(LABELS (COND t (LABELS (COND t A) A t) t ) A t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 B) B 1) 1 ) B 1)
(LABELS (COND 2 (LABELS (COND 2 B) B 2) 2 ) B 2)
(LABELS (COND nil (LABELS (COND nil B) B nil) nil ) B nil)
(LABELS (COND t (LABELS (COND t B) B t) t ) B t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 C) C 1) 1 ) C 1)
(LABELS (COND 2 (LABELS (COND 2 C) C 2) 2 ) C 2)
(LABELS (COND nil (LABELS (COND nil C) C nil) nil ) C nil)
(LABELS (COND t (LABELS (COND t C) C t) t ) C t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 1) 1 1) 1 ) 1 1)
(LABELS (COND 2 (LABELS (COND 2 1) 1 2) 2 ) 1 2)
(LABELS (COND nil (LABELS (COND nil 1) 1 nil) nil ) 1 nil)
(LABELS (COND t (LABELS (COND t 1) 1 t) t ) 1 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 2) 2 1) 1 ) 2 1)
(LABELS (COND 2 (LABELS (COND 2 2) 2 2) 2 ) 2 2)
(LABELS (COND nil (LABELS (COND nil 2) 2 nil) nil ) 2 nil)
(LABELS (COND t (LABELS (COND t 2) 2 t) t ) 2 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 3) 3 1) 1 ) 3 1)
(LABELS (COND 2 (LABELS (COND 2 3) 3 2) 2 ) 3 2)
(LABELS (COND nil (LABELS (COND nil 3) 3 nil) nil ) 3 nil)
(LABELS (COND t (LABELS (COND t 3) 3 t) t ) 3 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 ()) () 1) 1 ) () 1)
(LABELS (COND 2 (LABELS (COND 2 ()) () 2) 2 ) () 2)
(LABELS (COND nil (LABELS (COND nil ()) () nil) nil ) () nil)
(LABELS (COND t (LABELS (COND t ()) () t) t ) () t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 (())) (()) 1) 1 ) (()) 1)
(LABELS (COND 2 (LABELS (COND 2 (())) (()) 2) 2 ) (()) 2)
(LABELS (COND nil (LABELS (COND nil (())) (()) nil) nil ) (()) nil)
(LABELS (COND t (LABELS (COND t (())) (()) t) t ) (()) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LABELS (COND 2 (LABELS (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LABELS (COND nil (LABELS (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(LABELS (COND t (LABELS (COND t ((()))) ((())) t) t ) ((())) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LABELS (COND 2 (LABELS (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LABELS (COND nil (LABELS (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LABELS (COND t (LABELS (COND t (((())))) (((()))) t) t ) (((()))) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 'A) 'A 1) 1 ) 'A 1)
(LABELS (COND 2 (LABELS (COND 2 'A) 'A 2) 2 ) 'A 2)
(LABELS (COND nil (LABELS (COND nil 'A) 'A nil) nil ) 'A nil)
(LABELS (COND t (LABELS (COND t 'A) 'A t) t ) 'A t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 'B) 'B 1) 1 ) 'B 1)
(LABELS (COND 2 (LABELS (COND 2 'B) 'B 2) 2 ) 'B 2)
(LABELS (COND nil (LABELS (COND nil 'B) 'B nil) nil ) 'B nil)
(LABELS (COND t (LABELS (COND t 'B) 'B t) t ) 'B t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 'C) 'C 1) 1 ) 'C 1)
(LABELS (COND 2 (LABELS (COND 2 'C) 'C 2) 2 ) 'C 2)
(LABELS (COND nil (LABELS (COND nil 'C) 'C nil) nil ) 'C nil)
(LABELS (COND t (LABELS (COND t 'C) 'C t) t ) 'C t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 '1) '1 1) 1 ) '1 1)
(LABELS (COND 2 (LABELS (COND 2 '1) '1 2) 2 ) '1 2)
(LABELS (COND nil (LABELS (COND nil '1) '1 nil) nil ) '1 nil)
(LABELS (COND t (LABELS (COND t '1) '1 t) t ) '1 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 '2) '2 1) 1 ) '2 1)
(LABELS (COND 2 (LABELS (COND 2 '2) '2 2) 2 ) '2 2)
(LABELS (COND nil (LABELS (COND nil '2) '2 nil) nil ) '2 nil)
(LABELS (COND t (LABELS (COND t '2) '2 t) t ) '2 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 '3) '3 1) 1 ) '3 1)
(LABELS (COND 2 (LABELS (COND 2 '3) '3 2) 2 ) '3 2)
(LABELS (COND nil (LABELS (COND nil '3) '3 nil) nil ) '3 nil)
(LABELS (COND t (LABELS (COND t '3) '3 t) t ) '3 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 '()) '() 1) 1 ) '() 1)
(LABELS (COND 2 (LABELS (COND 2 '()) '() 2) 2 ) '() 2)
(LABELS (COND nil (LABELS (COND nil '()) '() nil) nil ) '() nil)
(LABELS (COND t (LABELS (COND t '()) '() t) t ) '() t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(LABELS (COND 2 (LABELS (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(LABELS (COND nil (LABELS (COND nil '(())) '(()) nil) nil ) '(()) nil)
(LABELS (COND t (LABELS (COND t '(())) '(()) t) t ) '(()) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LABELS (COND 2 (LABELS (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LABELS (COND nil (LABELS (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(LABELS (COND t (LABELS (COND t '((()))) '((())) t) t ) '((())) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LABELS (COND 2 (LABELS (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LABELS (COND nil (LABELS (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LABELS (COND t (LABELS (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 ,A) ,A 1) 1 ) ,A 1)
(LABELS (COND 2 (LABELS (COND 2 ,A) ,A 2) 2 ) ,A 2)
(LABELS (COND nil (LABELS (COND nil ,A) ,A nil) nil ) ,A nil)
(LABELS (COND t (LABELS (COND t ,A) ,A t) t ) ,A t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 ,1) ,1 1) 1 ) ,1 1)
(LABELS (COND 2 (LABELS (COND 2 ,1) ,1 2) 2 ) ,1 2)
(LABELS (COND nil (LABELS (COND nil ,1) ,1 nil) nil ) ,1 nil)
(LABELS (COND t (LABELS (COND t ,1) ,1 t) t ) ,1 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 ,()) ,() 1) 1 ) ,() 1)
(LABELS (COND 2 (LABELS (COND 2 ,()) ,() 2) 2 ) ,() 2)
(LABELS (COND nil (LABELS (COND nil ,()) ,() nil) nil ) ,() nil)
(LABELS (COND t (LABELS (COND t ,()) ,() t) t ) ,() t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LABELS (COND 2 (LABELS (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LABELS (COND nil (LABELS (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LABELS (COND t (LABELS (COND t ,(())) ,(()) t) t ) ,(()) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'A) `'A 1) 1 ) `'A 1)
(LABELS (COND 2 (LABELS (COND 2 `'A) `'A 2) 2 ) `'A 2)
(LABELS (COND nil (LABELS (COND nil `'A) `'A nil) nil ) `'A nil)
(LABELS (COND t (LABELS (COND t `'A) `'A t) t ) `'A t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'B) `'B 1) 1 ) `'B 1)
(LABELS (COND 2 (LABELS (COND 2 `'B) `'B 2) 2 ) `'B 2)
(LABELS (COND nil (LABELS (COND nil `'B) `'B nil) nil ) `'B nil)
(LABELS (COND t (LABELS (COND t `'B) `'B t) t ) `'B t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'C) `'C 1) 1 ) `'C 1)
(LABELS (COND 2 (LABELS (COND 2 `'C) `'C 2) 2 ) `'C 2)
(LABELS (COND nil (LABELS (COND nil `'C) `'C nil) nil ) `'C nil)
(LABELS (COND t (LABELS (COND t `'C) `'C t) t ) `'C t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'1) `'1 1) 1 ) `'1 1)
(LABELS (COND 2 (LABELS (COND 2 `'1) `'1 2) 2 ) `'1 2)
(LABELS (COND nil (LABELS (COND nil `'1) `'1 nil) nil ) `'1 nil)
(LABELS (COND t (LABELS (COND t `'1) `'1 t) t ) `'1 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'2) `'2 1) 1 ) `'2 1)
(LABELS (COND 2 (LABELS (COND 2 `'2) `'2 2) 2 ) `'2 2)
(LABELS (COND nil (LABELS (COND nil `'2) `'2 nil) nil ) `'2 nil)
(LABELS (COND t (LABELS (COND t `'2) `'2 t) t ) `'2 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'3) `'3 1) 1 ) `'3 1)
(LABELS (COND 2 (LABELS (COND 2 `'3) `'3 2) 2 ) `'3 2)
(LABELS (COND nil (LABELS (COND nil `'3) `'3 nil) nil ) `'3 nil)
(LABELS (COND t (LABELS (COND t `'3) `'3 t) t ) `'3 t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'()) `'() 1) 1 ) `'() 1)
(LABELS (COND 2 (LABELS (COND 2 `'()) `'() 2) 2 ) `'() 2)
(LABELS (COND nil (LABELS (COND nil `'()) `'() nil) nil ) `'() nil)
(LABELS (COND t (LABELS (COND t `'()) `'() t) t ) `'() t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LABELS (COND 2 (LABELS (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LABELS (COND nil (LABELS (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LABELS (COND t (LABELS (COND t `'(())) `'(()) t) t ) `'(()) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LABELS (COND 2 (LABELS (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LABELS (COND nil (LABELS (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LABELS (COND t (LABELS (COND t `'((()))) `'((())) t) t ) `'((())) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LABELS (COND 1 (LABELS (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LABELS (COND 2 (LABELS (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LABELS (COND nil (LABELS (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LABELS (COND t (LABELS (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LABELS (COND (cons t t) (LABELS (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LABELS (COND (cons nil t) (LABELS (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LABELS (COND (cons nil nil) (LABELS (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LABELS (COND (cons 0 0) (LABELS (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LABELS (COND (cons 1 1) (LABELS (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LABELS (COND (list 1 2 3) (LABELS (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LABELS (COND (list (cons 1 1 ) ) (LABELS (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 T) T 1) 1 ) T 1)
(LET (COND 2 (LET (COND 2 T) T 2) 2 ) T 2)
(LET (COND nil (LET (COND nil T) T nil) nil ) T nil)
(LET (COND t (LET (COND t T) T t) t ) T t)
(LET (COND (cons t t) (LET (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 NIL) NIL 1) 1 ) NIL 1)
(LET (COND 2 (LET (COND 2 NIL) NIL 2) 2 ) NIL 2)
(LET (COND nil (LET (COND nil NIL) NIL nil) nil ) NIL nil)
(LET (COND t (LET (COND t NIL) NIL t) t ) NIL t)
(LET (COND (cons t t) (LET (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 A) A 1) 1 ) A 1)
(LET (COND 2 (LET (COND 2 A) A 2) 2 ) A 2)
(LET (COND nil (LET (COND nil A) A nil) nil ) A nil)
(LET (COND t (LET (COND t A) A t) t ) A t)
(LET (COND (cons t t) (LET (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 B) B 1) 1 ) B 1)
(LET (COND 2 (LET (COND 2 B) B 2) 2 ) B 2)
(LET (COND nil (LET (COND nil B) B nil) nil ) B nil)
(LET (COND t (LET (COND t B) B t) t ) B t)
(LET (COND (cons t t) (LET (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 C) C 1) 1 ) C 1)
(LET (COND 2 (LET (COND 2 C) C 2) 2 ) C 2)
(LET (COND nil (LET (COND nil C) C nil) nil ) C nil)
(LET (COND t (LET (COND t C) C t) t ) C t)
(LET (COND (cons t t) (LET (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 1) 1 1) 1 ) 1 1)
(LET (COND 2 (LET (COND 2 1) 1 2) 2 ) 1 2)
(LET (COND nil (LET (COND nil 1) 1 nil) nil ) 1 nil)
(LET (COND t (LET (COND t 1) 1 t) t ) 1 t)
(LET (COND (cons t t) (LET (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 2) 2 1) 1 ) 2 1)
(LET (COND 2 (LET (COND 2 2) 2 2) 2 ) 2 2)
(LET (COND nil (LET (COND nil 2) 2 nil) nil ) 2 nil)
(LET (COND t (LET (COND t 2) 2 t) t ) 2 t)
(LET (COND (cons t t) (LET (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 3) 3 1) 1 ) 3 1)
(LET (COND 2 (LET (COND 2 3) 3 2) 2 ) 3 2)
(LET (COND nil (LET (COND nil 3) 3 nil) nil ) 3 nil)
(LET (COND t (LET (COND t 3) 3 t) t ) 3 t)
(LET (COND (cons t t) (LET (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 ()) () 1) 1 ) () 1)
(LET (COND 2 (LET (COND 2 ()) () 2) 2 ) () 2)
(LET (COND nil (LET (COND nil ()) () nil) nil ) () nil)
(LET (COND t (LET (COND t ()) () t) t ) () t)
(LET (COND (cons t t) (LET (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 (())) (()) 1) 1 ) (()) 1)
(LET (COND 2 (LET (COND 2 (())) (()) 2) 2 ) (()) 2)
(LET (COND nil (LET (COND nil (())) (()) nil) nil ) (()) nil)
(LET (COND t (LET (COND t (())) (()) t) t ) (()) t)
(LET (COND (cons t t) (LET (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LET (COND 2 (LET (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LET (COND nil (LET (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(LET (COND t (LET (COND t ((()))) ((())) t) t ) ((())) t)
(LET (COND (cons t t) (LET (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LET (COND 2 (LET (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LET (COND nil (LET (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LET (COND t (LET (COND t (((())))) (((()))) t) t ) (((()))) t)
(LET (COND (cons t t) (LET (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 'A) 'A 1) 1 ) 'A 1)
(LET (COND 2 (LET (COND 2 'A) 'A 2) 2 ) 'A 2)
(LET (COND nil (LET (COND nil 'A) 'A nil) nil ) 'A nil)
(LET (COND t (LET (COND t 'A) 'A t) t ) 'A t)
(LET (COND (cons t t) (LET (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 'B) 'B 1) 1 ) 'B 1)
(LET (COND 2 (LET (COND 2 'B) 'B 2) 2 ) 'B 2)
(LET (COND nil (LET (COND nil 'B) 'B nil) nil ) 'B nil)
(LET (COND t (LET (COND t 'B) 'B t) t ) 'B t)
(LET (COND (cons t t) (LET (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 'C) 'C 1) 1 ) 'C 1)
(LET (COND 2 (LET (COND 2 'C) 'C 2) 2 ) 'C 2)
(LET (COND nil (LET (COND nil 'C) 'C nil) nil ) 'C nil)
(LET (COND t (LET (COND t 'C) 'C t) t ) 'C t)
(LET (COND (cons t t) (LET (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 '1) '1 1) 1 ) '1 1)
(LET (COND 2 (LET (COND 2 '1) '1 2) 2 ) '1 2)
(LET (COND nil (LET (COND nil '1) '1 nil) nil ) '1 nil)
(LET (COND t (LET (COND t '1) '1 t) t ) '1 t)
(LET (COND (cons t t) (LET (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 '2) '2 1) 1 ) '2 1)
(LET (COND 2 (LET (COND 2 '2) '2 2) 2 ) '2 2)
(LET (COND nil (LET (COND nil '2) '2 nil) nil ) '2 nil)
(LET (COND t (LET (COND t '2) '2 t) t ) '2 t)
(LET (COND (cons t t) (LET (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 '3) '3 1) 1 ) '3 1)
(LET (COND 2 (LET (COND 2 '3) '3 2) 2 ) '3 2)
(LET (COND nil (LET (COND nil '3) '3 nil) nil ) '3 nil)
(LET (COND t (LET (COND t '3) '3 t) t ) '3 t)
(LET (COND (cons t t) (LET (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 '()) '() 1) 1 ) '() 1)
(LET (COND 2 (LET (COND 2 '()) '() 2) 2 ) '() 2)
(LET (COND nil (LET (COND nil '()) '() nil) nil ) '() nil)
(LET (COND t (LET (COND t '()) '() t) t ) '() t)
(LET (COND (cons t t) (LET (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(LET (COND 2 (LET (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(LET (COND nil (LET (COND nil '(())) '(()) nil) nil ) '(()) nil)
(LET (COND t (LET (COND t '(())) '(()) t) t ) '(()) t)
(LET (COND (cons t t) (LET (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LET (COND 2 (LET (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LET (COND nil (LET (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(LET (COND t (LET (COND t '((()))) '((())) t) t ) '((())) t)
(LET (COND (cons t t) (LET (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LET (COND 2 (LET (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LET (COND nil (LET (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LET (COND t (LET (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(LET (COND (cons t t) (LET (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 ,A) ,A 1) 1 ) ,A 1)
(LET (COND 2 (LET (COND 2 ,A) ,A 2) 2 ) ,A 2)
(LET (COND nil (LET (COND nil ,A) ,A nil) nil ) ,A nil)
(LET (COND t (LET (COND t ,A) ,A t) t ) ,A t)
(LET (COND (cons t t) (LET (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 ,1) ,1 1) 1 ) ,1 1)
(LET (COND 2 (LET (COND 2 ,1) ,1 2) 2 ) ,1 2)
(LET (COND nil (LET (COND nil ,1) ,1 nil) nil ) ,1 nil)
(LET (COND t (LET (COND t ,1) ,1 t) t ) ,1 t)
(LET (COND (cons t t) (LET (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 ,()) ,() 1) 1 ) ,() 1)
(LET (COND 2 (LET (COND 2 ,()) ,() 2) 2 ) ,() 2)
(LET (COND nil (LET (COND nil ,()) ,() nil) nil ) ,() nil)
(LET (COND t (LET (COND t ,()) ,() t) t ) ,() t)
(LET (COND (cons t t) (LET (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LET (COND 2 (LET (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LET (COND nil (LET (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LET (COND t (LET (COND t ,(())) ,(()) t) t ) ,(()) t)
(LET (COND (cons t t) (LET (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'A) `'A 1) 1 ) `'A 1)
(LET (COND 2 (LET (COND 2 `'A) `'A 2) 2 ) `'A 2)
(LET (COND nil (LET (COND nil `'A) `'A nil) nil ) `'A nil)
(LET (COND t (LET (COND t `'A) `'A t) t ) `'A t)
(LET (COND (cons t t) (LET (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'B) `'B 1) 1 ) `'B 1)
(LET (COND 2 (LET (COND 2 `'B) `'B 2) 2 ) `'B 2)
(LET (COND nil (LET (COND nil `'B) `'B nil) nil ) `'B nil)
(LET (COND t (LET (COND t `'B) `'B t) t ) `'B t)
(LET (COND (cons t t) (LET (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'C) `'C 1) 1 ) `'C 1)
(LET (COND 2 (LET (COND 2 `'C) `'C 2) 2 ) `'C 2)
(LET (COND nil (LET (COND nil `'C) `'C nil) nil ) `'C nil)
(LET (COND t (LET (COND t `'C) `'C t) t ) `'C t)
(LET (COND (cons t t) (LET (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'1) `'1 1) 1 ) `'1 1)
(LET (COND 2 (LET (COND 2 `'1) `'1 2) 2 ) `'1 2)
(LET (COND nil (LET (COND nil `'1) `'1 nil) nil ) `'1 nil)
(LET (COND t (LET (COND t `'1) `'1 t) t ) `'1 t)
(LET (COND (cons t t) (LET (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'2) `'2 1) 1 ) `'2 1)
(LET (COND 2 (LET (COND 2 `'2) `'2 2) 2 ) `'2 2)
(LET (COND nil (LET (COND nil `'2) `'2 nil) nil ) `'2 nil)
(LET (COND t (LET (COND t `'2) `'2 t) t ) `'2 t)
(LET (COND (cons t t) (LET (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'3) `'3 1) 1 ) `'3 1)
(LET (COND 2 (LET (COND 2 `'3) `'3 2) 2 ) `'3 2)
(LET (COND nil (LET (COND nil `'3) `'3 nil) nil ) `'3 nil)
(LET (COND t (LET (COND t `'3) `'3 t) t ) `'3 t)
(LET (COND (cons t t) (LET (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'()) `'() 1) 1 ) `'() 1)
(LET (COND 2 (LET (COND 2 `'()) `'() 2) 2 ) `'() 2)
(LET (COND nil (LET (COND nil `'()) `'() nil) nil ) `'() nil)
(LET (COND t (LET (COND t `'()) `'() t) t ) `'() t)
(LET (COND (cons t t) (LET (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LET (COND 2 (LET (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LET (COND nil (LET (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LET (COND t (LET (COND t `'(())) `'(()) t) t ) `'(()) t)
(LET (COND (cons t t) (LET (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LET (COND 2 (LET (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LET (COND nil (LET (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LET (COND t (LET (COND t `'((()))) `'((())) t) t ) `'((())) t)
(LET (COND (cons t t) (LET (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LET (COND 1 (LET (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LET (COND 2 (LET (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LET (COND nil (LET (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LET (COND t (LET (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LET (COND (cons t t) (LET (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LET (COND (cons nil t) (LET (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LET (COND (cons nil nil) (LET (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LET (COND (cons 0 0) (LET (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LET (COND (cons 1 1) (LET (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LET (COND (list 1 2 3) (LET (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LET (COND (list (cons 1 1 ) ) (LET (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 T) T 1) 1 ) T 1)
(LIST (COND 2 (LIST (COND 2 T) T 2) 2 ) T 2)
(LIST (COND nil (LIST (COND nil T) T nil) nil ) T nil)
(LIST (COND t (LIST (COND t T) T t) t ) T t)
(LIST (COND (cons t t) (LIST (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 NIL) NIL 1) 1 ) NIL 1)
(LIST (COND 2 (LIST (COND 2 NIL) NIL 2) 2 ) NIL 2)
(LIST (COND nil (LIST (COND nil NIL) NIL nil) nil ) NIL nil)
(LIST (COND t (LIST (COND t NIL) NIL t) t ) NIL t)
(LIST (COND (cons t t) (LIST (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 A) A 1) 1 ) A 1)
(LIST (COND 2 (LIST (COND 2 A) A 2) 2 ) A 2)
(LIST (COND nil (LIST (COND nil A) A nil) nil ) A nil)
(LIST (COND t (LIST (COND t A) A t) t ) A t)
(LIST (COND (cons t t) (LIST (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 B) B 1) 1 ) B 1)
(LIST (COND 2 (LIST (COND 2 B) B 2) 2 ) B 2)
(LIST (COND nil (LIST (COND nil B) B nil) nil ) B nil)
(LIST (COND t (LIST (COND t B) B t) t ) B t)
(LIST (COND (cons t t) (LIST (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 C) C 1) 1 ) C 1)
(LIST (COND 2 (LIST (COND 2 C) C 2) 2 ) C 2)
(LIST (COND nil (LIST (COND nil C) C nil) nil ) C nil)
(LIST (COND t (LIST (COND t C) C t) t ) C t)
(LIST (COND (cons t t) (LIST (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 1) 1 1) 1 ) 1 1)
(LIST (COND 2 (LIST (COND 2 1) 1 2) 2 ) 1 2)
(LIST (COND nil (LIST (COND nil 1) 1 nil) nil ) 1 nil)
(LIST (COND t (LIST (COND t 1) 1 t) t ) 1 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 2) 2 1) 1 ) 2 1)
(LIST (COND 2 (LIST (COND 2 2) 2 2) 2 ) 2 2)
(LIST (COND nil (LIST (COND nil 2) 2 nil) nil ) 2 nil)
(LIST (COND t (LIST (COND t 2) 2 t) t ) 2 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 3) 3 1) 1 ) 3 1)
(LIST (COND 2 (LIST (COND 2 3) 3 2) 2 ) 3 2)
(LIST (COND nil (LIST (COND nil 3) 3 nil) nil ) 3 nil)
(LIST (COND t (LIST (COND t 3) 3 t) t ) 3 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 ()) () 1) 1 ) () 1)
(LIST (COND 2 (LIST (COND 2 ()) () 2) 2 ) () 2)
(LIST (COND nil (LIST (COND nil ()) () nil) nil ) () nil)
(LIST (COND t (LIST (COND t ()) () t) t ) () t)
(LIST (COND (cons t t) (LIST (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 (())) (()) 1) 1 ) (()) 1)
(LIST (COND 2 (LIST (COND 2 (())) (()) 2) 2 ) (()) 2)
(LIST (COND nil (LIST (COND nil (())) (()) nil) nil ) (()) nil)
(LIST (COND t (LIST (COND t (())) (()) t) t ) (()) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LIST (COND 2 (LIST (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LIST (COND nil (LIST (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(LIST (COND t (LIST (COND t ((()))) ((())) t) t ) ((())) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LIST (COND 2 (LIST (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LIST (COND nil (LIST (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LIST (COND t (LIST (COND t (((())))) (((()))) t) t ) (((()))) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 'A) 'A 1) 1 ) 'A 1)
(LIST (COND 2 (LIST (COND 2 'A) 'A 2) 2 ) 'A 2)
(LIST (COND nil (LIST (COND nil 'A) 'A nil) nil ) 'A nil)
(LIST (COND t (LIST (COND t 'A) 'A t) t ) 'A t)
(LIST (COND (cons t t) (LIST (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 'B) 'B 1) 1 ) 'B 1)
(LIST (COND 2 (LIST (COND 2 'B) 'B 2) 2 ) 'B 2)
(LIST (COND nil (LIST (COND nil 'B) 'B nil) nil ) 'B nil)
(LIST (COND t (LIST (COND t 'B) 'B t) t ) 'B t)
(LIST (COND (cons t t) (LIST (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 'C) 'C 1) 1 ) 'C 1)
(LIST (COND 2 (LIST (COND 2 'C) 'C 2) 2 ) 'C 2)
(LIST (COND nil (LIST (COND nil 'C) 'C nil) nil ) 'C nil)
(LIST (COND t (LIST (COND t 'C) 'C t) t ) 'C t)
(LIST (COND (cons t t) (LIST (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 '1) '1 1) 1 ) '1 1)
(LIST (COND 2 (LIST (COND 2 '1) '1 2) 2 ) '1 2)
(LIST (COND nil (LIST (COND nil '1) '1 nil) nil ) '1 nil)
(LIST (COND t (LIST (COND t '1) '1 t) t ) '1 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 '2) '2 1) 1 ) '2 1)
(LIST (COND 2 (LIST (COND 2 '2) '2 2) 2 ) '2 2)
(LIST (COND nil (LIST (COND nil '2) '2 nil) nil ) '2 nil)
(LIST (COND t (LIST (COND t '2) '2 t) t ) '2 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 '3) '3 1) 1 ) '3 1)
(LIST (COND 2 (LIST (COND 2 '3) '3 2) 2 ) '3 2)
(LIST (COND nil (LIST (COND nil '3) '3 nil) nil ) '3 nil)
(LIST (COND t (LIST (COND t '3) '3 t) t ) '3 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 '()) '() 1) 1 ) '() 1)
(LIST (COND 2 (LIST (COND 2 '()) '() 2) 2 ) '() 2)
(LIST (COND nil (LIST (COND nil '()) '() nil) nil ) '() nil)
(LIST (COND t (LIST (COND t '()) '() t) t ) '() t)
(LIST (COND (cons t t) (LIST (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(LIST (COND 2 (LIST (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(LIST (COND nil (LIST (COND nil '(())) '(()) nil) nil ) '(()) nil)
(LIST (COND t (LIST (COND t '(())) '(()) t) t ) '(()) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LIST (COND 2 (LIST (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LIST (COND nil (LIST (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(LIST (COND t (LIST (COND t '((()))) '((())) t) t ) '((())) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LIST (COND 2 (LIST (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LIST (COND nil (LIST (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LIST (COND t (LIST (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 ,A) ,A 1) 1 ) ,A 1)
(LIST (COND 2 (LIST (COND 2 ,A) ,A 2) 2 ) ,A 2)
(LIST (COND nil (LIST (COND nil ,A) ,A nil) nil ) ,A nil)
(LIST (COND t (LIST (COND t ,A) ,A t) t ) ,A t)
(LIST (COND (cons t t) (LIST (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 ,1) ,1 1) 1 ) ,1 1)
(LIST (COND 2 (LIST (COND 2 ,1) ,1 2) 2 ) ,1 2)
(LIST (COND nil (LIST (COND nil ,1) ,1 nil) nil ) ,1 nil)
(LIST (COND t (LIST (COND t ,1) ,1 t) t ) ,1 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 ,()) ,() 1) 1 ) ,() 1)
(LIST (COND 2 (LIST (COND 2 ,()) ,() 2) 2 ) ,() 2)
(LIST (COND nil (LIST (COND nil ,()) ,() nil) nil ) ,() nil)
(LIST (COND t (LIST (COND t ,()) ,() t) t ) ,() t)
(LIST (COND (cons t t) (LIST (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LIST (COND 2 (LIST (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LIST (COND nil (LIST (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LIST (COND t (LIST (COND t ,(())) ,(()) t) t ) ,(()) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'A) `'A 1) 1 ) `'A 1)
(LIST (COND 2 (LIST (COND 2 `'A) `'A 2) 2 ) `'A 2)
(LIST (COND nil (LIST (COND nil `'A) `'A nil) nil ) `'A nil)
(LIST (COND t (LIST (COND t `'A) `'A t) t ) `'A t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'B) `'B 1) 1 ) `'B 1)
(LIST (COND 2 (LIST (COND 2 `'B) `'B 2) 2 ) `'B 2)
(LIST (COND nil (LIST (COND nil `'B) `'B nil) nil ) `'B nil)
(LIST (COND t (LIST (COND t `'B) `'B t) t ) `'B t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'C) `'C 1) 1 ) `'C 1)
(LIST (COND 2 (LIST (COND 2 `'C) `'C 2) 2 ) `'C 2)
(LIST (COND nil (LIST (COND nil `'C) `'C nil) nil ) `'C nil)
(LIST (COND t (LIST (COND t `'C) `'C t) t ) `'C t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'1) `'1 1) 1 ) `'1 1)
(LIST (COND 2 (LIST (COND 2 `'1) `'1 2) 2 ) `'1 2)
(LIST (COND nil (LIST (COND nil `'1) `'1 nil) nil ) `'1 nil)
(LIST (COND t (LIST (COND t `'1) `'1 t) t ) `'1 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'2) `'2 1) 1 ) `'2 1)
(LIST (COND 2 (LIST (COND 2 `'2) `'2 2) 2 ) `'2 2)
(LIST (COND nil (LIST (COND nil `'2) `'2 nil) nil ) `'2 nil)
(LIST (COND t (LIST (COND t `'2) `'2 t) t ) `'2 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'3) `'3 1) 1 ) `'3 1)
(LIST (COND 2 (LIST (COND 2 `'3) `'3 2) 2 ) `'3 2)
(LIST (COND nil (LIST (COND nil `'3) `'3 nil) nil ) `'3 nil)
(LIST (COND t (LIST (COND t `'3) `'3 t) t ) `'3 t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'()) `'() 1) 1 ) `'() 1)
(LIST (COND 2 (LIST (COND 2 `'()) `'() 2) 2 ) `'() 2)
(LIST (COND nil (LIST (COND nil `'()) `'() nil) nil ) `'() nil)
(LIST (COND t (LIST (COND t `'()) `'() t) t ) `'() t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LIST (COND 2 (LIST (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LIST (COND nil (LIST (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LIST (COND t (LIST (COND t `'(())) `'(()) t) t ) `'(()) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LIST (COND 2 (LIST (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LIST (COND nil (LIST (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LIST (COND t (LIST (COND t `'((()))) `'((())) t) t ) `'((())) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LIST (COND 1 (LIST (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LIST (COND 2 (LIST (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LIST (COND nil (LIST (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LIST (COND t (LIST (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LIST (COND (cons t t) (LIST (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LIST (COND (cons nil t) (LIST (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LIST (COND (cons nil nil) (LIST (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LIST (COND (cons 0 0) (LIST (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LIST (COND (cons 1 1) (LIST (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LIST (COND (list 1 2 3) (LIST (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LIST (COND (list (cons 1 1 ) ) (LIST (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 T) T 1) 1 ) T 1)
(LISTP (COND 2 (LISTP (COND 2 T) T 2) 2 ) T 2)
(LISTP (COND nil (LISTP (COND nil T) T nil) nil ) T nil)
(LISTP (COND t (LISTP (COND t T) T t) t ) T t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 NIL) NIL 1) 1 ) NIL 1)
(LISTP (COND 2 (LISTP (COND 2 NIL) NIL 2) 2 ) NIL 2)
(LISTP (COND nil (LISTP (COND nil NIL) NIL nil) nil ) NIL nil)
(LISTP (COND t (LISTP (COND t NIL) NIL t) t ) NIL t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 A) A 1) 1 ) A 1)
(LISTP (COND 2 (LISTP (COND 2 A) A 2) 2 ) A 2)
(LISTP (COND nil (LISTP (COND nil A) A nil) nil ) A nil)
(LISTP (COND t (LISTP (COND t A) A t) t ) A t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 B) B 1) 1 ) B 1)
(LISTP (COND 2 (LISTP (COND 2 B) B 2) 2 ) B 2)
(LISTP (COND nil (LISTP (COND nil B) B nil) nil ) B nil)
(LISTP (COND t (LISTP (COND t B) B t) t ) B t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 C) C 1) 1 ) C 1)
(LISTP (COND 2 (LISTP (COND 2 C) C 2) 2 ) C 2)
(LISTP (COND nil (LISTP (COND nil C) C nil) nil ) C nil)
(LISTP (COND t (LISTP (COND t C) C t) t ) C t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 1) 1 1) 1 ) 1 1)
(LISTP (COND 2 (LISTP (COND 2 1) 1 2) 2 ) 1 2)
(LISTP (COND nil (LISTP (COND nil 1) 1 nil) nil ) 1 nil)
(LISTP (COND t (LISTP (COND t 1) 1 t) t ) 1 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 2) 2 1) 1 ) 2 1)
(LISTP (COND 2 (LISTP (COND 2 2) 2 2) 2 ) 2 2)
(LISTP (COND nil (LISTP (COND nil 2) 2 nil) nil ) 2 nil)
(LISTP (COND t (LISTP (COND t 2) 2 t) t ) 2 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 3) 3 1) 1 ) 3 1)
(LISTP (COND 2 (LISTP (COND 2 3) 3 2) 2 ) 3 2)
(LISTP (COND nil (LISTP (COND nil 3) 3 nil) nil ) 3 nil)
(LISTP (COND t (LISTP (COND t 3) 3 t) t ) 3 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 ()) () 1) 1 ) () 1)
(LISTP (COND 2 (LISTP (COND 2 ()) () 2) 2 ) () 2)
(LISTP (COND nil (LISTP (COND nil ()) () nil) nil ) () nil)
(LISTP (COND t (LISTP (COND t ()) () t) t ) () t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 (())) (()) 1) 1 ) (()) 1)
(LISTP (COND 2 (LISTP (COND 2 (())) (()) 2) 2 ) (()) 2)
(LISTP (COND nil (LISTP (COND nil (())) (()) nil) nil ) (()) nil)
(LISTP (COND t (LISTP (COND t (())) (()) t) t ) (()) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(LISTP (COND 2 (LISTP (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(LISTP (COND nil (LISTP (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(LISTP (COND t (LISTP (COND t ((()))) ((())) t) t ) ((())) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(LISTP (COND 2 (LISTP (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(LISTP (COND nil (LISTP (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(LISTP (COND t (LISTP (COND t (((())))) (((()))) t) t ) (((()))) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 'A) 'A 1) 1 ) 'A 1)
(LISTP (COND 2 (LISTP (COND 2 'A) 'A 2) 2 ) 'A 2)
(LISTP (COND nil (LISTP (COND nil 'A) 'A nil) nil ) 'A nil)
(LISTP (COND t (LISTP (COND t 'A) 'A t) t ) 'A t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 'B) 'B 1) 1 ) 'B 1)
(LISTP (COND 2 (LISTP (COND 2 'B) 'B 2) 2 ) 'B 2)
(LISTP (COND nil (LISTP (COND nil 'B) 'B nil) nil ) 'B nil)
(LISTP (COND t (LISTP (COND t 'B) 'B t) t ) 'B t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 'C) 'C 1) 1 ) 'C 1)
(LISTP (COND 2 (LISTP (COND 2 'C) 'C 2) 2 ) 'C 2)
(LISTP (COND nil (LISTP (COND nil 'C) 'C nil) nil ) 'C nil)
(LISTP (COND t (LISTP (COND t 'C) 'C t) t ) 'C t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 '1) '1 1) 1 ) '1 1)
(LISTP (COND 2 (LISTP (COND 2 '1) '1 2) 2 ) '1 2)
(LISTP (COND nil (LISTP (COND nil '1) '1 nil) nil ) '1 nil)
(LISTP (COND t (LISTP (COND t '1) '1 t) t ) '1 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 '2) '2 1) 1 ) '2 1)
(LISTP (COND 2 (LISTP (COND 2 '2) '2 2) 2 ) '2 2)
(LISTP (COND nil (LISTP (COND nil '2) '2 nil) nil ) '2 nil)
(LISTP (COND t (LISTP (COND t '2) '2 t) t ) '2 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 '3) '3 1) 1 ) '3 1)
(LISTP (COND 2 (LISTP (COND 2 '3) '3 2) 2 ) '3 2)
(LISTP (COND nil (LISTP (COND nil '3) '3 nil) nil ) '3 nil)
(LISTP (COND t (LISTP (COND t '3) '3 t) t ) '3 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 '()) '() 1) 1 ) '() 1)
(LISTP (COND 2 (LISTP (COND 2 '()) '() 2) 2 ) '() 2)
(LISTP (COND nil (LISTP (COND nil '()) '() nil) nil ) '() nil)
(LISTP (COND t (LISTP (COND t '()) '() t) t ) '() t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(LISTP (COND 2 (LISTP (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(LISTP (COND nil (LISTP (COND nil '(())) '(()) nil) nil ) '(()) nil)
(LISTP (COND t (LISTP (COND t '(())) '(()) t) t ) '(()) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(LISTP (COND 2 (LISTP (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(LISTP (COND nil (LISTP (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(LISTP (COND t (LISTP (COND t '((()))) '((())) t) t ) '((())) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(LISTP (COND 2 (LISTP (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(LISTP (COND nil (LISTP (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(LISTP (COND t (LISTP (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 ,A) ,A 1) 1 ) ,A 1)
(LISTP (COND 2 (LISTP (COND 2 ,A) ,A 2) 2 ) ,A 2)
(LISTP (COND nil (LISTP (COND nil ,A) ,A nil) nil ) ,A nil)
(LISTP (COND t (LISTP (COND t ,A) ,A t) t ) ,A t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 ,1) ,1 1) 1 ) ,1 1)
(LISTP (COND 2 (LISTP (COND 2 ,1) ,1 2) 2 ) ,1 2)
(LISTP (COND nil (LISTP (COND nil ,1) ,1 nil) nil ) ,1 nil)
(LISTP (COND t (LISTP (COND t ,1) ,1 t) t ) ,1 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 ,()) ,() 1) 1 ) ,() 1)
(LISTP (COND 2 (LISTP (COND 2 ,()) ,() 2) 2 ) ,() 2)
(LISTP (COND nil (LISTP (COND nil ,()) ,() nil) nil ) ,() nil)
(LISTP (COND t (LISTP (COND t ,()) ,() t) t ) ,() t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(LISTP (COND 2 (LISTP (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(LISTP (COND nil (LISTP (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(LISTP (COND t (LISTP (COND t ,(())) ,(()) t) t ) ,(()) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'A) `'A 1) 1 ) `'A 1)
(LISTP (COND 2 (LISTP (COND 2 `'A) `'A 2) 2 ) `'A 2)
(LISTP (COND nil (LISTP (COND nil `'A) `'A nil) nil ) `'A nil)
(LISTP (COND t (LISTP (COND t `'A) `'A t) t ) `'A t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'B) `'B 1) 1 ) `'B 1)
(LISTP (COND 2 (LISTP (COND 2 `'B) `'B 2) 2 ) `'B 2)
(LISTP (COND nil (LISTP (COND nil `'B) `'B nil) nil ) `'B nil)
(LISTP (COND t (LISTP (COND t `'B) `'B t) t ) `'B t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'C) `'C 1) 1 ) `'C 1)
(LISTP (COND 2 (LISTP (COND 2 `'C) `'C 2) 2 ) `'C 2)
(LISTP (COND nil (LISTP (COND nil `'C) `'C nil) nil ) `'C nil)
(LISTP (COND t (LISTP (COND t `'C) `'C t) t ) `'C t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'1) `'1 1) 1 ) `'1 1)
(LISTP (COND 2 (LISTP (COND 2 `'1) `'1 2) 2 ) `'1 2)
(LISTP (COND nil (LISTP (COND nil `'1) `'1 nil) nil ) `'1 nil)
(LISTP (COND t (LISTP (COND t `'1) `'1 t) t ) `'1 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'2) `'2 1) 1 ) `'2 1)
(LISTP (COND 2 (LISTP (COND 2 `'2) `'2 2) 2 ) `'2 2)
(LISTP (COND nil (LISTP (COND nil `'2) `'2 nil) nil ) `'2 nil)
(LISTP (COND t (LISTP (COND t `'2) `'2 t) t ) `'2 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'3) `'3 1) 1 ) `'3 1)
(LISTP (COND 2 (LISTP (COND 2 `'3) `'3 2) 2 ) `'3 2)
(LISTP (COND nil (LISTP (COND nil `'3) `'3 nil) nil ) `'3 nil)
(LISTP (COND t (LISTP (COND t `'3) `'3 t) t ) `'3 t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'()) `'() 1) 1 ) `'() 1)
(LISTP (COND 2 (LISTP (COND 2 `'()) `'() 2) 2 ) `'() 2)
(LISTP (COND nil (LISTP (COND nil `'()) `'() nil) nil ) `'() nil)
(LISTP (COND t (LISTP (COND t `'()) `'() t) t ) `'() t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(LISTP (COND 2 (LISTP (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(LISTP (COND nil (LISTP (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(LISTP (COND t (LISTP (COND t `'(())) `'(()) t) t ) `'(()) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(LISTP (COND 2 (LISTP (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(LISTP (COND nil (LISTP (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(LISTP (COND t (LISTP (COND t `'((()))) `'((())) t) t ) `'((())) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(LISTP (COND 1 (LISTP (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(LISTP (COND 2 (LISTP (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(LISTP (COND nil (LISTP (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(LISTP (COND t (LISTP (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(LISTP (COND (cons t t) (LISTP (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(LISTP (COND (cons nil t) (LISTP (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(LISTP (COND (cons nil nil) (LISTP (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(LISTP (COND (cons 0 0) (LISTP (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(LISTP (COND (cons 1 1) (LISTP (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(LISTP (COND (list 1 2 3) (LISTP (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(LISTP (COND (list (cons 1 1 ) ) (LISTP (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 T) T 1) 1 ) T 1)
(MAP (COND 2 (MAP (COND 2 T) T 2) 2 ) T 2)
(MAP (COND nil (MAP (COND nil T) T nil) nil ) T nil)
(MAP (COND t (MAP (COND t T) T t) t ) T t)
(MAP (COND (cons t t) (MAP (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 NIL) NIL 1) 1 ) NIL 1)
(MAP (COND 2 (MAP (COND 2 NIL) NIL 2) 2 ) NIL 2)
(MAP (COND nil (MAP (COND nil NIL) NIL nil) nil ) NIL nil)
(MAP (COND t (MAP (COND t NIL) NIL t) t ) NIL t)
(MAP (COND (cons t t) (MAP (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 A) A 1) 1 ) A 1)
(MAP (COND 2 (MAP (COND 2 A) A 2) 2 ) A 2)
(MAP (COND nil (MAP (COND nil A) A nil) nil ) A nil)
(MAP (COND t (MAP (COND t A) A t) t ) A t)
(MAP (COND (cons t t) (MAP (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 B) B 1) 1 ) B 1)
(MAP (COND 2 (MAP (COND 2 B) B 2) 2 ) B 2)
(MAP (COND nil (MAP (COND nil B) B nil) nil ) B nil)
(MAP (COND t (MAP (COND t B) B t) t ) B t)
(MAP (COND (cons t t) (MAP (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 C) C 1) 1 ) C 1)
(MAP (COND 2 (MAP (COND 2 C) C 2) 2 ) C 2)
(MAP (COND nil (MAP (COND nil C) C nil) nil ) C nil)
(MAP (COND t (MAP (COND t C) C t) t ) C t)
(MAP (COND (cons t t) (MAP (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 1) 1 1) 1 ) 1 1)
(MAP (COND 2 (MAP (COND 2 1) 1 2) 2 ) 1 2)
(MAP (COND nil (MAP (COND nil 1) 1 nil) nil ) 1 nil)
(MAP (COND t (MAP (COND t 1) 1 t) t ) 1 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 2) 2 1) 1 ) 2 1)
(MAP (COND 2 (MAP (COND 2 2) 2 2) 2 ) 2 2)
(MAP (COND nil (MAP (COND nil 2) 2 nil) nil ) 2 nil)
(MAP (COND t (MAP (COND t 2) 2 t) t ) 2 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 3) 3 1) 1 ) 3 1)
(MAP (COND 2 (MAP (COND 2 3) 3 2) 2 ) 3 2)
(MAP (COND nil (MAP (COND nil 3) 3 nil) nil ) 3 nil)
(MAP (COND t (MAP (COND t 3) 3 t) t ) 3 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 ()) () 1) 1 ) () 1)
(MAP (COND 2 (MAP (COND 2 ()) () 2) 2 ) () 2)
(MAP (COND nil (MAP (COND nil ()) () nil) nil ) () nil)
(MAP (COND t (MAP (COND t ()) () t) t ) () t)
(MAP (COND (cons t t) (MAP (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 (())) (()) 1) 1 ) (()) 1)
(MAP (COND 2 (MAP (COND 2 (())) (()) 2) 2 ) (()) 2)
(MAP (COND nil (MAP (COND nil (())) (()) nil) nil ) (()) nil)
(MAP (COND t (MAP (COND t (())) (()) t) t ) (()) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(MAP (COND 2 (MAP (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(MAP (COND nil (MAP (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(MAP (COND t (MAP (COND t ((()))) ((())) t) t ) ((())) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(MAP (COND 2 (MAP (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(MAP (COND nil (MAP (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(MAP (COND t (MAP (COND t (((())))) (((()))) t) t ) (((()))) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 'A) 'A 1) 1 ) 'A 1)
(MAP (COND 2 (MAP (COND 2 'A) 'A 2) 2 ) 'A 2)
(MAP (COND nil (MAP (COND nil 'A) 'A nil) nil ) 'A nil)
(MAP (COND t (MAP (COND t 'A) 'A t) t ) 'A t)
(MAP (COND (cons t t) (MAP (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 'B) 'B 1) 1 ) 'B 1)
(MAP (COND 2 (MAP (COND 2 'B) 'B 2) 2 ) 'B 2)
(MAP (COND nil (MAP (COND nil 'B) 'B nil) nil ) 'B nil)
(MAP (COND t (MAP (COND t 'B) 'B t) t ) 'B t)
(MAP (COND (cons t t) (MAP (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 'C) 'C 1) 1 ) 'C 1)
(MAP (COND 2 (MAP (COND 2 'C) 'C 2) 2 ) 'C 2)
(MAP (COND nil (MAP (COND nil 'C) 'C nil) nil ) 'C nil)
(MAP (COND t (MAP (COND t 'C) 'C t) t ) 'C t)
(MAP (COND (cons t t) (MAP (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 '1) '1 1) 1 ) '1 1)
(MAP (COND 2 (MAP (COND 2 '1) '1 2) 2 ) '1 2)
(MAP (COND nil (MAP (COND nil '1) '1 nil) nil ) '1 nil)
(MAP (COND t (MAP (COND t '1) '1 t) t ) '1 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 '2) '2 1) 1 ) '2 1)
(MAP (COND 2 (MAP (COND 2 '2) '2 2) 2 ) '2 2)
(MAP (COND nil (MAP (COND nil '2) '2 nil) nil ) '2 nil)
(MAP (COND t (MAP (COND t '2) '2 t) t ) '2 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 '3) '3 1) 1 ) '3 1)
(MAP (COND 2 (MAP (COND 2 '3) '3 2) 2 ) '3 2)
(MAP (COND nil (MAP (COND nil '3) '3 nil) nil ) '3 nil)
(MAP (COND t (MAP (COND t '3) '3 t) t ) '3 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 '()) '() 1) 1 ) '() 1)
(MAP (COND 2 (MAP (COND 2 '()) '() 2) 2 ) '() 2)
(MAP (COND nil (MAP (COND nil '()) '() nil) nil ) '() nil)
(MAP (COND t (MAP (COND t '()) '() t) t ) '() t)
(MAP (COND (cons t t) (MAP (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(MAP (COND 2 (MAP (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(MAP (COND nil (MAP (COND nil '(())) '(()) nil) nil ) '(()) nil)
(MAP (COND t (MAP (COND t '(())) '(()) t) t ) '(()) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(MAP (COND 2 (MAP (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(MAP (COND nil (MAP (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(MAP (COND t (MAP (COND t '((()))) '((())) t) t ) '((())) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(MAP (COND 2 (MAP (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(MAP (COND nil (MAP (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(MAP (COND t (MAP (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 ,A) ,A 1) 1 ) ,A 1)
(MAP (COND 2 (MAP (COND 2 ,A) ,A 2) 2 ) ,A 2)
(MAP (COND nil (MAP (COND nil ,A) ,A nil) nil ) ,A nil)
(MAP (COND t (MAP (COND t ,A) ,A t) t ) ,A t)
(MAP (COND (cons t t) (MAP (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 ,1) ,1 1) 1 ) ,1 1)
(MAP (COND 2 (MAP (COND 2 ,1) ,1 2) 2 ) ,1 2)
(MAP (COND nil (MAP (COND nil ,1) ,1 nil) nil ) ,1 nil)
(MAP (COND t (MAP (COND t ,1) ,1 t) t ) ,1 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 ,()) ,() 1) 1 ) ,() 1)
(MAP (COND 2 (MAP (COND 2 ,()) ,() 2) 2 ) ,() 2)
(MAP (COND nil (MAP (COND nil ,()) ,() nil) nil ) ,() nil)
(MAP (COND t (MAP (COND t ,()) ,() t) t ) ,() t)
(MAP (COND (cons t t) (MAP (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(MAP (COND 2 (MAP (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(MAP (COND nil (MAP (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(MAP (COND t (MAP (COND t ,(())) ,(()) t) t ) ,(()) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'A) `'A 1) 1 ) `'A 1)
(MAP (COND 2 (MAP (COND 2 `'A) `'A 2) 2 ) `'A 2)
(MAP (COND nil (MAP (COND nil `'A) `'A nil) nil ) `'A nil)
(MAP (COND t (MAP (COND t `'A) `'A t) t ) `'A t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'B) `'B 1) 1 ) `'B 1)
(MAP (COND 2 (MAP (COND 2 `'B) `'B 2) 2 ) `'B 2)
(MAP (COND nil (MAP (COND nil `'B) `'B nil) nil ) `'B nil)
(MAP (COND t (MAP (COND t `'B) `'B t) t ) `'B t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'C) `'C 1) 1 ) `'C 1)
(MAP (COND 2 (MAP (COND 2 `'C) `'C 2) 2 ) `'C 2)
(MAP (COND nil (MAP (COND nil `'C) `'C nil) nil ) `'C nil)
(MAP (COND t (MAP (COND t `'C) `'C t) t ) `'C t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'1) `'1 1) 1 ) `'1 1)
(MAP (COND 2 (MAP (COND 2 `'1) `'1 2) 2 ) `'1 2)
(MAP (COND nil (MAP (COND nil `'1) `'1 nil) nil ) `'1 nil)
(MAP (COND t (MAP (COND t `'1) `'1 t) t ) `'1 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'2) `'2 1) 1 ) `'2 1)
(MAP (COND 2 (MAP (COND 2 `'2) `'2 2) 2 ) `'2 2)
(MAP (COND nil (MAP (COND nil `'2) `'2 nil) nil ) `'2 nil)
(MAP (COND t (MAP (COND t `'2) `'2 t) t ) `'2 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'3) `'3 1) 1 ) `'3 1)
(MAP (COND 2 (MAP (COND 2 `'3) `'3 2) 2 ) `'3 2)
(MAP (COND nil (MAP (COND nil `'3) `'3 nil) nil ) `'3 nil)
(MAP (COND t (MAP (COND t `'3) `'3 t) t ) `'3 t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'()) `'() 1) 1 ) `'() 1)
(MAP (COND 2 (MAP (COND 2 `'()) `'() 2) 2 ) `'() 2)
(MAP (COND nil (MAP (COND nil `'()) `'() nil) nil ) `'() nil)
(MAP (COND t (MAP (COND t `'()) `'() t) t ) `'() t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(MAP (COND 2 (MAP (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(MAP (COND nil (MAP (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(MAP (COND t (MAP (COND t `'(())) `'(()) t) t ) `'(()) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(MAP (COND 2 (MAP (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(MAP (COND nil (MAP (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(MAP (COND t (MAP (COND t `'((()))) `'((())) t) t ) `'((())) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(MAP (COND 1 (MAP (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(MAP (COND 2 (MAP (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(MAP (COND nil (MAP (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(MAP (COND t (MAP (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(MAP (COND (cons t t) (MAP (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(MAP (COND (cons nil t) (MAP (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(MAP (COND (cons nil nil) (MAP (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(MAP (COND (cons 0 0) (MAP (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(MAP (COND (cons 1 1) (MAP (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(MAP (COND (list 1 2 3) (MAP (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(MAP (COND (list (cons 1 1 ) ) (MAP (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 T) T 1) 1 ) T 1)
(MEMBER (COND 2 (MEMBER (COND 2 T) T 2) 2 ) T 2)
(MEMBER (COND nil (MEMBER (COND nil T) T nil) nil ) T nil)
(MEMBER (COND t (MEMBER (COND t T) T t) t ) T t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 NIL) NIL 1) 1 ) NIL 1)
(MEMBER (COND 2 (MEMBER (COND 2 NIL) NIL 2) 2 ) NIL 2)
(MEMBER (COND nil (MEMBER (COND nil NIL) NIL nil) nil ) NIL nil)
(MEMBER (COND t (MEMBER (COND t NIL) NIL t) t ) NIL t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 A) A 1) 1 ) A 1)
(MEMBER (COND 2 (MEMBER (COND 2 A) A 2) 2 ) A 2)
(MEMBER (COND nil (MEMBER (COND nil A) A nil) nil ) A nil)
(MEMBER (COND t (MEMBER (COND t A) A t) t ) A t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 B) B 1) 1 ) B 1)
(MEMBER (COND 2 (MEMBER (COND 2 B) B 2) 2 ) B 2)
(MEMBER (COND nil (MEMBER (COND nil B) B nil) nil ) B nil)
(MEMBER (COND t (MEMBER (COND t B) B t) t ) B t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 C) C 1) 1 ) C 1)
(MEMBER (COND 2 (MEMBER (COND 2 C) C 2) 2 ) C 2)
(MEMBER (COND nil (MEMBER (COND nil C) C nil) nil ) C nil)
(MEMBER (COND t (MEMBER (COND t C) C t) t ) C t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 1) 1 1) 1 ) 1 1)
(MEMBER (COND 2 (MEMBER (COND 2 1) 1 2) 2 ) 1 2)
(MEMBER (COND nil (MEMBER (COND nil 1) 1 nil) nil ) 1 nil)
(MEMBER (COND t (MEMBER (COND t 1) 1 t) t ) 1 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 2) 2 1) 1 ) 2 1)
(MEMBER (COND 2 (MEMBER (COND 2 2) 2 2) 2 ) 2 2)
(MEMBER (COND nil (MEMBER (COND nil 2) 2 nil) nil ) 2 nil)
(MEMBER (COND t (MEMBER (COND t 2) 2 t) t ) 2 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 3) 3 1) 1 ) 3 1)
(MEMBER (COND 2 (MEMBER (COND 2 3) 3 2) 2 ) 3 2)
(MEMBER (COND nil (MEMBER (COND nil 3) 3 nil) nil ) 3 nil)
(MEMBER (COND t (MEMBER (COND t 3) 3 t) t ) 3 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 ()) () 1) 1 ) () 1)
(MEMBER (COND 2 (MEMBER (COND 2 ()) () 2) 2 ) () 2)
(MEMBER (COND nil (MEMBER (COND nil ()) () nil) nil ) () nil)
(MEMBER (COND t (MEMBER (COND t ()) () t) t ) () t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 (())) (()) 1) 1 ) (()) 1)
(MEMBER (COND 2 (MEMBER (COND 2 (())) (()) 2) 2 ) (()) 2)
(MEMBER (COND nil (MEMBER (COND nil (())) (()) nil) nil ) (()) nil)
(MEMBER (COND t (MEMBER (COND t (())) (()) t) t ) (()) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(MEMBER (COND 2 (MEMBER (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(MEMBER (COND nil (MEMBER (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(MEMBER (COND t (MEMBER (COND t ((()))) ((())) t) t ) ((())) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(MEMBER (COND 2 (MEMBER (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(MEMBER (COND nil (MEMBER (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(MEMBER (COND t (MEMBER (COND t (((())))) (((()))) t) t ) (((()))) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 'A) 'A 1) 1 ) 'A 1)
(MEMBER (COND 2 (MEMBER (COND 2 'A) 'A 2) 2 ) 'A 2)
(MEMBER (COND nil (MEMBER (COND nil 'A) 'A nil) nil ) 'A nil)
(MEMBER (COND t (MEMBER (COND t 'A) 'A t) t ) 'A t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 'B) 'B 1) 1 ) 'B 1)
(MEMBER (COND 2 (MEMBER (COND 2 'B) 'B 2) 2 ) 'B 2)
(MEMBER (COND nil (MEMBER (COND nil 'B) 'B nil) nil ) 'B nil)
(MEMBER (COND t (MEMBER (COND t 'B) 'B t) t ) 'B t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 'C) 'C 1) 1 ) 'C 1)
(MEMBER (COND 2 (MEMBER (COND 2 'C) 'C 2) 2 ) 'C 2)
(MEMBER (COND nil (MEMBER (COND nil 'C) 'C nil) nil ) 'C nil)
(MEMBER (COND t (MEMBER (COND t 'C) 'C t) t ) 'C t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 '1) '1 1) 1 ) '1 1)
(MEMBER (COND 2 (MEMBER (COND 2 '1) '1 2) 2 ) '1 2)
(MEMBER (COND nil (MEMBER (COND nil '1) '1 nil) nil ) '1 nil)
(MEMBER (COND t (MEMBER (COND t '1) '1 t) t ) '1 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 '2) '2 1) 1 ) '2 1)
(MEMBER (COND 2 (MEMBER (COND 2 '2) '2 2) 2 ) '2 2)
(MEMBER (COND nil (MEMBER (COND nil '2) '2 nil) nil ) '2 nil)
(MEMBER (COND t (MEMBER (COND t '2) '2 t) t ) '2 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 '3) '3 1) 1 ) '3 1)
(MEMBER (COND 2 (MEMBER (COND 2 '3) '3 2) 2 ) '3 2)
(MEMBER (COND nil (MEMBER (COND nil '3) '3 nil) nil ) '3 nil)
(MEMBER (COND t (MEMBER (COND t '3) '3 t) t ) '3 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 '()) '() 1) 1 ) '() 1)
(MEMBER (COND 2 (MEMBER (COND 2 '()) '() 2) 2 ) '() 2)
(MEMBER (COND nil (MEMBER (COND nil '()) '() nil) nil ) '() nil)
(MEMBER (COND t (MEMBER (COND t '()) '() t) t ) '() t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(MEMBER (COND 2 (MEMBER (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(MEMBER (COND nil (MEMBER (COND nil '(())) '(()) nil) nil ) '(()) nil)
(MEMBER (COND t (MEMBER (COND t '(())) '(()) t) t ) '(()) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(MEMBER (COND 2 (MEMBER (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(MEMBER (COND nil (MEMBER (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(MEMBER (COND t (MEMBER (COND t '((()))) '((())) t) t ) '((())) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(MEMBER (COND 2 (MEMBER (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(MEMBER (COND nil (MEMBER (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(MEMBER (COND t (MEMBER (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 ,A) ,A 1) 1 ) ,A 1)
(MEMBER (COND 2 (MEMBER (COND 2 ,A) ,A 2) 2 ) ,A 2)
(MEMBER (COND nil (MEMBER (COND nil ,A) ,A nil) nil ) ,A nil)
(MEMBER (COND t (MEMBER (COND t ,A) ,A t) t ) ,A t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 ,1) ,1 1) 1 ) ,1 1)
(MEMBER (COND 2 (MEMBER (COND 2 ,1) ,1 2) 2 ) ,1 2)
(MEMBER (COND nil (MEMBER (COND nil ,1) ,1 nil) nil ) ,1 nil)
(MEMBER (COND t (MEMBER (COND t ,1) ,1 t) t ) ,1 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 ,()) ,() 1) 1 ) ,() 1)
(MEMBER (COND 2 (MEMBER (COND 2 ,()) ,() 2) 2 ) ,() 2)
(MEMBER (COND nil (MEMBER (COND nil ,()) ,() nil) nil ) ,() nil)
(MEMBER (COND t (MEMBER (COND t ,()) ,() t) t ) ,() t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(MEMBER (COND 2 (MEMBER (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(MEMBER (COND nil (MEMBER (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(MEMBER (COND t (MEMBER (COND t ,(())) ,(()) t) t ) ,(()) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'A) `'A 1) 1 ) `'A 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'A) `'A 2) 2 ) `'A 2)
(MEMBER (COND nil (MEMBER (COND nil `'A) `'A nil) nil ) `'A nil)
(MEMBER (COND t (MEMBER (COND t `'A) `'A t) t ) `'A t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'B) `'B 1) 1 ) `'B 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'B) `'B 2) 2 ) `'B 2)
(MEMBER (COND nil (MEMBER (COND nil `'B) `'B nil) nil ) `'B nil)
(MEMBER (COND t (MEMBER (COND t `'B) `'B t) t ) `'B t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'C) `'C 1) 1 ) `'C 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'C) `'C 2) 2 ) `'C 2)
(MEMBER (COND nil (MEMBER (COND nil `'C) `'C nil) nil ) `'C nil)
(MEMBER (COND t (MEMBER (COND t `'C) `'C t) t ) `'C t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'1) `'1 1) 1 ) `'1 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'1) `'1 2) 2 ) `'1 2)
(MEMBER (COND nil (MEMBER (COND nil `'1) `'1 nil) nil ) `'1 nil)
(MEMBER (COND t (MEMBER (COND t `'1) `'1 t) t ) `'1 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'2) `'2 1) 1 ) `'2 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'2) `'2 2) 2 ) `'2 2)
(MEMBER (COND nil (MEMBER (COND nil `'2) `'2 nil) nil ) `'2 nil)
(MEMBER (COND t (MEMBER (COND t `'2) `'2 t) t ) `'2 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'3) `'3 1) 1 ) `'3 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'3) `'3 2) 2 ) `'3 2)
(MEMBER (COND nil (MEMBER (COND nil `'3) `'3 nil) nil ) `'3 nil)
(MEMBER (COND t (MEMBER (COND t `'3) `'3 t) t ) `'3 t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'()) `'() 1) 1 ) `'() 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'()) `'() 2) 2 ) `'() 2)
(MEMBER (COND nil (MEMBER (COND nil `'()) `'() nil) nil ) `'() nil)
(MEMBER (COND t (MEMBER (COND t `'()) `'() t) t ) `'() t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(MEMBER (COND nil (MEMBER (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(MEMBER (COND t (MEMBER (COND t `'(())) `'(()) t) t ) `'(()) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(MEMBER (COND nil (MEMBER (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(MEMBER (COND t (MEMBER (COND t `'((()))) `'((())) t) t ) `'((())) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(MEMBER (COND 1 (MEMBER (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(MEMBER (COND 2 (MEMBER (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(MEMBER (COND nil (MEMBER (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(MEMBER (COND t (MEMBER (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(MEMBER (COND (cons t t) (MEMBER (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(MEMBER (COND (cons nil t) (MEMBER (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(MEMBER (COND (cons nil nil) (MEMBER (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(MEMBER (COND (cons 0 0) (MEMBER (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(MEMBER (COND (cons 1 1) (MEMBER (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(MEMBER (COND (list 1 2 3) (MEMBER (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(MEMBER (COND (list (cons 1 1 ) ) (MEMBER (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 T) T 1) 1 ) T 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 T) T 2) 2 ) T 2)
(MEMBERP (COND nil (MEMBERP (COND nil T) T nil) nil ) T nil)
(MEMBERP (COND t (MEMBERP (COND t T) T t) t ) T t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 NIL) NIL 1) 1 ) NIL 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 NIL) NIL 2) 2 ) NIL 2)
(MEMBERP (COND nil (MEMBERP (COND nil NIL) NIL nil) nil ) NIL nil)
(MEMBERP (COND t (MEMBERP (COND t NIL) NIL t) t ) NIL t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 A) A 1) 1 ) A 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 A) A 2) 2 ) A 2)
(MEMBERP (COND nil (MEMBERP (COND nil A) A nil) nil ) A nil)
(MEMBERP (COND t (MEMBERP (COND t A) A t) t ) A t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 B) B 1) 1 ) B 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 B) B 2) 2 ) B 2)
(MEMBERP (COND nil (MEMBERP (COND nil B) B nil) nil ) B nil)
(MEMBERP (COND t (MEMBERP (COND t B) B t) t ) B t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 C) C 1) 1 ) C 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 C) C 2) 2 ) C 2)
(MEMBERP (COND nil (MEMBERP (COND nil C) C nil) nil ) C nil)
(MEMBERP (COND t (MEMBERP (COND t C) C t) t ) C t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 1) 1 1) 1 ) 1 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 1) 1 2) 2 ) 1 2)
(MEMBERP (COND nil (MEMBERP (COND nil 1) 1 nil) nil ) 1 nil)
(MEMBERP (COND t (MEMBERP (COND t 1) 1 t) t ) 1 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 2) 2 1) 1 ) 2 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 2) 2 2) 2 ) 2 2)
(MEMBERP (COND nil (MEMBERP (COND nil 2) 2 nil) nil ) 2 nil)
(MEMBERP (COND t (MEMBERP (COND t 2) 2 t) t ) 2 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 3) 3 1) 1 ) 3 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 3) 3 2) 2 ) 3 2)
(MEMBERP (COND nil (MEMBERP (COND nil 3) 3 nil) nil ) 3 nil)
(MEMBERP (COND t (MEMBERP (COND t 3) 3 t) t ) 3 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 ()) () 1) 1 ) () 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 ()) () 2) 2 ) () 2)
(MEMBERP (COND nil (MEMBERP (COND nil ()) () nil) nil ) () nil)
(MEMBERP (COND t (MEMBERP (COND t ()) () t) t ) () t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 (())) (()) 1) 1 ) (()) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 (())) (()) 2) 2 ) (()) 2)
(MEMBERP (COND nil (MEMBERP (COND nil (())) (()) nil) nil ) (()) nil)
(MEMBERP (COND t (MEMBERP (COND t (())) (()) t) t ) (()) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(MEMBERP (COND nil (MEMBERP (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(MEMBERP (COND t (MEMBERP (COND t ((()))) ((())) t) t ) ((())) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(MEMBERP (COND nil (MEMBERP (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(MEMBERP (COND t (MEMBERP (COND t (((())))) (((()))) t) t ) (((()))) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 'A) 'A 1) 1 ) 'A 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 'A) 'A 2) 2 ) 'A 2)
(MEMBERP (COND nil (MEMBERP (COND nil 'A) 'A nil) nil ) 'A nil)
(MEMBERP (COND t (MEMBERP (COND t 'A) 'A t) t ) 'A t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 'B) 'B 1) 1 ) 'B 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 'B) 'B 2) 2 ) 'B 2)
(MEMBERP (COND nil (MEMBERP (COND nil 'B) 'B nil) nil ) 'B nil)
(MEMBERP (COND t (MEMBERP (COND t 'B) 'B t) t ) 'B t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 'C) 'C 1) 1 ) 'C 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 'C) 'C 2) 2 ) 'C 2)
(MEMBERP (COND nil (MEMBERP (COND nil 'C) 'C nil) nil ) 'C nil)
(MEMBERP (COND t (MEMBERP (COND t 'C) 'C t) t ) 'C t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 '1) '1 1) 1 ) '1 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 '1) '1 2) 2 ) '1 2)
(MEMBERP (COND nil (MEMBERP (COND nil '1) '1 nil) nil ) '1 nil)
(MEMBERP (COND t (MEMBERP (COND t '1) '1 t) t ) '1 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 '2) '2 1) 1 ) '2 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 '2) '2 2) 2 ) '2 2)
(MEMBERP (COND nil (MEMBERP (COND nil '2) '2 nil) nil ) '2 nil)
(MEMBERP (COND t (MEMBERP (COND t '2) '2 t) t ) '2 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 '3) '3 1) 1 ) '3 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 '3) '3 2) 2 ) '3 2)
(MEMBERP (COND nil (MEMBERP (COND nil '3) '3 nil) nil ) '3 nil)
(MEMBERP (COND t (MEMBERP (COND t '3) '3 t) t ) '3 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 '()) '() 1) 1 ) '() 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 '()) '() 2) 2 ) '() 2)
(MEMBERP (COND nil (MEMBERP (COND nil '()) '() nil) nil ) '() nil)
(MEMBERP (COND t (MEMBERP (COND t '()) '() t) t ) '() t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(MEMBERP (COND nil (MEMBERP (COND nil '(())) '(()) nil) nil ) '(()) nil)
(MEMBERP (COND t (MEMBERP (COND t '(())) '(()) t) t ) '(()) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(MEMBERP (COND nil (MEMBERP (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(MEMBERP (COND t (MEMBERP (COND t '((()))) '((())) t) t ) '((())) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(MEMBERP (COND nil (MEMBERP (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(MEMBERP (COND t (MEMBERP (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 ,A) ,A 1) 1 ) ,A 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 ,A) ,A 2) 2 ) ,A 2)
(MEMBERP (COND nil (MEMBERP (COND nil ,A) ,A nil) nil ) ,A nil)
(MEMBERP (COND t (MEMBERP (COND t ,A) ,A t) t ) ,A t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 ,1) ,1 1) 1 ) ,1 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 ,1) ,1 2) 2 ) ,1 2)
(MEMBERP (COND nil (MEMBERP (COND nil ,1) ,1 nil) nil ) ,1 nil)
(MEMBERP (COND t (MEMBERP (COND t ,1) ,1 t) t ) ,1 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 ,()) ,() 1) 1 ) ,() 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 ,()) ,() 2) 2 ) ,() 2)
(MEMBERP (COND nil (MEMBERP (COND nil ,()) ,() nil) nil ) ,() nil)
(MEMBERP (COND t (MEMBERP (COND t ,()) ,() t) t ) ,() t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(MEMBERP (COND nil (MEMBERP (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(MEMBERP (COND t (MEMBERP (COND t ,(())) ,(()) t) t ) ,(()) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'A) `'A 1) 1 ) `'A 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'A) `'A 2) 2 ) `'A 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'A) `'A nil) nil ) `'A nil)
(MEMBERP (COND t (MEMBERP (COND t `'A) `'A t) t ) `'A t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'B) `'B 1) 1 ) `'B 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'B) `'B 2) 2 ) `'B 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'B) `'B nil) nil ) `'B nil)
(MEMBERP (COND t (MEMBERP (COND t `'B) `'B t) t ) `'B t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'C) `'C 1) 1 ) `'C 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'C) `'C 2) 2 ) `'C 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'C) `'C nil) nil ) `'C nil)
(MEMBERP (COND t (MEMBERP (COND t `'C) `'C t) t ) `'C t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'1) `'1 1) 1 ) `'1 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'1) `'1 2) 2 ) `'1 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'1) `'1 nil) nil ) `'1 nil)
(MEMBERP (COND t (MEMBERP (COND t `'1) `'1 t) t ) `'1 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'2) `'2 1) 1 ) `'2 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'2) `'2 2) 2 ) `'2 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'2) `'2 nil) nil ) `'2 nil)
(MEMBERP (COND t (MEMBERP (COND t `'2) `'2 t) t ) `'2 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'3) `'3 1) 1 ) `'3 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'3) `'3 2) 2 ) `'3 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'3) `'3 nil) nil ) `'3 nil)
(MEMBERP (COND t (MEMBERP (COND t `'3) `'3 t) t ) `'3 t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'()) `'() 1) 1 ) `'() 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'()) `'() 2) 2 ) `'() 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'()) `'() nil) nil ) `'() nil)
(MEMBERP (COND t (MEMBERP (COND t `'()) `'() t) t ) `'() t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(MEMBERP (COND t (MEMBERP (COND t `'(())) `'(()) t) t ) `'(()) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(MEMBERP (COND t (MEMBERP (COND t `'((()))) `'((())) t) t ) `'((())) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(MEMBERP (COND 1 (MEMBERP (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(MEMBERP (COND 2 (MEMBERP (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(MEMBERP (COND nil (MEMBERP (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(MEMBERP (COND t (MEMBERP (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(MEMBERP (COND (cons t t) (MEMBERP (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(MEMBERP (COND (cons nil t) (MEMBERP (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(MEMBERP (COND (cons nil nil) (MEMBERP (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(MEMBERP (COND (cons 0 0) (MEMBERP (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(MEMBERP (COND (cons 1 1) (MEMBERP (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(MEMBERP (COND (list 1 2 3) (MEMBERP (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(MEMBERP (COND (list (cons 1 1 ) ) (MEMBERP (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 T) T 1) 1 ) T 1)
(NOT (COND 2 (NOT (COND 2 T) T 2) 2 ) T 2)
(NOT (COND nil (NOT (COND nil T) T nil) nil ) T nil)
(NOT (COND t (NOT (COND t T) T t) t ) T t)
(NOT (COND (cons t t) (NOT (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 NIL) NIL 1) 1 ) NIL 1)
(NOT (COND 2 (NOT (COND 2 NIL) NIL 2) 2 ) NIL 2)
(NOT (COND nil (NOT (COND nil NIL) NIL nil) nil ) NIL nil)
(NOT (COND t (NOT (COND t NIL) NIL t) t ) NIL t)
(NOT (COND (cons t t) (NOT (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 A) A 1) 1 ) A 1)
(NOT (COND 2 (NOT (COND 2 A) A 2) 2 ) A 2)
(NOT (COND nil (NOT (COND nil A) A nil) nil ) A nil)
(NOT (COND t (NOT (COND t A) A t) t ) A t)
(NOT (COND (cons t t) (NOT (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 B) B 1) 1 ) B 1)
(NOT (COND 2 (NOT (COND 2 B) B 2) 2 ) B 2)
(NOT (COND nil (NOT (COND nil B) B nil) nil ) B nil)
(NOT (COND t (NOT (COND t B) B t) t ) B t)
(NOT (COND (cons t t) (NOT (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 C) C 1) 1 ) C 1)
(NOT (COND 2 (NOT (COND 2 C) C 2) 2 ) C 2)
(NOT (COND nil (NOT (COND nil C) C nil) nil ) C nil)
(NOT (COND t (NOT (COND t C) C t) t ) C t)
(NOT (COND (cons t t) (NOT (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 1) 1 1) 1 ) 1 1)
(NOT (COND 2 (NOT (COND 2 1) 1 2) 2 ) 1 2)
(NOT (COND nil (NOT (COND nil 1) 1 nil) nil ) 1 nil)
(NOT (COND t (NOT (COND t 1) 1 t) t ) 1 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 2) 2 1) 1 ) 2 1)
(NOT (COND 2 (NOT (COND 2 2) 2 2) 2 ) 2 2)
(NOT (COND nil (NOT (COND nil 2) 2 nil) nil ) 2 nil)
(NOT (COND t (NOT (COND t 2) 2 t) t ) 2 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 3) 3 1) 1 ) 3 1)
(NOT (COND 2 (NOT (COND 2 3) 3 2) 2 ) 3 2)
(NOT (COND nil (NOT (COND nil 3) 3 nil) nil ) 3 nil)
(NOT (COND t (NOT (COND t 3) 3 t) t ) 3 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 ()) () 1) 1 ) () 1)
(NOT (COND 2 (NOT (COND 2 ()) () 2) 2 ) () 2)
(NOT (COND nil (NOT (COND nil ()) () nil) nil ) () nil)
(NOT (COND t (NOT (COND t ()) () t) t ) () t)
(NOT (COND (cons t t) (NOT (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 (())) (()) 1) 1 ) (()) 1)
(NOT (COND 2 (NOT (COND 2 (())) (()) 2) 2 ) (()) 2)
(NOT (COND nil (NOT (COND nil (())) (()) nil) nil ) (()) nil)
(NOT (COND t (NOT (COND t (())) (()) t) t ) (()) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(NOT (COND 2 (NOT (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(NOT (COND nil (NOT (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(NOT (COND t (NOT (COND t ((()))) ((())) t) t ) ((())) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(NOT (COND 2 (NOT (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(NOT (COND nil (NOT (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(NOT (COND t (NOT (COND t (((())))) (((()))) t) t ) (((()))) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 'A) 'A 1) 1 ) 'A 1)
(NOT (COND 2 (NOT (COND 2 'A) 'A 2) 2 ) 'A 2)
(NOT (COND nil (NOT (COND nil 'A) 'A nil) nil ) 'A nil)
(NOT (COND t (NOT (COND t 'A) 'A t) t ) 'A t)
(NOT (COND (cons t t) (NOT (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 'B) 'B 1) 1 ) 'B 1)
(NOT (COND 2 (NOT (COND 2 'B) 'B 2) 2 ) 'B 2)
(NOT (COND nil (NOT (COND nil 'B) 'B nil) nil ) 'B nil)
(NOT (COND t (NOT (COND t 'B) 'B t) t ) 'B t)
(NOT (COND (cons t t) (NOT (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 'C) 'C 1) 1 ) 'C 1)
(NOT (COND 2 (NOT (COND 2 'C) 'C 2) 2 ) 'C 2)
(NOT (COND nil (NOT (COND nil 'C) 'C nil) nil ) 'C nil)
(NOT (COND t (NOT (COND t 'C) 'C t) t ) 'C t)
(NOT (COND (cons t t) (NOT (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 '1) '1 1) 1 ) '1 1)
(NOT (COND 2 (NOT (COND 2 '1) '1 2) 2 ) '1 2)
(NOT (COND nil (NOT (COND nil '1) '1 nil) nil ) '1 nil)
(NOT (COND t (NOT (COND t '1) '1 t) t ) '1 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 '2) '2 1) 1 ) '2 1)
(NOT (COND 2 (NOT (COND 2 '2) '2 2) 2 ) '2 2)
(NOT (COND nil (NOT (COND nil '2) '2 nil) nil ) '2 nil)
(NOT (COND t (NOT (COND t '2) '2 t) t ) '2 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 '3) '3 1) 1 ) '3 1)
(NOT (COND 2 (NOT (COND 2 '3) '3 2) 2 ) '3 2)
(NOT (COND nil (NOT (COND nil '3) '3 nil) nil ) '3 nil)
(NOT (COND t (NOT (COND t '3) '3 t) t ) '3 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 '()) '() 1) 1 ) '() 1)
(NOT (COND 2 (NOT (COND 2 '()) '() 2) 2 ) '() 2)
(NOT (COND nil (NOT (COND nil '()) '() nil) nil ) '() nil)
(NOT (COND t (NOT (COND t '()) '() t) t ) '() t)
(NOT (COND (cons t t) (NOT (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(NOT (COND 2 (NOT (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(NOT (COND nil (NOT (COND nil '(())) '(()) nil) nil ) '(()) nil)
(NOT (COND t (NOT (COND t '(())) '(()) t) t ) '(()) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(NOT (COND 2 (NOT (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(NOT (COND nil (NOT (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(NOT (COND t (NOT (COND t '((()))) '((())) t) t ) '((())) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(NOT (COND 2 (NOT (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(NOT (COND nil (NOT (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(NOT (COND t (NOT (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 ,A) ,A 1) 1 ) ,A 1)
(NOT (COND 2 (NOT (COND 2 ,A) ,A 2) 2 ) ,A 2)
(NOT (COND nil (NOT (COND nil ,A) ,A nil) nil ) ,A nil)
(NOT (COND t (NOT (COND t ,A) ,A t) t ) ,A t)
(NOT (COND (cons t t) (NOT (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 ,1) ,1 1) 1 ) ,1 1)
(NOT (COND 2 (NOT (COND 2 ,1) ,1 2) 2 ) ,1 2)
(NOT (COND nil (NOT (COND nil ,1) ,1 nil) nil ) ,1 nil)
(NOT (COND t (NOT (COND t ,1) ,1 t) t ) ,1 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 ,()) ,() 1) 1 ) ,() 1)
(NOT (COND 2 (NOT (COND 2 ,()) ,() 2) 2 ) ,() 2)
(NOT (COND nil (NOT (COND nil ,()) ,() nil) nil ) ,() nil)
(NOT (COND t (NOT (COND t ,()) ,() t) t ) ,() t)
(NOT (COND (cons t t) (NOT (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(NOT (COND 2 (NOT (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(NOT (COND nil (NOT (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(NOT (COND t (NOT (COND t ,(())) ,(()) t) t ) ,(()) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'A) `'A 1) 1 ) `'A 1)
(NOT (COND 2 (NOT (COND 2 `'A) `'A 2) 2 ) `'A 2)
(NOT (COND nil (NOT (COND nil `'A) `'A nil) nil ) `'A nil)
(NOT (COND t (NOT (COND t `'A) `'A t) t ) `'A t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'B) `'B 1) 1 ) `'B 1)
(NOT (COND 2 (NOT (COND 2 `'B) `'B 2) 2 ) `'B 2)
(NOT (COND nil (NOT (COND nil `'B) `'B nil) nil ) `'B nil)
(NOT (COND t (NOT (COND t `'B) `'B t) t ) `'B t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'C) `'C 1) 1 ) `'C 1)
(NOT (COND 2 (NOT (COND 2 `'C) `'C 2) 2 ) `'C 2)
(NOT (COND nil (NOT (COND nil `'C) `'C nil) nil ) `'C nil)
(NOT (COND t (NOT (COND t `'C) `'C t) t ) `'C t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'1) `'1 1) 1 ) `'1 1)
(NOT (COND 2 (NOT (COND 2 `'1) `'1 2) 2 ) `'1 2)
(NOT (COND nil (NOT (COND nil `'1) `'1 nil) nil ) `'1 nil)
(NOT (COND t (NOT (COND t `'1) `'1 t) t ) `'1 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'2) `'2 1) 1 ) `'2 1)
(NOT (COND 2 (NOT (COND 2 `'2) `'2 2) 2 ) `'2 2)
(NOT (COND nil (NOT (COND nil `'2) `'2 nil) nil ) `'2 nil)
(NOT (COND t (NOT (COND t `'2) `'2 t) t ) `'2 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'3) `'3 1) 1 ) `'3 1)
(NOT (COND 2 (NOT (COND 2 `'3) `'3 2) 2 ) `'3 2)
(NOT (COND nil (NOT (COND nil `'3) `'3 nil) nil ) `'3 nil)
(NOT (COND t (NOT (COND t `'3) `'3 t) t ) `'3 t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'()) `'() 1) 1 ) `'() 1)
(NOT (COND 2 (NOT (COND 2 `'()) `'() 2) 2 ) `'() 2)
(NOT (COND nil (NOT (COND nil `'()) `'() nil) nil ) `'() nil)
(NOT (COND t (NOT (COND t `'()) `'() t) t ) `'() t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(NOT (COND 2 (NOT (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(NOT (COND nil (NOT (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(NOT (COND t (NOT (COND t `'(())) `'(()) t) t ) `'(()) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(NOT (COND 2 (NOT (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(NOT (COND nil (NOT (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(NOT (COND t (NOT (COND t `'((()))) `'((())) t) t ) `'((())) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(NOT (COND 1 (NOT (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(NOT (COND 2 (NOT (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(NOT (COND nil (NOT (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(NOT (COND t (NOT (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(NOT (COND (cons t t) (NOT (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(NOT (COND (cons nil t) (NOT (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(NOT (COND (cons nil nil) (NOT (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(NOT (COND (cons 0 0) (NOT (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(NOT (COND (cons 1 1) (NOT (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(NOT (COND (list 1 2 3) (NOT (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(NOT (COND (list (cons 1 1 ) ) (NOT (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 T) T 1) 1 ) T 1)
(NULL (COND 2 (NULL (COND 2 T) T 2) 2 ) T 2)
(NULL (COND nil (NULL (COND nil T) T nil) nil ) T nil)
(NULL (COND t (NULL (COND t T) T t) t ) T t)
(NULL (COND (cons t t) (NULL (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 NIL) NIL 1) 1 ) NIL 1)
(NULL (COND 2 (NULL (COND 2 NIL) NIL 2) 2 ) NIL 2)
(NULL (COND nil (NULL (COND nil NIL) NIL nil) nil ) NIL nil)
(NULL (COND t (NULL (COND t NIL) NIL t) t ) NIL t)
(NULL (COND (cons t t) (NULL (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 A) A 1) 1 ) A 1)
(NULL (COND 2 (NULL (COND 2 A) A 2) 2 ) A 2)
(NULL (COND nil (NULL (COND nil A) A nil) nil ) A nil)
(NULL (COND t (NULL (COND t A) A t) t ) A t)
(NULL (COND (cons t t) (NULL (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 B) B 1) 1 ) B 1)
(NULL (COND 2 (NULL (COND 2 B) B 2) 2 ) B 2)
(NULL (COND nil (NULL (COND nil B) B nil) nil ) B nil)
(NULL (COND t (NULL (COND t B) B t) t ) B t)
(NULL (COND (cons t t) (NULL (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 C) C 1) 1 ) C 1)
(NULL (COND 2 (NULL (COND 2 C) C 2) 2 ) C 2)
(NULL (COND nil (NULL (COND nil C) C nil) nil ) C nil)
(NULL (COND t (NULL (COND t C) C t) t ) C t)
(NULL (COND (cons t t) (NULL (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 1) 1 1) 1 ) 1 1)
(NULL (COND 2 (NULL (COND 2 1) 1 2) 2 ) 1 2)
(NULL (COND nil (NULL (COND nil 1) 1 nil) nil ) 1 nil)
(NULL (COND t (NULL (COND t 1) 1 t) t ) 1 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 2) 2 1) 1 ) 2 1)
(NULL (COND 2 (NULL (COND 2 2) 2 2) 2 ) 2 2)
(NULL (COND nil (NULL (COND nil 2) 2 nil) nil ) 2 nil)
(NULL (COND t (NULL (COND t 2) 2 t) t ) 2 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 3) 3 1) 1 ) 3 1)
(NULL (COND 2 (NULL (COND 2 3) 3 2) 2 ) 3 2)
(NULL (COND nil (NULL (COND nil 3) 3 nil) nil ) 3 nil)
(NULL (COND t (NULL (COND t 3) 3 t) t ) 3 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 ()) () 1) 1 ) () 1)
(NULL (COND 2 (NULL (COND 2 ()) () 2) 2 ) () 2)
(NULL (COND nil (NULL (COND nil ()) () nil) nil ) () nil)
(NULL (COND t (NULL (COND t ()) () t) t ) () t)
(NULL (COND (cons t t) (NULL (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 (())) (()) 1) 1 ) (()) 1)
(NULL (COND 2 (NULL (COND 2 (())) (()) 2) 2 ) (()) 2)
(NULL (COND nil (NULL (COND nil (())) (()) nil) nil ) (()) nil)
(NULL (COND t (NULL (COND t (())) (()) t) t ) (()) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(NULL (COND 2 (NULL (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(NULL (COND nil (NULL (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(NULL (COND t (NULL (COND t ((()))) ((())) t) t ) ((())) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(NULL (COND 2 (NULL (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(NULL (COND nil (NULL (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(NULL (COND t (NULL (COND t (((())))) (((()))) t) t ) (((()))) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 'A) 'A 1) 1 ) 'A 1)
(NULL (COND 2 (NULL (COND 2 'A) 'A 2) 2 ) 'A 2)
(NULL (COND nil (NULL (COND nil 'A) 'A nil) nil ) 'A nil)
(NULL (COND t (NULL (COND t 'A) 'A t) t ) 'A t)
(NULL (COND (cons t t) (NULL (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 'B) 'B 1) 1 ) 'B 1)
(NULL (COND 2 (NULL (COND 2 'B) 'B 2) 2 ) 'B 2)
(NULL (COND nil (NULL (COND nil 'B) 'B nil) nil ) 'B nil)
(NULL (COND t (NULL (COND t 'B) 'B t) t ) 'B t)
(NULL (COND (cons t t) (NULL (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 'C) 'C 1) 1 ) 'C 1)
(NULL (COND 2 (NULL (COND 2 'C) 'C 2) 2 ) 'C 2)
(NULL (COND nil (NULL (COND nil 'C) 'C nil) nil ) 'C nil)
(NULL (COND t (NULL (COND t 'C) 'C t) t ) 'C t)
(NULL (COND (cons t t) (NULL (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 '1) '1 1) 1 ) '1 1)
(NULL (COND 2 (NULL (COND 2 '1) '1 2) 2 ) '1 2)
(NULL (COND nil (NULL (COND nil '1) '1 nil) nil ) '1 nil)
(NULL (COND t (NULL (COND t '1) '1 t) t ) '1 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 '2) '2 1) 1 ) '2 1)
(NULL (COND 2 (NULL (COND 2 '2) '2 2) 2 ) '2 2)
(NULL (COND nil (NULL (COND nil '2) '2 nil) nil ) '2 nil)
(NULL (COND t (NULL (COND t '2) '2 t) t ) '2 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 '3) '3 1) 1 ) '3 1)
(NULL (COND 2 (NULL (COND 2 '3) '3 2) 2 ) '3 2)
(NULL (COND nil (NULL (COND nil '3) '3 nil) nil ) '3 nil)
(NULL (COND t (NULL (COND t '3) '3 t) t ) '3 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 '()) '() 1) 1 ) '() 1)
(NULL (COND 2 (NULL (COND 2 '()) '() 2) 2 ) '() 2)
(NULL (COND nil (NULL (COND nil '()) '() nil) nil ) '() nil)
(NULL (COND t (NULL (COND t '()) '() t) t ) '() t)
(NULL (COND (cons t t) (NULL (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(NULL (COND 2 (NULL (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(NULL (COND nil (NULL (COND nil '(())) '(()) nil) nil ) '(()) nil)
(NULL (COND t (NULL (COND t '(())) '(()) t) t ) '(()) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(NULL (COND 2 (NULL (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(NULL (COND nil (NULL (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(NULL (COND t (NULL (COND t '((()))) '((())) t) t ) '((())) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(NULL (COND 2 (NULL (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(NULL (COND nil (NULL (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(NULL (COND t (NULL (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 ,A) ,A 1) 1 ) ,A 1)
(NULL (COND 2 (NULL (COND 2 ,A) ,A 2) 2 ) ,A 2)
(NULL (COND nil (NULL (COND nil ,A) ,A nil) nil ) ,A nil)
(NULL (COND t (NULL (COND t ,A) ,A t) t ) ,A t)
(NULL (COND (cons t t) (NULL (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 ,1) ,1 1) 1 ) ,1 1)
(NULL (COND 2 (NULL (COND 2 ,1) ,1 2) 2 ) ,1 2)
(NULL (COND nil (NULL (COND nil ,1) ,1 nil) nil ) ,1 nil)
(NULL (COND t (NULL (COND t ,1) ,1 t) t ) ,1 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 ,()) ,() 1) 1 ) ,() 1)
(NULL (COND 2 (NULL (COND 2 ,()) ,() 2) 2 ) ,() 2)
(NULL (COND nil (NULL (COND nil ,()) ,() nil) nil ) ,() nil)
(NULL (COND t (NULL (COND t ,()) ,() t) t ) ,() t)
(NULL (COND (cons t t) (NULL (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(NULL (COND 2 (NULL (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(NULL (COND nil (NULL (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(NULL (COND t (NULL (COND t ,(())) ,(()) t) t ) ,(()) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'A) `'A 1) 1 ) `'A 1)
(NULL (COND 2 (NULL (COND 2 `'A) `'A 2) 2 ) `'A 2)
(NULL (COND nil (NULL (COND nil `'A) `'A nil) nil ) `'A nil)
(NULL (COND t (NULL (COND t `'A) `'A t) t ) `'A t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'B) `'B 1) 1 ) `'B 1)
(NULL (COND 2 (NULL (COND 2 `'B) `'B 2) 2 ) `'B 2)
(NULL (COND nil (NULL (COND nil `'B) `'B nil) nil ) `'B nil)
(NULL (COND t (NULL (COND t `'B) `'B t) t ) `'B t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'C) `'C 1) 1 ) `'C 1)
(NULL (COND 2 (NULL (COND 2 `'C) `'C 2) 2 ) `'C 2)
(NULL (COND nil (NULL (COND nil `'C) `'C nil) nil ) `'C nil)
(NULL (COND t (NULL (COND t `'C) `'C t) t ) `'C t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'1) `'1 1) 1 ) `'1 1)
(NULL (COND 2 (NULL (COND 2 `'1) `'1 2) 2 ) `'1 2)
(NULL (COND nil (NULL (COND nil `'1) `'1 nil) nil ) `'1 nil)
(NULL (COND t (NULL (COND t `'1) `'1 t) t ) `'1 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'2) `'2 1) 1 ) `'2 1)
(NULL (COND 2 (NULL (COND 2 `'2) `'2 2) 2 ) `'2 2)
(NULL (COND nil (NULL (COND nil `'2) `'2 nil) nil ) `'2 nil)
(NULL (COND t (NULL (COND t `'2) `'2 t) t ) `'2 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'3) `'3 1) 1 ) `'3 1)
(NULL (COND 2 (NULL (COND 2 `'3) `'3 2) 2 ) `'3 2)
(NULL (COND nil (NULL (COND nil `'3) `'3 nil) nil ) `'3 nil)
(NULL (COND t (NULL (COND t `'3) `'3 t) t ) `'3 t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'()) `'() 1) 1 ) `'() 1)
(NULL (COND 2 (NULL (COND 2 `'()) `'() 2) 2 ) `'() 2)
(NULL (COND nil (NULL (COND nil `'()) `'() nil) nil ) `'() nil)
(NULL (COND t (NULL (COND t `'()) `'() t) t ) `'() t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(NULL (COND 2 (NULL (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(NULL (COND nil (NULL (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(NULL (COND t (NULL (COND t `'(())) `'(()) t) t ) `'(()) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(NULL (COND 2 (NULL (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(NULL (COND nil (NULL (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(NULL (COND t (NULL (COND t `'((()))) `'((())) t) t ) `'((())) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(NULL (COND 1 (NULL (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(NULL (COND 2 (NULL (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(NULL (COND nil (NULL (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(NULL (COND t (NULL (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(NULL (COND (cons t t) (NULL (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(NULL (COND (cons nil t) (NULL (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(NULL (COND (cons nil nil) (NULL (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(NULL (COND (cons 0 0) (NULL (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(NULL (COND (cons 1 1) (NULL (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(NULL (COND (list 1 2 3) (NULL (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(NULL (COND (list (cons 1 1 ) ) (NULL (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 T) T 1) 1 ) T 1)
(OR (COND 2 (OR (COND 2 T) T 2) 2 ) T 2)
(OR (COND nil (OR (COND nil T) T nil) nil ) T nil)
(OR (COND t (OR (COND t T) T t) t ) T t)
(OR (COND (cons t t) (OR (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 NIL) NIL 1) 1 ) NIL 1)
(OR (COND 2 (OR (COND 2 NIL) NIL 2) 2 ) NIL 2)
(OR (COND nil (OR (COND nil NIL) NIL nil) nil ) NIL nil)
(OR (COND t (OR (COND t NIL) NIL t) t ) NIL t)
(OR (COND (cons t t) (OR (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 A) A 1) 1 ) A 1)
(OR (COND 2 (OR (COND 2 A) A 2) 2 ) A 2)
(OR (COND nil (OR (COND nil A) A nil) nil ) A nil)
(OR (COND t (OR (COND t A) A t) t ) A t)
(OR (COND (cons t t) (OR (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 B) B 1) 1 ) B 1)
(OR (COND 2 (OR (COND 2 B) B 2) 2 ) B 2)
(OR (COND nil (OR (COND nil B) B nil) nil ) B nil)
(OR (COND t (OR (COND t B) B t) t ) B t)
(OR (COND (cons t t) (OR (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 C) C 1) 1 ) C 1)
(OR (COND 2 (OR (COND 2 C) C 2) 2 ) C 2)
(OR (COND nil (OR (COND nil C) C nil) nil ) C nil)
(OR (COND t (OR (COND t C) C t) t ) C t)
(OR (COND (cons t t) (OR (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 1) 1 1) 1 ) 1 1)
(OR (COND 2 (OR (COND 2 1) 1 2) 2 ) 1 2)
(OR (COND nil (OR (COND nil 1) 1 nil) nil ) 1 nil)
(OR (COND t (OR (COND t 1) 1 t) t ) 1 t)
(OR (COND (cons t t) (OR (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 2) 2 1) 1 ) 2 1)
(OR (COND 2 (OR (COND 2 2) 2 2) 2 ) 2 2)
(OR (COND nil (OR (COND nil 2) 2 nil) nil ) 2 nil)
(OR (COND t (OR (COND t 2) 2 t) t ) 2 t)
(OR (COND (cons t t) (OR (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 3) 3 1) 1 ) 3 1)
(OR (COND 2 (OR (COND 2 3) 3 2) 2 ) 3 2)
(OR (COND nil (OR (COND nil 3) 3 nil) nil ) 3 nil)
(OR (COND t (OR (COND t 3) 3 t) t ) 3 t)
(OR (COND (cons t t) (OR (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 ()) () 1) 1 ) () 1)
(OR (COND 2 (OR (COND 2 ()) () 2) 2 ) () 2)
(OR (COND nil (OR (COND nil ()) () nil) nil ) () nil)
(OR (COND t (OR (COND t ()) () t) t ) () t)
(OR (COND (cons t t) (OR (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 (())) (()) 1) 1 ) (()) 1)
(OR (COND 2 (OR (COND 2 (())) (()) 2) 2 ) (()) 2)
(OR (COND nil (OR (COND nil (())) (()) nil) nil ) (()) nil)
(OR (COND t (OR (COND t (())) (()) t) t ) (()) t)
(OR (COND (cons t t) (OR (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(OR (COND 2 (OR (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(OR (COND nil (OR (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(OR (COND t (OR (COND t ((()))) ((())) t) t ) ((())) t)
(OR (COND (cons t t) (OR (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(OR (COND 2 (OR (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(OR (COND nil (OR (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(OR (COND t (OR (COND t (((())))) (((()))) t) t ) (((()))) t)
(OR (COND (cons t t) (OR (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 'A) 'A 1) 1 ) 'A 1)
(OR (COND 2 (OR (COND 2 'A) 'A 2) 2 ) 'A 2)
(OR (COND nil (OR (COND nil 'A) 'A nil) nil ) 'A nil)
(OR (COND t (OR (COND t 'A) 'A t) t ) 'A t)
(OR (COND (cons t t) (OR (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 'B) 'B 1) 1 ) 'B 1)
(OR (COND 2 (OR (COND 2 'B) 'B 2) 2 ) 'B 2)
(OR (COND nil (OR (COND nil 'B) 'B nil) nil ) 'B nil)
(OR (COND t (OR (COND t 'B) 'B t) t ) 'B t)
(OR (COND (cons t t) (OR (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 'C) 'C 1) 1 ) 'C 1)
(OR (COND 2 (OR (COND 2 'C) 'C 2) 2 ) 'C 2)
(OR (COND nil (OR (COND nil 'C) 'C nil) nil ) 'C nil)
(OR (COND t (OR (COND t 'C) 'C t) t ) 'C t)
(OR (COND (cons t t) (OR (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 '1) '1 1) 1 ) '1 1)
(OR (COND 2 (OR (COND 2 '1) '1 2) 2 ) '1 2)
(OR (COND nil (OR (COND nil '1) '1 nil) nil ) '1 nil)
(OR (COND t (OR (COND t '1) '1 t) t ) '1 t)
(OR (COND (cons t t) (OR (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 '2) '2 1) 1 ) '2 1)
(OR (COND 2 (OR (COND 2 '2) '2 2) 2 ) '2 2)
(OR (COND nil (OR (COND nil '2) '2 nil) nil ) '2 nil)
(OR (COND t (OR (COND t '2) '2 t) t ) '2 t)
(OR (COND (cons t t) (OR (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 '3) '3 1) 1 ) '3 1)
(OR (COND 2 (OR (COND 2 '3) '3 2) 2 ) '3 2)
(OR (COND nil (OR (COND nil '3) '3 nil) nil ) '3 nil)
(OR (COND t (OR (COND t '3) '3 t) t ) '3 t)
(OR (COND (cons t t) (OR (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 '()) '() 1) 1 ) '() 1)
(OR (COND 2 (OR (COND 2 '()) '() 2) 2 ) '() 2)
(OR (COND nil (OR (COND nil '()) '() nil) nil ) '() nil)
(OR (COND t (OR (COND t '()) '() t) t ) '() t)
(OR (COND (cons t t) (OR (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(OR (COND 2 (OR (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(OR (COND nil (OR (COND nil '(())) '(()) nil) nil ) '(()) nil)
(OR (COND t (OR (COND t '(())) '(()) t) t ) '(()) t)
(OR (COND (cons t t) (OR (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(OR (COND 2 (OR (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(OR (COND nil (OR (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(OR (COND t (OR (COND t '((()))) '((())) t) t ) '((())) t)
(OR (COND (cons t t) (OR (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(OR (COND 2 (OR (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(OR (COND nil (OR (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(OR (COND t (OR (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(OR (COND (cons t t) (OR (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 ,A) ,A 1) 1 ) ,A 1)
(OR (COND 2 (OR (COND 2 ,A) ,A 2) 2 ) ,A 2)
(OR (COND nil (OR (COND nil ,A) ,A nil) nil ) ,A nil)
(OR (COND t (OR (COND t ,A) ,A t) t ) ,A t)
(OR (COND (cons t t) (OR (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 ,1) ,1 1) 1 ) ,1 1)
(OR (COND 2 (OR (COND 2 ,1) ,1 2) 2 ) ,1 2)
(OR (COND nil (OR (COND nil ,1) ,1 nil) nil ) ,1 nil)
(OR (COND t (OR (COND t ,1) ,1 t) t ) ,1 t)
(OR (COND (cons t t) (OR (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 ,()) ,() 1) 1 ) ,() 1)
(OR (COND 2 (OR (COND 2 ,()) ,() 2) 2 ) ,() 2)
(OR (COND nil (OR (COND nil ,()) ,() nil) nil ) ,() nil)
(OR (COND t (OR (COND t ,()) ,() t) t ) ,() t)
(OR (COND (cons t t) (OR (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(OR (COND 2 (OR (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(OR (COND nil (OR (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(OR (COND t (OR (COND t ,(())) ,(()) t) t ) ,(()) t)
(OR (COND (cons t t) (OR (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'A) `'A 1) 1 ) `'A 1)
(OR (COND 2 (OR (COND 2 `'A) `'A 2) 2 ) `'A 2)
(OR (COND nil (OR (COND nil `'A) `'A nil) nil ) `'A nil)
(OR (COND t (OR (COND t `'A) `'A t) t ) `'A t)
(OR (COND (cons t t) (OR (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'B) `'B 1) 1 ) `'B 1)
(OR (COND 2 (OR (COND 2 `'B) `'B 2) 2 ) `'B 2)
(OR (COND nil (OR (COND nil `'B) `'B nil) nil ) `'B nil)
(OR (COND t (OR (COND t `'B) `'B t) t ) `'B t)
(OR (COND (cons t t) (OR (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'C) `'C 1) 1 ) `'C 1)
(OR (COND 2 (OR (COND 2 `'C) `'C 2) 2 ) `'C 2)
(OR (COND nil (OR (COND nil `'C) `'C nil) nil ) `'C nil)
(OR (COND t (OR (COND t `'C) `'C t) t ) `'C t)
(OR (COND (cons t t) (OR (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'1) `'1 1) 1 ) `'1 1)
(OR (COND 2 (OR (COND 2 `'1) `'1 2) 2 ) `'1 2)
(OR (COND nil (OR (COND nil `'1) `'1 nil) nil ) `'1 nil)
(OR (COND t (OR (COND t `'1) `'1 t) t ) `'1 t)
(OR (COND (cons t t) (OR (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'2) `'2 1) 1 ) `'2 1)
(OR (COND 2 (OR (COND 2 `'2) `'2 2) 2 ) `'2 2)
(OR (COND nil (OR (COND nil `'2) `'2 nil) nil ) `'2 nil)
(OR (COND t (OR (COND t `'2) `'2 t) t ) `'2 t)
(OR (COND (cons t t) (OR (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'3) `'3 1) 1 ) `'3 1)
(OR (COND 2 (OR (COND 2 `'3) `'3 2) 2 ) `'3 2)
(OR (COND nil (OR (COND nil `'3) `'3 nil) nil ) `'3 nil)
(OR (COND t (OR (COND t `'3) `'3 t) t ) `'3 t)
(OR (COND (cons t t) (OR (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'()) `'() 1) 1 ) `'() 1)
(OR (COND 2 (OR (COND 2 `'()) `'() 2) 2 ) `'() 2)
(OR (COND nil (OR (COND nil `'()) `'() nil) nil ) `'() nil)
(OR (COND t (OR (COND t `'()) `'() t) t ) `'() t)
(OR (COND (cons t t) (OR (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(OR (COND 2 (OR (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(OR (COND nil (OR (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(OR (COND t (OR (COND t `'(())) `'(()) t) t ) `'(()) t)
(OR (COND (cons t t) (OR (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(OR (COND 2 (OR (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(OR (COND nil (OR (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(OR (COND t (OR (COND t `'((()))) `'((())) t) t ) `'((())) t)
(OR (COND (cons t t) (OR (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(OR (COND 1 (OR (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(OR (COND 2 (OR (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(OR (COND nil (OR (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(OR (COND t (OR (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(OR (COND (cons t t) (OR (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(OR (COND (cons nil t) (OR (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(OR (COND (cons nil nil) (OR (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(OR (COND (cons 0 0) (OR (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(OR (COND (cons 1 1) (OR (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(OR (COND (list 1 2 3) (OR (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(OR (COND (list (cons 1 1 ) ) (OR (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 T) T 1) 1 ) T 1)
(ORD (COND 2 (ORD (COND 2 T) T 2) 2 ) T 2)
(ORD (COND nil (ORD (COND nil T) T nil) nil ) T nil)
(ORD (COND t (ORD (COND t T) T t) t ) T t)
(ORD (COND (cons t t) (ORD (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 NIL) NIL 1) 1 ) NIL 1)
(ORD (COND 2 (ORD (COND 2 NIL) NIL 2) 2 ) NIL 2)
(ORD (COND nil (ORD (COND nil NIL) NIL nil) nil ) NIL nil)
(ORD (COND t (ORD (COND t NIL) NIL t) t ) NIL t)
(ORD (COND (cons t t) (ORD (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 A) A 1) 1 ) A 1)
(ORD (COND 2 (ORD (COND 2 A) A 2) 2 ) A 2)
(ORD (COND nil (ORD (COND nil A) A nil) nil ) A nil)
(ORD (COND t (ORD (COND t A) A t) t ) A t)
(ORD (COND (cons t t) (ORD (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 B) B 1) 1 ) B 1)
(ORD (COND 2 (ORD (COND 2 B) B 2) 2 ) B 2)
(ORD (COND nil (ORD (COND nil B) B nil) nil ) B nil)
(ORD (COND t (ORD (COND t B) B t) t ) B t)
(ORD (COND (cons t t) (ORD (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 C) C 1) 1 ) C 1)
(ORD (COND 2 (ORD (COND 2 C) C 2) 2 ) C 2)
(ORD (COND nil (ORD (COND nil C) C nil) nil ) C nil)
(ORD (COND t (ORD (COND t C) C t) t ) C t)
(ORD (COND (cons t t) (ORD (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 1) 1 1) 1 ) 1 1)
(ORD (COND 2 (ORD (COND 2 1) 1 2) 2 ) 1 2)
(ORD (COND nil (ORD (COND nil 1) 1 nil) nil ) 1 nil)
(ORD (COND t (ORD (COND t 1) 1 t) t ) 1 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 2) 2 1) 1 ) 2 1)
(ORD (COND 2 (ORD (COND 2 2) 2 2) 2 ) 2 2)
(ORD (COND nil (ORD (COND nil 2) 2 nil) nil ) 2 nil)
(ORD (COND t (ORD (COND t 2) 2 t) t ) 2 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 3) 3 1) 1 ) 3 1)
(ORD (COND 2 (ORD (COND 2 3) 3 2) 2 ) 3 2)
(ORD (COND nil (ORD (COND nil 3) 3 nil) nil ) 3 nil)
(ORD (COND t (ORD (COND t 3) 3 t) t ) 3 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 ()) () 1) 1 ) () 1)
(ORD (COND 2 (ORD (COND 2 ()) () 2) 2 ) () 2)
(ORD (COND nil (ORD (COND nil ()) () nil) nil ) () nil)
(ORD (COND t (ORD (COND t ()) () t) t ) () t)
(ORD (COND (cons t t) (ORD (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 (())) (()) 1) 1 ) (()) 1)
(ORD (COND 2 (ORD (COND 2 (())) (()) 2) 2 ) (()) 2)
(ORD (COND nil (ORD (COND nil (())) (()) nil) nil ) (()) nil)
(ORD (COND t (ORD (COND t (())) (()) t) t ) (()) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(ORD (COND 2 (ORD (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(ORD (COND nil (ORD (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(ORD (COND t (ORD (COND t ((()))) ((())) t) t ) ((())) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(ORD (COND 2 (ORD (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(ORD (COND nil (ORD (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(ORD (COND t (ORD (COND t (((())))) (((()))) t) t ) (((()))) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 'A) 'A 1) 1 ) 'A 1)
(ORD (COND 2 (ORD (COND 2 'A) 'A 2) 2 ) 'A 2)
(ORD (COND nil (ORD (COND nil 'A) 'A nil) nil ) 'A nil)
(ORD (COND t (ORD (COND t 'A) 'A t) t ) 'A t)
(ORD (COND (cons t t) (ORD (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 'B) 'B 1) 1 ) 'B 1)
(ORD (COND 2 (ORD (COND 2 'B) 'B 2) 2 ) 'B 2)
(ORD (COND nil (ORD (COND nil 'B) 'B nil) nil ) 'B nil)
(ORD (COND t (ORD (COND t 'B) 'B t) t ) 'B t)
(ORD (COND (cons t t) (ORD (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 'C) 'C 1) 1 ) 'C 1)
(ORD (COND 2 (ORD (COND 2 'C) 'C 2) 2 ) 'C 2)
(ORD (COND nil (ORD (COND nil 'C) 'C nil) nil ) 'C nil)
(ORD (COND t (ORD (COND t 'C) 'C t) t ) 'C t)
(ORD (COND (cons t t) (ORD (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 '1) '1 1) 1 ) '1 1)
(ORD (COND 2 (ORD (COND 2 '1) '1 2) 2 ) '1 2)
(ORD (COND nil (ORD (COND nil '1) '1 nil) nil ) '1 nil)
(ORD (COND t (ORD (COND t '1) '1 t) t ) '1 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 '2) '2 1) 1 ) '2 1)
(ORD (COND 2 (ORD (COND 2 '2) '2 2) 2 ) '2 2)
(ORD (COND nil (ORD (COND nil '2) '2 nil) nil ) '2 nil)
(ORD (COND t (ORD (COND t '2) '2 t) t ) '2 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 '3) '3 1) 1 ) '3 1)
(ORD (COND 2 (ORD (COND 2 '3) '3 2) 2 ) '3 2)
(ORD (COND nil (ORD (COND nil '3) '3 nil) nil ) '3 nil)
(ORD (COND t (ORD (COND t '3) '3 t) t ) '3 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 '()) '() 1) 1 ) '() 1)
(ORD (COND 2 (ORD (COND 2 '()) '() 2) 2 ) '() 2)
(ORD (COND nil (ORD (COND nil '()) '() nil) nil ) '() nil)
(ORD (COND t (ORD (COND t '()) '() t) t ) '() t)
(ORD (COND (cons t t) (ORD (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(ORD (COND 2 (ORD (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(ORD (COND nil (ORD (COND nil '(())) '(()) nil) nil ) '(()) nil)
(ORD (COND t (ORD (COND t '(())) '(()) t) t ) '(()) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(ORD (COND 2 (ORD (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(ORD (COND nil (ORD (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(ORD (COND t (ORD (COND t '((()))) '((())) t) t ) '((())) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(ORD (COND 2 (ORD (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(ORD (COND nil (ORD (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(ORD (COND t (ORD (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 ,A) ,A 1) 1 ) ,A 1)
(ORD (COND 2 (ORD (COND 2 ,A) ,A 2) 2 ) ,A 2)
(ORD (COND nil (ORD (COND nil ,A) ,A nil) nil ) ,A nil)
(ORD (COND t (ORD (COND t ,A) ,A t) t ) ,A t)
(ORD (COND (cons t t) (ORD (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 ,1) ,1 1) 1 ) ,1 1)
(ORD (COND 2 (ORD (COND 2 ,1) ,1 2) 2 ) ,1 2)
(ORD (COND nil (ORD (COND nil ,1) ,1 nil) nil ) ,1 nil)
(ORD (COND t (ORD (COND t ,1) ,1 t) t ) ,1 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 ,()) ,() 1) 1 ) ,() 1)
(ORD (COND 2 (ORD (COND 2 ,()) ,() 2) 2 ) ,() 2)
(ORD (COND nil (ORD (COND nil ,()) ,() nil) nil ) ,() nil)
(ORD (COND t (ORD (COND t ,()) ,() t) t ) ,() t)
(ORD (COND (cons t t) (ORD (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(ORD (COND 2 (ORD (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(ORD (COND nil (ORD (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(ORD (COND t (ORD (COND t ,(())) ,(()) t) t ) ,(()) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'A) `'A 1) 1 ) `'A 1)
(ORD (COND 2 (ORD (COND 2 `'A) `'A 2) 2 ) `'A 2)
(ORD (COND nil (ORD (COND nil `'A) `'A nil) nil ) `'A nil)
(ORD (COND t (ORD (COND t `'A) `'A t) t ) `'A t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'B) `'B 1) 1 ) `'B 1)
(ORD (COND 2 (ORD (COND 2 `'B) `'B 2) 2 ) `'B 2)
(ORD (COND nil (ORD (COND nil `'B) `'B nil) nil ) `'B nil)
(ORD (COND t (ORD (COND t `'B) `'B t) t ) `'B t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'C) `'C 1) 1 ) `'C 1)
(ORD (COND 2 (ORD (COND 2 `'C) `'C 2) 2 ) `'C 2)
(ORD (COND nil (ORD (COND nil `'C) `'C nil) nil ) `'C nil)
(ORD (COND t (ORD (COND t `'C) `'C t) t ) `'C t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'1) `'1 1) 1 ) `'1 1)
(ORD (COND 2 (ORD (COND 2 `'1) `'1 2) 2 ) `'1 2)
(ORD (COND nil (ORD (COND nil `'1) `'1 nil) nil ) `'1 nil)
(ORD (COND t (ORD (COND t `'1) `'1 t) t ) `'1 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'2) `'2 1) 1 ) `'2 1)
(ORD (COND 2 (ORD (COND 2 `'2) `'2 2) 2 ) `'2 2)
(ORD (COND nil (ORD (COND nil `'2) `'2 nil) nil ) `'2 nil)
(ORD (COND t (ORD (COND t `'2) `'2 t) t ) `'2 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'3) `'3 1) 1 ) `'3 1)
(ORD (COND 2 (ORD (COND 2 `'3) `'3 2) 2 ) `'3 2)
(ORD (COND nil (ORD (COND nil `'3) `'3 nil) nil ) `'3 nil)
(ORD (COND t (ORD (COND t `'3) `'3 t) t ) `'3 t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'()) `'() 1) 1 ) `'() 1)
(ORD (COND 2 (ORD (COND 2 `'()) `'() 2) 2 ) `'() 2)
(ORD (COND nil (ORD (COND nil `'()) `'() nil) nil ) `'() nil)
(ORD (COND t (ORD (COND t `'()) `'() t) t ) `'() t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(ORD (COND 2 (ORD (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(ORD (COND nil (ORD (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(ORD (COND t (ORD (COND t `'(())) `'(()) t) t ) `'(()) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(ORD (COND 2 (ORD (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(ORD (COND nil (ORD (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(ORD (COND t (ORD (COND t `'((()))) `'((())) t) t ) `'((())) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(ORD (COND 1 (ORD (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(ORD (COND 2 (ORD (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(ORD (COND nil (ORD (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(ORD (COND t (ORD (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(ORD (COND (cons t t) (ORD (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(ORD (COND (cons nil t) (ORD (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(ORD (COND (cons nil nil) (ORD (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(ORD (COND (cons 0 0) (ORD (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(ORD (COND (cons 1 1) (ORD (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(ORD (COND (list 1 2 3) (ORD (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(ORD (COND (list (cons 1 1 ) ) (ORD (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 T) T 1) 1 ) T 1)
(PAIR (COND 2 (PAIR (COND 2 T) T 2) 2 ) T 2)
(PAIR (COND nil (PAIR (COND nil T) T nil) nil ) T nil)
(PAIR (COND t (PAIR (COND t T) T t) t ) T t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 NIL) NIL 1) 1 ) NIL 1)
(PAIR (COND 2 (PAIR (COND 2 NIL) NIL 2) 2 ) NIL 2)
(PAIR (COND nil (PAIR (COND nil NIL) NIL nil) nil ) NIL nil)
(PAIR (COND t (PAIR (COND t NIL) NIL t) t ) NIL t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 A) A 1) 1 ) A 1)
(PAIR (COND 2 (PAIR (COND 2 A) A 2) 2 ) A 2)
(PAIR (COND nil (PAIR (COND nil A) A nil) nil ) A nil)
(PAIR (COND t (PAIR (COND t A) A t) t ) A t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 B) B 1) 1 ) B 1)
(PAIR (COND 2 (PAIR (COND 2 B) B 2) 2 ) B 2)
(PAIR (COND nil (PAIR (COND nil B) B nil) nil ) B nil)
(PAIR (COND t (PAIR (COND t B) B t) t ) B t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 C) C 1) 1 ) C 1)
(PAIR (COND 2 (PAIR (COND 2 C) C 2) 2 ) C 2)
(PAIR (COND nil (PAIR (COND nil C) C nil) nil ) C nil)
(PAIR (COND t (PAIR (COND t C) C t) t ) C t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 1) 1 1) 1 ) 1 1)
(PAIR (COND 2 (PAIR (COND 2 1) 1 2) 2 ) 1 2)
(PAIR (COND nil (PAIR (COND nil 1) 1 nil) nil ) 1 nil)
(PAIR (COND t (PAIR (COND t 1) 1 t) t ) 1 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 2) 2 1) 1 ) 2 1)
(PAIR (COND 2 (PAIR (COND 2 2) 2 2) 2 ) 2 2)
(PAIR (COND nil (PAIR (COND nil 2) 2 nil) nil ) 2 nil)
(PAIR (COND t (PAIR (COND t 2) 2 t) t ) 2 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 3) 3 1) 1 ) 3 1)
(PAIR (COND 2 (PAIR (COND 2 3) 3 2) 2 ) 3 2)
(PAIR (COND nil (PAIR (COND nil 3) 3 nil) nil ) 3 nil)
(PAIR (COND t (PAIR (COND t 3) 3 t) t ) 3 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 ()) () 1) 1 ) () 1)
(PAIR (COND 2 (PAIR (COND 2 ()) () 2) 2 ) () 2)
(PAIR (COND nil (PAIR (COND nil ()) () nil) nil ) () nil)
(PAIR (COND t (PAIR (COND t ()) () t) t ) () t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 (())) (()) 1) 1 ) (()) 1)
(PAIR (COND 2 (PAIR (COND 2 (())) (()) 2) 2 ) (()) 2)
(PAIR (COND nil (PAIR (COND nil (())) (()) nil) nil ) (()) nil)
(PAIR (COND t (PAIR (COND t (())) (()) t) t ) (()) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PAIR (COND 2 (PAIR (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PAIR (COND nil (PAIR (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(PAIR (COND t (PAIR (COND t ((()))) ((())) t) t ) ((())) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PAIR (COND 2 (PAIR (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PAIR (COND nil (PAIR (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PAIR (COND t (PAIR (COND t (((())))) (((()))) t) t ) (((()))) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 'A) 'A 1) 1 ) 'A 1)
(PAIR (COND 2 (PAIR (COND 2 'A) 'A 2) 2 ) 'A 2)
(PAIR (COND nil (PAIR (COND nil 'A) 'A nil) nil ) 'A nil)
(PAIR (COND t (PAIR (COND t 'A) 'A t) t ) 'A t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 'B) 'B 1) 1 ) 'B 1)
(PAIR (COND 2 (PAIR (COND 2 'B) 'B 2) 2 ) 'B 2)
(PAIR (COND nil (PAIR (COND nil 'B) 'B nil) nil ) 'B nil)
(PAIR (COND t (PAIR (COND t 'B) 'B t) t ) 'B t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 'C) 'C 1) 1 ) 'C 1)
(PAIR (COND 2 (PAIR (COND 2 'C) 'C 2) 2 ) 'C 2)
(PAIR (COND nil (PAIR (COND nil 'C) 'C nil) nil ) 'C nil)
(PAIR (COND t (PAIR (COND t 'C) 'C t) t ) 'C t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 '1) '1 1) 1 ) '1 1)
(PAIR (COND 2 (PAIR (COND 2 '1) '1 2) 2 ) '1 2)
(PAIR (COND nil (PAIR (COND nil '1) '1 nil) nil ) '1 nil)
(PAIR (COND t (PAIR (COND t '1) '1 t) t ) '1 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 '2) '2 1) 1 ) '2 1)
(PAIR (COND 2 (PAIR (COND 2 '2) '2 2) 2 ) '2 2)
(PAIR (COND nil (PAIR (COND nil '2) '2 nil) nil ) '2 nil)
(PAIR (COND t (PAIR (COND t '2) '2 t) t ) '2 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 '3) '3 1) 1 ) '3 1)
(PAIR (COND 2 (PAIR (COND 2 '3) '3 2) 2 ) '3 2)
(PAIR (COND nil (PAIR (COND nil '3) '3 nil) nil ) '3 nil)
(PAIR (COND t (PAIR (COND t '3) '3 t) t ) '3 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 '()) '() 1) 1 ) '() 1)
(PAIR (COND 2 (PAIR (COND 2 '()) '() 2) 2 ) '() 2)
(PAIR (COND nil (PAIR (COND nil '()) '() nil) nil ) '() nil)
(PAIR (COND t (PAIR (COND t '()) '() t) t ) '() t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PAIR (COND 2 (PAIR (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PAIR (COND nil (PAIR (COND nil '(())) '(()) nil) nil ) '(()) nil)
(PAIR (COND t (PAIR (COND t '(())) '(()) t) t ) '(()) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PAIR (COND 2 (PAIR (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PAIR (COND nil (PAIR (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(PAIR (COND t (PAIR (COND t '((()))) '((())) t) t ) '((())) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PAIR (COND 2 (PAIR (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PAIR (COND nil (PAIR (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PAIR (COND t (PAIR (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 ,A) ,A 1) 1 ) ,A 1)
(PAIR (COND 2 (PAIR (COND 2 ,A) ,A 2) 2 ) ,A 2)
(PAIR (COND nil (PAIR (COND nil ,A) ,A nil) nil ) ,A nil)
(PAIR (COND t (PAIR (COND t ,A) ,A t) t ) ,A t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 ,1) ,1 1) 1 ) ,1 1)
(PAIR (COND 2 (PAIR (COND 2 ,1) ,1 2) 2 ) ,1 2)
(PAIR (COND nil (PAIR (COND nil ,1) ,1 nil) nil ) ,1 nil)
(PAIR (COND t (PAIR (COND t ,1) ,1 t) t ) ,1 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 ,()) ,() 1) 1 ) ,() 1)
(PAIR (COND 2 (PAIR (COND 2 ,()) ,() 2) 2 ) ,() 2)
(PAIR (COND nil (PAIR (COND nil ,()) ,() nil) nil ) ,() nil)
(PAIR (COND t (PAIR (COND t ,()) ,() t) t ) ,() t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PAIR (COND 2 (PAIR (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PAIR (COND nil (PAIR (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PAIR (COND t (PAIR (COND t ,(())) ,(()) t) t ) ,(()) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'A) `'A 1) 1 ) `'A 1)
(PAIR (COND 2 (PAIR (COND 2 `'A) `'A 2) 2 ) `'A 2)
(PAIR (COND nil (PAIR (COND nil `'A) `'A nil) nil ) `'A nil)
(PAIR (COND t (PAIR (COND t `'A) `'A t) t ) `'A t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'B) `'B 1) 1 ) `'B 1)
(PAIR (COND 2 (PAIR (COND 2 `'B) `'B 2) 2 ) `'B 2)
(PAIR (COND nil (PAIR (COND nil `'B) `'B nil) nil ) `'B nil)
(PAIR (COND t (PAIR (COND t `'B) `'B t) t ) `'B t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'C) `'C 1) 1 ) `'C 1)
(PAIR (COND 2 (PAIR (COND 2 `'C) `'C 2) 2 ) `'C 2)
(PAIR (COND nil (PAIR (COND nil `'C) `'C nil) nil ) `'C nil)
(PAIR (COND t (PAIR (COND t `'C) `'C t) t ) `'C t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'1) `'1 1) 1 ) `'1 1)
(PAIR (COND 2 (PAIR (COND 2 `'1) `'1 2) 2 ) `'1 2)
(PAIR (COND nil (PAIR (COND nil `'1) `'1 nil) nil ) `'1 nil)
(PAIR (COND t (PAIR (COND t `'1) `'1 t) t ) `'1 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'2) `'2 1) 1 ) `'2 1)
(PAIR (COND 2 (PAIR (COND 2 `'2) `'2 2) 2 ) `'2 2)
(PAIR (COND nil (PAIR (COND nil `'2) `'2 nil) nil ) `'2 nil)
(PAIR (COND t (PAIR (COND t `'2) `'2 t) t ) `'2 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'3) `'3 1) 1 ) `'3 1)
(PAIR (COND 2 (PAIR (COND 2 `'3) `'3 2) 2 ) `'3 2)
(PAIR (COND nil (PAIR (COND nil `'3) `'3 nil) nil ) `'3 nil)
(PAIR (COND t (PAIR (COND t `'3) `'3 t) t ) `'3 t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'()) `'() 1) 1 ) `'() 1)
(PAIR (COND 2 (PAIR (COND 2 `'()) `'() 2) 2 ) `'() 2)
(PAIR (COND nil (PAIR (COND nil `'()) `'() nil) nil ) `'() nil)
(PAIR (COND t (PAIR (COND t `'()) `'() t) t ) `'() t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PAIR (COND 2 (PAIR (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PAIR (COND nil (PAIR (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PAIR (COND t (PAIR (COND t `'(())) `'(()) t) t ) `'(()) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PAIR (COND 2 (PAIR (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PAIR (COND nil (PAIR (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PAIR (COND t (PAIR (COND t `'((()))) `'((())) t) t ) `'((())) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PAIR (COND 1 (PAIR (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PAIR (COND 2 (PAIR (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PAIR (COND nil (PAIR (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PAIR (COND t (PAIR (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PAIR (COND (cons t t) (PAIR (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PAIR (COND (cons nil t) (PAIR (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PAIR (COND (cons nil nil) (PAIR (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PAIR (COND (cons 0 0) (PAIR (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PAIR (COND (cons 1 1) (PAIR (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PAIR (COND (list 1 2 3) (PAIR (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PAIR (COND (list (cons 1 1 ) ) (PAIR (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 T) T 1) 1 ) T 1)
(PAIR* (COND 2 (PAIR* (COND 2 T) T 2) 2 ) T 2)
(PAIR* (COND nil (PAIR* (COND nil T) T nil) nil ) T nil)
(PAIR* (COND t (PAIR* (COND t T) T t) t ) T t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 NIL) NIL 1) 1 ) NIL 1)
(PAIR* (COND 2 (PAIR* (COND 2 NIL) NIL 2) 2 ) NIL 2)
(PAIR* (COND nil (PAIR* (COND nil NIL) NIL nil) nil ) NIL nil)
(PAIR* (COND t (PAIR* (COND t NIL) NIL t) t ) NIL t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 A) A 1) 1 ) A 1)
(PAIR* (COND 2 (PAIR* (COND 2 A) A 2) 2 ) A 2)
(PAIR* (COND nil (PAIR* (COND nil A) A nil) nil ) A nil)
(PAIR* (COND t (PAIR* (COND t A) A t) t ) A t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 B) B 1) 1 ) B 1)
(PAIR* (COND 2 (PAIR* (COND 2 B) B 2) 2 ) B 2)
(PAIR* (COND nil (PAIR* (COND nil B) B nil) nil ) B nil)
(PAIR* (COND t (PAIR* (COND t B) B t) t ) B t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 C) C 1) 1 ) C 1)
(PAIR* (COND 2 (PAIR* (COND 2 C) C 2) 2 ) C 2)
(PAIR* (COND nil (PAIR* (COND nil C) C nil) nil ) C nil)
(PAIR* (COND t (PAIR* (COND t C) C t) t ) C t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 1) 1 1) 1 ) 1 1)
(PAIR* (COND 2 (PAIR* (COND 2 1) 1 2) 2 ) 1 2)
(PAIR* (COND nil (PAIR* (COND nil 1) 1 nil) nil ) 1 nil)
(PAIR* (COND t (PAIR* (COND t 1) 1 t) t ) 1 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 2) 2 1) 1 ) 2 1)
(PAIR* (COND 2 (PAIR* (COND 2 2) 2 2) 2 ) 2 2)
(PAIR* (COND nil (PAIR* (COND nil 2) 2 nil) nil ) 2 nil)
(PAIR* (COND t (PAIR* (COND t 2) 2 t) t ) 2 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 3) 3 1) 1 ) 3 1)
(PAIR* (COND 2 (PAIR* (COND 2 3) 3 2) 2 ) 3 2)
(PAIR* (COND nil (PAIR* (COND nil 3) 3 nil) nil ) 3 nil)
(PAIR* (COND t (PAIR* (COND t 3) 3 t) t ) 3 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 ()) () 1) 1 ) () 1)
(PAIR* (COND 2 (PAIR* (COND 2 ()) () 2) 2 ) () 2)
(PAIR* (COND nil (PAIR* (COND nil ()) () nil) nil ) () nil)
(PAIR* (COND t (PAIR* (COND t ()) () t) t ) () t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 (())) (()) 1) 1 ) (()) 1)
(PAIR* (COND 2 (PAIR* (COND 2 (())) (()) 2) 2 ) (()) 2)
(PAIR* (COND nil (PAIR* (COND nil (())) (()) nil) nil ) (()) nil)
(PAIR* (COND t (PAIR* (COND t (())) (()) t) t ) (()) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PAIR* (COND 2 (PAIR* (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PAIR* (COND nil (PAIR* (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(PAIR* (COND t (PAIR* (COND t ((()))) ((())) t) t ) ((())) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PAIR* (COND 2 (PAIR* (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PAIR* (COND nil (PAIR* (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PAIR* (COND t (PAIR* (COND t (((())))) (((()))) t) t ) (((()))) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 'A) 'A 1) 1 ) 'A 1)
(PAIR* (COND 2 (PAIR* (COND 2 'A) 'A 2) 2 ) 'A 2)
(PAIR* (COND nil (PAIR* (COND nil 'A) 'A nil) nil ) 'A nil)
(PAIR* (COND t (PAIR* (COND t 'A) 'A t) t ) 'A t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 'B) 'B 1) 1 ) 'B 1)
(PAIR* (COND 2 (PAIR* (COND 2 'B) 'B 2) 2 ) 'B 2)
(PAIR* (COND nil (PAIR* (COND nil 'B) 'B nil) nil ) 'B nil)
(PAIR* (COND t (PAIR* (COND t 'B) 'B t) t ) 'B t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 'C) 'C 1) 1 ) 'C 1)
(PAIR* (COND 2 (PAIR* (COND 2 'C) 'C 2) 2 ) 'C 2)
(PAIR* (COND nil (PAIR* (COND nil 'C) 'C nil) nil ) 'C nil)
(PAIR* (COND t (PAIR* (COND t 'C) 'C t) t ) 'C t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 '1) '1 1) 1 ) '1 1)
(PAIR* (COND 2 (PAIR* (COND 2 '1) '1 2) 2 ) '1 2)
(PAIR* (COND nil (PAIR* (COND nil '1) '1 nil) nil ) '1 nil)
(PAIR* (COND t (PAIR* (COND t '1) '1 t) t ) '1 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 '2) '2 1) 1 ) '2 1)
(PAIR* (COND 2 (PAIR* (COND 2 '2) '2 2) 2 ) '2 2)
(PAIR* (COND nil (PAIR* (COND nil '2) '2 nil) nil ) '2 nil)
(PAIR* (COND t (PAIR* (COND t '2) '2 t) t ) '2 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 '3) '3 1) 1 ) '3 1)
(PAIR* (COND 2 (PAIR* (COND 2 '3) '3 2) 2 ) '3 2)
(PAIR* (COND nil (PAIR* (COND nil '3) '3 nil) nil ) '3 nil)
(PAIR* (COND t (PAIR* (COND t '3) '3 t) t ) '3 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 '()) '() 1) 1 ) '() 1)
(PAIR* (COND 2 (PAIR* (COND 2 '()) '() 2) 2 ) '() 2)
(PAIR* (COND nil (PAIR* (COND nil '()) '() nil) nil ) '() nil)
(PAIR* (COND t (PAIR* (COND t '()) '() t) t ) '() t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PAIR* (COND 2 (PAIR* (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PAIR* (COND nil (PAIR* (COND nil '(())) '(()) nil) nil ) '(()) nil)
(PAIR* (COND t (PAIR* (COND t '(())) '(()) t) t ) '(()) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PAIR* (COND 2 (PAIR* (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PAIR* (COND nil (PAIR* (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(PAIR* (COND t (PAIR* (COND t '((()))) '((())) t) t ) '((())) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PAIR* (COND 2 (PAIR* (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PAIR* (COND nil (PAIR* (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PAIR* (COND t (PAIR* (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 ,A) ,A 1) 1 ) ,A 1)
(PAIR* (COND 2 (PAIR* (COND 2 ,A) ,A 2) 2 ) ,A 2)
(PAIR* (COND nil (PAIR* (COND nil ,A) ,A nil) nil ) ,A nil)
(PAIR* (COND t (PAIR* (COND t ,A) ,A t) t ) ,A t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 ,1) ,1 1) 1 ) ,1 1)
(PAIR* (COND 2 (PAIR* (COND 2 ,1) ,1 2) 2 ) ,1 2)
(PAIR* (COND nil (PAIR* (COND nil ,1) ,1 nil) nil ) ,1 nil)
(PAIR* (COND t (PAIR* (COND t ,1) ,1 t) t ) ,1 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 ,()) ,() 1) 1 ) ,() 1)
(PAIR* (COND 2 (PAIR* (COND 2 ,()) ,() 2) 2 ) ,() 2)
(PAIR* (COND nil (PAIR* (COND nil ,()) ,() nil) nil ) ,() nil)
(PAIR* (COND t (PAIR* (COND t ,()) ,() t) t ) ,() t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PAIR* (COND 2 (PAIR* (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PAIR* (COND nil (PAIR* (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PAIR* (COND t (PAIR* (COND t ,(())) ,(()) t) t ) ,(()) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'A) `'A 1) 1 ) `'A 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'A) `'A 2) 2 ) `'A 2)
(PAIR* (COND nil (PAIR* (COND nil `'A) `'A nil) nil ) `'A nil)
(PAIR* (COND t (PAIR* (COND t `'A) `'A t) t ) `'A t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'B) `'B 1) 1 ) `'B 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'B) `'B 2) 2 ) `'B 2)
(PAIR* (COND nil (PAIR* (COND nil `'B) `'B nil) nil ) `'B nil)
(PAIR* (COND t (PAIR* (COND t `'B) `'B t) t ) `'B t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'C) `'C 1) 1 ) `'C 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'C) `'C 2) 2 ) `'C 2)
(PAIR* (COND nil (PAIR* (COND nil `'C) `'C nil) nil ) `'C nil)
(PAIR* (COND t (PAIR* (COND t `'C) `'C t) t ) `'C t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'1) `'1 1) 1 ) `'1 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'1) `'1 2) 2 ) `'1 2)
(PAIR* (COND nil (PAIR* (COND nil `'1) `'1 nil) nil ) `'1 nil)
(PAIR* (COND t (PAIR* (COND t `'1) `'1 t) t ) `'1 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'2) `'2 1) 1 ) `'2 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'2) `'2 2) 2 ) `'2 2)
(PAIR* (COND nil (PAIR* (COND nil `'2) `'2 nil) nil ) `'2 nil)
(PAIR* (COND t (PAIR* (COND t `'2) `'2 t) t ) `'2 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'3) `'3 1) 1 ) `'3 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'3) `'3 2) 2 ) `'3 2)
(PAIR* (COND nil (PAIR* (COND nil `'3) `'3 nil) nil ) `'3 nil)
(PAIR* (COND t (PAIR* (COND t `'3) `'3 t) t ) `'3 t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'()) `'() 1) 1 ) `'() 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'()) `'() 2) 2 ) `'() 2)
(PAIR* (COND nil (PAIR* (COND nil `'()) `'() nil) nil ) `'() nil)
(PAIR* (COND t (PAIR* (COND t `'()) `'() t) t ) `'() t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PAIR* (COND nil (PAIR* (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PAIR* (COND t (PAIR* (COND t `'(())) `'(()) t) t ) `'(()) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PAIR* (COND nil (PAIR* (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PAIR* (COND t (PAIR* (COND t `'((()))) `'((())) t) t ) `'((())) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PAIR* (COND 1 (PAIR* (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PAIR* (COND 2 (PAIR* (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PAIR* (COND nil (PAIR* (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PAIR* (COND t (PAIR* (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PAIR* (COND (cons t t) (PAIR* (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PAIR* (COND (cons nil t) (PAIR* (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PAIR* (COND (cons nil nil) (PAIR* (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PAIR* (COND (cons 0 0) (PAIR* (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PAIR* (COND (cons 1 1) (PAIR* (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PAIR* (COND (list 1 2 3) (PAIR* (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PAIR* (COND (list (cons 1 1 ) ) (PAIR* (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 T) T 1) 1 ) T 1)
(PROD (COND 2 (PROD (COND 2 T) T 2) 2 ) T 2)
(PROD (COND nil (PROD (COND nil T) T nil) nil ) T nil)
(PROD (COND t (PROD (COND t T) T t) t ) T t)
(PROD (COND (cons t t) (PROD (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 NIL) NIL 1) 1 ) NIL 1)
(PROD (COND 2 (PROD (COND 2 NIL) NIL 2) 2 ) NIL 2)
(PROD (COND nil (PROD (COND nil NIL) NIL nil) nil ) NIL nil)
(PROD (COND t (PROD (COND t NIL) NIL t) t ) NIL t)
(PROD (COND (cons t t) (PROD (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 A) A 1) 1 ) A 1)
(PROD (COND 2 (PROD (COND 2 A) A 2) 2 ) A 2)
(PROD (COND nil (PROD (COND nil A) A nil) nil ) A nil)
(PROD (COND t (PROD (COND t A) A t) t ) A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 B) B 1) 1 ) B 1)
(PROD (COND 2 (PROD (COND 2 B) B 2) 2 ) B 2)
(PROD (COND nil (PROD (COND nil B) B nil) nil ) B nil)
(PROD (COND t (PROD (COND t B) B t) t ) B t)
(PROD (COND (cons t t) (PROD (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 C) C 1) 1 ) C 1)
(PROD (COND 2 (PROD (COND 2 C) C 2) 2 ) C 2)
(PROD (COND nil (PROD (COND nil C) C nil) nil ) C nil)
(PROD (COND t (PROD (COND t C) C t) t ) C t)
(PROD (COND (cons t t) (PROD (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 1) 1 1) 1 ) 1 1)
(PROD (COND 2 (PROD (COND 2 1) 1 2) 2 ) 1 2)
(PROD (COND nil (PROD (COND nil 1) 1 nil) nil ) 1 nil)
(PROD (COND t (PROD (COND t 1) 1 t) t ) 1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 2) 2 1) 1 ) 2 1)
(PROD (COND 2 (PROD (COND 2 2) 2 2) 2 ) 2 2)
(PROD (COND nil (PROD (COND nil 2) 2 nil) nil ) 2 nil)
(PROD (COND t (PROD (COND t 2) 2 t) t ) 2 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 3) 3 1) 1 ) 3 1)
(PROD (COND 2 (PROD (COND 2 3) 3 2) 2 ) 3 2)
(PROD (COND nil (PROD (COND nil 3) 3 nil) nil ) 3 nil)
(PROD (COND t (PROD (COND t 3) 3 t) t ) 3 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ()) () 1) 1 ) () 1)
(PROD (COND 2 (PROD (COND 2 ()) () 2) 2 ) () 2)
(PROD (COND nil (PROD (COND nil ()) () nil) nil ) () nil)
(PROD (COND t (PROD (COND t ()) () t) t ) () t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 (())) (()) 1) 1 ) (()) 1)
(PROD (COND 2 (PROD (COND 2 (())) (()) 2) 2 ) (()) 2)
(PROD (COND nil (PROD (COND nil (())) (()) nil) nil ) (()) nil)
(PROD (COND t (PROD (COND t (())) (()) t) t ) (()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROD (COND 2 (PROD (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROD (COND nil (PROD (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(PROD (COND t (PROD (COND t ((()))) ((())) t) t ) ((())) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROD (COND 2 (PROD (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROD (COND nil (PROD (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROD (COND t (PROD (COND t (((())))) (((()))) t) t ) (((()))) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 'A) 'A 1) 1 ) 'A 1)
(PROD (COND 2 (PROD (COND 2 'A) 'A 2) 2 ) 'A 2)
(PROD (COND nil (PROD (COND nil 'A) 'A nil) nil ) 'A nil)
(PROD (COND t (PROD (COND t 'A) 'A t) t ) 'A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 'B) 'B 1) 1 ) 'B 1)
(PROD (COND 2 (PROD (COND 2 'B) 'B 2) 2 ) 'B 2)
(PROD (COND nil (PROD (COND nil 'B) 'B nil) nil ) 'B nil)
(PROD (COND t (PROD (COND t 'B) 'B t) t ) 'B t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 'C) 'C 1) 1 ) 'C 1)
(PROD (COND 2 (PROD (COND 2 'C) 'C 2) 2 ) 'C 2)
(PROD (COND nil (PROD (COND nil 'C) 'C nil) nil ) 'C nil)
(PROD (COND t (PROD (COND t 'C) 'C t) t ) 'C t)
(PROD (COND (cons t t) (PROD (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '1) '1 1) 1 ) '1 1)
(PROD (COND 2 (PROD (COND 2 '1) '1 2) 2 ) '1 2)
(PROD (COND nil (PROD (COND nil '1) '1 nil) nil ) '1 nil)
(PROD (COND t (PROD (COND t '1) '1 t) t ) '1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '2) '2 1) 1 ) '2 1)
(PROD (COND 2 (PROD (COND 2 '2) '2 2) 2 ) '2 2)
(PROD (COND nil (PROD (COND nil '2) '2 nil) nil ) '2 nil)
(PROD (COND t (PROD (COND t '2) '2 t) t ) '2 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '3) '3 1) 1 ) '3 1)
(PROD (COND 2 (PROD (COND 2 '3) '3 2) 2 ) '3 2)
(PROD (COND nil (PROD (COND nil '3) '3 nil) nil ) '3 nil)
(PROD (COND t (PROD (COND t '3) '3 t) t ) '3 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '()) '() 1) 1 ) '() 1)
(PROD (COND 2 (PROD (COND 2 '()) '() 2) 2 ) '() 2)
(PROD (COND nil (PROD (COND nil '()) '() nil) nil ) '() nil)
(PROD (COND t (PROD (COND t '()) '() t) t ) '() t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROD (COND 2 (PROD (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROD (COND nil (PROD (COND nil '(())) '(()) nil) nil ) '(()) nil)
(PROD (COND t (PROD (COND t '(())) '(()) t) t ) '(()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROD (COND 2 (PROD (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROD (COND nil (PROD (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(PROD (COND t (PROD (COND t '((()))) '((())) t) t ) '((())) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROD (COND 2 (PROD (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROD (COND nil (PROD (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROD (COND t (PROD (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,A) ,A 1) 1 ) ,A 1)
(PROD (COND 2 (PROD (COND 2 ,A) ,A 2) 2 ) ,A 2)
(PROD (COND nil (PROD (COND nil ,A) ,A nil) nil ) ,A nil)
(PROD (COND t (PROD (COND t ,A) ,A t) t ) ,A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,1) ,1 1) 1 ) ,1 1)
(PROD (COND 2 (PROD (COND 2 ,1) ,1 2) 2 ) ,1 2)
(PROD (COND nil (PROD (COND nil ,1) ,1 nil) nil ) ,1 nil)
(PROD (COND t (PROD (COND t ,1) ,1 t) t ) ,1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,()) ,() 1) 1 ) ,() 1)
(PROD (COND 2 (PROD (COND 2 ,()) ,() 2) 2 ) ,() 2)
(PROD (COND nil (PROD (COND nil ,()) ,() nil) nil ) ,() nil)
(PROD (COND t (PROD (COND t ,()) ,() t) t ) ,() t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROD (COND 2 (PROD (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROD (COND nil (PROD (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROD (COND t (PROD (COND t ,(())) ,(()) t) t ) ,(()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'A) `'A 1) 1 ) `'A 1)
(PROD (COND 2 (PROD (COND 2 `'A) `'A 2) 2 ) `'A 2)
(PROD (COND nil (PROD (COND nil `'A) `'A nil) nil ) `'A nil)
(PROD (COND t (PROD (COND t `'A) `'A t) t ) `'A t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'B) `'B 1) 1 ) `'B 1)
(PROD (COND 2 (PROD (COND 2 `'B) `'B 2) 2 ) `'B 2)
(PROD (COND nil (PROD (COND nil `'B) `'B nil) nil ) `'B nil)
(PROD (COND t (PROD (COND t `'B) `'B t) t ) `'B t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'C) `'C 1) 1 ) `'C 1)
(PROD (COND 2 (PROD (COND 2 `'C) `'C 2) 2 ) `'C 2)
(PROD (COND nil (PROD (COND nil `'C) `'C nil) nil ) `'C nil)
(PROD (COND t (PROD (COND t `'C) `'C t) t ) `'C t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'1) `'1 1) 1 ) `'1 1)
(PROD (COND 2 (PROD (COND 2 `'1) `'1 2) 2 ) `'1 2)
(PROD (COND nil (PROD (COND nil `'1) `'1 nil) nil ) `'1 nil)
(PROD (COND t (PROD (COND t `'1) `'1 t) t ) `'1 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'2) `'2 1) 1 ) `'2 1)
(PROD (COND 2 (PROD (COND 2 `'2) `'2 2) 2 ) `'2 2)
(PROD (COND nil (PROD (COND nil `'2) `'2 nil) nil ) `'2 nil)
(PROD (COND t (PROD (COND t `'2) `'2 t) t ) `'2 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'3) `'3 1) 1 ) `'3 1)
(PROD (COND 2 (PROD (COND 2 `'3) `'3 2) 2 ) `'3 2)
(PROD (COND nil (PROD (COND nil `'3) `'3 nil) nil ) `'3 nil)
(PROD (COND t (PROD (COND t `'3) `'3 t) t ) `'3 t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'()) `'() 1) 1 ) `'() 1)
(PROD (COND 2 (PROD (COND 2 `'()) `'() 2) 2 ) `'() 2)
(PROD (COND nil (PROD (COND nil `'()) `'() nil) nil ) `'() nil)
(PROD (COND t (PROD (COND t `'()) `'() t) t ) `'() t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROD (COND 2 (PROD (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROD (COND nil (PROD (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROD (COND t (PROD (COND t `'(())) `'(()) t) t ) `'(()) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROD (COND 2 (PROD (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROD (COND nil (PROD (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROD (COND t (PROD (COND t `'((()))) `'((())) t) t ) `'((())) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROD (COND 1 (PROD (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROD (COND 2 (PROD (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROD (COND nil (PROD (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROD (COND t (PROD (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROD (COND (cons t t) (PROD (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROD (COND (cons nil t) (PROD (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROD (COND (cons nil nil) (PROD (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROD (COND (cons 0 0) (PROD (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROD (COND (cons 1 1) (PROD (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROD (COND (list 1 2 3) (PROD (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROD (COND (list (cons 1 1 ) ) (PROD (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 T) T 1) 1 ) T 1)
(PROG1 (COND 2 (PROG1 (COND 2 T) T 2) 2 ) T 2)
(PROG1 (COND nil (PROG1 (COND nil T) T nil) nil ) T nil)
(PROG1 (COND t (PROG1 (COND t T) T t) t ) T t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 NIL) NIL 1) 1 ) NIL 1)
(PROG1 (COND 2 (PROG1 (COND 2 NIL) NIL 2) 2 ) NIL 2)
(PROG1 (COND nil (PROG1 (COND nil NIL) NIL nil) nil ) NIL nil)
(PROG1 (COND t (PROG1 (COND t NIL) NIL t) t ) NIL t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 A) A 1) 1 ) A 1)
(PROG1 (COND 2 (PROG1 (COND 2 A) A 2) 2 ) A 2)
(PROG1 (COND nil (PROG1 (COND nil A) A nil) nil ) A nil)
(PROG1 (COND t (PROG1 (COND t A) A t) t ) A t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 B) B 1) 1 ) B 1)
(PROG1 (COND 2 (PROG1 (COND 2 B) B 2) 2 ) B 2)
(PROG1 (COND nil (PROG1 (COND nil B) B nil) nil ) B nil)
(PROG1 (COND t (PROG1 (COND t B) B t) t ) B t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 C) C 1) 1 ) C 1)
(PROG1 (COND 2 (PROG1 (COND 2 C) C 2) 2 ) C 2)
(PROG1 (COND nil (PROG1 (COND nil C) C nil) nil ) C nil)
(PROG1 (COND t (PROG1 (COND t C) C t) t ) C t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 1) 1 1) 1 ) 1 1)
(PROG1 (COND 2 (PROG1 (COND 2 1) 1 2) 2 ) 1 2)
(PROG1 (COND nil (PROG1 (COND nil 1) 1 nil) nil ) 1 nil)
(PROG1 (COND t (PROG1 (COND t 1) 1 t) t ) 1 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 2) 2 1) 1 ) 2 1)
(PROG1 (COND 2 (PROG1 (COND 2 2) 2 2) 2 ) 2 2)
(PROG1 (COND nil (PROG1 (COND nil 2) 2 nil) nil ) 2 nil)
(PROG1 (COND t (PROG1 (COND t 2) 2 t) t ) 2 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 3) 3 1) 1 ) 3 1)
(PROG1 (COND 2 (PROG1 (COND 2 3) 3 2) 2 ) 3 2)
(PROG1 (COND nil (PROG1 (COND nil 3) 3 nil) nil ) 3 nil)
(PROG1 (COND t (PROG1 (COND t 3) 3 t) t ) 3 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 ()) () 1) 1 ) () 1)
(PROG1 (COND 2 (PROG1 (COND 2 ()) () 2) 2 ) () 2)
(PROG1 (COND nil (PROG1 (COND nil ()) () nil) nil ) () nil)
(PROG1 (COND t (PROG1 (COND t ()) () t) t ) () t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 (())) (()) 1) 1 ) (()) 1)
(PROG1 (COND 2 (PROG1 (COND 2 (())) (()) 2) 2 ) (()) 2)
(PROG1 (COND nil (PROG1 (COND nil (())) (()) nil) nil ) (()) nil)
(PROG1 (COND t (PROG1 (COND t (())) (()) t) t ) (()) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROG1 (COND 2 (PROG1 (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROG1 (COND nil (PROG1 (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(PROG1 (COND t (PROG1 (COND t ((()))) ((())) t) t ) ((())) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROG1 (COND 2 (PROG1 (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROG1 (COND nil (PROG1 (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROG1 (COND t (PROG1 (COND t (((())))) (((()))) t) t ) (((()))) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 'A) 'A 1) 1 ) 'A 1)
(PROG1 (COND 2 (PROG1 (COND 2 'A) 'A 2) 2 ) 'A 2)
(PROG1 (COND nil (PROG1 (COND nil 'A) 'A nil) nil ) 'A nil)
(PROG1 (COND t (PROG1 (COND t 'A) 'A t) t ) 'A t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 'B) 'B 1) 1 ) 'B 1)
(PROG1 (COND 2 (PROG1 (COND 2 'B) 'B 2) 2 ) 'B 2)
(PROG1 (COND nil (PROG1 (COND nil 'B) 'B nil) nil ) 'B nil)
(PROG1 (COND t (PROG1 (COND t 'B) 'B t) t ) 'B t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 'C) 'C 1) 1 ) 'C 1)
(PROG1 (COND 2 (PROG1 (COND 2 'C) 'C 2) 2 ) 'C 2)
(PROG1 (COND nil (PROG1 (COND nil 'C) 'C nil) nil ) 'C nil)
(PROG1 (COND t (PROG1 (COND t 'C) 'C t) t ) 'C t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 '1) '1 1) 1 ) '1 1)
(PROG1 (COND 2 (PROG1 (COND 2 '1) '1 2) 2 ) '1 2)
(PROG1 (COND nil (PROG1 (COND nil '1) '1 nil) nil ) '1 nil)
(PROG1 (COND t (PROG1 (COND t '1) '1 t) t ) '1 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 '2) '2 1) 1 ) '2 1)
(PROG1 (COND 2 (PROG1 (COND 2 '2) '2 2) 2 ) '2 2)
(PROG1 (COND nil (PROG1 (COND nil '2) '2 nil) nil ) '2 nil)
(PROG1 (COND t (PROG1 (COND t '2) '2 t) t ) '2 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 '3) '3 1) 1 ) '3 1)
(PROG1 (COND 2 (PROG1 (COND 2 '3) '3 2) 2 ) '3 2)
(PROG1 (COND nil (PROG1 (COND nil '3) '3 nil) nil ) '3 nil)
(PROG1 (COND t (PROG1 (COND t '3) '3 t) t ) '3 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 '()) '() 1) 1 ) '() 1)
(PROG1 (COND 2 (PROG1 (COND 2 '()) '() 2) 2 ) '() 2)
(PROG1 (COND nil (PROG1 (COND nil '()) '() nil) nil ) '() nil)
(PROG1 (COND t (PROG1 (COND t '()) '() t) t ) '() t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROG1 (COND 2 (PROG1 (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROG1 (COND nil (PROG1 (COND nil '(())) '(()) nil) nil ) '(()) nil)
(PROG1 (COND t (PROG1 (COND t '(())) '(()) t) t ) '(()) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROG1 (COND 2 (PROG1 (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROG1 (COND nil (PROG1 (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(PROG1 (COND t (PROG1 (COND t '((()))) '((())) t) t ) '((())) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROG1 (COND 2 (PROG1 (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROG1 (COND nil (PROG1 (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROG1 (COND t (PROG1 (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 ,A) ,A 1) 1 ) ,A 1)
(PROG1 (COND 2 (PROG1 (COND 2 ,A) ,A 2) 2 ) ,A 2)
(PROG1 (COND nil (PROG1 (COND nil ,A) ,A nil) nil ) ,A nil)
(PROG1 (COND t (PROG1 (COND t ,A) ,A t) t ) ,A t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 ,1) ,1 1) 1 ) ,1 1)
(PROG1 (COND 2 (PROG1 (COND 2 ,1) ,1 2) 2 ) ,1 2)
(PROG1 (COND nil (PROG1 (COND nil ,1) ,1 nil) nil ) ,1 nil)
(PROG1 (COND t (PROG1 (COND t ,1) ,1 t) t ) ,1 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 ,()) ,() 1) 1 ) ,() 1)
(PROG1 (COND 2 (PROG1 (COND 2 ,()) ,() 2) 2 ) ,() 2)
(PROG1 (COND nil (PROG1 (COND nil ,()) ,() nil) nil ) ,() nil)
(PROG1 (COND t (PROG1 (COND t ,()) ,() t) t ) ,() t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROG1 (COND 2 (PROG1 (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROG1 (COND nil (PROG1 (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROG1 (COND t (PROG1 (COND t ,(())) ,(()) t) t ) ,(()) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'A) `'A 1) 1 ) `'A 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'A) `'A 2) 2 ) `'A 2)
(PROG1 (COND nil (PROG1 (COND nil `'A) `'A nil) nil ) `'A nil)
(PROG1 (COND t (PROG1 (COND t `'A) `'A t) t ) `'A t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'B) `'B 1) 1 ) `'B 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'B) `'B 2) 2 ) `'B 2)
(PROG1 (COND nil (PROG1 (COND nil `'B) `'B nil) nil ) `'B nil)
(PROG1 (COND t (PROG1 (COND t `'B) `'B t) t ) `'B t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'C) `'C 1) 1 ) `'C 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'C) `'C 2) 2 ) `'C 2)
(PROG1 (COND nil (PROG1 (COND nil `'C) `'C nil) nil ) `'C nil)
(PROG1 (COND t (PROG1 (COND t `'C) `'C t) t ) `'C t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'1) `'1 1) 1 ) `'1 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'1) `'1 2) 2 ) `'1 2)
(PROG1 (COND nil (PROG1 (COND nil `'1) `'1 nil) nil ) `'1 nil)
(PROG1 (COND t (PROG1 (COND t `'1) `'1 t) t ) `'1 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'2) `'2 1) 1 ) `'2 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'2) `'2 2) 2 ) `'2 2)
(PROG1 (COND nil (PROG1 (COND nil `'2) `'2 nil) nil ) `'2 nil)
(PROG1 (COND t (PROG1 (COND t `'2) `'2 t) t ) `'2 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'3) `'3 1) 1 ) `'3 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'3) `'3 2) 2 ) `'3 2)
(PROG1 (COND nil (PROG1 (COND nil `'3) `'3 nil) nil ) `'3 nil)
(PROG1 (COND t (PROG1 (COND t `'3) `'3 t) t ) `'3 t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'()) `'() 1) 1 ) `'() 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'()) `'() 2) 2 ) `'() 2)
(PROG1 (COND nil (PROG1 (COND nil `'()) `'() nil) nil ) `'() nil)
(PROG1 (COND t (PROG1 (COND t `'()) `'() t) t ) `'() t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROG1 (COND nil (PROG1 (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROG1 (COND t (PROG1 (COND t `'(())) `'(()) t) t ) `'(()) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROG1 (COND nil (PROG1 (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROG1 (COND t (PROG1 (COND t `'((()))) `'((())) t) t ) `'((())) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROG1 (COND 1 (PROG1 (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROG1 (COND 2 (PROG1 (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROG1 (COND nil (PROG1 (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROG1 (COND t (PROG1 (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROG1 (COND (cons t t) (PROG1 (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROG1 (COND (cons nil t) (PROG1 (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROG1 (COND (cons nil nil) (PROG1 (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROG1 (COND (cons 0 0) (PROG1 (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROG1 (COND (cons 1 1) (PROG1 (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROG1 (COND (list 1 2 3) (PROG1 (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROG1 (COND (list (cons 1 1 ) ) (PROG1 (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 T) T 1) 1 ) T 1)
(PROG2 (COND 2 (PROG2 (COND 2 T) T 2) 2 ) T 2)
(PROG2 (COND nil (PROG2 (COND nil T) T nil) nil ) T nil)
(PROG2 (COND t (PROG2 (COND t T) T t) t ) T t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 NIL) NIL 1) 1 ) NIL 1)
(PROG2 (COND 2 (PROG2 (COND 2 NIL) NIL 2) 2 ) NIL 2)
(PROG2 (COND nil (PROG2 (COND nil NIL) NIL nil) nil ) NIL nil)
(PROG2 (COND t (PROG2 (COND t NIL) NIL t) t ) NIL t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 A) A 1) 1 ) A 1)
(PROG2 (COND 2 (PROG2 (COND 2 A) A 2) 2 ) A 2)
(PROG2 (COND nil (PROG2 (COND nil A) A nil) nil ) A nil)
(PROG2 (COND t (PROG2 (COND t A) A t) t ) A t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 B) B 1) 1 ) B 1)
(PROG2 (COND 2 (PROG2 (COND 2 B) B 2) 2 ) B 2)
(PROG2 (COND nil (PROG2 (COND nil B) B nil) nil ) B nil)
(PROG2 (COND t (PROG2 (COND t B) B t) t ) B t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 C) C 1) 1 ) C 1)
(PROG2 (COND 2 (PROG2 (COND 2 C) C 2) 2 ) C 2)
(PROG2 (COND nil (PROG2 (COND nil C) C nil) nil ) C nil)
(PROG2 (COND t (PROG2 (COND t C) C t) t ) C t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 1) 1 1) 1 ) 1 1)
(PROG2 (COND 2 (PROG2 (COND 2 1) 1 2) 2 ) 1 2)
(PROG2 (COND nil (PROG2 (COND nil 1) 1 nil) nil ) 1 nil)
(PROG2 (COND t (PROG2 (COND t 1) 1 t) t ) 1 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 2) 2 1) 1 ) 2 1)
(PROG2 (COND 2 (PROG2 (COND 2 2) 2 2) 2 ) 2 2)
(PROG2 (COND nil (PROG2 (COND nil 2) 2 nil) nil ) 2 nil)
(PROG2 (COND t (PROG2 (COND t 2) 2 t) t ) 2 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 3) 3 1) 1 ) 3 1)
(PROG2 (COND 2 (PROG2 (COND 2 3) 3 2) 2 ) 3 2)
(PROG2 (COND nil (PROG2 (COND nil 3) 3 nil) nil ) 3 nil)
(PROG2 (COND t (PROG2 (COND t 3) 3 t) t ) 3 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 ()) () 1) 1 ) () 1)
(PROG2 (COND 2 (PROG2 (COND 2 ()) () 2) 2 ) () 2)
(PROG2 (COND nil (PROG2 (COND nil ()) () nil) nil ) () nil)
(PROG2 (COND t (PROG2 (COND t ()) () t) t ) () t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 (())) (()) 1) 1 ) (()) 1)
(PROG2 (COND 2 (PROG2 (COND 2 (())) (()) 2) 2 ) (()) 2)
(PROG2 (COND nil (PROG2 (COND nil (())) (()) nil) nil ) (()) nil)
(PROG2 (COND t (PROG2 (COND t (())) (()) t) t ) (()) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROG2 (COND 2 (PROG2 (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROG2 (COND nil (PROG2 (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(PROG2 (COND t (PROG2 (COND t ((()))) ((())) t) t ) ((())) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROG2 (COND 2 (PROG2 (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROG2 (COND nil (PROG2 (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROG2 (COND t (PROG2 (COND t (((())))) (((()))) t) t ) (((()))) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 'A) 'A 1) 1 ) 'A 1)
(PROG2 (COND 2 (PROG2 (COND 2 'A) 'A 2) 2 ) 'A 2)
(PROG2 (COND nil (PROG2 (COND nil 'A) 'A nil) nil ) 'A nil)
(PROG2 (COND t (PROG2 (COND t 'A) 'A t) t ) 'A t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 'B) 'B 1) 1 ) 'B 1)
(PROG2 (COND 2 (PROG2 (COND 2 'B) 'B 2) 2 ) 'B 2)
(PROG2 (COND nil (PROG2 (COND nil 'B) 'B nil) nil ) 'B nil)
(PROG2 (COND t (PROG2 (COND t 'B) 'B t) t ) 'B t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 'C) 'C 1) 1 ) 'C 1)
(PROG2 (COND 2 (PROG2 (COND 2 'C) 'C 2) 2 ) 'C 2)
(PROG2 (COND nil (PROG2 (COND nil 'C) 'C nil) nil ) 'C nil)
(PROG2 (COND t (PROG2 (COND t 'C) 'C t) t ) 'C t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 '1) '1 1) 1 ) '1 1)
(PROG2 (COND 2 (PROG2 (COND 2 '1) '1 2) 2 ) '1 2)
(PROG2 (COND nil (PROG2 (COND nil '1) '1 nil) nil ) '1 nil)
(PROG2 (COND t (PROG2 (COND t '1) '1 t) t ) '1 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 '2) '2 1) 1 ) '2 1)
(PROG2 (COND 2 (PROG2 (COND 2 '2) '2 2) 2 ) '2 2)
(PROG2 (COND nil (PROG2 (COND nil '2) '2 nil) nil ) '2 nil)
(PROG2 (COND t (PROG2 (COND t '2) '2 t) t ) '2 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 '3) '3 1) 1 ) '3 1)
(PROG2 (COND 2 (PROG2 (COND 2 '3) '3 2) 2 ) '3 2)
(PROG2 (COND nil (PROG2 (COND nil '3) '3 nil) nil ) '3 nil)
(PROG2 (COND t (PROG2 (COND t '3) '3 t) t ) '3 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 '()) '() 1) 1 ) '() 1)
(PROG2 (COND 2 (PROG2 (COND 2 '()) '() 2) 2 ) '() 2)
(PROG2 (COND nil (PROG2 (COND nil '()) '() nil) nil ) '() nil)
(PROG2 (COND t (PROG2 (COND t '()) '() t) t ) '() t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROG2 (COND 2 (PROG2 (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROG2 (COND nil (PROG2 (COND nil '(())) '(()) nil) nil ) '(()) nil)
(PROG2 (COND t (PROG2 (COND t '(())) '(()) t) t ) '(()) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROG2 (COND 2 (PROG2 (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROG2 (COND nil (PROG2 (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(PROG2 (COND t (PROG2 (COND t '((()))) '((())) t) t ) '((())) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROG2 (COND 2 (PROG2 (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROG2 (COND nil (PROG2 (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROG2 (COND t (PROG2 (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 ,A) ,A 1) 1 ) ,A 1)
(PROG2 (COND 2 (PROG2 (COND 2 ,A) ,A 2) 2 ) ,A 2)
(PROG2 (COND nil (PROG2 (COND nil ,A) ,A nil) nil ) ,A nil)
(PROG2 (COND t (PROG2 (COND t ,A) ,A t) t ) ,A t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 ,1) ,1 1) 1 ) ,1 1)
(PROG2 (COND 2 (PROG2 (COND 2 ,1) ,1 2) 2 ) ,1 2)
(PROG2 (COND nil (PROG2 (COND nil ,1) ,1 nil) nil ) ,1 nil)
(PROG2 (COND t (PROG2 (COND t ,1) ,1 t) t ) ,1 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 ,()) ,() 1) 1 ) ,() 1)
(PROG2 (COND 2 (PROG2 (COND 2 ,()) ,() 2) 2 ) ,() 2)
(PROG2 (COND nil (PROG2 (COND nil ,()) ,() nil) nil ) ,() nil)
(PROG2 (COND t (PROG2 (COND t ,()) ,() t) t ) ,() t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROG2 (COND 2 (PROG2 (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROG2 (COND nil (PROG2 (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROG2 (COND t (PROG2 (COND t ,(())) ,(()) t) t ) ,(()) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'A) `'A 1) 1 ) `'A 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'A) `'A 2) 2 ) `'A 2)
(PROG2 (COND nil (PROG2 (COND nil `'A) `'A nil) nil ) `'A nil)
(PROG2 (COND t (PROG2 (COND t `'A) `'A t) t ) `'A t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'B) `'B 1) 1 ) `'B 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'B) `'B 2) 2 ) `'B 2)
(PROG2 (COND nil (PROG2 (COND nil `'B) `'B nil) nil ) `'B nil)
(PROG2 (COND t (PROG2 (COND t `'B) `'B t) t ) `'B t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'C) `'C 1) 1 ) `'C 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'C) `'C 2) 2 ) `'C 2)
(PROG2 (COND nil (PROG2 (COND nil `'C) `'C nil) nil ) `'C nil)
(PROG2 (COND t (PROG2 (COND t `'C) `'C t) t ) `'C t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'1) `'1 1) 1 ) `'1 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'1) `'1 2) 2 ) `'1 2)
(PROG2 (COND nil (PROG2 (COND nil `'1) `'1 nil) nil ) `'1 nil)
(PROG2 (COND t (PROG2 (COND t `'1) `'1 t) t ) `'1 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'2) `'2 1) 1 ) `'2 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'2) `'2 2) 2 ) `'2 2)
(PROG2 (COND nil (PROG2 (COND nil `'2) `'2 nil) nil ) `'2 nil)
(PROG2 (COND t (PROG2 (COND t `'2) `'2 t) t ) `'2 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'3) `'3 1) 1 ) `'3 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'3) `'3 2) 2 ) `'3 2)
(PROG2 (COND nil (PROG2 (COND nil `'3) `'3 nil) nil ) `'3 nil)
(PROG2 (COND t (PROG2 (COND t `'3) `'3 t) t ) `'3 t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'()) `'() 1) 1 ) `'() 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'()) `'() 2) 2 ) `'() 2)
(PROG2 (COND nil (PROG2 (COND nil `'()) `'() nil) nil ) `'() nil)
(PROG2 (COND t (PROG2 (COND t `'()) `'() t) t ) `'() t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROG2 (COND nil (PROG2 (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROG2 (COND t (PROG2 (COND t `'(())) `'(()) t) t ) `'(()) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROG2 (COND nil (PROG2 (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROG2 (COND t (PROG2 (COND t `'((()))) `'((())) t) t ) `'((())) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROG2 (COND 1 (PROG2 (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROG2 (COND 2 (PROG2 (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROG2 (COND nil (PROG2 (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROG2 (COND t (PROG2 (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROG2 (COND (cons t t) (PROG2 (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROG2 (COND (cons nil t) (PROG2 (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROG2 (COND (cons nil nil) (PROG2 (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROG2 (COND (cons 0 0) (PROG2 (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROG2 (COND (cons 1 1) (PROG2 (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROG2 (COND (list 1 2 3) (PROG2 (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROG2 (COND (list (cons 1 1 ) ) (PROG2 (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 T) T 1) 1 ) T 1)
(PROGN (COND 2 (PROGN (COND 2 T) T 2) 2 ) T 2)
(PROGN (COND nil (PROGN (COND nil T) T nil) nil ) T nil)
(PROGN (COND t (PROGN (COND t T) T t) t ) T t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 NIL) NIL 1) 1 ) NIL 1)
(PROGN (COND 2 (PROGN (COND 2 NIL) NIL 2) 2 ) NIL 2)
(PROGN (COND nil (PROGN (COND nil NIL) NIL nil) nil ) NIL nil)
(PROGN (COND t (PROGN (COND t NIL) NIL t) t ) NIL t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 A) A 1) 1 ) A 1)
(PROGN (COND 2 (PROGN (COND 2 A) A 2) 2 ) A 2)
(PROGN (COND nil (PROGN (COND nil A) A nil) nil ) A nil)
(PROGN (COND t (PROGN (COND t A) A t) t ) A t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 B) B 1) 1 ) B 1)
(PROGN (COND 2 (PROGN (COND 2 B) B 2) 2 ) B 2)
(PROGN (COND nil (PROGN (COND nil B) B nil) nil ) B nil)
(PROGN (COND t (PROGN (COND t B) B t) t ) B t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 C) C 1) 1 ) C 1)
(PROGN (COND 2 (PROGN (COND 2 C) C 2) 2 ) C 2)
(PROGN (COND nil (PROGN (COND nil C) C nil) nil ) C nil)
(PROGN (COND t (PROGN (COND t C) C t) t ) C t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 1) 1 1) 1 ) 1 1)
(PROGN (COND 2 (PROGN (COND 2 1) 1 2) 2 ) 1 2)
(PROGN (COND nil (PROGN (COND nil 1) 1 nil) nil ) 1 nil)
(PROGN (COND t (PROGN (COND t 1) 1 t) t ) 1 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 2) 2 1) 1 ) 2 1)
(PROGN (COND 2 (PROGN (COND 2 2) 2 2) 2 ) 2 2)
(PROGN (COND nil (PROGN (COND nil 2) 2 nil) nil ) 2 nil)
(PROGN (COND t (PROGN (COND t 2) 2 t) t ) 2 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 3) 3 1) 1 ) 3 1)
(PROGN (COND 2 (PROGN (COND 2 3) 3 2) 2 ) 3 2)
(PROGN (COND nil (PROGN (COND nil 3) 3 nil) nil ) 3 nil)
(PROGN (COND t (PROGN (COND t 3) 3 t) t ) 3 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 ()) () 1) 1 ) () 1)
(PROGN (COND 2 (PROGN (COND 2 ()) () 2) 2 ) () 2)
(PROGN (COND nil (PROGN (COND nil ()) () nil) nil ) () nil)
(PROGN (COND t (PROGN (COND t ()) () t) t ) () t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 (())) (()) 1) 1 ) (()) 1)
(PROGN (COND 2 (PROGN (COND 2 (())) (()) 2) 2 ) (()) 2)
(PROGN (COND nil (PROGN (COND nil (())) (()) nil) nil ) (()) nil)
(PROGN (COND t (PROGN (COND t (())) (()) t) t ) (()) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(PROGN (COND 2 (PROGN (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(PROGN (COND nil (PROGN (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(PROGN (COND t (PROGN (COND t ((()))) ((())) t) t ) ((())) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(PROGN (COND 2 (PROGN (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(PROGN (COND nil (PROGN (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(PROGN (COND t (PROGN (COND t (((())))) (((()))) t) t ) (((()))) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 'A) 'A 1) 1 ) 'A 1)
(PROGN (COND 2 (PROGN (COND 2 'A) 'A 2) 2 ) 'A 2)
(PROGN (COND nil (PROGN (COND nil 'A) 'A nil) nil ) 'A nil)
(PROGN (COND t (PROGN (COND t 'A) 'A t) t ) 'A t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 'B) 'B 1) 1 ) 'B 1)
(PROGN (COND 2 (PROGN (COND 2 'B) 'B 2) 2 ) 'B 2)
(PROGN (COND nil (PROGN (COND nil 'B) 'B nil) nil ) 'B nil)
(PROGN (COND t (PROGN (COND t 'B) 'B t) t ) 'B t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 'C) 'C 1) 1 ) 'C 1)
(PROGN (COND 2 (PROGN (COND 2 'C) 'C 2) 2 ) 'C 2)
(PROGN (COND nil (PROGN (COND nil 'C) 'C nil) nil ) 'C nil)
(PROGN (COND t (PROGN (COND t 'C) 'C t) t ) 'C t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 '1) '1 1) 1 ) '1 1)
(PROGN (COND 2 (PROGN (COND 2 '1) '1 2) 2 ) '1 2)
(PROGN (COND nil (PROGN (COND nil '1) '1 nil) nil ) '1 nil)
(PROGN (COND t (PROGN (COND t '1) '1 t) t ) '1 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 '2) '2 1) 1 ) '2 1)
(PROGN (COND 2 (PROGN (COND 2 '2) '2 2) 2 ) '2 2)
(PROGN (COND nil (PROGN (COND nil '2) '2 nil) nil ) '2 nil)
(PROGN (COND t (PROGN (COND t '2) '2 t) t ) '2 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 '3) '3 1) 1 ) '3 1)
(PROGN (COND 2 (PROGN (COND 2 '3) '3 2) 2 ) '3 2)
(PROGN (COND nil (PROGN (COND nil '3) '3 nil) nil ) '3 nil)
(PROGN (COND t (PROGN (COND t '3) '3 t) t ) '3 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 '()) '() 1) 1 ) '() 1)
(PROGN (COND 2 (PROGN (COND 2 '()) '() 2) 2 ) '() 2)
(PROGN (COND nil (PROGN (COND nil '()) '() nil) nil ) '() nil)
(PROGN (COND t (PROGN (COND t '()) '() t) t ) '() t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(PROGN (COND 2 (PROGN (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(PROGN (COND nil (PROGN (COND nil '(())) '(()) nil) nil ) '(()) nil)
(PROGN (COND t (PROGN (COND t '(())) '(()) t) t ) '(()) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(PROGN (COND 2 (PROGN (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(PROGN (COND nil (PROGN (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(PROGN (COND t (PROGN (COND t '((()))) '((())) t) t ) '((())) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(PROGN (COND 2 (PROGN (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(PROGN (COND nil (PROGN (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(PROGN (COND t (PROGN (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 ,A) ,A 1) 1 ) ,A 1)
(PROGN (COND 2 (PROGN (COND 2 ,A) ,A 2) 2 ) ,A 2)
(PROGN (COND nil (PROGN (COND nil ,A) ,A nil) nil ) ,A nil)
(PROGN (COND t (PROGN (COND t ,A) ,A t) t ) ,A t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 ,1) ,1 1) 1 ) ,1 1)
(PROGN (COND 2 (PROGN (COND 2 ,1) ,1 2) 2 ) ,1 2)
(PROGN (COND nil (PROGN (COND nil ,1) ,1 nil) nil ) ,1 nil)
(PROGN (COND t (PROGN (COND t ,1) ,1 t) t ) ,1 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 ,()) ,() 1) 1 ) ,() 1)
(PROGN (COND 2 (PROGN (COND 2 ,()) ,() 2) 2 ) ,() 2)
(PROGN (COND nil (PROGN (COND nil ,()) ,() nil) nil ) ,() nil)
(PROGN (COND t (PROGN (COND t ,()) ,() t) t ) ,() t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(PROGN (COND 2 (PROGN (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(PROGN (COND nil (PROGN (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(PROGN (COND t (PROGN (COND t ,(())) ,(()) t) t ) ,(()) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'A) `'A 1) 1 ) `'A 1)
(PROGN (COND 2 (PROGN (COND 2 `'A) `'A 2) 2 ) `'A 2)
(PROGN (COND nil (PROGN (COND nil `'A) `'A nil) nil ) `'A nil)
(PROGN (COND t (PROGN (COND t `'A) `'A t) t ) `'A t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'B) `'B 1) 1 ) `'B 1)
(PROGN (COND 2 (PROGN (COND 2 `'B) `'B 2) 2 ) `'B 2)
(PROGN (COND nil (PROGN (COND nil `'B) `'B nil) nil ) `'B nil)
(PROGN (COND t (PROGN (COND t `'B) `'B t) t ) `'B t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'C) `'C 1) 1 ) `'C 1)
(PROGN (COND 2 (PROGN (COND 2 `'C) `'C 2) 2 ) `'C 2)
(PROGN (COND nil (PROGN (COND nil `'C) `'C nil) nil ) `'C nil)
(PROGN (COND t (PROGN (COND t `'C) `'C t) t ) `'C t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'1) `'1 1) 1 ) `'1 1)
(PROGN (COND 2 (PROGN (COND 2 `'1) `'1 2) 2 ) `'1 2)
(PROGN (COND nil (PROGN (COND nil `'1) `'1 nil) nil ) `'1 nil)
(PROGN (COND t (PROGN (COND t `'1) `'1 t) t ) `'1 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'2) `'2 1) 1 ) `'2 1)
(PROGN (COND 2 (PROGN (COND 2 `'2) `'2 2) 2 ) `'2 2)
(PROGN (COND nil (PROGN (COND nil `'2) `'2 nil) nil ) `'2 nil)
(PROGN (COND t (PROGN (COND t `'2) `'2 t) t ) `'2 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'3) `'3 1) 1 ) `'3 1)
(PROGN (COND 2 (PROGN (COND 2 `'3) `'3 2) 2 ) `'3 2)
(PROGN (COND nil (PROGN (COND nil `'3) `'3 nil) nil ) `'3 nil)
(PROGN (COND t (PROGN (COND t `'3) `'3 t) t ) `'3 t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'()) `'() 1) 1 ) `'() 1)
(PROGN (COND 2 (PROGN (COND 2 `'()) `'() 2) 2 ) `'() 2)
(PROGN (COND nil (PROGN (COND nil `'()) `'() nil) nil ) `'() nil)
(PROGN (COND t (PROGN (COND t `'()) `'() t) t ) `'() t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(PROGN (COND 2 (PROGN (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(PROGN (COND nil (PROGN (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(PROGN (COND t (PROGN (COND t `'(())) `'(()) t) t ) `'(()) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(PROGN (COND 2 (PROGN (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(PROGN (COND nil (PROGN (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(PROGN (COND t (PROGN (COND t `'((()))) `'((())) t) t ) `'((())) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(PROGN (COND 1 (PROGN (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(PROGN (COND 2 (PROGN (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(PROGN (COND nil (PROGN (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(PROGN (COND t (PROGN (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(PROGN (COND (cons t t) (PROGN (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(PROGN (COND (cons nil t) (PROGN (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(PROGN (COND (cons nil nil) (PROGN (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(PROGN (COND (cons 0 0) (PROGN (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(PROGN (COND (cons 1 1) (PROGN (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(PROGN (COND (list 1 2 3) (PROGN (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(PROGN (COND (list (cons 1 1 ) ) (PROGN (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 T) T 1) 1 ) T 1)
(QUOTE (COND 2 (QUOTE (COND 2 T) T 2) 2 ) T 2)
(QUOTE (COND nil (QUOTE (COND nil T) T nil) nil ) T nil)
(QUOTE (COND t (QUOTE (COND t T) T t) t ) T t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 NIL) NIL 1) 1 ) NIL 1)
(QUOTE (COND 2 (QUOTE (COND 2 NIL) NIL 2) 2 ) NIL 2)
(QUOTE (COND nil (QUOTE (COND nil NIL) NIL nil) nil ) NIL nil)
(QUOTE (COND t (QUOTE (COND t NIL) NIL t) t ) NIL t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 A) A 1) 1 ) A 1)
(QUOTE (COND 2 (QUOTE (COND 2 A) A 2) 2 ) A 2)
(QUOTE (COND nil (QUOTE (COND nil A) A nil) nil ) A nil)
(QUOTE (COND t (QUOTE (COND t A) A t) t ) A t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 B) B 1) 1 ) B 1)
(QUOTE (COND 2 (QUOTE (COND 2 B) B 2) 2 ) B 2)
(QUOTE (COND nil (QUOTE (COND nil B) B nil) nil ) B nil)
(QUOTE (COND t (QUOTE (COND t B) B t) t ) B t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 C) C 1) 1 ) C 1)
(QUOTE (COND 2 (QUOTE (COND 2 C) C 2) 2 ) C 2)
(QUOTE (COND nil (QUOTE (COND nil C) C nil) nil ) C nil)
(QUOTE (COND t (QUOTE (COND t C) C t) t ) C t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 1) 1 1) 1 ) 1 1)
(QUOTE (COND 2 (QUOTE (COND 2 1) 1 2) 2 ) 1 2)
(QUOTE (COND nil (QUOTE (COND nil 1) 1 nil) nil ) 1 nil)
(QUOTE (COND t (QUOTE (COND t 1) 1 t) t ) 1 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 2) 2 1) 1 ) 2 1)
(QUOTE (COND 2 (QUOTE (COND 2 2) 2 2) 2 ) 2 2)
(QUOTE (COND nil (QUOTE (COND nil 2) 2 nil) nil ) 2 nil)
(QUOTE (COND t (QUOTE (COND t 2) 2 t) t ) 2 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 3) 3 1) 1 ) 3 1)
(QUOTE (COND 2 (QUOTE (COND 2 3) 3 2) 2 ) 3 2)
(QUOTE (COND nil (QUOTE (COND nil 3) 3 nil) nil ) 3 nil)
(QUOTE (COND t (QUOTE (COND t 3) 3 t) t ) 3 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 ()) () 1) 1 ) () 1)
(QUOTE (COND 2 (QUOTE (COND 2 ()) () 2) 2 ) () 2)
(QUOTE (COND nil (QUOTE (COND nil ()) () nil) nil ) () nil)
(QUOTE (COND t (QUOTE (COND t ()) () t) t ) () t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 (())) (()) 1) 1 ) (()) 1)
(QUOTE (COND 2 (QUOTE (COND 2 (())) (()) 2) 2 ) (()) 2)
(QUOTE (COND nil (QUOTE (COND nil (())) (()) nil) nil ) (()) nil)
(QUOTE (COND t (QUOTE (COND t (())) (()) t) t ) (()) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(QUOTE (COND 2 (QUOTE (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(QUOTE (COND nil (QUOTE (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(QUOTE (COND t (QUOTE (COND t ((()))) ((())) t) t ) ((())) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(QUOTE (COND 2 (QUOTE (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(QUOTE (COND nil (QUOTE (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(QUOTE (COND t (QUOTE (COND t (((())))) (((()))) t) t ) (((()))) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 'A) 'A 1) 1 ) 'A 1)
(QUOTE (COND 2 (QUOTE (COND 2 'A) 'A 2) 2 ) 'A 2)
(QUOTE (COND nil (QUOTE (COND nil 'A) 'A nil) nil ) 'A nil)
(QUOTE (COND t (QUOTE (COND t 'A) 'A t) t ) 'A t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 'B) 'B 1) 1 ) 'B 1)
(QUOTE (COND 2 (QUOTE (COND 2 'B) 'B 2) 2 ) 'B 2)
(QUOTE (COND nil (QUOTE (COND nil 'B) 'B nil) nil ) 'B nil)
(QUOTE (COND t (QUOTE (COND t 'B) 'B t) t ) 'B t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 'C) 'C 1) 1 ) 'C 1)
(QUOTE (COND 2 (QUOTE (COND 2 'C) 'C 2) 2 ) 'C 2)
(QUOTE (COND nil (QUOTE (COND nil 'C) 'C nil) nil ) 'C nil)
(QUOTE (COND t (QUOTE (COND t 'C) 'C t) t ) 'C t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 '1) '1 1) 1 ) '1 1)
(QUOTE (COND 2 (QUOTE (COND 2 '1) '1 2) 2 ) '1 2)
(QUOTE (COND nil (QUOTE (COND nil '1) '1 nil) nil ) '1 nil)
(QUOTE (COND t (QUOTE (COND t '1) '1 t) t ) '1 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 '2) '2 1) 1 ) '2 1)
(QUOTE (COND 2 (QUOTE (COND 2 '2) '2 2) 2 ) '2 2)
(QUOTE (COND nil (QUOTE (COND nil '2) '2 nil) nil ) '2 nil)
(QUOTE (COND t (QUOTE (COND t '2) '2 t) t ) '2 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 '3) '3 1) 1 ) '3 1)
(QUOTE (COND 2 (QUOTE (COND 2 '3) '3 2) 2 ) '3 2)
(QUOTE (COND nil (QUOTE (COND nil '3) '3 nil) nil ) '3 nil)
(QUOTE (COND t (QUOTE (COND t '3) '3 t) t ) '3 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 '()) '() 1) 1 ) '() 1)
(QUOTE (COND 2 (QUOTE (COND 2 '()) '() 2) 2 ) '() 2)
(QUOTE (COND nil (QUOTE (COND nil '()) '() nil) nil ) '() nil)
(QUOTE (COND t (QUOTE (COND t '()) '() t) t ) '() t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(QUOTE (COND 2 (QUOTE (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(QUOTE (COND nil (QUOTE (COND nil '(())) '(()) nil) nil ) '(()) nil)
(QUOTE (COND t (QUOTE (COND t '(())) '(()) t) t ) '(()) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(QUOTE (COND 2 (QUOTE (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(QUOTE (COND nil (QUOTE (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(QUOTE (COND t (QUOTE (COND t '((()))) '((())) t) t ) '((())) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(QUOTE (COND 2 (QUOTE (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(QUOTE (COND nil (QUOTE (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(QUOTE (COND t (QUOTE (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 ,A) ,A 1) 1 ) ,A 1)
(QUOTE (COND 2 (QUOTE (COND 2 ,A) ,A 2) 2 ) ,A 2)
(QUOTE (COND nil (QUOTE (COND nil ,A) ,A nil) nil ) ,A nil)
(QUOTE (COND t (QUOTE (COND t ,A) ,A t) t ) ,A t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 ,1) ,1 1) 1 ) ,1 1)
(QUOTE (COND 2 (QUOTE (COND 2 ,1) ,1 2) 2 ) ,1 2)
(QUOTE (COND nil (QUOTE (COND nil ,1) ,1 nil) nil ) ,1 nil)
(QUOTE (COND t (QUOTE (COND t ,1) ,1 t) t ) ,1 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 ,()) ,() 1) 1 ) ,() 1)
(QUOTE (COND 2 (QUOTE (COND 2 ,()) ,() 2) 2 ) ,() 2)
(QUOTE (COND nil (QUOTE (COND nil ,()) ,() nil) nil ) ,() nil)
(QUOTE (COND t (QUOTE (COND t ,()) ,() t) t ) ,() t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(QUOTE (COND 2 (QUOTE (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(QUOTE (COND nil (QUOTE (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(QUOTE (COND t (QUOTE (COND t ,(())) ,(()) t) t ) ,(()) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'A) `'A 1) 1 ) `'A 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'A) `'A 2) 2 ) `'A 2)
(QUOTE (COND nil (QUOTE (COND nil `'A) `'A nil) nil ) `'A nil)
(QUOTE (COND t (QUOTE (COND t `'A) `'A t) t ) `'A t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'B) `'B 1) 1 ) `'B 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'B) `'B 2) 2 ) `'B 2)
(QUOTE (COND nil (QUOTE (COND nil `'B) `'B nil) nil ) `'B nil)
(QUOTE (COND t (QUOTE (COND t `'B) `'B t) t ) `'B t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'C) `'C 1) 1 ) `'C 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'C) `'C 2) 2 ) `'C 2)
(QUOTE (COND nil (QUOTE (COND nil `'C) `'C nil) nil ) `'C nil)
(QUOTE (COND t (QUOTE (COND t `'C) `'C t) t ) `'C t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'1) `'1 1) 1 ) `'1 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'1) `'1 2) 2 ) `'1 2)
(QUOTE (COND nil (QUOTE (COND nil `'1) `'1 nil) nil ) `'1 nil)
(QUOTE (COND t (QUOTE (COND t `'1) `'1 t) t ) `'1 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'2) `'2 1) 1 ) `'2 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'2) `'2 2) 2 ) `'2 2)
(QUOTE (COND nil (QUOTE (COND nil `'2) `'2 nil) nil ) `'2 nil)
(QUOTE (COND t (QUOTE (COND t `'2) `'2 t) t ) `'2 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'3) `'3 1) 1 ) `'3 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'3) `'3 2) 2 ) `'3 2)
(QUOTE (COND nil (QUOTE (COND nil `'3) `'3 nil) nil ) `'3 nil)
(QUOTE (COND t (QUOTE (COND t `'3) `'3 t) t ) `'3 t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'()) `'() 1) 1 ) `'() 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'()) `'() 2) 2 ) `'() 2)
(QUOTE (COND nil (QUOTE (COND nil `'()) `'() nil) nil ) `'() nil)
(QUOTE (COND t (QUOTE (COND t `'()) `'() t) t ) `'() t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(QUOTE (COND nil (QUOTE (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(QUOTE (COND t (QUOTE (COND t `'(())) `'(()) t) t ) `'(()) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(QUOTE (COND nil (QUOTE (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(QUOTE (COND t (QUOTE (COND t `'((()))) `'((())) t) t ) `'((())) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(QUOTE (COND 1 (QUOTE (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(QUOTE (COND 2 (QUOTE (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(QUOTE (COND nil (QUOTE (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(QUOTE (COND t (QUOTE (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(QUOTE (COND (cons t t) (QUOTE (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(QUOTE (COND (cons nil t) (QUOTE (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(QUOTE (COND (cons nil nil) (QUOTE (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(QUOTE (COND (cons 0 0) (QUOTE (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(QUOTE (COND (cons 1 1) (QUOTE (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(QUOTE (COND (list 1 2 3) (QUOTE (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(QUOTE (COND (list (cons 1 1 ) ) (QUOTE (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 T) T 1) 1 ) T 1)
(SUBST (COND 2 (SUBST (COND 2 T) T 2) 2 ) T 2)
(SUBST (COND nil (SUBST (COND nil T) T nil) nil ) T nil)
(SUBST (COND t (SUBST (COND t T) T t) t ) T t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 NIL) NIL 1) 1 ) NIL 1)
(SUBST (COND 2 (SUBST (COND 2 NIL) NIL 2) 2 ) NIL 2)
(SUBST (COND nil (SUBST (COND nil NIL) NIL nil) nil ) NIL nil)
(SUBST (COND t (SUBST (COND t NIL) NIL t) t ) NIL t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 A) A 1) 1 ) A 1)
(SUBST (COND 2 (SUBST (COND 2 A) A 2) 2 ) A 2)
(SUBST (COND nil (SUBST (COND nil A) A nil) nil ) A nil)
(SUBST (COND t (SUBST (COND t A) A t) t ) A t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 B) B 1) 1 ) B 1)
(SUBST (COND 2 (SUBST (COND 2 B) B 2) 2 ) B 2)
(SUBST (COND nil (SUBST (COND nil B) B nil) nil ) B nil)
(SUBST (COND t (SUBST (COND t B) B t) t ) B t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 C) C 1) 1 ) C 1)
(SUBST (COND 2 (SUBST (COND 2 C) C 2) 2 ) C 2)
(SUBST (COND nil (SUBST (COND nil C) C nil) nil ) C nil)
(SUBST (COND t (SUBST (COND t C) C t) t ) C t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 1) 1 1) 1 ) 1 1)
(SUBST (COND 2 (SUBST (COND 2 1) 1 2) 2 ) 1 2)
(SUBST (COND nil (SUBST (COND nil 1) 1 nil) nil ) 1 nil)
(SUBST (COND t (SUBST (COND t 1) 1 t) t ) 1 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 2) 2 1) 1 ) 2 1)
(SUBST (COND 2 (SUBST (COND 2 2) 2 2) 2 ) 2 2)
(SUBST (COND nil (SUBST (COND nil 2) 2 nil) nil ) 2 nil)
(SUBST (COND t (SUBST (COND t 2) 2 t) t ) 2 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 3) 3 1) 1 ) 3 1)
(SUBST (COND 2 (SUBST (COND 2 3) 3 2) 2 ) 3 2)
(SUBST (COND nil (SUBST (COND nil 3) 3 nil) nil ) 3 nil)
(SUBST (COND t (SUBST (COND t 3) 3 t) t ) 3 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 ()) () 1) 1 ) () 1)
(SUBST (COND 2 (SUBST (COND 2 ()) () 2) 2 ) () 2)
(SUBST (COND nil (SUBST (COND nil ()) () nil) nil ) () nil)
(SUBST (COND t (SUBST (COND t ()) () t) t ) () t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 (())) (()) 1) 1 ) (()) 1)
(SUBST (COND 2 (SUBST (COND 2 (())) (()) 2) 2 ) (()) 2)
(SUBST (COND nil (SUBST (COND nil (())) (()) nil) nil ) (()) nil)
(SUBST (COND t (SUBST (COND t (())) (()) t) t ) (()) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(SUBST (COND 2 (SUBST (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(SUBST (COND nil (SUBST (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(SUBST (COND t (SUBST (COND t ((()))) ((())) t) t ) ((())) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(SUBST (COND 2 (SUBST (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(SUBST (COND nil (SUBST (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(SUBST (COND t (SUBST (COND t (((())))) (((()))) t) t ) (((()))) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 'A) 'A 1) 1 ) 'A 1)
(SUBST (COND 2 (SUBST (COND 2 'A) 'A 2) 2 ) 'A 2)
(SUBST (COND nil (SUBST (COND nil 'A) 'A nil) nil ) 'A nil)
(SUBST (COND t (SUBST (COND t 'A) 'A t) t ) 'A t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 'B) 'B 1) 1 ) 'B 1)
(SUBST (COND 2 (SUBST (COND 2 'B) 'B 2) 2 ) 'B 2)
(SUBST (COND nil (SUBST (COND nil 'B) 'B nil) nil ) 'B nil)
(SUBST (COND t (SUBST (COND t 'B) 'B t) t ) 'B t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 'C) 'C 1) 1 ) 'C 1)
(SUBST (COND 2 (SUBST (COND 2 'C) 'C 2) 2 ) 'C 2)
(SUBST (COND nil (SUBST (COND nil 'C) 'C nil) nil ) 'C nil)
(SUBST (COND t (SUBST (COND t 'C) 'C t) t ) 'C t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 '1) '1 1) 1 ) '1 1)
(SUBST (COND 2 (SUBST (COND 2 '1) '1 2) 2 ) '1 2)
(SUBST (COND nil (SUBST (COND nil '1) '1 nil) nil ) '1 nil)
(SUBST (COND t (SUBST (COND t '1) '1 t) t ) '1 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 '2) '2 1) 1 ) '2 1)
(SUBST (COND 2 (SUBST (COND 2 '2) '2 2) 2 ) '2 2)
(SUBST (COND nil (SUBST (COND nil '2) '2 nil) nil ) '2 nil)
(SUBST (COND t (SUBST (COND t '2) '2 t) t ) '2 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 '3) '3 1) 1 ) '3 1)
(SUBST (COND 2 (SUBST (COND 2 '3) '3 2) 2 ) '3 2)
(SUBST (COND nil (SUBST (COND nil '3) '3 nil) nil ) '3 nil)
(SUBST (COND t (SUBST (COND t '3) '3 t) t ) '3 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 '()) '() 1) 1 ) '() 1)
(SUBST (COND 2 (SUBST (COND 2 '()) '() 2) 2 ) '() 2)
(SUBST (COND nil (SUBST (COND nil '()) '() nil) nil ) '() nil)
(SUBST (COND t (SUBST (COND t '()) '() t) t ) '() t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(SUBST (COND 2 (SUBST (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(SUBST (COND nil (SUBST (COND nil '(())) '(()) nil) nil ) '(()) nil)
(SUBST (COND t (SUBST (COND t '(())) '(()) t) t ) '(()) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(SUBST (COND 2 (SUBST (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(SUBST (COND nil (SUBST (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(SUBST (COND t (SUBST (COND t '((()))) '((())) t) t ) '((())) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(SUBST (COND 2 (SUBST (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(SUBST (COND nil (SUBST (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(SUBST (COND t (SUBST (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 ,A) ,A 1) 1 ) ,A 1)
(SUBST (COND 2 (SUBST (COND 2 ,A) ,A 2) 2 ) ,A 2)
(SUBST (COND nil (SUBST (COND nil ,A) ,A nil) nil ) ,A nil)
(SUBST (COND t (SUBST (COND t ,A) ,A t) t ) ,A t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 ,1) ,1 1) 1 ) ,1 1)
(SUBST (COND 2 (SUBST (COND 2 ,1) ,1 2) 2 ) ,1 2)
(SUBST (COND nil (SUBST (COND nil ,1) ,1 nil) nil ) ,1 nil)
(SUBST (COND t (SUBST (COND t ,1) ,1 t) t ) ,1 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 ,()) ,() 1) 1 ) ,() 1)
(SUBST (COND 2 (SUBST (COND 2 ,()) ,() 2) 2 ) ,() 2)
(SUBST (COND nil (SUBST (COND nil ,()) ,() nil) nil ) ,() nil)
(SUBST (COND t (SUBST (COND t ,()) ,() t) t ) ,() t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(SUBST (COND 2 (SUBST (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(SUBST (COND nil (SUBST (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(SUBST (COND t (SUBST (COND t ,(())) ,(()) t) t ) ,(()) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'A) `'A 1) 1 ) `'A 1)
(SUBST (COND 2 (SUBST (COND 2 `'A) `'A 2) 2 ) `'A 2)
(SUBST (COND nil (SUBST (COND nil `'A) `'A nil) nil ) `'A nil)
(SUBST (COND t (SUBST (COND t `'A) `'A t) t ) `'A t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'B) `'B 1) 1 ) `'B 1)
(SUBST (COND 2 (SUBST (COND 2 `'B) `'B 2) 2 ) `'B 2)
(SUBST (COND nil (SUBST (COND nil `'B) `'B nil) nil ) `'B nil)
(SUBST (COND t (SUBST (COND t `'B) `'B t) t ) `'B t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'C) `'C 1) 1 ) `'C 1)
(SUBST (COND 2 (SUBST (COND 2 `'C) `'C 2) 2 ) `'C 2)
(SUBST (COND nil (SUBST (COND nil `'C) `'C nil) nil ) `'C nil)
(SUBST (COND t (SUBST (COND t `'C) `'C t) t ) `'C t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'1) `'1 1) 1 ) `'1 1)
(SUBST (COND 2 (SUBST (COND 2 `'1) `'1 2) 2 ) `'1 2)
(SUBST (COND nil (SUBST (COND nil `'1) `'1 nil) nil ) `'1 nil)
(SUBST (COND t (SUBST (COND t `'1) `'1 t) t ) `'1 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'2) `'2 1) 1 ) `'2 1)
(SUBST (COND 2 (SUBST (COND 2 `'2) `'2 2) 2 ) `'2 2)
(SUBST (COND nil (SUBST (COND nil `'2) `'2 nil) nil ) `'2 nil)
(SUBST (COND t (SUBST (COND t `'2) `'2 t) t ) `'2 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'3) `'3 1) 1 ) `'3 1)
(SUBST (COND 2 (SUBST (COND 2 `'3) `'3 2) 2 ) `'3 2)
(SUBST (COND nil (SUBST (COND nil `'3) `'3 nil) nil ) `'3 nil)
(SUBST (COND t (SUBST (COND t `'3) `'3 t) t ) `'3 t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'()) `'() 1) 1 ) `'() 1)
(SUBST (COND 2 (SUBST (COND 2 `'()) `'() 2) 2 ) `'() 2)
(SUBST (COND nil (SUBST (COND nil `'()) `'() nil) nil ) `'() nil)
(SUBST (COND t (SUBST (COND t `'()) `'() t) t ) `'() t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(SUBST (COND 2 (SUBST (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(SUBST (COND nil (SUBST (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(SUBST (COND t (SUBST (COND t `'(())) `'(()) t) t ) `'(()) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(SUBST (COND 2 (SUBST (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(SUBST (COND nil (SUBST (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(SUBST (COND t (SUBST (COND t `'((()))) `'((())) t) t ) `'((())) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(SUBST (COND 1 (SUBST (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(SUBST (COND 2 (SUBST (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(SUBST (COND nil (SUBST (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(SUBST (COND t (SUBST (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(SUBST (COND (cons t t) (SUBST (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(SUBST (COND (cons nil t) (SUBST (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(SUBST (COND (cons nil nil) (SUBST (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(SUBST (COND (cons 0 0) (SUBST (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(SUBST (COND (cons 1 1) (SUBST (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(SUBST (COND (list 1 2 3) (SUBST (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(SUBST (COND (list (cons 1 1 ) ) (SUBST (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 T) T 1) 1 ) T 1)
(UNLESS (COND 2 (UNLESS (COND 2 T) T 2) 2 ) T 2)
(UNLESS (COND nil (UNLESS (COND nil T) T nil) nil ) T nil)
(UNLESS (COND t (UNLESS (COND t T) T t) t ) T t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 NIL) NIL 1) 1 ) NIL 1)
(UNLESS (COND 2 (UNLESS (COND 2 NIL) NIL 2) 2 ) NIL 2)
(UNLESS (COND nil (UNLESS (COND nil NIL) NIL nil) nil ) NIL nil)
(UNLESS (COND t (UNLESS (COND t NIL) NIL t) t ) NIL t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 A) A 1) 1 ) A 1)
(UNLESS (COND 2 (UNLESS (COND 2 A) A 2) 2 ) A 2)
(UNLESS (COND nil (UNLESS (COND nil A) A nil) nil ) A nil)
(UNLESS (COND t (UNLESS (COND t A) A t) t ) A t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 B) B 1) 1 ) B 1)
(UNLESS (COND 2 (UNLESS (COND 2 B) B 2) 2 ) B 2)
(UNLESS (COND nil (UNLESS (COND nil B) B nil) nil ) B nil)
(UNLESS (COND t (UNLESS (COND t B) B t) t ) B t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 C) C 1) 1 ) C 1)
(UNLESS (COND 2 (UNLESS (COND 2 C) C 2) 2 ) C 2)
(UNLESS (COND nil (UNLESS (COND nil C) C nil) nil ) C nil)
(UNLESS (COND t (UNLESS (COND t C) C t) t ) C t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 1) 1 1) 1 ) 1 1)
(UNLESS (COND 2 (UNLESS (COND 2 1) 1 2) 2 ) 1 2)
(UNLESS (COND nil (UNLESS (COND nil 1) 1 nil) nil ) 1 nil)
(UNLESS (COND t (UNLESS (COND t 1) 1 t) t ) 1 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 2) 2 1) 1 ) 2 1)
(UNLESS (COND 2 (UNLESS (COND 2 2) 2 2) 2 ) 2 2)
(UNLESS (COND nil (UNLESS (COND nil 2) 2 nil) nil ) 2 nil)
(UNLESS (COND t (UNLESS (COND t 2) 2 t) t ) 2 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 3) 3 1) 1 ) 3 1)
(UNLESS (COND 2 (UNLESS (COND 2 3) 3 2) 2 ) 3 2)
(UNLESS (COND nil (UNLESS (COND nil 3) 3 nil) nil ) 3 nil)
(UNLESS (COND t (UNLESS (COND t 3) 3 t) t ) 3 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 ()) () 1) 1 ) () 1)
(UNLESS (COND 2 (UNLESS (COND 2 ()) () 2) 2 ) () 2)
(UNLESS (COND nil (UNLESS (COND nil ()) () nil) nil ) () nil)
(UNLESS (COND t (UNLESS (COND t ()) () t) t ) () t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 (())) (()) 1) 1 ) (()) 1)
(UNLESS (COND 2 (UNLESS (COND 2 (())) (()) 2) 2 ) (()) 2)
(UNLESS (COND nil (UNLESS (COND nil (())) (()) nil) nil ) (()) nil)
(UNLESS (COND t (UNLESS (COND t (())) (()) t) t ) (()) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(UNLESS (COND 2 (UNLESS (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(UNLESS (COND nil (UNLESS (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(UNLESS (COND t (UNLESS (COND t ((()))) ((())) t) t ) ((())) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(UNLESS (COND 2 (UNLESS (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(UNLESS (COND nil (UNLESS (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(UNLESS (COND t (UNLESS (COND t (((())))) (((()))) t) t ) (((()))) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 'A) 'A 1) 1 ) 'A 1)
(UNLESS (COND 2 (UNLESS (COND 2 'A) 'A 2) 2 ) 'A 2)
(UNLESS (COND nil (UNLESS (COND nil 'A) 'A nil) nil ) 'A nil)
(UNLESS (COND t (UNLESS (COND t 'A) 'A t) t ) 'A t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 'B) 'B 1) 1 ) 'B 1)
(UNLESS (COND 2 (UNLESS (COND 2 'B) 'B 2) 2 ) 'B 2)
(UNLESS (COND nil (UNLESS (COND nil 'B) 'B nil) nil ) 'B nil)
(UNLESS (COND t (UNLESS (COND t 'B) 'B t) t ) 'B t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 'C) 'C 1) 1 ) 'C 1)
(UNLESS (COND 2 (UNLESS (COND 2 'C) 'C 2) 2 ) 'C 2)
(UNLESS (COND nil (UNLESS (COND nil 'C) 'C nil) nil ) 'C nil)
(UNLESS (COND t (UNLESS (COND t 'C) 'C t) t ) 'C t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 '1) '1 1) 1 ) '1 1)
(UNLESS (COND 2 (UNLESS (COND 2 '1) '1 2) 2 ) '1 2)
(UNLESS (COND nil (UNLESS (COND nil '1) '1 nil) nil ) '1 nil)
(UNLESS (COND t (UNLESS (COND t '1) '1 t) t ) '1 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 '2) '2 1) 1 ) '2 1)
(UNLESS (COND 2 (UNLESS (COND 2 '2) '2 2) 2 ) '2 2)
(UNLESS (COND nil (UNLESS (COND nil '2) '2 nil) nil ) '2 nil)
(UNLESS (COND t (UNLESS (COND t '2) '2 t) t ) '2 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 '3) '3 1) 1 ) '3 1)
(UNLESS (COND 2 (UNLESS (COND 2 '3) '3 2) 2 ) '3 2)
(UNLESS (COND nil (UNLESS (COND nil '3) '3 nil) nil ) '3 nil)
(UNLESS (COND t (UNLESS (COND t '3) '3 t) t ) '3 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 '()) '() 1) 1 ) '() 1)
(UNLESS (COND 2 (UNLESS (COND 2 '()) '() 2) 2 ) '() 2)
(UNLESS (COND nil (UNLESS (COND nil '()) '() nil) nil ) '() nil)
(UNLESS (COND t (UNLESS (COND t '()) '() t) t ) '() t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(UNLESS (COND 2 (UNLESS (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(UNLESS (COND nil (UNLESS (COND nil '(())) '(()) nil) nil ) '(()) nil)
(UNLESS (COND t (UNLESS (COND t '(())) '(()) t) t ) '(()) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(UNLESS (COND 2 (UNLESS (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(UNLESS (COND nil (UNLESS (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(UNLESS (COND t (UNLESS (COND t '((()))) '((())) t) t ) '((())) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(UNLESS (COND 2 (UNLESS (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(UNLESS (COND nil (UNLESS (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(UNLESS (COND t (UNLESS (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 ,A) ,A 1) 1 ) ,A 1)
(UNLESS (COND 2 (UNLESS (COND 2 ,A) ,A 2) 2 ) ,A 2)
(UNLESS (COND nil (UNLESS (COND nil ,A) ,A nil) nil ) ,A nil)
(UNLESS (COND t (UNLESS (COND t ,A) ,A t) t ) ,A t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 ,1) ,1 1) 1 ) ,1 1)
(UNLESS (COND 2 (UNLESS (COND 2 ,1) ,1 2) 2 ) ,1 2)
(UNLESS (COND nil (UNLESS (COND nil ,1) ,1 nil) nil ) ,1 nil)
(UNLESS (COND t (UNLESS (COND t ,1) ,1 t) t ) ,1 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 ,()) ,() 1) 1 ) ,() 1)
(UNLESS (COND 2 (UNLESS (COND 2 ,()) ,() 2) 2 ) ,() 2)
(UNLESS (COND nil (UNLESS (COND nil ,()) ,() nil) nil ) ,() nil)
(UNLESS (COND t (UNLESS (COND t ,()) ,() t) t ) ,() t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(UNLESS (COND 2 (UNLESS (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(UNLESS (COND nil (UNLESS (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(UNLESS (COND t (UNLESS (COND t ,(())) ,(()) t) t ) ,(()) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'A) `'A 1) 1 ) `'A 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'A) `'A 2) 2 ) `'A 2)
(UNLESS (COND nil (UNLESS (COND nil `'A) `'A nil) nil ) `'A nil)
(UNLESS (COND t (UNLESS (COND t `'A) `'A t) t ) `'A t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'B) `'B 1) 1 ) `'B 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'B) `'B 2) 2 ) `'B 2)
(UNLESS (COND nil (UNLESS (COND nil `'B) `'B nil) nil ) `'B nil)
(UNLESS (COND t (UNLESS (COND t `'B) `'B t) t ) `'B t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'C) `'C 1) 1 ) `'C 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'C) `'C 2) 2 ) `'C 2)
(UNLESS (COND nil (UNLESS (COND nil `'C) `'C nil) nil ) `'C nil)
(UNLESS (COND t (UNLESS (COND t `'C) `'C t) t ) `'C t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'1) `'1 1) 1 ) `'1 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'1) `'1 2) 2 ) `'1 2)
(UNLESS (COND nil (UNLESS (COND nil `'1) `'1 nil) nil ) `'1 nil)
(UNLESS (COND t (UNLESS (COND t `'1) `'1 t) t ) `'1 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'2) `'2 1) 1 ) `'2 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'2) `'2 2) 2 ) `'2 2)
(UNLESS (COND nil (UNLESS (COND nil `'2) `'2 nil) nil ) `'2 nil)
(UNLESS (COND t (UNLESS (COND t `'2) `'2 t) t ) `'2 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'3) `'3 1) 1 ) `'3 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'3) `'3 2) 2 ) `'3 2)
(UNLESS (COND nil (UNLESS (COND nil `'3) `'3 nil) nil ) `'3 nil)
(UNLESS (COND t (UNLESS (COND t `'3) `'3 t) t ) `'3 t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'()) `'() 1) 1 ) `'() 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'()) `'() 2) 2 ) `'() 2)
(UNLESS (COND nil (UNLESS (COND nil `'()) `'() nil) nil ) `'() nil)
(UNLESS (COND t (UNLESS (COND t `'()) `'() t) t ) `'() t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(UNLESS (COND nil (UNLESS (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(UNLESS (COND t (UNLESS (COND t `'(())) `'(()) t) t ) `'(()) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(UNLESS (COND nil (UNLESS (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(UNLESS (COND t (UNLESS (COND t `'((()))) `'((())) t) t ) `'((())) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(UNLESS (COND 1 (UNLESS (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(UNLESS (COND 2 (UNLESS (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(UNLESS (COND nil (UNLESS (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(UNLESS (COND t (UNLESS (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(UNLESS (COND (cons t t) (UNLESS (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(UNLESS (COND (cons nil t) (UNLESS (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(UNLESS (COND (cons nil nil) (UNLESS (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(UNLESS (COND (cons 0 0) (UNLESS (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(UNLESS (COND (cons 1 1) (UNLESS (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(UNLESS (COND (list 1 2 3) (UNLESS (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(UNLESS (COND (list (cons 1 1 ) ) (UNLESS (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 T) T 1) 1 ) T 1)
(XOR (COND 2 (XOR (COND 2 T) T 2) 2 ) T 2)
(XOR (COND nil (XOR (COND nil T) T nil) nil ) T nil)
(XOR (COND t (XOR (COND t T) T t) t ) T t)
(XOR (COND (cons t t) (XOR (COND (cons t t) T) T (cons t t)) (cons t t) ) T (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) T) T (cons nil t)) (cons nil t) ) T (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) T) T (cons nil nil)) (cons nil nil) ) T (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) T) T (cons 0 0)) (cons 0 0) ) T (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) T) T (cons 1 1)) (cons 1 1) ) T (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) T) T (list 1 2 3)) (list 1 2 3) ) T (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) T) T (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) T (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 NIL) NIL 1) 1 ) NIL 1)
(XOR (COND 2 (XOR (COND 2 NIL) NIL 2) 2 ) NIL 2)
(XOR (COND nil (XOR (COND nil NIL) NIL nil) nil ) NIL nil)
(XOR (COND t (XOR (COND t NIL) NIL t) t ) NIL t)
(XOR (COND (cons t t) (XOR (COND (cons t t) NIL) NIL (cons t t)) (cons t t) ) NIL (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) NIL) NIL (cons nil t)) (cons nil t) ) NIL (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) NIL) NIL (cons nil nil)) (cons nil nil) ) NIL (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) NIL) NIL (cons 0 0)) (cons 0 0) ) NIL (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) NIL) NIL (cons 1 1)) (cons 1 1) ) NIL (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) NIL) NIL (list 1 2 3)) (list 1 2 3) ) NIL (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) NIL) NIL (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) NIL (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 A) A 1) 1 ) A 1)
(XOR (COND 2 (XOR (COND 2 A) A 2) 2 ) A 2)
(XOR (COND nil (XOR (COND nil A) A nil) nil ) A nil)
(XOR (COND t (XOR (COND t A) A t) t ) A t)
(XOR (COND (cons t t) (XOR (COND (cons t t) A) A (cons t t)) (cons t t) ) A (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) A) A (cons nil t)) (cons nil t) ) A (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) A) A (cons nil nil)) (cons nil nil) ) A (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) A) A (cons 0 0)) (cons 0 0) ) A (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) A) A (cons 1 1)) (cons 1 1) ) A (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) A) A (list 1 2 3)) (list 1 2 3) ) A (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) A) A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) A (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 B) B 1) 1 ) B 1)
(XOR (COND 2 (XOR (COND 2 B) B 2) 2 ) B 2)
(XOR (COND nil (XOR (COND nil B) B nil) nil ) B nil)
(XOR (COND t (XOR (COND t B) B t) t ) B t)
(XOR (COND (cons t t) (XOR (COND (cons t t) B) B (cons t t)) (cons t t) ) B (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) B) B (cons nil t)) (cons nil t) ) B (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) B) B (cons nil nil)) (cons nil nil) ) B (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) B) B (cons 0 0)) (cons 0 0) ) B (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) B) B (cons 1 1)) (cons 1 1) ) B (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) B) B (list 1 2 3)) (list 1 2 3) ) B (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) B) B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) B (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 C) C 1) 1 ) C 1)
(XOR (COND 2 (XOR (COND 2 C) C 2) 2 ) C 2)
(XOR (COND nil (XOR (COND nil C) C nil) nil ) C nil)
(XOR (COND t (XOR (COND t C) C t) t ) C t)
(XOR (COND (cons t t) (XOR (COND (cons t t) C) C (cons t t)) (cons t t) ) C (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) C) C (cons nil t)) (cons nil t) ) C (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) C) C (cons nil nil)) (cons nil nil) ) C (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) C) C (cons 0 0)) (cons 0 0) ) C (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) C) C (cons 1 1)) (cons 1 1) ) C (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) C) C (list 1 2 3)) (list 1 2 3) ) C (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) C) C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) C (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 1) 1 1) 1 ) 1 1)
(XOR (COND 2 (XOR (COND 2 1) 1 2) 2 ) 1 2)
(XOR (COND nil (XOR (COND nil 1) 1 nil) nil ) 1 nil)
(XOR (COND t (XOR (COND t 1) 1 t) t ) 1 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) 1) 1 (cons t t)) (cons t t) ) 1 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) 1) 1 (cons nil t)) (cons nil t) ) 1 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) 1) 1 (cons nil nil)) (cons nil nil) ) 1 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) 1) 1 (cons 0 0)) (cons 0 0) ) 1 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) 1) 1 (cons 1 1)) (cons 1 1) ) 1 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) 1) 1 (list 1 2 3)) (list 1 2 3) ) 1 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) 1) 1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 1 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 2) 2 1) 1 ) 2 1)
(XOR (COND 2 (XOR (COND 2 2) 2 2) 2 ) 2 2)
(XOR (COND nil (XOR (COND nil 2) 2 nil) nil ) 2 nil)
(XOR (COND t (XOR (COND t 2) 2 t) t ) 2 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) 2) 2 (cons t t)) (cons t t) ) 2 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) 2) 2 (cons nil t)) (cons nil t) ) 2 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) 2) 2 (cons nil nil)) (cons nil nil) ) 2 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) 2) 2 (cons 0 0)) (cons 0 0) ) 2 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) 2) 2 (cons 1 1)) (cons 1 1) ) 2 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) 2) 2 (list 1 2 3)) (list 1 2 3) ) 2 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) 2) 2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 2 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 3) 3 1) 1 ) 3 1)
(XOR (COND 2 (XOR (COND 2 3) 3 2) 2 ) 3 2)
(XOR (COND nil (XOR (COND nil 3) 3 nil) nil ) 3 nil)
(XOR (COND t (XOR (COND t 3) 3 t) t ) 3 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) 3) 3 (cons t t)) (cons t t) ) 3 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) 3) 3 (cons nil t)) (cons nil t) ) 3 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) 3) 3 (cons nil nil)) (cons nil nil) ) 3 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) 3) 3 (cons 0 0)) (cons 0 0) ) 3 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) 3) 3 (cons 1 1)) (cons 1 1) ) 3 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) 3) 3 (list 1 2 3)) (list 1 2 3) ) 3 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) 3) 3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 3 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 ()) () 1) 1 ) () 1)
(XOR (COND 2 (XOR (COND 2 ()) () 2) 2 ) () 2)
(XOR (COND nil (XOR (COND nil ()) () nil) nil ) () nil)
(XOR (COND t (XOR (COND t ()) () t) t ) () t)
(XOR (COND (cons t t) (XOR (COND (cons t t) ()) () (cons t t)) (cons t t) ) () (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) ()) () (cons nil t)) (cons nil t) ) () (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) ()) () (cons nil nil)) (cons nil nil) ) () (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) ()) () (cons 0 0)) (cons 0 0) ) () (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) ()) () (cons 1 1)) (cons 1 1) ) () (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) ()) () (list 1 2 3)) (list 1 2 3) ) () (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) ()) () (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) () (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 (())) (()) 1) 1 ) (()) 1)
(XOR (COND 2 (XOR (COND 2 (())) (()) 2) 2 ) (()) 2)
(XOR (COND nil (XOR (COND nil (())) (()) nil) nil ) (()) nil)
(XOR (COND t (XOR (COND t (())) (()) t) t ) (()) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) (())) (()) (cons t t)) (cons t t) ) (()) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) (())) (()) (cons nil t)) (cons nil t) ) (()) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) (())) (()) (cons nil nil)) (cons nil nil) ) (()) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) (())) (()) (cons 0 0)) (cons 0 0) ) (()) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) (())) (()) (cons 1 1)) (cons 1 1) ) (()) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) (())) (()) (list 1 2 3)) (list 1 2 3) ) (()) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) (())) (()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (()) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 ((()))) ((())) 1) 1 ) ((())) 1)
(XOR (COND 2 (XOR (COND 2 ((()))) ((())) 2) 2 ) ((())) 2)
(XOR (COND nil (XOR (COND nil ((()))) ((())) nil) nil ) ((())) nil)
(XOR (COND t (XOR (COND t ((()))) ((())) t) t ) ((())) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) ((()))) ((())) (cons t t)) (cons t t) ) ((())) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) ((()))) ((())) (cons nil t)) (cons nil t) ) ((())) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) ((()))) ((())) (cons nil nil)) (cons nil nil) ) ((())) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) ((()))) ((())) (cons 0 0)) (cons 0 0) ) ((())) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) ((()))) ((())) (cons 1 1)) (cons 1 1) ) ((())) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) ((()))) ((())) (list 1 2 3)) (list 1 2 3) ) ((())) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) ((()))) ((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ((())) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 (((())))) (((()))) 1) 1 ) (((()))) 1)
(XOR (COND 2 (XOR (COND 2 (((())))) (((()))) 2) 2 ) (((()))) 2)
(XOR (COND nil (XOR (COND nil (((())))) (((()))) nil) nil ) (((()))) nil)
(XOR (COND t (XOR (COND t (((())))) (((()))) t) t ) (((()))) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) (((())))) (((()))) (cons t t)) (cons t t) ) (((()))) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) (((())))) (((()))) (cons nil t)) (cons nil t) ) (((()))) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) (((())))) (((()))) (cons nil nil)) (cons nil nil) ) (((()))) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) (((())))) (((()))) (cons 0 0)) (cons 0 0) ) (((()))) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) (((())))) (((()))) (cons 1 1)) (cons 1 1) ) (((()))) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) (((())))) (((()))) (list 1 2 3)) (list 1 2 3) ) (((()))) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) (((())))) (((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) (((()))) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 'A) 'A 1) 1 ) 'A 1)
(XOR (COND 2 (XOR (COND 2 'A) 'A 2) 2 ) 'A 2)
(XOR (COND nil (XOR (COND nil 'A) 'A nil) nil ) 'A nil)
(XOR (COND t (XOR (COND t 'A) 'A t) t ) 'A t)
(XOR (COND (cons t t) (XOR (COND (cons t t) 'A) 'A (cons t t)) (cons t t) ) 'A (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) 'A) 'A (cons nil t)) (cons nil t) ) 'A (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) 'A) 'A (cons nil nil)) (cons nil nil) ) 'A (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) 'A) 'A (cons 0 0)) (cons 0 0) ) 'A (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) 'A) 'A (cons 1 1)) (cons 1 1) ) 'A (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) 'A) 'A (list 1 2 3)) (list 1 2 3) ) 'A (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) 'A) 'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'A (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 'B) 'B 1) 1 ) 'B 1)
(XOR (COND 2 (XOR (COND 2 'B) 'B 2) 2 ) 'B 2)
(XOR (COND nil (XOR (COND nil 'B) 'B nil) nil ) 'B nil)
(XOR (COND t (XOR (COND t 'B) 'B t) t ) 'B t)
(XOR (COND (cons t t) (XOR (COND (cons t t) 'B) 'B (cons t t)) (cons t t) ) 'B (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) 'B) 'B (cons nil t)) (cons nil t) ) 'B (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) 'B) 'B (cons nil nil)) (cons nil nil) ) 'B (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) 'B) 'B (cons 0 0)) (cons 0 0) ) 'B (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) 'B) 'B (cons 1 1)) (cons 1 1) ) 'B (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) 'B) 'B (list 1 2 3)) (list 1 2 3) ) 'B (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) 'B) 'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'B (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 'C) 'C 1) 1 ) 'C 1)
(XOR (COND 2 (XOR (COND 2 'C) 'C 2) 2 ) 'C 2)
(XOR (COND nil (XOR (COND nil 'C) 'C nil) nil ) 'C nil)
(XOR (COND t (XOR (COND t 'C) 'C t) t ) 'C t)
(XOR (COND (cons t t) (XOR (COND (cons t t) 'C) 'C (cons t t)) (cons t t) ) 'C (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) 'C) 'C (cons nil t)) (cons nil t) ) 'C (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) 'C) 'C (cons nil nil)) (cons nil nil) ) 'C (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) 'C) 'C (cons 0 0)) (cons 0 0) ) 'C (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) 'C) 'C (cons 1 1)) (cons 1 1) ) 'C (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) 'C) 'C (list 1 2 3)) (list 1 2 3) ) 'C (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) 'C) 'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) 'C (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 '1) '1 1) 1 ) '1 1)
(XOR (COND 2 (XOR (COND 2 '1) '1 2) 2 ) '1 2)
(XOR (COND nil (XOR (COND nil '1) '1 nil) nil ) '1 nil)
(XOR (COND t (XOR (COND t '1) '1 t) t ) '1 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) '1) '1 (cons t t)) (cons t t) ) '1 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) '1) '1 (cons nil t)) (cons nil t) ) '1 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) '1) '1 (cons nil nil)) (cons nil nil) ) '1 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) '1) '1 (cons 0 0)) (cons 0 0) ) '1 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) '1) '1 (cons 1 1)) (cons 1 1) ) '1 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) '1) '1 (list 1 2 3)) (list 1 2 3) ) '1 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) '1) '1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '1 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 '2) '2 1) 1 ) '2 1)
(XOR (COND 2 (XOR (COND 2 '2) '2 2) 2 ) '2 2)
(XOR (COND nil (XOR (COND nil '2) '2 nil) nil ) '2 nil)
(XOR (COND t (XOR (COND t '2) '2 t) t ) '2 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) '2) '2 (cons t t)) (cons t t) ) '2 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) '2) '2 (cons nil t)) (cons nil t) ) '2 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) '2) '2 (cons nil nil)) (cons nil nil) ) '2 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) '2) '2 (cons 0 0)) (cons 0 0) ) '2 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) '2) '2 (cons 1 1)) (cons 1 1) ) '2 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) '2) '2 (list 1 2 3)) (list 1 2 3) ) '2 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) '2) '2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '2 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 '3) '3 1) 1 ) '3 1)
(XOR (COND 2 (XOR (COND 2 '3) '3 2) 2 ) '3 2)
(XOR (COND nil (XOR (COND nil '3) '3 nil) nil ) '3 nil)
(XOR (COND t (XOR (COND t '3) '3 t) t ) '3 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) '3) '3 (cons t t)) (cons t t) ) '3 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) '3) '3 (cons nil t)) (cons nil t) ) '3 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) '3) '3 (cons nil nil)) (cons nil nil) ) '3 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) '3) '3 (cons 0 0)) (cons 0 0) ) '3 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) '3) '3 (cons 1 1)) (cons 1 1) ) '3 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) '3) '3 (list 1 2 3)) (list 1 2 3) ) '3 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) '3) '3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '3 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 '()) '() 1) 1 ) '() 1)
(XOR (COND 2 (XOR (COND 2 '()) '() 2) 2 ) '() 2)
(XOR (COND nil (XOR (COND nil '()) '() nil) nil ) '() nil)
(XOR (COND t (XOR (COND t '()) '() t) t ) '() t)
(XOR (COND (cons t t) (XOR (COND (cons t t) '()) '() (cons t t)) (cons t t) ) '() (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) '()) '() (cons nil t)) (cons nil t) ) '() (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) '()) '() (cons nil nil)) (cons nil nil) ) '() (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) '()) '() (cons 0 0)) (cons 0 0) ) '() (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) '()) '() (cons 1 1)) (cons 1 1) ) '() (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) '()) '() (list 1 2 3)) (list 1 2 3) ) '() (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) '()) '() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '() (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 '(())) '(()) 1) 1 ) '(()) 1)
(XOR (COND 2 (XOR (COND 2 '(())) '(()) 2) 2 ) '(()) 2)
(XOR (COND nil (XOR (COND nil '(())) '(()) nil) nil ) '(()) nil)
(XOR (COND t (XOR (COND t '(())) '(()) t) t ) '(()) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) '(())) '(()) (cons t t)) (cons t t) ) '(()) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) '(())) '(()) (cons nil t)) (cons nil t) ) '(()) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) '(())) '(()) (cons nil nil)) (cons nil nil) ) '(()) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) '(())) '(()) (cons 0 0)) (cons 0 0) ) '(()) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) '(())) '(()) (cons 1 1)) (cons 1 1) ) '(()) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) '(())) '(()) (list 1 2 3)) (list 1 2 3) ) '(()) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) '(())) '(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(()) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 '((()))) '((())) 1) 1 ) '((())) 1)
(XOR (COND 2 (XOR (COND 2 '((()))) '((())) 2) 2 ) '((())) 2)
(XOR (COND nil (XOR (COND nil '((()))) '((())) nil) nil ) '((())) nil)
(XOR (COND t (XOR (COND t '((()))) '((())) t) t ) '((())) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) '((()))) '((())) (cons t t)) (cons t t) ) '((())) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) '((()))) '((())) (cons nil t)) (cons nil t) ) '((())) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) '((()))) '((())) (cons nil nil)) (cons nil nil) ) '((())) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) '((()))) '((())) (cons 0 0)) (cons 0 0) ) '((())) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) '((()))) '((())) (cons 1 1)) (cons 1 1) ) '((())) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) '((()))) '((())) (list 1 2 3)) (list 1 2 3) ) '((())) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) '((()))) '((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '((())) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 '(((())))) '(((()))) 1) 1 ) '(((()))) 1)
(XOR (COND 2 (XOR (COND 2 '(((())))) '(((()))) 2) 2 ) '(((()))) 2)
(XOR (COND nil (XOR (COND nil '(((())))) '(((()))) nil) nil ) '(((()))) nil)
(XOR (COND t (XOR (COND t '(((())))) '(((()))) t) t ) '(((()))) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) '(((())))) '(((()))) (cons t t)) (cons t t) ) '(((()))) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) '(((())))) '(((()))) (cons nil t)) (cons nil t) ) '(((()))) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) '(((())))) '(((()))) (cons nil nil)) (cons nil nil) ) '(((()))) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) '(((())))) '(((()))) (cons 0 0)) (cons 0 0) ) '(((()))) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) '(((())))) '(((()))) (cons 1 1)) (cons 1 1) ) '(((()))) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) '(((())))) '(((()))) (list 1 2 3)) (list 1 2 3) ) '(((()))) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) '(((())))) '(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) '(((()))) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 ,A) ,A 1) 1 ) ,A 1)
(XOR (COND 2 (XOR (COND 2 ,A) ,A 2) 2 ) ,A 2)
(XOR (COND nil (XOR (COND nil ,A) ,A nil) nil ) ,A nil)
(XOR (COND t (XOR (COND t ,A) ,A t) t ) ,A t)
(XOR (COND (cons t t) (XOR (COND (cons t t) ,A) ,A (cons t t)) (cons t t) ) ,A (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) ,A) ,A (cons nil t)) (cons nil t) ) ,A (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) ,A) ,A (cons nil nil)) (cons nil nil) ) ,A (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) ,A) ,A (cons 0 0)) (cons 0 0) ) ,A (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) ,A) ,A (cons 1 1)) (cons 1 1) ) ,A (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) ,A) ,A (list 1 2 3)) (list 1 2 3) ) ,A (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) ,A) ,A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,A (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 ,1) ,1 1) 1 ) ,1 1)
(XOR (COND 2 (XOR (COND 2 ,1) ,1 2) 2 ) ,1 2)
(XOR (COND nil (XOR (COND nil ,1) ,1 nil) nil ) ,1 nil)
(XOR (COND t (XOR (COND t ,1) ,1 t) t ) ,1 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) ,1) ,1 (cons t t)) (cons t t) ) ,1 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) ,1) ,1 (cons nil t)) (cons nil t) ) ,1 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) ,1) ,1 (cons nil nil)) (cons nil nil) ) ,1 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) ,1) ,1 (cons 0 0)) (cons 0 0) ) ,1 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) ,1) ,1 (cons 1 1)) (cons 1 1) ) ,1 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) ,1) ,1 (list 1 2 3)) (list 1 2 3) ) ,1 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) ,1) ,1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,1 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 ,()) ,() 1) 1 ) ,() 1)
(XOR (COND 2 (XOR (COND 2 ,()) ,() 2) 2 ) ,() 2)
(XOR (COND nil (XOR (COND nil ,()) ,() nil) nil ) ,() nil)
(XOR (COND t (XOR (COND t ,()) ,() t) t ) ,() t)
(XOR (COND (cons t t) (XOR (COND (cons t t) ,()) ,() (cons t t)) (cons t t) ) ,() (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) ,()) ,() (cons nil t)) (cons nil t) ) ,() (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) ,()) ,() (cons nil nil)) (cons nil nil) ) ,() (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) ,()) ,() (cons 0 0)) (cons 0 0) ) ,() (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) ,()) ,() (cons 1 1)) (cons 1 1) ) ,() (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) ,()) ,() (list 1 2 3)) (list 1 2 3) ) ,() (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) ,()) ,() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,() (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 ,(())) ,(()) 1) 1 ) ,(()) 1)
(XOR (COND 2 (XOR (COND 2 ,(())) ,(()) 2) 2 ) ,(()) 2)
(XOR (COND nil (XOR (COND nil ,(())) ,(()) nil) nil ) ,(()) nil)
(XOR (COND t (XOR (COND t ,(())) ,(()) t) t ) ,(()) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) ,(())) ,(()) (cons t t)) (cons t t) ) ,(()) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) ,(())) ,(()) (cons nil t)) (cons nil t) ) ,(()) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) ,(())) ,(()) (cons nil nil)) (cons nil nil) ) ,(()) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) ,(())) ,(()) (cons 0 0)) (cons 0 0) ) ,(()) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) ,(())) ,(()) (cons 1 1)) (cons 1 1) ) ,(()) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) ,(())) ,(()) (list 1 2 3)) (list 1 2 3) ) ,(()) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) ,(())) ,(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) ,(()) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'A) `'A 1) 1 ) `'A 1)
(XOR (COND 2 (XOR (COND 2 `'A) `'A 2) 2 ) `'A 2)
(XOR (COND nil (XOR (COND nil `'A) `'A nil) nil ) `'A nil)
(XOR (COND t (XOR (COND t `'A) `'A t) t ) `'A t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'A) `'A (cons t t)) (cons t t) ) `'A (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'A) `'A (cons nil t)) (cons nil t) ) `'A (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'A) `'A (cons nil nil)) (cons nil nil) ) `'A (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'A) `'A (cons 0 0)) (cons 0 0) ) `'A (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'A) `'A (cons 1 1)) (cons 1 1) ) `'A (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'A) `'A (list 1 2 3)) (list 1 2 3) ) `'A (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'A) `'A (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'A (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'B) `'B 1) 1 ) `'B 1)
(XOR (COND 2 (XOR (COND 2 `'B) `'B 2) 2 ) `'B 2)
(XOR (COND nil (XOR (COND nil `'B) `'B nil) nil ) `'B nil)
(XOR (COND t (XOR (COND t `'B) `'B t) t ) `'B t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'B) `'B (cons t t)) (cons t t) ) `'B (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'B) `'B (cons nil t)) (cons nil t) ) `'B (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'B) `'B (cons nil nil)) (cons nil nil) ) `'B (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'B) `'B (cons 0 0)) (cons 0 0) ) `'B (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'B) `'B (cons 1 1)) (cons 1 1) ) `'B (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'B) `'B (list 1 2 3)) (list 1 2 3) ) `'B (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'B) `'B (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'B (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'C) `'C 1) 1 ) `'C 1)
(XOR (COND 2 (XOR (COND 2 `'C) `'C 2) 2 ) `'C 2)
(XOR (COND nil (XOR (COND nil `'C) `'C nil) nil ) `'C nil)
(XOR (COND t (XOR (COND t `'C) `'C t) t ) `'C t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'C) `'C (cons t t)) (cons t t) ) `'C (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'C) `'C (cons nil t)) (cons nil t) ) `'C (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'C) `'C (cons nil nil)) (cons nil nil) ) `'C (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'C) `'C (cons 0 0)) (cons 0 0) ) `'C (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'C) `'C (cons 1 1)) (cons 1 1) ) `'C (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'C) `'C (list 1 2 3)) (list 1 2 3) ) `'C (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'C) `'C (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'C (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'1) `'1 1) 1 ) `'1 1)
(XOR (COND 2 (XOR (COND 2 `'1) `'1 2) 2 ) `'1 2)
(XOR (COND nil (XOR (COND nil `'1) `'1 nil) nil ) `'1 nil)
(XOR (COND t (XOR (COND t `'1) `'1 t) t ) `'1 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'1) `'1 (cons t t)) (cons t t) ) `'1 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'1) `'1 (cons nil t)) (cons nil t) ) `'1 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'1) `'1 (cons nil nil)) (cons nil nil) ) `'1 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'1) `'1 (cons 0 0)) (cons 0 0) ) `'1 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'1) `'1 (cons 1 1)) (cons 1 1) ) `'1 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'1) `'1 (list 1 2 3)) (list 1 2 3) ) `'1 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'1) `'1 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'1 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'2) `'2 1) 1 ) `'2 1)
(XOR (COND 2 (XOR (COND 2 `'2) `'2 2) 2 ) `'2 2)
(XOR (COND nil (XOR (COND nil `'2) `'2 nil) nil ) `'2 nil)
(XOR (COND t (XOR (COND t `'2) `'2 t) t ) `'2 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'2) `'2 (cons t t)) (cons t t) ) `'2 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'2) `'2 (cons nil t)) (cons nil t) ) `'2 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'2) `'2 (cons nil nil)) (cons nil nil) ) `'2 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'2) `'2 (cons 0 0)) (cons 0 0) ) `'2 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'2) `'2 (cons 1 1)) (cons 1 1) ) `'2 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'2) `'2 (list 1 2 3)) (list 1 2 3) ) `'2 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'2) `'2 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'2 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'3) `'3 1) 1 ) `'3 1)
(XOR (COND 2 (XOR (COND 2 `'3) `'3 2) 2 ) `'3 2)
(XOR (COND nil (XOR (COND nil `'3) `'3 nil) nil ) `'3 nil)
(XOR (COND t (XOR (COND t `'3) `'3 t) t ) `'3 t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'3) `'3 (cons t t)) (cons t t) ) `'3 (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'3) `'3 (cons nil t)) (cons nil t) ) `'3 (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'3) `'3 (cons nil nil)) (cons nil nil) ) `'3 (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'3) `'3 (cons 0 0)) (cons 0 0) ) `'3 (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'3) `'3 (cons 1 1)) (cons 1 1) ) `'3 (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'3) `'3 (list 1 2 3)) (list 1 2 3) ) `'3 (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'3) `'3 (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'3 (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'()) `'() 1) 1 ) `'() 1)
(XOR (COND 2 (XOR (COND 2 `'()) `'() 2) 2 ) `'() 2)
(XOR (COND nil (XOR (COND nil `'()) `'() nil) nil ) `'() nil)
(XOR (COND t (XOR (COND t `'()) `'() t) t ) `'() t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'()) `'() (cons t t)) (cons t t) ) `'() (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'()) `'() (cons nil t)) (cons nil t) ) `'() (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'()) `'() (cons nil nil)) (cons nil nil) ) `'() (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'()) `'() (cons 0 0)) (cons 0 0) ) `'() (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'()) `'() (cons 1 1)) (cons 1 1) ) `'() (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'()) `'() (list 1 2 3)) (list 1 2 3) ) `'() (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'()) `'() (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'() (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'(())) `'(()) 1) 1 ) `'(()) 1)
(XOR (COND 2 (XOR (COND 2 `'(())) `'(()) 2) 2 ) `'(()) 2)
(XOR (COND nil (XOR (COND nil `'(())) `'(()) nil) nil ) `'(()) nil)
(XOR (COND t (XOR (COND t `'(())) `'(()) t) t ) `'(()) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'(())) `'(()) (cons t t)) (cons t t) ) `'(()) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'(())) `'(()) (cons nil t)) (cons nil t) ) `'(()) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'(())) `'(()) (cons nil nil)) (cons nil nil) ) `'(()) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'(())) `'(()) (cons 0 0)) (cons 0 0) ) `'(()) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'(())) `'(()) (cons 1 1)) (cons 1 1) ) `'(()) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'(())) `'(()) (list 1 2 3)) (list 1 2 3) ) `'(()) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'(())) `'(()) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(()) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'((()))) `'((())) 1) 1 ) `'((())) 1)
(XOR (COND 2 (XOR (COND 2 `'((()))) `'((())) 2) 2 ) `'((())) 2)
(XOR (COND nil (XOR (COND nil `'((()))) `'((())) nil) nil ) `'((())) nil)
(XOR (COND t (XOR (COND t `'((()))) `'((())) t) t ) `'((())) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'((()))) `'((())) (cons t t)) (cons t t) ) `'((())) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'((()))) `'((())) (cons nil t)) (cons nil t) ) `'((())) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'((()))) `'((())) (cons nil nil)) (cons nil nil) ) `'((())) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'((()))) `'((())) (cons 0 0)) (cons 0 0) ) `'((())) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'((()))) `'((())) (cons 1 1)) (cons 1 1) ) `'((())) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'((()))) `'((())) (list 1 2 3)) (list 1 2 3) ) `'((())) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'((()))) `'((())) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'((())) (list (cons 1 1 ) ))
(XOR (COND 1 (XOR (COND 1 `'(((())))) `'(((()))) 1) 1 ) `'(((()))) 1)
(XOR (COND 2 (XOR (COND 2 `'(((())))) `'(((()))) 2) 2 ) `'(((()))) 2)
(XOR (COND nil (XOR (COND nil `'(((())))) `'(((()))) nil) nil ) `'(((()))) nil)
(XOR (COND t (XOR (COND t `'(((())))) `'(((()))) t) t ) `'(((()))) t)
(XOR (COND (cons t t) (XOR (COND (cons t t) `'(((())))) `'(((()))) (cons t t)) (cons t t) ) `'(((()))) (cons t t))
(XOR (COND (cons nil t) (XOR (COND (cons nil t) `'(((())))) `'(((()))) (cons nil t)) (cons nil t) ) `'(((()))) (cons nil t))
(XOR (COND (cons nil nil) (XOR (COND (cons nil nil) `'(((())))) `'(((()))) (cons nil nil)) (cons nil nil) ) `'(((()))) (cons nil nil))
(XOR (COND (cons 0 0) (XOR (COND (cons 0 0) `'(((())))) `'(((()))) (cons 0 0)) (cons 0 0) ) `'(((()))) (cons 0 0))
(XOR (COND (cons 1 1) (XOR (COND (cons 1 1) `'(((())))) `'(((()))) (cons 1 1)) (cons 1 1) ) `'(((()))) (cons 1 1))
(XOR (COND (list 1 2 3) (XOR (COND (list 1 2 3) `'(((())))) `'(((()))) (list 1 2 3)) (list 1 2 3) ) `'(((()))) (list 1 2 3))
(XOR (COND (list (cons 1 1 ) ) (XOR (COND (list (cons 1 1 ) ) `'(((())))) `'(((()))) (list (cons 1 1 ) )) (list (cons 1 1 ) ) ) `'(((()))) (list (cons 1 1 ) ))
